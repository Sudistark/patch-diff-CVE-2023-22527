package org.bouncycastle.jcajce.spec;

import java.security.spec.AlgorithmParameterSpec;
import java.util.concurrent.atomic.AtomicBoolean;
import javax.security.auth.Destroyable;
import org.bouncycastle.util.Arrays;

public class HybridValueParameterSpec implements AlgorithmParameterSpec, Destroyable {
  private final AtomicBoolean hasBeenDestroyed;
  
  public HybridValueParameterSpec(byte[] t, AlgorithmParameterSpec baseSpec) {
    this.hasBeenDestroyed = new AtomicBoolean(false);
    this.t = t;
    this.baseSpec = baseSpec;
  }
  
  public byte[] getT() {
    byte[] tVal = this.t;
    checkDestroyed();
    return tVal;
  }
  
  public AlgorithmParameterSpec getBaseParameterSpec() {
    AlgorithmParameterSpec rv = this.baseSpec;
    checkDestroyed();
    return rv;
  }
  
  public boolean isDestroyed() { return this.hasBeenDestroyed.get(); }
  
  public void destroy() {
    if (!this.hasBeenDestroyed.getAndSet(true)) {
      Arrays.clear(this.t);
      this.t = null;
      this.baseSpec = null;
    } 
  }
  
  private void checkDestroyed() {
    if (isDestroyed())
      throw new IllegalStateException("spec has been destroyed"); 
  }
}
