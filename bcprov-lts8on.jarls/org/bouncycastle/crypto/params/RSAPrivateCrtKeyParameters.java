package org.bouncycastle.crypto.params;

import java.math.BigInteger;

public class RSAPrivateCrtKeyParameters extends RSAKeyParameters {
  private BigInteger e;
  
  private BigInteger p;
  
  private BigInteger q;
  
  private BigInteger dP;
  
  private BigInteger dQ;
  
  private BigInteger qInv;
  
  public RSAPrivateCrtKeyParameters(BigInteger modulus, BigInteger publicExponent, BigInteger privateExponent, BigInteger p, BigInteger q, BigInteger dP, BigInteger dQ, BigInteger qInv) { this(modulus, publicExponent, privateExponent, p, q, dP, dQ, qInv, false); }
  
  public RSAPrivateCrtKeyParameters(BigInteger modulus, BigInteger publicExponent, BigInteger privateExponent, BigInteger p, BigInteger q, BigInteger dP, BigInteger dQ, BigInteger qInv, boolean isInternal) {
    super(true, modulus, privateExponent, isInternal);
    this.e = publicExponent;
    this.p = p;
    this.q = q;
    this.dP = dP;
    this.dQ = dQ;
    this.qInv = qInv;
  }
  
  public BigInteger getPublicExponent() { return this.e; }
  
  public BigInteger getP() { return this.p; }
  
  public BigInteger getQ() { return this.q; }
  
  public BigInteger getDP() { return this.dP; }
  
  public BigInteger getDQ() { return this.dQ; }
  
  public BigInteger getQInv() { return this.qInv; }
}
