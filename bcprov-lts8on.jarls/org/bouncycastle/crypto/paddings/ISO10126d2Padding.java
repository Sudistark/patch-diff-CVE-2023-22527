package org.bouncycastle.crypto.paddings;

import java.security.SecureRandom;
import org.bouncycastle.crypto.CryptoServicesRegistrar;
import org.bouncycastle.crypto.InvalidCipherTextException;

public class ISO10126d2Padding implements BlockCipherPadding {
  SecureRandom random;
  
  public void init(SecureRandom random) throws IllegalArgumentException { this.random = CryptoServicesRegistrar.getSecureRandom(random); }
  
  public String getPaddingName() { return "ISO10126-2"; }
  
  public int addPadding(byte[] in, int inOff) {
    byte code = (byte)(in.length - inOff);
    while (inOff < in.length - 1) {
      in[inOff] = (byte)this.random.nextInt();
      inOff++;
    } 
    in[inOff] = code;
    return code;
  }
  
  public int padCount(byte[] in) throws InvalidCipherTextException {
    int count = in[in.length - 1] & 0xFF;
    int position = in.length - count;
    int failed = (position | count - 1) >> 31;
    if (failed != 0)
      throw new InvalidCipherTextException("pad block corrupted"); 
    return count;
  }
}
