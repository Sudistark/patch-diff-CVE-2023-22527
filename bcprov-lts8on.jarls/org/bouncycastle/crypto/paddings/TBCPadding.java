package org.bouncycastle.crypto.paddings;

import java.security.SecureRandom;
import org.bouncycastle.crypto.InvalidCipherTextException;

public class TBCPadding implements BlockCipherPadding {
  public void init(SecureRandom random) throws IllegalArgumentException {}
  
  public String getPaddingName() { return "TBC"; }
  
  public int addPadding(byte[] in, int inOff) {
    byte code;
    int count = in.length - inOff;
    if (inOff > 0) {
      code = (byte)(((in[inOff - 1] & true) == 0) ? 255 : 0);
    } else {
      code = (byte)(((in[in.length - 1] & true) == 0) ? 255 : 0);
    } 
    while (inOff < in.length) {
      in[inOff] = code;
      inOff++;
    } 
    return count;
  }
  
  public int padCount(byte[] in) throws InvalidCipherTextException {
    int i = in.length;
    int code = in[--i] & 0xFF, count = 1, countingMask = -1;
    while (--i >= 0) {
      int next = in[i] & 0xFF;
      int matchMask = (next ^ code) - 1 >> 31;
      countingMask &= matchMask;
      count -= countingMask;
    } 
    return count;
  }
}
