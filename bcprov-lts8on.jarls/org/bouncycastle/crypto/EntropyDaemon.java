package org.bouncycastle.crypto;

import java.util.LinkedList;
import java.util.logging.Level;
import java.util.logging.Logger;

class EntropyDaemon implements Runnable {
  private static final Logger LOG = Logger.getLogger(EntropyDaemon.class.getName());
  
  private final LinkedList<Runnable> tasks = new LinkedList();
  
  void addTask(Runnable task) {
    synchronized (this.tasks) {
      this.tasks.add(task);
    } 
  }
  
  public void run() {
    while (!Thread.currentThread().isInterrupted()) {
      Runnable task;
      synchronized (this.tasks) {
        task = (Runnable)this.tasks.poll();
      } 
      if (task != null)
        try {
          task.run();
          continue;
        } catch (Throwable throwable) {
          continue;
        }  
      try {
        Thread.sleep(5000L);
      } catch (InterruptedException e) {
        Thread.currentThread().interrupt();
      } 
    } 
    if (LOG.isLoggable(Level.FINE))
      LOG.fine("entropy thread interrupted - exiting"); 
  }
}
