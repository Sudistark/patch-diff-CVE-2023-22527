package org.bouncycastle.crypto;

import java.security.SecureRandom;
import org.bouncycastle.crypto.prng.EntropySource;
import org.bouncycastle.crypto.prng.EntropySourceProvider;

class IncrementalEntropySourceProvider implements EntropySourceProvider {
  private final SecureRandom random;
  
  private final boolean predictionResistant;
  
  public IncrementalEntropySourceProvider(SecureRandom random, boolean isPredictionResistant) {
    this.random = random;
    this.predictionResistant = isPredictionResistant;
  }
  
  public EntropySource get(int bitsRequired) { return new Object(this, bitsRequired); }
  
  private static void sleep(long ms) throws InterruptedException {
    if (ms != 0L)
      Thread.sleep(ms); 
  }
}
