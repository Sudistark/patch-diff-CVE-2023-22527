package META-INF.versions.9.org.bouncycastle.math.ec;

import java.math.BigInteger;
import org.bouncycastle.math.ec.AbstractECMultiplier;
import org.bouncycastle.math.ec.ECAlgorithms;
import org.bouncycastle.math.ec.ECMultiplier;
import org.bouncycastle.math.ec.ECPoint;

public abstract class AbstractECMultiplier implements ECMultiplier {
  public ECPoint multiply(ECPoint p, BigInteger k) {
    int sign = k.signum();
    if (sign == 0 || p.isInfinity())
      return p.getCurve().getInfinity(); 
    ECPoint positive = multiplyPositive(p, k.abs());
    ECPoint result = (sign > 0) ? positive : positive.negate();
    return checkResult(result);
  }
  
  protected abstract ECPoint multiplyPositive(ECPoint paramECPoint, BigInteger paramBigInteger);
  
  protected ECPoint checkResult(ECPoint p) { return ECAlgorithms.implCheckResult(p); }
}
