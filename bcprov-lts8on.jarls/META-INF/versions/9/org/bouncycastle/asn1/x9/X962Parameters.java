package META-INF.versions.9.org.bouncycastle.asn1.x9;

import org.bouncycastle.asn1.ASN1Choice;
import org.bouncycastle.asn1.ASN1Null;
import org.bouncycastle.asn1.ASN1Object;
import org.bouncycastle.asn1.ASN1ObjectIdentifier;
import org.bouncycastle.asn1.ASN1Primitive;
import org.bouncycastle.asn1.ASN1TaggedObject;
import org.bouncycastle.asn1.x9.X962Parameters;
import org.bouncycastle.asn1.x9.X9ECParameters;

public class X962Parameters extends ASN1Object implements ASN1Choice {
  private ASN1Primitive params;
  
  public static X962Parameters getInstance(Object obj) {
    if (obj == null || obj instanceof X962Parameters)
      return (X962Parameters)obj; 
    if (obj instanceof ASN1Primitive)
      return new X962Parameters((ASN1Primitive)obj); 
    if (obj instanceof byte[])
      try {
        return new X962Parameters(ASN1Primitive.fromByteArray((byte[])obj));
      } catch (Exception e) {
        throw new IllegalArgumentException("unable to parse encoded data: " + e.getMessage());
      }  
    throw new IllegalArgumentException("unknown object in getInstance()");
  }
  
  public static X962Parameters getInstance(ASN1TaggedObject obj, boolean explicit) {
    if (!explicit)
      throw new IllegalArgumentException("choice item must be explicitly tagged"); 
    return getInstance(obj.getExplicitBaseObject());
  }
  
  public X962Parameters(X9ECParameters ecParameters) {
    this.params = null;
    this.params = ecParameters.toASN1Primitive();
  }
  
  public X962Parameters(ASN1ObjectIdentifier namedCurve) {
    this.params = null;
    this.params = namedCurve;
  }
  
  public X962Parameters(ASN1Null obj) {
    this.params = null;
    this.params = obj;
  }
  
  private X962Parameters(ASN1Primitive obj) {
    this.params = null;
    this.params = obj;
  }
  
  public boolean isNamedCurve() { return this.params instanceof ASN1ObjectIdentifier; }
  
  public boolean isImplicitlyCA() { return this.params instanceof ASN1Null; }
  
  public ASN1Primitive getParameters() { return this.params; }
  
  public ASN1Primitive toASN1Primitive() { return this.params; }
}
