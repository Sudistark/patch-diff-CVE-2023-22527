package META-INF.versions.9.org.bouncycastle.asn1;

import java.io.IOException;
import org.bouncycastle.asn1.ASN1Encodable;
import org.bouncycastle.asn1.ASN1OctetString;
import org.bouncycastle.asn1.ASN1OutputStream;
import org.bouncycastle.asn1.ASN1Primitive;
import org.bouncycastle.asn1.DEROctetString;

public class DEROctetString extends ASN1OctetString {
  public DEROctetString(byte[] string) { super(string); }
  
  public DEROctetString(ASN1Encodable obj) throws IOException { super(obj.toASN1Primitive().getEncoded("DER")); }
  
  boolean encodeConstructed() { return false; }
  
  int encodedLength(boolean withTag) { return ASN1OutputStream.getLengthOfEncodingDL(withTag, this.string.length); }
  
  void encode(ASN1OutputStream out, boolean withTag) throws IOException { out.writeEncodingDL(withTag, 4, this.string); }
  
  ASN1Primitive toDERObject() { return this; }
  
  ASN1Primitive toDLObject() { return this; }
  
  static void encode(ASN1OutputStream out, boolean withTag, byte[] buf, int off, int len) throws IOException { out.writeEncodingDL(withTag, 4, buf, off, len); }
  
  static int encodedLength(boolean withTag, int contentsLength) { return ASN1OutputStream.getLengthOfEncodingDL(withTag, contentsLength); }
}
