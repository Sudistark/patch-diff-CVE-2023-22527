#* @vtlvariable name="action" type="com.atlassian.confluence.user.actions.UserDarkFeaturesAction" *#
<html>
<head>
    <title>$i18n.getText('com.atlassian.confluence.user.actions.UserDarkFeaturesAction.action.name')</title>
    #requireResource("confluence.web.resources:aui-forms")
</head>
#applyDecorator("root")
    #decoratorParam("context" "profile")
    #decoratorParam("mode"  "settings")
    #decoratorParam("helper" $action.helper)
    #decoratorParam("infopanel-width" "200px")

    <body>
        #applyDecorator("form-aui")
            #decoratorParam("formName" "editdarkfeatures")
            #decoratorParam("submitAction" "enabledarkfeature.action")
            #decoratorParam("editMode" "true")
            #form_xsrfToken()

            <h2>Dark Features</h2>

            <section id="global-dark-features">
                <h3>Global Dark Features</h3>
                <p>
                    These dark features are enabled for the entire site.
                    #if ($permissionHelper.isConfluenceAdministrator($remoteUser))
                        <a href="$req.contextPath/admin/darkfeatures.action">Change</a>
                    #else
                        They may only be disabled by an administrator.
                    #end
                </p>
                <ul>
                #set ($globalFeatures = $action.globalEnabledFeatures)
                #if ($globalFeatures.size() > 0)
                    #foreach($feature in $globalFeatures)
                        <li>
                            $feature
                        </li>
                    #end
                #else
                    <li>
                        No global dark features enabled
                    </li>
                #end
                </ul>
            </section>

            <section id="user-dark-features">
                <h3>User Dark Features</h3>
                <p>
                    These dark features affect you only:
                </p>
                <ul>
                #set ($userFeatures = $action.userEnabledFeatures)
                #if ($userFeatures.size() > 0)
                    #foreach($feature in $userFeatures)
                        <li>
                            $feature
                            (<a href="$req.contextPath/users/disabledarkfeature.action?featureKey=$!htmlUtil.urlEncode($feature)&amp;#url_xsrfToken()">remove</a>)
                        </li>
                    #end
                #else
                    <li>
                        No user dark features enabled
                    </li>
                #end
                </ul>
            </section>

            #scomponent("label='Enable dark feature:'" "name='featureKey'" "value=featureKey" "theme='aui'" "template='text.vm'")
            #end
            #ssubmit("theme='aui'"
                     "editMode=true")
        #end
    </body>
#end
</html>
