#* @vtlvariable name="action" type="com.atlassian.confluence.security.actions.EditGlobalPermissionsAction" *#
<html>
<head>
    <title>$action.getActionName($action.getClass().getName())</title>
</head>

<body>
#requireResource("confluence.web.resources:global-permissions-inline-dialog")
<content tag="selectedWebItem">perms</content>
#parse ( "/template/includes/actionerrors.vm" )

<p class="stepdesc">
    $i18n.getText('global.permissions.description', $docBean.getLink("help.global.permissions.overview"),
            $i18n.getText("global.permissions.overview.link"))
</p>

<form name="editglobalperms" id="editglobalperms" class="aui" action="doeditglobalpermissions.action" method=POST>
#form_xsrfToken()
<h2>$i18n.getText('perms.licensed.users')</h2>
<h3>$i18n.getText('perms.groups')</h3>
<div class="stepdesc">
    $action.getText("global.group.perms")
</div>

<table id="gPermissionsTable" class="editpermissions aui">
    #set ($groupRows = $action.groupPermissionRows)
    #if ($groupRows.size() > 0)
    #showGlobalPermissionsHeader()
    #foreach ($groupRow in $groupRows)
    <tr #if ($velocityCount % 2 == 0) class="even" #end>
        <td class="permissionCell">
            $htmlUtil.htmlEncode($groupRow.groupName)
            #if (!$groupRow.entityExists())
                <br/><span class="errorMessage">$action.getText("error.group.not.found")</span>
            #elseif ($groupRow.caseInvalid)
                <br/><span class="errorMessage">$action.getText('error.permission.incorrect.case', [$htmlUtil.htmlEncode($groupRow.group.name)])</span>
            #elseif ($action.isConfluenceAdministratorsGroup($groupRow.groupName))
                <a href="#" class="inlineDialog-confAdmins inline-help">$i18n.getText("inline.dialog.help")</a>
            #end
        </td>

        #foreach ($permission in $action.permissions)
        <td class="permissionCell">
            #set ($canSetGlobalPermission = $action.canSetPermissionOnGroup($permission, $groupRow.groupName))

            #if ($groupRow.isTypeAllowed($permission))
                <input type="checkbox" name="$groupRow.buildCheckboxParameterName($permission)" checked #if(!$canSetGlobalPermission) disabled #end>
                ## use a hidden field to submit the value of the checked (but disabled) checkbox above (since disabled checkboxes don't get submitted)
                #if(!$canSetGlobalPermission)
                    <input type="hidden" name="$groupRow.buildCheckboxParameterName($permission)" value="on">
                #end

                <input type="hidden" name="$groupRow.buildHiddenParameterName($permission)" value="on">
            #else
                <input type="checkbox" name="$groupRow.buildCheckboxParameterName($permission)" #if(!$canSetGlobalPermission) disabled #end>
            #end
            #if ($permission == 'useconfluence') $action.getText('perms.can.use') #end
        </td>
        #end
    </tr>
    #end
    #else
    <tr>
        <td colspan=5>$action.getText('globalperms.no.group.access')</td>
    </tr>
    #end
</table>
#if ($action.allowPerGroupLicensing)
<div style="margin:10px 0px">
    #scomponent("theme='custom'" "label='Grant browse permission to'" "name='groupsToAdd'" "template='textfield-and-picker.vm'"
                "formName=editglobalperms"
                "fieldClass=autocomplete-group autocomplete-field"
                "buttonOff=false"
                "value=$editPermissionGroup"
                "buttonName=groupsToAddButton"
                "imgTitle=$action.getText('find.groups')"
                "groupSearchActionName=dosearchgroupsnopermissions.action"
                "linkId=grouppicker-popup-link")
    #end
</div>
#end

#set ($userRows = $action.userPermissionRows)
## even if we don't allow more users to get added here, we still want to allow existing users to be removed
#if ($action.allowPerUserLicensing || !$userRows.empty)
    <h3>$i18n.getText('perms.individuals')</h3>
    <div class="stepdesc">
        $action.getText("global.user.perms")
    </div>

    <table id="uPermissionsTable" class="editpermissions aui">

        #if (!$userRows.empty)
        #showGlobalPermissionsHeader()
            #foreach ($userRow in $userRows)
            <tr #if ($velocityCount % 2 == 0) class="even" #end>
                <td class="permissionCell">
                    #if ($userRow.entityExists())
                        $htmlUtil.htmlEncode($userRow.user.fullName)
                    #end
                    <span class="grey">($htmlUtil.htmlEncode($userRow.username))</span>
                    #if (!$userRow.entityExists())
                        <br/><span class="errorMessage">$action.getText("error.user.not.found")</span>
                    #elseif ($userRow.caseInvalid)
                         <br/><span class="errorMessage">$action.getText('error.permission.incorrect.case', [$htmlUtil.htmlEncode($userRow.user.name)])</span>
                    #end
                </td>

        #foreach ($permission in $action.permissions)
                <td class="permissionCell">
                    #set ($canSetGlobalPermission = $action.canSetPermissionOnUser($permission, $userRow.username))

                    #if ($userRow.isTypeAllowed($permission))
                        <input type="checkbox" name="$userRow.buildCheckboxParameterName($permission)" checked #if(!$canSetGlobalPermission) disabled #end>
                        ## use a hidden field to submit the value of the checked (but disabled) checkbox above (since disabled checkboxes don't get submitted)
                        #if(!$canSetGlobalPermission)
                            <input type="hidden" name="$userRow.buildCheckboxParameterName($permission)" value="on">
                        #end

                        <input type="hidden" name="$userRow.buildHiddenParameterName($permission)" value="on">
                    #else
                        <input type="checkbox" name="$userRow.buildCheckboxParameterName($permission)" #if(!$canSetGlobalPermission) disabled #end>
                    #end
                    #if ($permission == 'useconfluence') $action.getText('perms.can.use') #end
                </td>
                #end
            </tr>
            #end
        #else
        <tr>
            <td colspan=5>$action.getText('globalperms.no.user.perms')</td>
        </tr>
        #end
    </table>

    #if ($action.allowPerUserLicensing)
    <div style="margin:10px 0px">
        #scomponent("theme='custom'" "label='Grant browse permission to'" "name='usersToAdd'" "template='textfield-and-picker.vm'"
                    "formName=editglobalperms"
                    "fieldClass=autocomplete-user autocomplete-field"
                    "size=40"
                    "windowProperties=status=yes,resizable=yes,top=100,left=200,width=700,height=680,scrollbars=yes"
                    "buttonOff=false"
                    "value=$usersToAdd"
                    "buttonName=usersToAddButton"
                    "imgTitle=$action.getText('find.users')"
                    "searchAction=openuserpicker.action"
                    "linkId=userpicker-popup-link"
                    "showUnlicensedUsers=true"
                    "additionalDataAttrs=data-show-unlicensed=true")
        #end
    </div>
    #end
#else
    <p>$i18n.getText('add.licenses.through.unified.usermanagement')</p>
#end

    #set ($showGlobalUnlicensedUsersUI = $action.showGlobalUnlicensedUsersUI)
    #if ($showGlobalUnlicensedUsersUI)
        <h2>$i18n.getText('perms.unlicensed.access')</h2>
        <div class="stepdesc info-text">
            $i18n.getText("global.unlicensed.users.perms")
        </div>

        <table id="unlicensedPermissionsTable" class="editpermissions aui">
            <thead>
            <tr>
                <th width="380" class="permissionHeading">&nbsp;</th>
                <th class="permissionTab">
                    $i18n.getText("permissions.USECONFLUENCE")
                    <a href="#" class="inlineDialog-unlicensedUseConfluence inline-help">$i18n.getText("inline.dialog.help")</a>
                </th>
                <th class="permissionTab">
                    $i18n.getText("permissions.VIEWUSERPROFILES")
                    <a href="#" class="inlineDialog-unlicensedViewProfiles inline-help">$i18n.getText("inline.dialog.help")</a>
                </th>
            </tr>
            </thead>
            <tr>
                <td>
                    $i18n.getText('perms.unlicensed.users')
                </td>
                #set ($unlicensedAuthenticatedRow = $action.unlicensedAuthenticatedPermissionRow)
                <td class="permissionCell">
                    #if ($unlicensedAuthenticatedRow.isTypeAllowed('LIMITEDUSECONFLUENCE'))
                        <input type="checkbox" name="$unlicensedAuthenticatedRow.buildCheckboxParameterName('limiteduseconfluence')" checked>
                        <input type="hidden" name="$unlicensedAuthenticatedRow.buildHiddenParameterName('limiteduseconfluence')" value="on">
                    #else
                        <input type="checkbox" name="$unlicensedAuthenticatedRow.buildCheckboxParameterName('limiteduseconfluence')">
                    #end
                    $i18n.getText('perms.can.use')
                </td>
                <td class="permissionCell">
                    #if ($unlicensedAuthenticatedRow.isTypeAllowed('VIEWUSERPROFILES'))
                        <input type="checkbox" name="$unlicensedAuthenticatedRow.buildCheckboxParameterName('viewuserprofiles')" checked>
                        <input type="hidden" name="$unlicensedAuthenticatedRow.buildHiddenParameterName('viewuserprofiles')" value="on">
                    #else
                        <input type="checkbox" name="$unlicensedAuthenticatedRow.buildCheckboxParameterName('viewuserprofiles')">
                    #end
                </td>
            </tr>
        </table>
    #end
    <h2>$i18n.getText('perms.anonymous')</h2>

    <div class="stepdesc info-text">
        $action.getText("global.anonymous.perms")
    </div>

    <table id="aPermissionsTable" class="editpermissions aui">
        <thead>
            <tr>
                <th width="380" class="permissionHeading">&nbsp;</th>
                <th class="permissionTab">
                    $i18n.getText("permissions.USECONFLUENCE")
                    <a href="#" class="inlineDialog-anonymousUseConfluence inline-help">$i18n.getText("inline.dialog.help")</a>
                </th>
                <th class="permissionTab">
                    $i18n.getText("permissions.VIEWUSERPROFILES")
                    <a href="#" class="inlineDialog-anonymousViewProfiles inline-help">$i18n.getText("inline.dialog.help")</a>
                </th>
            </tr>
        </thead>
        <tr>
            <td>
                $action.getText('perms.anonymous.user')
            </td>
            #set ($anonymousRow = $action.anonymousPermissionRow)
            <td class="permissionCell">
                #if ($anonymousRow.isTypeAllowed('useconfluence'))
                <input type="checkbox" name="$anonymousRow.buildCheckboxParameterName('useconfluence')" checked>
                <input type="hidden" name="$anonymousRow.buildHiddenParameterName('useconfluence')" value="on">
                #else
                <input type="checkbox" name="$anonymousRow.buildCheckboxParameterName('useconfluence')">
                #end
                $action.getText('perms.can.use')
            </td>
            <td class="permissionCell">
                #if ($anonymousRow.isTypeAllowed('VIEWUSERPROFILES'))
                <input type="checkbox" name="$anonymousRow.buildCheckboxParameterName('viewuserprofiles')" checked>
                <input type="hidden" name="$anonymousRow.buildHiddenParameterName('viewuserprofiles')" value="on">
                #else
                <input type="checkbox" name="$anonymousRow.buildCheckboxParameterName('viewuserprofiles')">
                #end
            </td>
        </tr>
    </table>

    <div class="primary-button-container">
        <div class="buttons">
            #ssubmit("name='confirm'" "value='perms.saveall'" "theme='notable'" "cssClass='aui-button'")
            #ssubmit("name='cancel'" "value='cancel.name'" "theme='notable'" "cssClass='aui-button aui-button-link'")
        </div>
    </div>
</form>


#parse ( "/breadcrumbs.vm" )
</body>
</html>
