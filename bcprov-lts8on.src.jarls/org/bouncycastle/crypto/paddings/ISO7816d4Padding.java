package org.bouncycastle.crypto.paddings;

import java.security.SecureRandom;
import org.bouncycastle.crypto.InvalidCipherTextException;

public class ISO7816d4Padding implements BlockCipherPadding {
  public void init(SecureRandom random) throws IllegalArgumentException {}
  
  public String getPaddingName() { return "ISO7816-4"; }
  
  public int addPadding(byte[] in, int inOff) {
    int added = in.length - inOff;
    in[inOff] = Byte.MIN_VALUE;
    inOff++;
    while (inOff < in.length) {
      in[inOff] = 0;
      inOff++;
    } 
    return added;
  }
  
  public int padCount(byte[] in) throws InvalidCipherTextException {
    int position = -1, still00Mask = -1;
    int i = in.length;
    while (--i >= 0) {
      int next = in[i] & 0xFF;
      int match00Mask = (next ^ false) - 1 >> 31;
      int match80Mask = (next ^ 0x80) - 1 >> 31;
      position ^= (i ^ position) & still00Mask & match80Mask;
      still00Mask &= match00Mask;
    } 
    if (position < 0)
      throw new InvalidCipherTextException("pad block corrupted"); 
    return in.length - position;
  }
}
