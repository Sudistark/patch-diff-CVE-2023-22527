package org.bouncycastle.crypto.params;

import org.bouncycastle.crypto.CipherParameters;

public class XDHUPrivateParameters implements CipherParameters {
  private AsymmetricKeyParameter staticPrivateKey;
  
  private AsymmetricKeyParameter ephemeralPrivateKey;
  
  private AsymmetricKeyParameter ephemeralPublicKey;
  
  public XDHUPrivateParameters(AsymmetricKeyParameter staticPrivateKey, AsymmetricKeyParameter ephemeralPrivateKey) { this(staticPrivateKey, ephemeralPrivateKey, null); }
  
  public XDHUPrivateParameters(AsymmetricKeyParameter staticPrivateKey, AsymmetricKeyParameter ephemeralPrivateKey, AsymmetricKeyParameter ephemeralPublicKey) {
    if (staticPrivateKey == null)
      throw new NullPointerException("staticPrivateKey cannot be null"); 
    if (!(staticPrivateKey instanceof X448PrivateKeyParameters) && !(staticPrivateKey instanceof X25519PrivateKeyParameters))
      throw new IllegalArgumentException("only X25519 and X448 paramaters can be used"); 
    if (ephemeralPrivateKey == null)
      throw new NullPointerException("ephemeralPrivateKey cannot be null"); 
    if (!staticPrivateKey.getClass().isAssignableFrom(ephemeralPrivateKey.getClass()))
      throw new IllegalArgumentException("static and ephemeral private keys have different domain parameters"); 
    if (ephemeralPublicKey == null) {
      if (ephemeralPrivateKey instanceof X448PrivateKeyParameters) {
        x25519PublicKeyParameters = ((X448PrivateKeyParameters)ephemeralPrivateKey).generatePublicKey();
      } else {
        x25519PublicKeyParameters = ((X25519PrivateKeyParameters)ephemeralPrivateKey).generatePublicKey();
      } 
    } else {
      if (x25519PublicKeyParameters instanceof X448PublicKeyParameters && !(staticPrivateKey instanceof X448PrivateKeyParameters))
        throw new IllegalArgumentException("ephemeral public key has different domain parameters"); 
      if (x25519PublicKeyParameters instanceof X25519PublicKeyParameters && !(staticPrivateKey instanceof X25519PrivateKeyParameters))
        throw new IllegalArgumentException("ephemeral public key has different domain parameters"); 
    } 
    this.staticPrivateKey = staticPrivateKey;
    this.ephemeralPrivateKey = ephemeralPrivateKey;
    this.ephemeralPublicKey = x25519PublicKeyParameters;
  }
  
  public AsymmetricKeyParameter getStaticPrivateKey() { return this.staticPrivateKey; }
  
  public AsymmetricKeyParameter getEphemeralPrivateKey() { return this.ephemeralPrivateKey; }
  
  public AsymmetricKeyParameter getEphemeralPublicKey() { return this.ephemeralPublicKey; }
}
