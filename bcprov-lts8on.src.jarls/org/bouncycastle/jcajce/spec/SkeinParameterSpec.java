package org.bouncycastle.jcajce.spec;

import java.security.spec.AlgorithmParameterSpec;
import java.util.Collections;
import java.util.HashMap;
import java.util.Map;
import org.bouncycastle.util.Arrays;
import org.bouncycastle.util.Integers;

public class SkeinParameterSpec implements AlgorithmParameterSpec {
  public static final int PARAM_TYPE_KEY = 0;
  
  public static final int PARAM_TYPE_CONFIG = 4;
  
  public static final int PARAM_TYPE_PERSONALISATION = 8;
  
  public static final int PARAM_TYPE_PUBLIC_KEY = 12;
  
  public static final int PARAM_TYPE_KEY_IDENTIFIER = 16;
  
  public static final int PARAM_TYPE_NONCE = 20;
  
  public static final int PARAM_TYPE_MESSAGE = 48;
  
  public static final int PARAM_TYPE_OUTPUT = 63;
  
  private Map parameters;
  
  public SkeinParameterSpec() { this(new HashMap()); }
  
  private SkeinParameterSpec(Map parameters) { this.parameters = Collections.unmodifiableMap(parameters); }
  
  public Map getParameters() { return this.parameters; }
  
  public byte[] getKey() { return Arrays.clone((byte[])this.parameters.get(Integers.valueOf(0))); }
  
  public byte[] getPersonalisation() { return Arrays.clone((byte[])this.parameters.get(Integers.valueOf(8))); }
  
  public byte[] getPublicKey() { return Arrays.clone((byte[])this.parameters.get(Integers.valueOf(12))); }
  
  public byte[] getKeyIdentifier() { return Arrays.clone((byte[])this.parameters.get(Integers.valueOf(16))); }
  
  public byte[] getNonce() { return Arrays.clone((byte[])this.parameters.get(Integers.valueOf(20))); }
}
