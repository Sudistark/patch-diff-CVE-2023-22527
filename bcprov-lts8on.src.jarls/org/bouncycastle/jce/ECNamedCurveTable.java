package org.bouncycastle.jce;

import java.util.Enumeration;
import org.bouncycastle.asn1.ASN1ObjectIdentifier;
import org.bouncycastle.asn1.x9.ECNamedCurveTable;
import org.bouncycastle.asn1.x9.X9ECParameters;
import org.bouncycastle.crypto.ec.CustomNamedCurves;
import org.bouncycastle.jce.spec.ECNamedCurveParameterSpec;

public class ECNamedCurveTable {
  public static ECNamedCurveParameterSpec getParameterSpec(String name) {
    X9ECParameters ecP;
    ASN1ObjectIdentifier oid;
    try {
      oid = possibleOID(name) ? new ASN1ObjectIdentifier(name) : null;
    } catch (IllegalArgumentException e) {
      oid = null;
    } 
    if (oid != null) {
      ecP = CustomNamedCurves.getByOID(oid);
    } else {
      ecP = CustomNamedCurves.getByName(name);
    } 
    if (ecP == null)
      if (oid != null) {
        ecP = ECNamedCurveTable.getByOID(oid);
      } else {
        ecP = ECNamedCurveTable.getByName(name);
      }  
    if (ecP == null)
      return null; 
    return new ECNamedCurveParameterSpec(name, ecP
        
        .getCurve(), ecP
        .getG(), ecP
        .getN(), ecP
        .getH(), ecP
        .getSeed());
  }
  
  public static Enumeration getNames() { return ECNamedCurveTable.getNames(); }
  
  private static boolean possibleOID(String identifier) {
    if (identifier.length() < 3 || identifier.charAt(1) != '.')
      return false; 
    char first = identifier.charAt(0);
    if (first < '0' || first > '2')
      return false; 
    return true;
  }
}
