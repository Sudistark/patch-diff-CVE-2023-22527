package org.bouncycastle.asn1;

import java.io.IOException;

public class BERSet extends ASN1Set {
  public BERSet() {}
  
  public BERSet(ASN1Encodable element) { super(element); }
  
  public BERSet(ASN1EncodableVector elementVector) { super(elementVector, false); }
  
  public BERSet(ASN1Encodable[] elements) { super(elements, false); }
  
  BERSet(boolean isSorted, ASN1Encodable[] elements) { super(isSorted, elements); }
  
  int encodedLength(boolean withTag) throws IOException {
    int totalLength = withTag ? 4 : 3;
    for (int i = 0, count = this.elements.length; i < count; i++) {
      ASN1Primitive p = this.elements[i].toASN1Primitive();
      totalLength += p.encodedLength(true);
    } 
    return totalLength;
  }
  
  void encode(ASN1OutputStream out, boolean withTag) throws IOException { out.writeEncodingIL(withTag, 49, this.elements); }
}
