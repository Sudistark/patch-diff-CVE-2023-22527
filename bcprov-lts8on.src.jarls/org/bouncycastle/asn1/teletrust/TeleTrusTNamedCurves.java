package org.bouncycastle.asn1.teletrust;

import java.math.BigInteger;
import java.util.Enumeration;
import java.util.Hashtable;
import org.bouncycastle.asn1.ASN1ObjectIdentifier;
import org.bouncycastle.asn1.x9.X9ECParameters;
import org.bouncycastle.asn1.x9.X9ECParametersHolder;
import org.bouncycastle.asn1.x9.X9ECPoint;
import org.bouncycastle.math.ec.ECCurve;
import org.bouncycastle.math.ec.WNafUtil;
import org.bouncycastle.util.Strings;
import org.bouncycastle.util.encoders.Hex;

public class TeleTrusTNamedCurves {
  private static X9ECPoint configureBasepoint(ECCurve curve, String encoding) {
    X9ECPoint G = new X9ECPoint(curve, Hex.decodeStrict(encoding));
    WNafUtil.configureBasepoint(G.getPoint());
    return G;
  }
  
  private static ECCurve configureCurve(ECCurve curve) { return curve; }
  
  private static BigInteger fromHex(String hex) { return new BigInteger(1, Hex.decodeStrict(hex)); }
  
  static X9ECParametersHolder brainpoolP160r1 = new Object();
  
  static X9ECParametersHolder brainpoolP160t1 = new Object();
  
  static X9ECParametersHolder brainpoolP192r1 = new Object();
  
  static X9ECParametersHolder brainpoolP192t1 = new Object();
  
  static X9ECParametersHolder brainpoolP224r1 = new Object();
  
  static X9ECParametersHolder brainpoolP224t1 = new Object();
  
  static X9ECParametersHolder brainpoolP256r1 = new Object();
  
  static X9ECParametersHolder brainpoolP256t1 = new Object();
  
  static X9ECParametersHolder brainpoolP320r1 = new Object();
  
  static X9ECParametersHolder brainpoolP320t1 = new Object();
  
  static X9ECParametersHolder brainpoolP384r1 = new Object();
  
  static X9ECParametersHolder brainpoolP384t1 = new Object();
  
  static X9ECParametersHolder brainpoolP512r1 = new Object();
  
  static X9ECParametersHolder brainpoolP512t1 = new Object();
  
  static final Hashtable objIds = new Hashtable();
  
  static final Hashtable curves = new Hashtable();
  
  static final Hashtable names = new Hashtable();
  
  static void defineCurve(String name, ASN1ObjectIdentifier oid, X9ECParametersHolder holder) {
    objIds.put(Strings.toLowerCase(name), oid);
    names.put(oid, name);
    curves.put(oid, holder);
  }
  
  static  {
    defineCurve("brainpoolP160r1", TeleTrusTObjectIdentifiers.brainpoolP160r1, brainpoolP160r1);
    defineCurve("brainpoolP160t1", TeleTrusTObjectIdentifiers.brainpoolP160t1, brainpoolP160t1);
    defineCurve("brainpoolP192r1", TeleTrusTObjectIdentifiers.brainpoolP192r1, brainpoolP192r1);
    defineCurve("brainpoolP192t1", TeleTrusTObjectIdentifiers.brainpoolP192t1, brainpoolP192t1);
    defineCurve("brainpoolP224r1", TeleTrusTObjectIdentifiers.brainpoolP224r1, brainpoolP224r1);
    defineCurve("brainpoolP224t1", TeleTrusTObjectIdentifiers.brainpoolP224t1, brainpoolP224t1);
    defineCurve("brainpoolP256r1", TeleTrusTObjectIdentifiers.brainpoolP256r1, brainpoolP256r1);
    defineCurve("brainpoolP256t1", TeleTrusTObjectIdentifiers.brainpoolP256t1, brainpoolP256t1);
    defineCurve("brainpoolP320r1", TeleTrusTObjectIdentifiers.brainpoolP320r1, brainpoolP320r1);
    defineCurve("brainpoolP320t1", TeleTrusTObjectIdentifiers.brainpoolP320t1, brainpoolP320t1);
    defineCurve("brainpoolP384r1", TeleTrusTObjectIdentifiers.brainpoolP384r1, brainpoolP384r1);
    defineCurve("brainpoolP384t1", TeleTrusTObjectIdentifiers.brainpoolP384t1, brainpoolP384t1);
    defineCurve("brainpoolP512r1", TeleTrusTObjectIdentifiers.brainpoolP512r1, brainpoolP512r1);
    defineCurve("brainpoolP512t1", TeleTrusTObjectIdentifiers.brainpoolP512t1, brainpoolP512t1);
  }
  
  public static X9ECParameters getByName(String name) {
    ASN1ObjectIdentifier oid = getOID(name);
    return (oid == null) ? null : getByOID(oid);
  }
  
  public static X9ECParametersHolder getByNameLazy(String name) {
    ASN1ObjectIdentifier oid = getOID(name);
    return (oid == null) ? null : getByOIDLazy(oid);
  }
  
  public static X9ECParameters getByOID(ASN1ObjectIdentifier oid) {
    X9ECParametersHolder holder = getByOIDLazy(oid);
    return (holder == null) ? null : holder.getParameters();
  }
  
  public static X9ECParametersHolder getByOIDLazy(ASN1ObjectIdentifier oid) { return (X9ECParametersHolder)curves.get(oid); }
  
  public static ASN1ObjectIdentifier getOID(String name) { return (ASN1ObjectIdentifier)objIds.get(Strings.toLowerCase(name)); }
  
  public static String getName(ASN1ObjectIdentifier oid) { return (String)names.get(oid); }
  
  public static Enumeration getNames() { return names.elements(); }
  
  public static ASN1ObjectIdentifier getOID(short curvesize, boolean twisted) { return getOID("brainpoolP" + curvesize + (twisted ? "t" : "r") + "1"); }
}
