package org.bouncycastle.asn1.sec;

import java.math.BigInteger;
import java.util.Enumeration;
import java.util.Hashtable;
import org.bouncycastle.asn1.ASN1ObjectIdentifier;
import org.bouncycastle.asn1.x9.X9ECParameters;
import org.bouncycastle.asn1.x9.X9ECParametersHolder;
import org.bouncycastle.asn1.x9.X9ECPoint;
import org.bouncycastle.math.ec.ECCurve;
import org.bouncycastle.math.ec.WNafUtil;
import org.bouncycastle.math.ec.endo.GLVTypeBEndomorphism;
import org.bouncycastle.math.ec.endo.GLVTypeBParameters;
import org.bouncycastle.util.Strings;
import org.bouncycastle.util.encoders.Hex;

public class SECNamedCurves {
  private static X9ECPoint configureBasepoint(ECCurve curve, String encoding) {
    X9ECPoint G = new X9ECPoint(curve, Hex.decodeStrict(encoding));
    WNafUtil.configureBasepoint(G.getPoint());
    return G;
  }
  
  private static ECCurve configureCurve(ECCurve curve) { return curve; }
  
  private static ECCurve configureCurveGLV(ECCurve c, GLVTypeBParameters p) { return c.configure().setEndomorphism(new GLVTypeBEndomorphism(c, p)).create(); }
  
  private static BigInteger fromHex(String hex) { return new BigInteger(1, Hex.decodeStrict(hex)); }
  
  static X9ECParametersHolder secp112r1 = new Object();
  
  static X9ECParametersHolder secp112r2 = new Object();
  
  static X9ECParametersHolder secp128r1 = new Object();
  
  static X9ECParametersHolder secp128r2 = new Object();
  
  static X9ECParametersHolder secp160k1 = new Object();
  
  static X9ECParametersHolder secp160r1 = new Object();
  
  static X9ECParametersHolder secp160r2 = new Object();
  
  static X9ECParametersHolder secp192k1 = new Object();
  
  static X9ECParametersHolder secp192r1 = new Object();
  
  static X9ECParametersHolder secp224k1 = new Object();
  
  static X9ECParametersHolder secp224r1 = new Object();
  
  static X9ECParametersHolder secp256k1 = new Object();
  
  static X9ECParametersHolder secp256r1 = new Object();
  
  static X9ECParametersHolder secp384r1 = new Object();
  
  static X9ECParametersHolder secp521r1 = new Object();
  
  static X9ECParametersHolder sect113r1 = new Object();
  
  static X9ECParametersHolder sect113r2 = new Object();
  
  static X9ECParametersHolder sect131r1 = new Object();
  
  static X9ECParametersHolder sect131r2 = new Object();
  
  static X9ECParametersHolder sect163k1 = new Object();
  
  static X9ECParametersHolder sect163r1 = new Object();
  
  static X9ECParametersHolder sect163r2 = new Object();
  
  static X9ECParametersHolder sect193r1 = new Object();
  
  static X9ECParametersHolder sect193r2 = new Object();
  
  static X9ECParametersHolder sect233k1 = new Object();
  
  static X9ECParametersHolder sect233r1 = new Object();
  
  static X9ECParametersHolder sect239k1 = new Object();
  
  static X9ECParametersHolder sect283k1 = new Object();
  
  static X9ECParametersHolder sect283r1 = new Object();
  
  static X9ECParametersHolder sect409k1 = new Object();
  
  static X9ECParametersHolder sect409r1 = new Object();
  
  static X9ECParametersHolder sect571k1 = new Object();
  
  static X9ECParametersHolder sect571r1 = new Object();
  
  static final Hashtable objIds = new Hashtable();
  
  static final Hashtable curves = new Hashtable();
  
  static final Hashtable names = new Hashtable();
  
  static void defineCurve(String name, ASN1ObjectIdentifier oid, X9ECParametersHolder holder) {
    objIds.put(name, oid);
    names.put(oid, name);
    curves.put(oid, holder);
  }
  
  static  {
    defineCurve("secp112r1", SECObjectIdentifiers.secp112r1, secp112r1);
    defineCurve("secp112r2", SECObjectIdentifiers.secp112r2, secp112r2);
    defineCurve("secp128r1", SECObjectIdentifiers.secp128r1, secp128r1);
    defineCurve("secp128r2", SECObjectIdentifiers.secp128r2, secp128r2);
    defineCurve("secp160k1", SECObjectIdentifiers.secp160k1, secp160k1);
    defineCurve("secp160r1", SECObjectIdentifiers.secp160r1, secp160r1);
    defineCurve("secp160r2", SECObjectIdentifiers.secp160r2, secp160r2);
    defineCurve("secp192k1", SECObjectIdentifiers.secp192k1, secp192k1);
    defineCurve("secp192r1", SECObjectIdentifiers.secp192r1, secp192r1);
    defineCurve("secp224k1", SECObjectIdentifiers.secp224k1, secp224k1);
    defineCurve("secp224r1", SECObjectIdentifiers.secp224r1, secp224r1);
    defineCurve("secp256k1", SECObjectIdentifiers.secp256k1, secp256k1);
    defineCurve("secp256r1", SECObjectIdentifiers.secp256r1, secp256r1);
    defineCurve("secp384r1", SECObjectIdentifiers.secp384r1, secp384r1);
    defineCurve("secp521r1", SECObjectIdentifiers.secp521r1, secp521r1);
    defineCurve("sect113r1", SECObjectIdentifiers.sect113r1, sect113r1);
    defineCurve("sect113r2", SECObjectIdentifiers.sect113r2, sect113r2);
    defineCurve("sect131r1", SECObjectIdentifiers.sect131r1, sect131r1);
    defineCurve("sect131r2", SECObjectIdentifiers.sect131r2, sect131r2);
    defineCurve("sect163k1", SECObjectIdentifiers.sect163k1, sect163k1);
    defineCurve("sect163r1", SECObjectIdentifiers.sect163r1, sect163r1);
    defineCurve("sect163r2", SECObjectIdentifiers.sect163r2, sect163r2);
    defineCurve("sect193r1", SECObjectIdentifiers.sect193r1, sect193r1);
    defineCurve("sect193r2", SECObjectIdentifiers.sect193r2, sect193r2);
    defineCurve("sect233k1", SECObjectIdentifiers.sect233k1, sect233k1);
    defineCurve("sect233r1", SECObjectIdentifiers.sect233r1, sect233r1);
    defineCurve("sect239k1", SECObjectIdentifiers.sect239k1, sect239k1);
    defineCurve("sect283k1", SECObjectIdentifiers.sect283k1, sect283k1);
    defineCurve("sect283r1", SECObjectIdentifiers.sect283r1, sect283r1);
    defineCurve("sect409k1", SECObjectIdentifiers.sect409k1, sect409k1);
    defineCurve("sect409r1", SECObjectIdentifiers.sect409r1, sect409r1);
    defineCurve("sect571k1", SECObjectIdentifiers.sect571k1, sect571k1);
    defineCurve("sect571r1", SECObjectIdentifiers.sect571r1, sect571r1);
  }
  
  public static X9ECParameters getByName(String name) {
    ASN1ObjectIdentifier oid = getOID(name);
    return (oid == null) ? null : getByOID(oid);
  }
  
  public static X9ECParametersHolder getByNameLazy(String name) {
    ASN1ObjectIdentifier oid = getOID(name);
    return (oid == null) ? null : getByOIDLazy(oid);
  }
  
  public static X9ECParameters getByOID(ASN1ObjectIdentifier oid) {
    X9ECParametersHolder holder = getByOIDLazy(oid);
    return (holder == null) ? null : holder.getParameters();
  }
  
  public static X9ECParametersHolder getByOIDLazy(ASN1ObjectIdentifier oid) { return (X9ECParametersHolder)curves.get(oid); }
  
  public static ASN1ObjectIdentifier getOID(String name) { return (ASN1ObjectIdentifier)objIds.get(Strings.toLowerCase(name)); }
  
  public static String getName(ASN1ObjectIdentifier oid) { return (String)names.get(oid); }
  
  public static Enumeration getNames() { return names.elements(); }
}
