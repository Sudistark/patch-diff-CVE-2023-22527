package org.bouncycastle.asn1.pkcs;

import java.math.BigInteger;
import org.bouncycastle.asn1.ASN1EncodableVector;
import org.bouncycastle.asn1.ASN1Integer;
import org.bouncycastle.asn1.ASN1Object;
import org.bouncycastle.asn1.ASN1Primitive;
import org.bouncycastle.asn1.ASN1Sequence;
import org.bouncycastle.asn1.DERSequence;
import org.bouncycastle.asn1.x500.X500Name;

public class IssuerAndSerialNumber extends ASN1Object {
  X500Name name;
  
  ASN1Integer certSerialNumber;
  
  public static IssuerAndSerialNumber getInstance(Object obj) {
    if (obj instanceof IssuerAndSerialNumber)
      return (IssuerAndSerialNumber)obj; 
    if (obj != null)
      return new IssuerAndSerialNumber(ASN1Sequence.getInstance(obj)); 
    return null;
  }
  
  private IssuerAndSerialNumber(ASN1Sequence seq) {
    this.name = X500Name.getInstance(seq.getObjectAt(0));
    this.certSerialNumber = (ASN1Integer)seq.getObjectAt(1);
  }
  
  public IssuerAndSerialNumber(X500Name name, BigInteger certSerialNumber) {
    this.name = name;
    this.certSerialNumber = new ASN1Integer(certSerialNumber);
  }
  
  public X500Name getName() { return this.name; }
  
  public ASN1Integer getCertificateSerialNumber() { return this.certSerialNumber; }
  
  public ASN1Primitive toASN1Primitive() {
    ASN1EncodableVector v = new ASN1EncodableVector(2);
    v.add(this.name);
    v.add(this.certSerialNumber);
    return new DERSequence(v);
  }
}
