package org.bouncycastle.asn1;

import java.io.IOException;

public class DERExternalParser implements ASN1ExternalParser {
  private ASN1StreamParser _parser;
  
  public DERExternalParser(ASN1StreamParser parser) { this._parser = parser; }
  
  public ASN1Encodable readObject() throws IOException { return this._parser.readObject(); }
  
  public ASN1Primitive getLoadedObject() throws IOException { return parse(this._parser); }
  
  public ASN1Primitive toASN1Primitive() throws IOException {
    try {
      return getLoadedObject();
    } catch (IOException ioe) {
      throw new ASN1ParsingException("unable to get DER object", ioe);
    } catch (IllegalArgumentException ioe) {
      throw new ASN1ParsingException("unable to get DER object", ioe);
    } 
  }
  
  static DLExternal parse(ASN1StreamParser sp) throws IOException {
    try {
      return new DLExternal(new DLSequence(sp.readVector()));
    } catch (IllegalArgumentException e) {
      throw new ASN1Exception(e.getMessage(), e);
    } 
  }
}
