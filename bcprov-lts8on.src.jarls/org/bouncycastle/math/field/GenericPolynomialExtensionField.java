package org.bouncycastle.math.field;

import java.math.BigInteger;
import org.bouncycastle.util.Integers;

class GenericPolynomialExtensionField implements PolynomialExtensionField {
  protected final FiniteField subfield;
  
  protected final Polynomial minimalPolynomial;
  
  GenericPolynomialExtensionField(FiniteField subfield, Polynomial polynomial) {
    this.subfield = subfield;
    this.minimalPolynomial = polynomial;
  }
  
  public BigInteger getCharacteristic() { return this.subfield.getCharacteristic(); }
  
  public int getDimension() { return this.subfield.getDimension() * this.minimalPolynomial.getDegree(); }
  
  public FiniteField getSubfield() { return this.subfield; }
  
  public int getDegree() { return this.minimalPolynomial.getDegree(); }
  
  public Polynomial getMinimalPolynomial() { return this.minimalPolynomial; }
  
  public boolean equals(Object obj) {
    if (this == obj)
      return true; 
    if (!(obj instanceof GenericPolynomialExtensionField))
      return false; 
    GenericPolynomialExtensionField other = (GenericPolynomialExtensionField)obj;
    return (this.subfield.equals(other.subfield) && this.minimalPolynomial.equals(other.minimalPolynomial));
  }
  
  public int hashCode() { return this.subfield.hashCode() ^ 
      Integers.rotateLeft(this.minimalPolynomial.hashCode(), 16); }
}
