package io.netty.channel.epoll;

import io.netty.channel.AbstractChannel;
import io.netty.channel.Channel;
import io.netty.channel.ChannelMetadata;
import io.netty.channel.ChannelOutboundBuffer;
import io.netty.channel.EventLoop;
import io.netty.channel.ServerChannel;
import java.net.InetSocketAddress;
import java.net.SocketAddress;

public abstract class AbstractEpollServerChannel extends AbstractEpollChannel implements ServerChannel {
  private static final ChannelMetadata METADATA = new ChannelMetadata(false, 16);
  
  protected AbstractEpollServerChannel(int fd) { this(new LinuxSocket(fd), false); }
  
  protected AbstractEpollServerChannel(LinuxSocket fd) { this(fd, isSoErrorZero(fd)); }
  
  protected AbstractEpollServerChannel(LinuxSocket fd, boolean active) { super(null, fd, active); }
  
  public ChannelMetadata metadata() { return METADATA; }
  
  protected boolean isCompatible(EventLoop loop) { return loop instanceof EpollEventLoop; }
  
  protected InetSocketAddress remoteAddress0() { return null; }
  
  protected AbstractEpollChannel.AbstractEpollUnsafe newUnsafe() { return new EpollServerSocketUnsafe(this); }
  
  protected void doWrite(ChannelOutboundBuffer in) throws Exception { throw new UnsupportedOperationException(); }
  
  protected Object filterOutboundMessage(Object msg) throws Exception { throw new UnsupportedOperationException(); }
  
  protected boolean doConnect(SocketAddress remoteAddress, SocketAddress localAddress) throws Exception { throw new UnsupportedOperationException(); }
  
  protected abstract Channel newChildChannel(int paramInt1, byte[] paramArrayOfByte, int paramInt2, int paramInt3) throws Exception;
}
