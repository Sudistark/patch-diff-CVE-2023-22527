package io.netty.handler.ssl;

import io.netty.util.internal.PlatformDependent;
import javax.net.ssl.SSLEngine;

abstract class JettyAlpnSslEngine extends JdkSslEngine {
  private static final boolean available = initAvailable();
  
  static boolean isAvailable() { return available; }
  
  private static boolean initAvailable() {
    if (PlatformDependent.javaVersion() <= 8)
      try {
        Class.forName("sun.security.ssl.ALPNExtension", true, null);
        return true;
      } catch (Throwable throwable) {} 
    return false;
  }
  
  static JettyAlpnSslEngine newClientEngine(SSLEngine engine, JdkApplicationProtocolNegotiator applicationNegotiator) { return new ClientEngine(engine, applicationNegotiator); }
  
  static JettyAlpnSslEngine newServerEngine(SSLEngine engine, JdkApplicationProtocolNegotiator applicationNegotiator) { return new ServerEngine(engine, applicationNegotiator); }
  
  private JettyAlpnSslEngine(SSLEngine engine) { super(engine); }
}
