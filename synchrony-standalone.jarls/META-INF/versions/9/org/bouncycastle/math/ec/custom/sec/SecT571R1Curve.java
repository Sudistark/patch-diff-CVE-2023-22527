package META-INF.versions.9.org.bouncycastle.math.ec.custom.sec;

import java.math.BigInteger;
import org.bouncycastle.math.ec.ECConstants;
import org.bouncycastle.math.ec.ECCurve;
import org.bouncycastle.math.ec.ECFieldElement;
import org.bouncycastle.math.ec.ECLookupTable;
import org.bouncycastle.math.ec.ECPoint;
import org.bouncycastle.math.ec.custom.sec.SecT571FieldElement;
import org.bouncycastle.math.ec.custom.sec.SecT571R1Curve;
import org.bouncycastle.math.ec.custom.sec.SecT571R1Point;
import org.bouncycastle.math.raw.Nat576;
import org.bouncycastle.util.encoders.Hex;

public class SecT571R1Curve extends ECCurve.AbstractF2m {
  private static final int SECT571R1_DEFAULT_COORDS = 6;
  
  private static final ECFieldElement[] SECT571R1_AFFINE_ZS = { new SecT571FieldElement(ECConstants.ONE) };
  
  protected SecT571R1Point infinity;
  
  static final SecT571FieldElement SecT571R1_B = new SecT571FieldElement(new BigInteger(1, 
        Hex.decodeStrict("02F40E7E2221F295DE297117B7F3D62F5C6A97FFCB8CEFF1CD6BA8CE4A9A18AD84FFABBD8EFA59332BE7AD6756A66E294AFD185A78FF12AA520E4DE739BACA0C7FFEFF7F2955727A")));
  
  static final SecT571FieldElement SecT571R1_B_SQRT = (SecT571FieldElement)SecT571R1_B.sqrt();
  
  public SecT571R1Curve() {
    super(571, 2, 5, 10);
    this.infinity = new SecT571R1Point(this, null, null);
    this.a = fromBigInteger(BigInteger.valueOf(1L));
    this.b = SecT571R1_B;
    this.order = new BigInteger(1, Hex.decodeStrict("03FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE661CE18FF55987308059B186823851EC7DD9CA1161DE93D5174D66E8382E9BB2FE84E47"));
    this.cofactor = BigInteger.valueOf(2L);
    this.coord = 6;
  }
  
  protected ECCurve cloneCurve() { return new SecT571R1Curve(); }
  
  public boolean supportsCoordinateSystem(int paramInt) {
    switch (paramInt) {
      case 6:
        return true;
    } 
    return false;
  }
  
  public int getFieldSize() { return 571; }
  
  public ECFieldElement fromBigInteger(BigInteger paramBigInteger) { return new SecT571FieldElement(paramBigInteger); }
  
  protected ECPoint createRawPoint(ECFieldElement paramECFieldElement1, ECFieldElement paramECFieldElement2) { return new SecT571R1Point(this, paramECFieldElement1, paramECFieldElement2); }
  
  protected ECPoint createRawPoint(ECFieldElement paramECFieldElement1, ECFieldElement paramECFieldElement2, ECFieldElement[] paramArrayOfECFieldElement) { return new SecT571R1Point(this, paramECFieldElement1, paramECFieldElement2, paramArrayOfECFieldElement); }
  
  public ECPoint getInfinity() { return this.infinity; }
  
  public boolean isKoblitz() { return false; }
  
  public int getM() { return 571; }
  
  public boolean isTrinomial() { return false; }
  
  public int getK1() { return 2; }
  
  public int getK2() { return 5; }
  
  public int getK3() { return 10; }
  
  public ECLookupTable createCacheSafeLookupTable(ECPoint[] paramArrayOfECPoint, int paramInt1, int paramInt2) {
    long[] arrayOfLong = new long[paramInt2 * 9 * 2];
    byte b = 0;
    for (int i = 0; i < paramInt2; i++) {
      ECPoint eCPoint = paramArrayOfECPoint[paramInt1 + i];
      Nat576.copy64(((SecT571FieldElement)eCPoint.getRawXCoord()).x, 0, arrayOfLong, b);
      b += 9;
      Nat576.copy64(((SecT571FieldElement)eCPoint.getRawYCoord()).x, 0, arrayOfLong, b);
      b += 9;
    } 
    return new Object(this, paramInt2, arrayOfLong);
  }
}
