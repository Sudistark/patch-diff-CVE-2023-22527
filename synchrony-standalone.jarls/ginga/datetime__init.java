package ginga;

import clojure.lang.AFn;
import clojure.lang.Compiler;
import clojure.lang.IObj;
import clojure.lang.IPersistentMap;
import clojure.lang.LockingTransaction;
import clojure.lang.PersistentList;
import clojure.lang.RT;
import clojure.lang.Symbol;
import clojure.lang.Tuple;
import clojure.lang.Var;
import java.util.Arrays;
import java.util.concurrent.Callable;

public class datetime__init {
  public static final Var const__0;
  
  public static final AFn const__1;
  
  public static final AFn const__2;
  
  public static final Var const__3;
  
  public static final AFn const__9;
  
  public static final Object const__10;
  
  public static final Var const__11;
  
  public static final AFn const__16;
  
  public static final Var const__17;
  
  public static final AFn const__20;
  
  public static final Var const__21;
  
  public static final AFn const__25;
  
  public static final Var const__26;
  
  public static final AFn const__29;
  
  public static final Var const__30;
  
  public static final AFn const__33;
  
  public static final Var const__34;
  
  public static final AFn const__37;
  
  public static final Var const__38;
  
  public static final AFn const__41;
  
  public static final Var const__42;
  
  public static final AFn const__45;
  
  public static final Var const__46;
  
  public static final AFn const__49;
  
  public static void load() { LockingTransaction.runInTransaction((Callable)new datetime.fn__19219());
    const__3.setMeta((IPersistentMap)const__9);
    const__3.bindRoot(const__10);
    const__11.setMeta((IPersistentMap)const__16);
    const__11.bindRoot(new datetime.now());
    const__17.setMeta((IPersistentMap)const__20);
    const__17.bindRoot(new datetime.now_ms());
    const__21.setMeta((IPersistentMap)const__25);
    const__21.bindRoot(new datetime.format_int());
    const__26.setMeta((IPersistentMap)const__29);
    const__26.bindRoot(new datetime.stringify());
    const__30.setMeta((IPersistentMap)const__33);
    const__30.bindRoot(new datetime.parse());
    const__34.setMeta((IPersistentMap)const__37);
    const__34.bindRoot(new datetime.dt__GT_ts());
    const__38.setMeta((IPersistentMap)const__41);
    const__38.bindRoot(new datetime.ts__GT_dt());
    const__42.setMeta((IPersistentMap)const__45);
    const__42.bindRoot(new datetime.seconds_to_ms());
    const__46.setMeta((IPersistentMap)const__49);
    const__46.bindRoot(new datetime.minutes_to_ms()); }
  
  public static void __init0() {
    const__0 = (Var)RT.var("clojure.core", "in-ns");
    const__1 = (AFn)Symbol.intern(null, "ginga.datetime");
    const__2 = (AFn)Symbol.intern(null, "clojure.core");
    const__3 = (Var)RT.var("ginga.datetime", "Date");
    const__9 = (AFn)RT.map(new Object[] { RT.keyword(null, "line"), Integer.valueOf(5), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "ginga/datetime.cljc" });
    const__10 = RT.classForName("org.joda.time.DateTime");
    const__11 = (Var)RT.var("ginga.datetime", "now");
    const__16 = (AFn)RT.map(new Object[] { RT.keyword(null, "export"), Boolean.TRUE, RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create() })), RT.keyword(null, "line"), Integer.valueOf(7), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "ginga/datetime.cljc" });
    const__17 = (Var)RT.var("ginga.datetime", "now-ms");
    const__20 = (AFn)RT.map(new Object[] { RT.keyword(null, "export"), Boolean.TRUE, RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create() })), RT.keyword(null, "line"), Integer.valueOf(11), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "ginga/datetime.cljc" });
    const__21 = (Var)RT.var("ginga.datetime", "format-int");
    const__25 = (AFn)RT.map(new Object[] { RT.keyword(null, "private"), Boolean.TRUE, RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "places"), Symbol.intern(null, "i")) })), RT.keyword(null, "line"), Integer.valueOf(15), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "ginga/datetime.cljc" });
    const__26 = (Var)RT.var("ginga.datetime", "stringify");
    const__29 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "t")) })), RT.keyword(null, "line"), Integer.valueOf(23), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "ginga/datetime.cljc" });
    const__30 = (Var)RT.var("ginga.datetime", "parse");
    const__33 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "iso-str")) })), RT.keyword(null, "line"), Integer.valueOf(40), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "ginga/datetime.cljc" });
    const__34 = (Var)RT.var("ginga.datetime", "dt->ts");
    const__37 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(((IObj)Symbol.intern(null, "t")).withMeta((IPersistentMap)RT.map(new Object[] { RT.keyword(null, "tag"), Symbol.intern(null, "org.joda.time.DateTime") }))) })), RT.keyword(null, "line"), Integer.valueOf(44), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "ginga/datetime.cljc" });
    const__38 = (Var)RT.var("ginga.datetime", "ts->dt");
    const__41 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(((IObj)Symbol.intern(null, "timestamp")).withMeta((IPersistentMap)RT.map(new Object[] { RT.keyword(null, "tag"), Symbol.intern(null, "long") }))) })), RT.keyword(null, "line"), Integer.valueOf(48), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "ginga/datetime.cljc" });
    const__42 = (Var)RT.var("ginga.datetime", "seconds-to-ms");
    const__45 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "seconds")) })), RT.keyword(null, "line"), Integer.valueOf(52), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "ginga/datetime.cljc" });
    const__46 = (Var)RT.var("ginga.datetime", "minutes-to-ms");
    const__49 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "minutes")) })), RT.keyword(null, "line"), Integer.valueOf(54), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "ginga/datetime.cljc" });
  }
  
  static  {
    __init0();
    Compiler.pushNSandLoader(RT.classForName("ginga.datetime__init").getClassLoader());
    try {
      load();
    } finally {
      Var.popThreadBindings();
    } 
  }
}
