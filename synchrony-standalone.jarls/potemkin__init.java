import clojure.lang.AFn;
import clojure.lang.Compiler;
import clojure.lang.IFn;
import clojure.lang.IPersistentMap;
import clojure.lang.Keyword;
import clojure.lang.LockingTransaction;
import clojure.lang.RT;
import clojure.lang.Symbol;
import clojure.lang.Var;
import java.util.concurrent.Callable;

public class potemkin__init {
  public static final Var const__0;
  
  public static final AFn const__1;
  
  public static final AFn const__2;
  
  public static final Var const__3;
  
  public static final AFn const__9;
  
  public static final Var const__10;
  
  public static final Var const__11;
  
  public static final Var const__12;
  
  public static final Var const__13;
  
  public static final Var const__14;
  
  public static final Keyword const__15;
  
  public static final Var const__16;
  
  public static final Var const__17;
  
  public static final AFn const__19;
  
  public static final Var const__20;
  
  public static final Var const__21;
  
  public static final AFn const__22;
  
  public static final Var const__23;
  
  public static final Var const__24;
  
  public static final AFn const__25;
  
  public static final Var const__26;
  
  public static final Var const__27;
  
  public static final AFn const__29;
  
  public static final Var const__30;
  
  public static final Var const__31;
  
  public static final Var const__32;
  
  public static final AFn const__33;
  
  public static final Var const__34;
  
  public static final Var const__35;
  
  public static final AFn const__36;
  
  public static final Var const__37;
  
  public static final Var const__38;
  
  public static final AFn const__39;
  
  public static final Var const__40;
  
  public static final Var const__41;
  
  public static final AFn const__42;
  
  public static final Var const__43;
  
  public static final Var const__44;
  
  public static final AFn const__45;
  
  public static final Var const__46;
  
  public static final Var const__47;
  
  public static final AFn const__48;
  
  public static final Var const__49;
  
  public static final Var const__50;
  
  public static final AFn const__51;
  
  public static final Var const__52;
  
  public static final Var const__53;
  
  public static final AFn const__54;
  
  public static final Var const__55;
  
  public static final Var const__56;
  
  public static final AFn const__57;
  
  public static final Var const__58;
  
  public static final Var const__59;
  
  public static final AFn const__60;
  
  public static final Var const__61;
  
  public static final Var const__62;
  
  public static final AFn const__63;
  
  public static final Var const__64;
  
  public static final Var const__65;
  
  public static final AFn const__66;
  
  public static final Var const__67;
  
  public static final Var const__68;
  
  public static final AFn const__69;
  
  public static final Var const__70;
  
  public static final Var const__71;
  
  public static final AFn const__72;
  
  public static final Var const__73;
  
  public static final Var const__74;
  
  public static final AFn const__75;
  
  public static final Var const__76;
  
  public static final Var const__77;
  
  public static final AFn const__78;
  
  public static final Var const__79;
  
  public static final Var const__80;
  
  public static final AFn const__81;
  
  public static final Var const__82;
  
  public static final Var const__83;
  
  public static final AFn const__84;
  
  public static final Var const__85;
  
  public static final Var const__86;
  
  public static final AFn const__87;
  
  public static final Var const__88;
  
  public static void load() {
    LockingTransaction.runInTransaction((Callable)new potemkin.fn__26449());
    const__3.setMeta((IPersistentMap)const__9);
    const__3.bindRoot(const__10);
    ((Var)const__3).setMacro();
    const__17.setMeta((IPersistentMap)const__19);
    const__17.bindRoot(const__20);
    ((Var)const__17).setMacro();
    const__21.setMeta((IPersistentMap)const__22);
    const__21.bindRoot(const__23);
    ((Var)const__21).setMacro();
    const__24.setMeta((IPersistentMap)const__25);
    const__24.bindRoot(const__26);
    ((Var)const__24).setMacro();
    const__27.setMeta((IPersistentMap)const__29);
    const__27.bindRoot(((IFn)const__30.getRawRoot()).invoke(const__31));
    const__32.setMeta((IPersistentMap)const__33);
    const__32.bindRoot(((IFn)const__30.getRawRoot()).invoke(const__34));
    const__35.setMeta((IPersistentMap)const__36);
    const__35.bindRoot(((IFn)const__30.getRawRoot()).invoke(const__37));
    const__38.setMeta((IPersistentMap)const__39);
    const__38.bindRoot(const__40);
    ((Var)const__38).setMacro();
    const__41.setMeta((IPersistentMap)const__42);
    const__41.bindRoot(const__43);
    ((Var)const__41).setMacro();
    const__44.setMeta((IPersistentMap)const__45);
    const__44.bindRoot(const__46);
    ((Var)const__44).setMacro();
    const__47.setMeta((IPersistentMap)const__48);
    const__47.bindRoot(((IFn)const__30.getRawRoot()).invoke(const__49));
    const__50.setMeta((IPersistentMap)const__51);
    const__50.bindRoot(((IFn)const__30.getRawRoot()).invoke(const__52));
    const__53.setMeta((IPersistentMap)const__54);
    const__53.bindRoot(const__55);
    ((Var)const__53).setMacro();
    const__56.setMeta((IPersistentMap)const__57);
    const__56.bindRoot(const__58);
    ((Var)const__56).setMacro();
    const__59.setMeta((IPersistentMap)const__60);
    const__59.bindRoot(const__61);
    ((Var)const__59).setMacro();
    const__62.setMeta((IPersistentMap)const__63);
    const__62.bindRoot(const__64);
    ((Var)const__62).setMacro();
    const__65.setMeta((IPersistentMap)const__66);
    const__65.bindRoot(const__67);
    ((Var)const__65).setMacro();
    const__68.setMeta((IPersistentMap)const__69);
    const__68.bindRoot(const__70);
    ((Var)const__68).setMacro();
    const__71.setMeta((IPersistentMap)const__72);
    const__71.bindRoot(const__73);
    ((Var)const__71).setMacro();
    const__74.setMeta((IPersistentMap)const__75);
    const__74.bindRoot(const__76);
    ((Var)const__74).setMacro();
    const__77.setMeta((IPersistentMap)const__78);
    const__77.bindRoot(const__79);
    ((Var)const__77).setMacro();
    const__80.setMeta((IPersistentMap)const__81);
    const__80.bindRoot(const__82);
    ((Var)const__80).setMacro();
    const__83.setMeta((IPersistentMap)const__84);
    const__83.bindRoot(const__85);
    ((Var)const__83).setMacro();
    const__86.setMeta((IPersistentMap)const__87);
    const__86.bindRoot(const__88);
    ((Var)const__86).setMacro();
  }
  
  public static void __init0() {
    const__0 = (Var)RT.var("clojure.core", "in-ns");
    const__1 = (AFn)Symbol.intern(null, "potemkin");
    const__2 = (AFn)Symbol.intern(null, "clojure.core");
    const__3 = (Var)RT.var("potemkin", "import-vars");
    const__9 = (AFn)RT.map(new Object[] { RT.keyword(null, "line"), Integer.valueOf(5), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "potemkin.clj" });
    const__10 = (Var)RT.var("potemkin.namespaces", "import-vars");
    const__11 = (Var)RT.var("clojure.core", "alter-meta!");
    const__12 = (Var)RT.var("clojure.core", "merge");
    const__13 = (Var)RT.var("clojure.core", "dissoc");
    const__14 = (Var)RT.var("clojure.core", "meta");
    const__15 = (Keyword)RT.keyword(null, "name");
    const__16 = (Var)RT.var("potemkin.namespaces", "link-vars");
    const__17 = (Var)RT.var("potemkin", "import-fn");
    const__19 = (AFn)RT.map(new Object[] { RT.keyword(null, "line"), Integer.valueOf(7), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "potemkin.clj" });
    const__20 = (Var)RT.var("potemkin.namespaces", "import-fn");
    const__21 = (Var)RT.var("potemkin", "import-macro");
    const__22 = (AFn)RT.map(new Object[] { RT.keyword(null, "line"), Integer.valueOf(7), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "potemkin.clj" });
    const__23 = (Var)RT.var("potemkin.namespaces", "import-macro");
    const__24 = (Var)RT.var("potemkin", "import-def");
    const__25 = (AFn)RT.map(new Object[] { RT.keyword(null, "line"), Integer.valueOf(7), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "potemkin.clj" });
    const__26 = (Var)RT.var("potemkin.namespaces", "import-def");
    const__27 = (Var)RT.var("potemkin", "unify-gensyms");
    const__29 = (AFn)RT.map(new Object[] { RT.keyword(null, "protocol"), null, RT.keyword(null, "line"), Integer.valueOf(7), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "potemkin.clj" });
    const__30 = (Var)RT.var("clojure.core", "deref");
    const__31 = (Var)RT.var("potemkin.macros", "unify-gensyms");
    const__32 = (Var)RT.var("potemkin", "normalize-gensyms");
    const__33 = (AFn)RT.map(new Object[] { RT.keyword(null, "protocol"), null, RT.keyword(null, "line"), Integer.valueOf(7), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "potemkin.clj" });
    const__34 = (Var)RT.var("potemkin.macros", "normalize-gensyms");
    const__35 = (Var)RT.var("potemkin", "equivalent?");
    const__36 = (AFn)RT.map(new Object[] { RT.keyword(null, "protocol"), null, RT.keyword(null, "line"), Integer.valueOf(7), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "potemkin.clj" });
    const__37 = (Var)RT.var("potemkin.macros", "equivalent?");
    const__38 = (Var)RT.var("potemkin", "condp-case");
    const__39 = (AFn)RT.map(new Object[] { RT.keyword(null, "line"), Integer.valueOf(7), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "potemkin.clj" });
    const__40 = (Var)RT.var("potemkin.utils", "condp-case");
    const__41 = (Var)RT.var("potemkin", "try*");
    const__42 = (AFn)RT.map(new Object[] { RT.keyword(null, "line"), Integer.valueOf(7), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "potemkin.clj" });
    const__43 = (Var)RT.var("potemkin.utils", "try*");
    const__44 = (Var)RT.var("potemkin", "fast-bound-fn");
    const__45 = (AFn)RT.map(new Object[] { RT.keyword(null, "line"), Integer.valueOf(7), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "potemkin.clj" });
    const__46 = (Var)RT.var("potemkin.utils", "fast-bound-fn");
    const__47 = (Var)RT.var("potemkin", "fast-bound-fn*");
    const__48 = (AFn)RT.map(new Object[] { RT.keyword(null, "protocol"), null, RT.keyword(null, "line"), Integer.valueOf(7), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "potemkin.clj" });
    const__49 = (Var)RT.var("potemkin.utils", "fast-bound-fn*");
    const__50 = (Var)RT.var("potemkin", "fast-memoize");
    const__51 = (AFn)RT.map(new Object[] { RT.keyword(null, "protocol"), null, RT.keyword(null, "line"), Integer.valueOf(7), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "potemkin.clj" });
    const__52 = (Var)RT.var("potemkin.utils", "fast-memoize");
    const__53 = (Var)RT.var("potemkin", "doit");
    const__54 = (AFn)RT.map(new Object[] { RT.keyword(null, "line"), Integer.valueOf(7), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "potemkin.clj" });
    const__55 = (Var)RT.var("potemkin.utils", "doit");
    const__56 = (Var)RT.var("potemkin", "doary");
    const__57 = (AFn)RT.map(new Object[] { RT.keyword(null, "line"), Integer.valueOf(7), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "potemkin.clj" });
    const__58 = (Var)RT.var("potemkin.utils", "doary");
    const__59 = (Var)RT.var("potemkin", "def-abstract-type");
    const__60 = (AFn)RT.map(new Object[] { RT.keyword(null, "line"), Integer.valueOf(7), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "potemkin.clj" });
    const__61 = (Var)RT.var("potemkin.types", "def-abstract-type");
    const__62 = (Var)RT.var("potemkin", "reify+");
    const__63 = (AFn)RT.map(new Object[] { RT.keyword(null, "line"), Integer.valueOf(7), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "potemkin.clj" });
    const__64 = (Var)RT.var("potemkin.types", "reify+");
    const__65 = (Var)RT.var("potemkin", "defprotocol+");
    const__66 = (AFn)RT.map(new Object[] { RT.keyword(null, "line"), Integer.valueOf(7), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "potemkin.clj" });
    const__67 = (Var)RT.var("potemkin.types", "defprotocol+");
    const__68 = (Var)RT.var("potemkin", "deftype+");
    const__69 = (AFn)RT.map(new Object[] { RT.keyword(null, "line"), Integer.valueOf(7), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "potemkin.clj" });
    const__70 = (Var)RT.var("potemkin.types", "deftype+");
    const__71 = (Var)RT.var("potemkin", "defrecord+");
    const__72 = (AFn)RT.map(new Object[] { RT.keyword(null, "line"), Integer.valueOf(7), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "potemkin.clj" });
    const__73 = (Var)RT.var("potemkin.types", "defrecord+");
    const__74 = (Var)RT.var("potemkin", "definterface+");
    const__75 = (AFn)RT.map(new Object[] { RT.keyword(null, "line"), Integer.valueOf(7), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "potemkin.clj" });
    const__76 = (Var)RT.var("potemkin.types", "definterface+");
    const__77 = (Var)RT.var("potemkin", "extend-protocol+");
    const__78 = (AFn)RT.map(new Object[] { RT.keyword(null, "line"), Integer.valueOf(7), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "potemkin.clj" });
    const__79 = (Var)RT.var("potemkin.types", "extend-protocol+");
    const__80 = (Var)RT.var("potemkin", "reify-map-type");
    const__81 = (AFn)RT.map(new Object[] { RT.keyword(null, "line"), Integer.valueOf(7), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "potemkin.clj" });
    const__82 = (Var)RT.var("potemkin.collections", "reify-map-type");
    const__83 = (Var)RT.var("potemkin", "def-derived-map");
    const__84 = (AFn)RT.map(new Object[] { RT.keyword(null, "line"), Integer.valueOf(7), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "potemkin.clj" });
    const__85 = (Var)RT.var("potemkin.collections", "def-derived-map");
    const__86 = (Var)RT.var("potemkin", "def-map-type");
    const__87 = (AFn)RT.map(new Object[] { RT.keyword(null, "line"), Integer.valueOf(7), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "potemkin.clj" });
    const__88 = (Var)RT.var("potemkin.collections", "def-map-type");
  }
  
  static  {
    __init0();
    Compiler.pushNSandLoader(RT.classForName("potemkin__init").getClassLoader());
    try {
      load();
    } finally {
      Var.popThreadBindings();
    } 
  }
}
