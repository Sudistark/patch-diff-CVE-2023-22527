package com.google.common.io;

import com.google.common.annotations.GwtIncompatible;
import com.google.common.annotations.J2ktIncompatible;
import com.google.common.annotations.VisibleForTesting;
import java.io.File;
import java.io.IOException;
import java.nio.file.attribute.FileAttribute;

@ElementTypesAreNonnullByDefault
@J2ktIncompatible
@GwtIncompatible
abstract class TempFileCreator {
  static final TempFileCreator INSTANCE = pickSecureCreator();
  
  private static TempFileCreator pickSecureCreator() {
    try {
      Class.forName("java.nio.file.Path");
      return new JavaNioCreator(null);
    } catch (ClassNotFoundException e) {
      try {
        int i = ((Integer)Class.forName("android.os.Build$VERSION").getField("SDK_INT").get(null)).intValue();
        int jellyBean = ((Integer)Class.forName("android.os.Build$VERSION_CODES").getField("JELLY_BEAN").get(null)).intValue();
        if (i < jellyBean)
          return new ThrowingCreator(null); 
      } catch (NoSuchFieldException classNotFoundException) {
        return new ThrowingCreator(null);
      } catch (ClassNotFoundException classNotFoundException) {
        return new ThrowingCreator(null);
      } catch (IllegalAccessException classNotFoundException) {
        return new ThrowingCreator(null);
      } 
      return new JavaIoCreator(null);
    } 
  }
  
  @IgnoreJRERequirement
  @VisibleForTesting
  static void testMakingUserPermissionsFromScratch() throws IOException { unused = JavaNioCreator.access$300().get(); }
  
  private TempFileCreator() throws IOException {}
  
  abstract File createTempDir();
  
  abstract File createTempFile(String paramString) throws IOException;
}
