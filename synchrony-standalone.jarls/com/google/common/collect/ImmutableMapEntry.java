package com.google.common.collect;

import com.google.common.annotations.GwtIncompatible;
import javax.annotation.CheckForNull;

@ElementTypesAreNonnullByDefault
@GwtIncompatible
class ImmutableMapEntry<K, V> extends ImmutableEntry<K, V> {
  static <K, V> ImmutableMapEntry<K, V>[] createEntryArray(int size) { return new ImmutableMapEntry[size]; }
  
  ImmutableMapEntry(K key, V value) {
    super(key, value);
    CollectPreconditions.checkEntryNotNull(key, value);
  }
  
  ImmutableMapEntry(ImmutableMapEntry<K, V> contents) { super(contents.getKey(), contents.getValue()); }
  
  @CheckForNull
  ImmutableMapEntry<K, V> getNextInKeyBucket() { return null; }
  
  @CheckForNull
  ImmutableMapEntry<K, V> getNextInValueBucket() { return null; }
  
  boolean isReusable() { return true; }
}
