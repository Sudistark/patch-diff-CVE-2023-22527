package com.google.common.math;

import com.google.common.annotations.GwtIncompatible;
import com.google.common.annotations.J2ktIncompatible;
import com.google.common.base.Preconditions;

@ElementTypesAreNonnullByDefault
@J2ktIncompatible
@GwtIncompatible
public abstract class LinearTransformation {
  public static LinearTransformationBuilder mapping(double x1, double y1) {
    Preconditions.checkArgument((DoubleUtils.isFinite(x1) && DoubleUtils.isFinite(y1)));
    return new LinearTransformationBuilder(x1, y1, null);
  }
  
  public static LinearTransformation vertical(double x) {
    Preconditions.checkArgument(DoubleUtils.isFinite(x));
    return new VerticalLinearTransformation(x);
  }
  
  public static LinearTransformation horizontal(double y) {
    Preconditions.checkArgument(DoubleUtils.isFinite(y));
    double slope = 0.0D;
    return new RegularLinearTransformation(slope, y);
  }
  
  public static LinearTransformation forNaN() { return NaNLinearTransformation.INSTANCE; }
  
  public abstract boolean isVertical();
  
  public abstract boolean isHorizontal();
  
  public abstract double slope();
  
  public abstract double transform(double paramDouble);
  
  public abstract LinearTransformation inverse();
}
