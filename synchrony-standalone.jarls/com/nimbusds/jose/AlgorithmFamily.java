package com.nimbusds.jose;

import java.util.Collection;
import java.util.LinkedHashSet;
import net.jcip.annotations.Immutable;

@Immutable
class AlgorithmFamily<T extends Algorithm> extends LinkedHashSet<T> {
  private static final long serialVersionUID = 1L;
  
  public AlgorithmFamily(T... algs) {
    for (T alg : algs)
      super.add(alg); 
  }
  
  public boolean add(T alg) { throw new UnsupportedOperationException(); }
  
  public boolean addAll(Collection<? extends T> algs) { throw new UnsupportedOperationException(); }
  
  public boolean remove(Object o) { throw new UnsupportedOperationException(); }
  
  public boolean removeAll(Collection<?> c) { throw new UnsupportedOperationException(); }
  
  public boolean retainAll(Collection<?> c) { throw new UnsupportedOperationException(); }
}
