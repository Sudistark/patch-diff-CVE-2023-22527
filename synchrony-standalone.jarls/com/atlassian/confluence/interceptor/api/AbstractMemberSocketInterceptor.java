package com.atlassian.confluence.interceptor.api;

import com.atlassian.confluence.impl.cluster.hazelcast.interceptor.authenticator.ClusterJoinManager;
import com.atlassian.confluence.impl.cluster.hazelcast.interceptor.authenticator.DefaultClusterJoinManager;
import com.atlassian.confluence.impl.cluster.hazelcast.interceptor.authenticator.SharedSecretClusterAuthenticator;
import com.hazelcast.config.Config;
import com.hazelcast.config.SocketInterceptorConfig;

abstract class AbstractMemberSocketInterceptor {
  private ClusterJoinManager clusterJoinManager;
  
  void initAndAddInterceptor(String clusterName, String sharedSecret, boolean isNodeAuthEnabled, Config hazelcastConfig) {
    this.clusterJoinManager = new DefaultClusterJoinManager(new SharedSecretClusterAuthenticator(clusterName, sharedSecret), isNodeAuthEnabled);
    updateConfigInterceptors(hazelcastConfig);
  }
  
  private void updateConfigInterceptors(Config hazelcastConfig) {
    SocketInterceptorConfig interceptorConfig = new SocketInterceptorConfig();
    interceptorConfig.getProperties().put(ClusterJoinManager.class.getName(), this.clusterJoinManager);
    interceptorConfig.setClassName(com.atlassian.confluence.impl.cluster.hazelcast.interceptor.ClusterJoinSocketInterceptor.class.getName());
    interceptorConfig.setEnabled(true);
    hazelcastConfig.getNetworkConfig().setSocketInterceptorConfig(interceptorConfig);
  }
}
