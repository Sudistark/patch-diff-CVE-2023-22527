package com.hazelcast.ringbuffer.impl;

import com.hazelcast.internal.serialization.DataSerializerHook;
import com.hazelcast.internal.serialization.impl.FactoryIdHelper;
import com.hazelcast.nio.serialization.DataSerializableFactory;

public class RingbufferDataSerializerHook implements DataSerializerHook {
  public static final int F_ID = FactoryIdHelper.getFactoryId("hazelcast.serialization.ds.ringbuffer", -29);
  
  public static final int GENERIC_OPERATION = 1;
  
  public static final int ADD_BACKUP_OPERATION = 2;
  
  public static final int ADD_OPERATION = 3;
  
  public static final int READ_ONE_OPERATION = 4;
  
  public static final int REPLICATION_OPERATION = 5;
  
  public static final int READ_MANY_OPERATION = 6;
  
  public static final int ADD_ALL_OPERATION = 7;
  
  public static final int ADD_ALL_BACKUP_OPERATION = 8;
  
  public static final int READ_RESULT_SET = 9;
  
  public static final int RINGBUFFER_CONTAINER = 10;
  
  public static final int MERGE_OPERATION = 11;
  
  public static final int MERGE_BACKUP_OPERATION = 12;
  
  public int getFactoryId() { return F_ID; }
  
  public DataSerializableFactory createFactory() { return new Object(this); }
}
