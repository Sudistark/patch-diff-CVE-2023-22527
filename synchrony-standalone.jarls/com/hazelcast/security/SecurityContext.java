package com.hazelcast.security;

import com.hazelcast.config.PermissionConfig;
import java.security.AccessControlException;
import java.security.Permission;
import java.util.Set;
import java.util.concurrent.Callable;
import javax.security.auth.Subject;
import javax.security.auth.login.LoginContext;
import javax.security.auth.login.LoginException;

public interface SecurityContext {
  LoginContext createMemberLoginContext(Credentials paramCredentials) throws LoginException;
  
  LoginContext createClientLoginContext(Credentials paramCredentials) throws LoginException;
  
  ICredentialsFactory getCredentialsFactory();
  
  void checkPermission(Subject paramSubject, Permission paramPermission) throws AccessControlException;
  
  void interceptBefore(Credentials paramCredentials, String paramString1, String paramString2, String paramString3, Object[] paramArrayOfObject) throws AccessControlException;
  
  void interceptAfter(Credentials paramCredentials, String paramString1, String paramString2, String paramString3);
  
  <V> SecureCallable<V> createSecureCallable(Subject paramSubject, Callable<V> paramCallable);
  
  void destroy();
  
  void refreshPermissions(Set<PermissionConfig> paramSet);
}
