package com.hazelcast.concurrent.atomiclong.operations;

import com.hazelcast.concurrent.atomiclong.AtomicLongContainer;
import com.hazelcast.core.IFunction;

public class GetAndAlterOperation extends AbstractAlterOperation {
  public GetAndAlterOperation() {}
  
  public GetAndAlterOperation(String name, IFunction<Long, Long> function) { super(name, function); }
  
  public void run() {
    AtomicLongContainer container = getLongContainer();
    long input = container.get();
    this.response = input;
    long output = ((Long)this.function.apply(Long.valueOf(input))).longValue();
    this.shouldBackup = (input != output);
    if (this.shouldBackup) {
      this.backup = output;
      container.set(output);
    } 
  }
  
  public int getId() { return 8; }
}
