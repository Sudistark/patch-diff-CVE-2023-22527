package com.hazelcast.concurrent.countdownlatch.operations;

import com.hazelcast.concurrent.countdownlatch.CountDownLatchService;
import com.hazelcast.spi.Notifier;
import com.hazelcast.spi.Operation;
import com.hazelcast.spi.WaitNotifyKey;
import com.hazelcast.spi.impl.MutatingOperation;

public class CountDownOperation extends BackupAwareCountDownLatchOperation implements Notifier, MutatingOperation {
  private boolean shouldNotify;
  
  public CountDownOperation() {}
  
  public CountDownOperation(String name) { super(name); }
  
  public void run() {
    CountDownLatchService service = (CountDownLatchService)getService();
    service.countDown(this.name);
    int count = service.getCount(this.name);
    this.shouldNotify = (count == 0);
  }
  
  public boolean shouldBackup() { return true; }
  
  public boolean shouldNotify() { return this.shouldNotify; }
  
  public WaitNotifyKey getNotifiedKey() { return waitNotifyKey(); }
  
  public int getId() { return 4; }
}
