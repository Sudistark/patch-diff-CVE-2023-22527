package com.hazelcast.concurrent.idgen;

import com.hazelcast.core.IAtomicLong;
import com.hazelcast.core.IdGenerator;
import com.hazelcast.spi.AbstractDistributedObject;
import com.hazelcast.spi.NodeEngine;

public class IdGeneratorProxy extends AbstractDistributedObject<IdGeneratorService> implements IdGenerator {
  private final String name;
  
  private final IdGeneratorImpl idGeneratorImpl;
  
  public IdGeneratorProxy(IAtomicLong blockGenerator, String name, NodeEngine nodeEngine, IdGeneratorService service) {
    super(nodeEngine, service);
    this.name = name;
    this.idGeneratorImpl = new IdGeneratorImpl(blockGenerator);
  }
  
  public boolean init(long id) { return this.idGeneratorImpl.init(id); }
  
  public long newId() { return this.idGeneratorImpl.newId(); }
  
  public String getName() { return this.name; }
  
  public String getServiceName() { return "hz:impl:idGeneratorService"; }
  
  protected void postDestroy() { this.idGeneratorImpl.destroy(); }
}
