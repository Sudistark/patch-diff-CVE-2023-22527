package com.hazelcast.concurrent.atomicreference.operations;

import com.hazelcast.concurrent.atomicreference.AtomicReferenceContainer;
import com.hazelcast.nio.ObjectDataInput;
import com.hazelcast.nio.ObjectDataOutput;
import com.hazelcast.nio.serialization.Data;
import com.hazelcast.spi.BackupOperation;
import java.io.IOException;

public class SetBackupOperation extends AbstractAtomicReferenceOperation implements BackupOperation {
  private Data newValue;
  
  public SetBackupOperation() {}
  
  public SetBackupOperation(String name, Data newValue) {
    super(name);
    this.newValue = newValue;
  }
  
  public void run() {
    AtomicReferenceContainer container = getReferenceContainer();
    container.set(this.newValue);
  }
  
  public int getId() { return 10; }
  
  protected void writeInternal(ObjectDataOutput out) throws IOException {
    super.writeInternal(out);
    out.writeData(this.newValue);
  }
  
  protected void readInternal(ObjectDataInput in) throws IOException {
    super.readInternal(in);
    this.newValue = in.readData();
  }
}
