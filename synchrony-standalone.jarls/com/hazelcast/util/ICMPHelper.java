package com.hazelcast.util;

import com.hazelcast.nio.IOUtil;
import java.io.File;
import java.io.InputStream;

public final class ICMPHelper {
  static  {
    System.load(extractBundledLib());
  }
  
  public static boolean isRawSocketPermitted() { return isRawSocketPermitted0(); }
  
  private static String extractBundledLib() {
    src = null;
    try {
      src = IOUtil.getFileFromResourcesAsStream(getBundledLibraryPath());
      File dest = File.createTempFile("hazelcast-libicmp-helper-", ".so");
      IOUtil.copy(src, dest);
      return dest.getAbsolutePath();
    } catch (Throwable t) {
      throw ExceptionUtil.rethrow(t);
    } finally {
      IOUtil.closeResource(src);
    } 
  }
  
  private static String getBundledLibraryPath() {
    if (!OsHelper.isUnixFamily())
      throw new IllegalStateException("ICMP not supported in this platform: " + OsHelper.OS); 
    return JVMUtil.is32bitJVM() ? "lib/linux-x86/libicmp_helper.so" : "lib/linux-x86_64/libicmp_helper.so";
  }
  
  private static native boolean isRawSocketPermitted0();
}
