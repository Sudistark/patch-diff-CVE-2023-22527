package com.hazelcast.config;

import com.hazelcast.core.QueueStore;
import com.hazelcast.core.QueueStoreFactory;
import com.hazelcast.nio.ObjectDataInput;
import com.hazelcast.nio.ObjectDataOutput;
import com.hazelcast.nio.serialization.IdentifiedDataSerializable;
import com.hazelcast.util.Preconditions;
import java.io.IOException;
import java.util.Properties;

public class QueueStoreConfig implements IdentifiedDataSerializable {
  private boolean enabled = true;
  
  private String className;
  
  private String factoryClassName;
  
  private Properties properties = new Properties();
  
  private QueueStore storeImplementation;
  
  private QueueStoreFactory factoryImplementation;
  
  private QueueStoreConfigReadOnly readOnly;
  
  public QueueStoreConfig() {}
  
  public QueueStoreConfig(QueueStoreConfig config) {
    this.enabled = config.isEnabled();
    this.className = config.getClassName();
    this.storeImplementation = config.getStoreImplementation();
    this.factoryClassName = config.getFactoryClassName();
    this.factoryImplementation = config.getFactoryImplementation();
    this.properties.putAll(config.getProperties());
  }
  
  public QueueStore getStoreImplementation() { return this.storeImplementation; }
  
  public QueueStoreConfig setStoreImplementation(QueueStore storeImplementation) {
    this.storeImplementation = storeImplementation;
    return this;
  }
  
  public QueueStoreConfigReadOnly getAsReadOnly() {
    if (this.readOnly == null)
      this.readOnly = new QueueStoreConfigReadOnly(this); 
    return this.readOnly;
  }
  
  public boolean isEnabled() { return this.enabled; }
  
  public QueueStoreConfig setEnabled(boolean enabled) {
    this.enabled = enabled;
    return this;
  }
  
  public String getClassName() { return this.className; }
  
  public QueueStoreConfig setClassName(String className) {
    this.className = className;
    return this;
  }
  
  public Properties getProperties() { return this.properties; }
  
  public QueueStoreConfig setProperties(Properties properties) {
    this.properties = (Properties)Preconditions.isNotNull(properties, "properties");
    return this;
  }
  
  public String getProperty(String name) { return this.properties.getProperty(name); }
  
  public QueueStoreConfig setProperty(String name, String value) {
    this.properties.put(name, value);
    return this;
  }
  
  public String getFactoryClassName() { return this.factoryClassName; }
  
  public QueueStoreConfig setFactoryClassName(String factoryClassName) {
    this.factoryClassName = factoryClassName;
    return this;
  }
  
  public QueueStoreFactory getFactoryImplementation() { return this.factoryImplementation; }
  
  public QueueStoreConfig setFactoryImplementation(QueueStoreFactory factoryImplementation) {
    this.factoryImplementation = factoryImplementation;
    return this;
  }
  
  public String toString() { return "QueueStoreConfig{enabled=" + this.enabled + ", className='" + this.className + '\'' + ", properties=" + this.properties + '}'; }
  
  public int getFactoryId() { return ConfigDataSerializerHook.F_ID; }
  
  public int getId() { return 25; }
  
  public void writeData(ObjectDataOutput out) throws IOException {
    out.writeBoolean(this.enabled);
    out.writeUTF(this.className);
    out.writeUTF(this.factoryClassName);
    out.writeObject(this.properties);
    out.writeObject(this.storeImplementation);
    out.writeObject(this.factoryImplementation);
  }
  
  public void readData(ObjectDataInput in) throws IOException {
    this.enabled = in.readBoolean();
    this.className = in.readUTF();
    this.factoryClassName = in.readUTF();
    this.properties = (Properties)in.readObject();
    this.storeImplementation = (QueueStore)in.readObject();
    this.factoryImplementation = (QueueStoreFactory)in.readObject();
  }
  
  public final boolean equals(Object o) {
    if (this == o)
      return true; 
    if (!(o instanceof QueueStoreConfig))
      return false; 
    QueueStoreConfig that = (QueueStoreConfig)o;
    if (isEnabled() != that.isEnabled())
      return false; 
    if ((getClassName() != null) ? !getClassName().equals(that.getClassName()) : (that.getClassName() != null))
      return false; 
    if ((getFactoryClassName() != null) ? !getFactoryClassName().equals(that.getFactoryClassName()) : (that
      .getFactoryClassName() != null))
      return false; 
    if ((getProperties() != null) ? !getProperties().equals(that.getProperties()) : (that.getProperties() != null))
      return false; 
    if ((getStoreImplementation() != null) ? !getStoreImplementation().equals(that.getStoreImplementation()) : (that
      .getStoreImplementation() != null))
      return false; 
    return (getFactoryImplementation() != null) ? getFactoryImplementation().equals(that.getFactoryImplementation()) : (
      (that.getFactoryImplementation() == null) ? 1 : 0);
  }
  
  public final int hashCode() {
    result = isEnabled() ? 1 : 0;
    result = 31 * result + ((getClassName() != null) ? getClassName().hashCode() : 0);
    result = 31 * result + ((getFactoryClassName() != null) ? getFactoryClassName().hashCode() : 0);
    result = 31 * result + ((getProperties() != null) ? getProperties().hashCode() : 0);
    result = 31 * result + ((getStoreImplementation() != null) ? getStoreImplementation().hashCode() : 0);
    return 31 * result + ((getFactoryImplementation() != null) ? getFactoryImplementation().hashCode() : 0);
  }
}
