package com.hazelcast.config;

import com.hazelcast.internal.serialization.DataSerializerHook;
import com.hazelcast.internal.serialization.impl.ArrayDataSerializableFactory;
import com.hazelcast.internal.serialization.impl.FactoryIdHelper;
import com.hazelcast.nio.serialization.DataSerializableFactory;
import com.hazelcast.util.ConstructorFunction;

public final class ConfigDataSerializerHook implements DataSerializerHook {
  public static final int F_ID = FactoryIdHelper.getFactoryId("hazelcast.serialization.ds.config", -43);
  
  public static final int WAN_REPLICATION_CONFIG = 0;
  
  public static final int WAN_CONSUMER_CONFIG = 1;
  
  public static final int WAN_PUBLISHER_CONFIG = 2;
  
  public static final int NEAR_CACHE_CONFIG = 3;
  
  public static final int NEAR_CACHE_PRELOADER_CONFIG = 4;
  
  public static final int ADD_DYNAMIC_CONFIG_OP = 5;
  
  public static final int DYNAMIC_CONFIG_PRE_JOIN_OP = 6;
  
  public static final int MULTIMAP_CONFIG = 7;
  
  public static final int LISTENER_CONFIG = 8;
  
  public static final int ENTRY_LISTENER_CONFIG = 9;
  
  public static final int MAP_CONFIG = 10;
  
  public static final int RANDOM_EVICTION_POLICY = 11;
  
  public static final int LFU_EVICTION_POLICY = 12;
  
  public static final int LRU_EVICTION_POLICY = 13;
  
  public static final int MAP_STORE_CONFIG = 14;
  
  public static final int MAP_PARTITION_LOST_LISTENER_CONFIG = 15;
  
  public static final int MAP_INDEX_CONFIG = 16;
  
  public static final int MAP_ATTRIBUTE_CONFIG = 17;
  
  public static final int QUERY_CACHE_CONFIG = 18;
  
  public static final int PREDICATE_CONFIG = 19;
  
  public static final int PARTITION_STRATEGY_CONFIG = 20;
  
  public static final int HOT_RESTART_CONFIG = 21;
  
  public static final int TOPIC_CONFIG = 22;
  
  public static final int RELIABLE_TOPIC_CONFIG = 23;
  
  public static final int ITEM_LISTENER_CONFIG = 24;
  
  public static final int QUEUE_STORE_CONFIG = 25;
  
  public static final int QUEUE_CONFIG = 26;
  
  public static final int LOCK_CONFIG = 27;
  
  public static final int LIST_CONFIG = 28;
  
  public static final int SET_CONFIG = 29;
  
  public static final int EXECUTOR_CONFIG = 30;
  
  public static final int DURABLE_EXECUTOR_CONFIG = 31;
  
  public static final int SCHEDULED_EXECUTOR_CONFIG = 32;
  
  public static final int SEMAPHORE_CONFIG = 33;
  
  public static final int REPLICATED_MAP_CONFIG = 34;
  
  public static final int RINGBUFFER_CONFIG = 35;
  
  public static final int RINGBUFFER_STORE_CONFIG = 36;
  
  public static final int CARDINALITY_ESTIMATOR_CONFIG = 37;
  
  public static final int SIMPLE_CACHE_CONFIG = 38;
  
  public static final int SIMPLE_CACHE_CONFIG_EXPIRY_POLICY_FACTORY_CONFIG = 39;
  
  public static final int SIMPLE_CACHE_CONFIG_TIMED_EXPIRY_POLICY_FACTORY_CONFIG = 40;
  
  public static final int SIMPLE_CACHE_CONFIG_DURATION_CONFIG = 41;
  
  public static final int QUORUM_CONFIG = 42;
  
  public static final int MAP_LISTENER_TO_ENTRY_LISTENER_ADAPTER = 43;
  
  public static final int EVENT_JOURNAL_CONFIG = 44;
  
  public static final int QUORUM_LISTENER_CONFIG = 45;
  
  public static final int CACHE_PARTITION_LOST_LISTENER_CONFIG = 46;
  
  public static final int SIMPLE_CACHE_ENTRY_LISTENER_CONFIG = 47;
  
  public static final int FLAKE_ID_GENERATOR_CONFIG = 48;
  
  public static final int ATOMIC_LONG_CONFIG = 49;
  
  public static final int ATOMIC_REFERENCE_CONFIG = 50;
  
  public static final int MERGE_POLICY_CONFIG = 51;
  
  public static final int COUNT_DOWN_LATCH_CONFIG = 52;
  
  public static final int PN_COUNTER_CONFIG = 53;
  
  public static final int MERKLE_TREE_CONFIG = 54;
  
  public static final int WAN_SYNC_CONFIG = 55;
  
  public static final int KUBERNETES_CONFIG = 56;
  
  public static final int EUREKA_CONFIG = 57;
  
  public static final int GCP_CONFIG = 58;
  
  public static final int AZURE_CONFIG = 59;
  
  public static final int AWS_CONFIG = 60;
  
  public static final int DISCOVERY_CONFIG = 61;
  
  public static final int DISCOVERY_STRATEGY_CONFIG = 62;
  
  private static final int LEN = 63;
  
  public int getFactoryId() { return F_ID; }
  
  public DataSerializableFactory createFactory() {
    ConstructorFunction[] constructors = new ConstructorFunction[63];
    constructors[0] = new Object(this);
    constructors[1] = new Object(this);
    constructors[2] = new Object(this);
    constructors[3] = new Object(this);
    constructors[4] = new Object(this);
    constructors[5] = new Object(this);
    constructors[6] = new Object(this);
    constructors[7] = new Object(this);
    constructors[8] = new Object(this);
    constructors[9] = new Object(this);
    constructors[10] = new Object(this);
    constructors[11] = new Object(this);
    constructors[12] = new Object(this);
    constructors[13] = new Object(this);
    constructors[14] = new Object(this);
    constructors[15] = new Object(this);
    constructors[16] = new Object(this);
    constructors[17] = new Object(this);
    constructors[18] = new Object(this);
    constructors[19] = new Object(this);
    constructors[20] = new Object(this);
    constructors[21] = new Object(this);
    constructors[22] = new Object(this);
    constructors[23] = new Object(this);
    constructors[24] = new Object(this);
    constructors[25] = new Object(this);
    constructors[26] = new Object(this);
    constructors[27] = new Object(this);
    constructors[28] = new Object(this);
    constructors[29] = new Object(this);
    constructors[30] = new Object(this);
    constructors[31] = new Object(this);
    constructors[32] = new Object(this);
    constructors[33] = new Object(this);
    constructors[34] = new Object(this);
    constructors[35] = new Object(this);
    constructors[36] = new Object(this);
    constructors[37] = new Object(this);
    constructors[38] = new Object(this);
    constructors[39] = new Object(this);
    constructors[40] = new Object(this);
    constructors[41] = new Object(this);
    constructors[42] = new Object(this);
    constructors[43] = new Object(this);
    constructors[44] = new Object(this);
    constructors[45] = new Object(this);
    constructors[46] = new Object(this);
    constructors[47] = new Object(this);
    constructors[48] = new Object(this);
    constructors[49] = new Object(this);
    constructors[50] = new Object(this);
    constructors[51] = new Object(this);
    constructors[52] = new Object(this);
    constructors[53] = new Object(this);
    constructors[54] = new Object(this);
    constructors[55] = new Object(this);
    constructors[56] = new Object(this);
    constructors[57] = new Object(this);
    constructors[58] = new Object(this);
    constructors[59] = new Object(this);
    constructors[60] = new Object(this);
    constructors[61] = new Object(this);
    constructors[62] = new Object(this);
    return new ArrayDataSerializableFactory(constructors);
  }
}
