package com.hazelcast.config;

import com.hazelcast.spi.MemberAddressProvider;
import com.hazelcast.util.Preconditions;
import java.util.Properties;

public final class MemberAddressProviderConfig {
  private boolean enabled;
  
  private String className;
  
  private Properties properties = new Properties();
  
  private MemberAddressProvider implementation;
  
  public boolean isEnabled() { return this.enabled; }
  
  public MemberAddressProviderConfig setEnabled(boolean enabled) {
    this.enabled = enabled;
    return this;
  }
  
  public String getClassName() { return this.className; }
  
  public MemberAddressProviderConfig setClassName(String className) {
    this.className = className;
    return this;
  }
  
  public Properties getProperties() { return this.properties; }
  
  public MemberAddressProviderConfig setProperties(Properties properties) {
    Preconditions.checkNotNull(properties, "MemberAddressProvider properties cannot be null");
    this.properties = properties;
    return this;
  }
  
  public MemberAddressProvider getImplementation() { return this.implementation; }
  
  public MemberAddressProviderConfig setImplementation(MemberAddressProvider implementation) {
    this.implementation = implementation;
    return this;
  }
  
  public String toString() { return "MemberAddressProviderConfig{enabled=" + this.enabled + ", className='" + this.className + '\'' + ", properties=" + this.properties + ", implementation=" + this.implementation + '}'; }
  
  public boolean equals(Object o) {
    if (this == o)
      return true; 
    if (o == null || getClass() != o.getClass())
      return false; 
    MemberAddressProviderConfig that = (MemberAddressProviderConfig)o;
    if (isEnabled() != that.isEnabled())
      return false; 
    if ((getClassName() != null) ? !getClassName().equals(that.getClassName()) : (that.getClassName() != null))
      return false; 
    if (!getProperties().equals(that.getProperties()))
      return false; 
    return (getImplementation() != null) ? getImplementation().equals(that.getImplementation()) : (
      (that.getImplementation() == null) ? 1 : 0);
  }
  
  public int hashCode() {
    result = isEnabled() ? 1 : 0;
    result = 31 * result + ((getClassName() != null) ? getClassName().hashCode() : 0);
    result = 31 * result + getProperties().hashCode();
    return 31 * result + ((getImplementation() != null) ? getImplementation().hashCode() : 0);
  }
}
