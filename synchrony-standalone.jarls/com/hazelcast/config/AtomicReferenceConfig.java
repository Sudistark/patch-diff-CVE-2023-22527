package com.hazelcast.config;

import com.hazelcast.nio.ObjectDataInput;
import com.hazelcast.nio.ObjectDataOutput;
import java.io.IOException;

public class AtomicReferenceConfig extends AbstractBasicConfig<AtomicReferenceConfig> {
  private AtomicReferenceConfigReadOnly readOnly;
  
  AtomicReferenceConfig() {}
  
  public AtomicReferenceConfig(String name) { super(name); }
  
  public AtomicReferenceConfig(AtomicReferenceConfig config) { super(config); }
  
  public Class getProvidedMergeTypes() { return com.hazelcast.spi.merge.SplitBrainMergeTypes.AtomicReferenceMergeTypes.class; }
  
  public int getId() { return 50; }
  
  public void writeData(ObjectDataOutput out) throws IOException {
    out.writeUTF(this.name);
    out.writeUTF(this.quorumName);
    out.writeObject(this.mergePolicyConfig);
  }
  
  public void readData(ObjectDataInput in) throws IOException {
    this.name = in.readUTF();
    this.quorumName = in.readUTF();
    this.mergePolicyConfig = (MergePolicyConfig)in.readObject();
  }
  
  public boolean equals(Object o) {
    if (this == o)
      return true; 
    if (!(o instanceof AtomicReferenceConfig))
      return false; 
    AtomicReferenceConfig that = (AtomicReferenceConfig)o;
    if (!this.name.equals(that.name))
      return false; 
    if (!this.mergePolicyConfig.equals(that.mergePolicyConfig))
      return false; 
    return (this.quorumName != null) ? this.quorumName.equals(that.quorumName) : ((that.quorumName == null) ? 1 : 0);
  }
  
  public final int hashCode() {
    result = this.name.hashCode();
    result = 31 * result + this.mergePolicyConfig.hashCode();
    return 31 * result + ((this.quorumName != null) ? this.quorumName.hashCode() : 0);
  }
  
  public AtomicReferenceConfig getAsReadOnly() {
    if (this.readOnly == null)
      this.readOnly = new AtomicReferenceConfigReadOnly(this); 
    return this.readOnly;
  }
}
