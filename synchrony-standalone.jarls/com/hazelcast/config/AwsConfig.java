package com.hazelcast.config;

import com.hazelcast.util.Preconditions;

public class AwsConfig extends AliasedDiscoveryConfig<AwsConfig> {
  private static final int CONNECTION_TIMEOUT = 5;
  
  public AwsConfig() { super("aws"); }
  
  public AwsConfig(AwsConfig awsConfig) { super(awsConfig); }
  
  @Deprecated
  public String getAccessKey() { return (String)getProperties().get("access-key"); }
  
  @Deprecated
  public AwsConfig setAccessKey(String accessKey) {
    getProperties().put("access-key", Preconditions.checkHasText(accessKey, "accessKey must contain text"));
    return this;
  }
  
  @Deprecated
  public String getSecretKey() { return (String)getProperties().get("secret-key"); }
  
  @Deprecated
  public AwsConfig setSecretKey(String secretKey) {
    getProperties().put("secret-key", Preconditions.checkHasText(secretKey, "secretKey must contain text"));
    return this;
  }
  
  @Deprecated
  public String getRegion() { return (String)getProperties().get("region"); }
  
  @Deprecated
  public AwsConfig setRegion(String region) {
    getProperties().put("region", Preconditions.checkHasText(region, "region must contain text"));
    return this;
  }
  
  @Deprecated
  public String getHostHeader() { return (String)getProperties().get("host-header"); }
  
  @Deprecated
  public AwsConfig setHostHeader(String hostHeader) {
    getProperties().put("host-header", Preconditions.checkHasText(hostHeader, "hostHeader must contain text"));
    return this;
  }
  
  @Deprecated
  public String getSecurityGroupName() { return (String)getProperties().get("security-group-name"); }
  
  @Deprecated
  public AwsConfig setSecurityGroupName(String securityGroupName) {
    getProperties().put("security-group-name", securityGroupName);
    return this;
  }
  
  @Deprecated
  public String getTagKey() { return (String)getProperties().get("tag-key"); }
  
  public AwsConfig setTagKey(String tagKey) {
    getProperties().put("tag-key", tagKey);
    return this;
  }
  
  @Deprecated
  public String getTagValue() { return (String)getProperties().get("tag-value"); }
  
  @Deprecated
  public AwsConfig setTagValue(String tagValue) {
    getProperties().put("tag-value", tagValue);
    return this;
  }
  
  @Deprecated
  public int getConnectionTimeoutSeconds() {
    if (!getProperties().containsKey("connection-timeout-seconds"))
      return 5; 
    return Integer.parseInt((String)getProperties().get("connection-timeout-seconds"));
  }
  
  @Deprecated
  public AwsConfig setConnectionTimeoutSeconds(int connectionTimeoutSeconds) {
    if (connectionTimeoutSeconds < 0)
      throw new IllegalArgumentException("connection timeout can't be smaller than 0"); 
    getProperties().put("connection-timeout-seconds", String.valueOf(connectionTimeoutSeconds));
    return this;
  }
  
  @Deprecated
  public String getIamRole() { return (String)getProperties().get("iam-role"); }
  
  @Deprecated
  public AwsConfig setIamRole(String iamRole) {
    getProperties().put("iam-role", iamRole);
    return this;
  }
  
  @Deprecated
  public String getHzPort() { return (String)getProperties().get("hz-port"); }
  
  public AwsConfig setEnabled(boolean enabled) {
    super.setEnabled(enabled);
    return this;
  }
  
  public int getId() { return 60; }
}
