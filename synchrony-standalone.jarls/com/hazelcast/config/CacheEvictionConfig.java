package com.hazelcast.config;

import com.hazelcast.internal.eviction.EvictionPolicyComparator;
import com.hazelcast.nio.serialization.BinaryInterface;
import com.hazelcast.util.Preconditions;

@Deprecated
@BinaryInterface
public class CacheEvictionConfig extends EvictionConfig {
  public CacheEvictionConfig() {}
  
  public CacheEvictionConfig(int size, EvictionConfig.MaxSizePolicy maxSizePolicy, EvictionPolicy evictionPolicy) { super(size, maxSizePolicy, evictionPolicy); }
  
  public CacheEvictionConfig(int size, CacheMaxSizePolicy cacheMaxSizePolicy, EvictionPolicy evictionPolicy) {
    super(size, ((CacheMaxSizePolicy)Preconditions.checkNotNull(cacheMaxSizePolicy, "Cache max-size policy cannot be null!"))
        .toMaxSizePolicy(), evictionPolicy);
  }
  
  public CacheEvictionConfig(int size, EvictionConfig.MaxSizePolicy maxSizePolicy, String comparatorClassName) { super(size, maxSizePolicy, comparatorClassName); }
  
  public CacheEvictionConfig(int size, CacheMaxSizePolicy cacheMaxSizePolicy, String comparatorClassName) {
    super(size, ((CacheMaxSizePolicy)Preconditions.checkNotNull(cacheMaxSizePolicy, "Cache max-size policy cannot be null!"))
        .toMaxSizePolicy(), comparatorClassName);
  }
  
  public CacheEvictionConfig(int size, EvictionConfig.MaxSizePolicy maxSizePolicy, EvictionPolicyComparator comparator) { super(size, maxSizePolicy, comparator); }
  
  public CacheEvictionConfig(int size, CacheMaxSizePolicy cacheMaxSizePolicy, EvictionPolicyComparator comparator) {
    super(size, ((CacheMaxSizePolicy)Preconditions.checkNotNull(cacheMaxSizePolicy, "Cache max-size policy cannot be null!"))
        .toMaxSizePolicy(), comparator);
  }
  
  public CacheEvictionConfig(EvictionConfig config) { super(config); }
  
  public CacheEvictionConfig getAsReadOnly() {
    if (this.readOnly == null)
      this.readOnly = new CacheEvictionConfigReadOnly(this); 
    return (CacheEvictionConfig)this.readOnly;
  }
  
  public CacheMaxSizePolicy getMaxSizePolicy() { return CacheMaxSizePolicy.fromMaxSizePolicy(getMaximumSizePolicy()); }
  
  public CacheEvictionConfig setMaxSizePolicy(CacheMaxSizePolicy cacheMaxSizePolicy) {
    Preconditions.checkNotNull(cacheMaxSizePolicy, "Cache Max-Size policy cannot be null!");
    setMaximumSizePolicy(cacheMaxSizePolicy.toMaxSizePolicy());
    return this;
  }
  
  public CacheEvictionConfig setMaximumSizePolicy(EvictionConfig.MaxSizePolicy maxSizePolicy) {
    super.setMaximumSizePolicy(maxSizePolicy);
    return this;
  }
  
  public CacheEvictionConfig setSize(int size) {
    super.setSize(size);
    return this;
  }
  
  public CacheEvictionConfig setEvictionPolicy(EvictionPolicy evictionPolicy) {
    super.setEvictionPolicy(evictionPolicy);
    return this;
  }
  
  public CacheEvictionConfig setComparatorClassName(String comparatorClassName) {
    super.setComparatorClassName(comparatorClassName);
    return this;
  }
  
  public CacheEvictionConfig setComparator(EvictionPolicyComparator comparator) {
    super.setComparator(comparator);
    return this;
  }
  
  public String toString() { return "CacheEvictionConfig{size=" + this.size + ", maxSizePolicy=" + this.maxSizePolicy + ", evictionPolicy=" + this.evictionPolicy + ", comparatorClassName=" + this.comparatorClassName + ", comparator=" + this.comparator + '}'; }
}
