package com.hazelcast.spi;

import java.util.Collection;

public interface EventService {
  int getEventThreadCount();
  
  int getEventQueueCapacity();
  
  int getEventQueueSize();
  
  EventRegistration registerLocalListener(String paramString1, String paramString2, Object paramObject);
  
  EventRegistration registerLocalListener(String paramString1, String paramString2, EventFilter paramEventFilter, Object paramObject);
  
  EventRegistration registerListener(String paramString1, String paramString2, Object paramObject);
  
  EventRegistration registerListener(String paramString1, String paramString2, EventFilter paramEventFilter, Object paramObject);
  
  boolean deregisterListener(String paramString1, String paramString2, Object paramObject);
  
  void deregisterAllListeners(String paramString1, String paramString2);
  
  Collection<EventRegistration> getRegistrations(String paramString1, String paramString2);
  
  EventRegistration[] getRegistrationsAsArray(String paramString1, String paramString2);
  
  boolean hasEventRegistration(String paramString1, String paramString2);
  
  void publishEvent(String paramString1, String paramString2, Object paramObject, int paramInt);
  
  void publishEvent(String paramString, EventRegistration paramEventRegistration, Object paramObject, int paramInt);
  
  void publishEvent(String paramString, Collection<EventRegistration> paramCollection, Object paramObject, int paramInt);
  
  void publishRemoteEvent(String paramString, Collection<EventRegistration> paramCollection, Object paramObject, int paramInt);
  
  void executeEventCallback(Runnable paramRunnable);
}
