package com.hazelcast.spi.impl.operationexecutor;

import com.hazelcast.nio.Packet;
import com.hazelcast.spi.LiveOperationsTracker;
import com.hazelcast.spi.Operation;
import com.hazelcast.spi.impl.PartitionSpecificRunnable;
import com.hazelcast.spi.impl.operationservice.PartitionTaskFactory;
import com.hazelcast.util.function.Consumer;
import java.util.BitSet;

public interface OperationExecutor extends Consumer<Packet>, LiveOperationsTracker {
  @Deprecated
  int getRunningOperationCount();
  
  @Deprecated
  int getQueueSize();
  
  @Deprecated
  int getPriorityQueueSize();
  
  long getExecutedOperationCount();
  
  int getPartitionThreadCount();
  
  int getGenericThreadCount();
  
  OperationRunner[] getPartitionOperationRunners();
  
  OperationRunner[] getGenericOperationRunners();
  
  void execute(Operation paramOperation);
  
  void executeOnPartitions(PartitionTaskFactory paramPartitionTaskFactory, BitSet paramBitSet);
  
  void execute(PartitionSpecificRunnable paramPartitionSpecificRunnable);
  
  void executeOnPartitionThreads(Runnable paramRunnable);
  
  void run(Operation paramOperation);
  
  void runOrExecute(Operation paramOperation);
  
  boolean isRunAllowed(Operation paramOperation);
  
  boolean isInvocationAllowed(Operation paramOperation, boolean paramBoolean);
  
  int getPartitionThreadId(int paramInt);
  
  void start();
  
  void shutdown();
}
