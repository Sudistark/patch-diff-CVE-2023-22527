package com.hazelcast.spi.impl.eventservice.impl.operations;

import com.hazelcast.nio.ObjectDataInput;
import com.hazelcast.nio.ObjectDataOutput;
import com.hazelcast.spi.ExceptionAction;
import com.hazelcast.spi.impl.eventservice.impl.EventServiceImpl;
import com.hazelcast.spi.impl.eventservice.impl.EventServiceSegment;
import java.io.IOException;

public class DeregistrationOperation extends AbstractRegistrationOperation {
  private String topic;
  
  private String id;
  
  public DeregistrationOperation() {}
  
  public DeregistrationOperation(String topic, String id, int memberListVersion) {
    super(memberListVersion);
    this.topic = topic;
    this.id = id;
  }
  
  protected void runInternal() {
    EventServiceImpl eventService = (EventServiceImpl)getNodeEngine().getEventService();
    EventServiceSegment segment = eventService.getSegment(getServiceName(), false);
    if (segment != null)
      segment.removeRegistration(this.topic, this.id); 
  }
  
  public Object getResponse() { return Boolean.valueOf(true); }
  
  protected void writeInternalImpl(ObjectDataOutput out) throws IOException {
    out.writeUTF(this.topic);
    out.writeUTF(this.id);
  }
  
  protected void readInternalImpl(ObjectDataInput in) throws IOException {
    this.topic = in.readUTF();
    this.id = in.readUTF();
  }
  
  public int getId() { return 10; }
}
