package com.hazelcast.spi.impl.operationservice;

import com.hazelcast.core.ExecutionCallback;
import com.hazelcast.internal.management.dto.SlowOperationDTO;
import com.hazelcast.nio.Address;
import com.hazelcast.spi.Operation;
import com.hazelcast.spi.OperationService;
import com.hazelcast.spi.impl.PartitionSpecificRunnable;
import java.util.BitSet;
import java.util.List;

public interface InternalOperationService extends OperationService {
  public static final String SERVICE_NAME = "hz:impl:operationService";
  
  int getResponseQueueSize();
  
  int getOperationExecutorQueueSize();
  
  int getPriorityOperationExecutorQueueSize();
  
  int getRunningOperationsCount();
  
  int getRemoteOperationsCount();
  
  long getExecutedOperationCount();
  
  int getPartitionThreadCount();
  
  int getGenericThreadCount();
  
  void onStartAsyncOperation(Operation paramOperation);
  
  void onCompletionAsyncOperation(Operation paramOperation);
  
  boolean isCallTimedOut(Operation paramOperation);
  
  boolean isRunAllowed(Operation paramOperation);
  
  void execute(PartitionSpecificRunnable paramPartitionSpecificRunnable);
  
  void executeOnPartitions(PartitionTaskFactory paramPartitionTaskFactory, BitSet paramBitSet);
  
  List<SlowOperationDTO> getSlowOperationDTOs();
  
  <V> void asyncInvokeOnPartition(String paramString, Operation paramOperation, int paramInt, ExecutionCallback<V> paramExecutionCallback);
  
  void onEndpointLeft(Address paramAddress);
}
