package com.hazelcast.spi.impl.sequence;

import java.util.concurrent.atomic.AtomicLongFieldUpdater;

public final class CallIdSequenceWithoutBackpressure implements CallIdSequence {
  private static final AtomicLongFieldUpdater<CallIdSequenceWithoutBackpressure> HEAD = AtomicLongFieldUpdater.newUpdater(CallIdSequenceWithoutBackpressure.class, "head");
  
  public long getLastCallId() { return this.head; }
  
  public int getMaxConcurrentInvocations() { return Integer.MAX_VALUE; }
  
  public long next() { return forceNext(); }
  
  public long forceNext() { return HEAD.incrementAndGet(this); }
  
  public void complete() {}
  
  public long concurrentInvocations() { return -1L; }
}
