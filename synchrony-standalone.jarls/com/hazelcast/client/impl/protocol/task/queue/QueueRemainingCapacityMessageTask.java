package com.hazelcast.client.impl.protocol.task.queue;

import com.hazelcast.client.impl.protocol.ClientMessage;
import com.hazelcast.client.impl.protocol.codec.QueueRemainingCapacityCodec;
import com.hazelcast.client.impl.protocol.task.AbstractPartitionMessageTask;
import com.hazelcast.collection.impl.queue.operations.RemainingCapacityOperation;
import com.hazelcast.instance.Node;
import com.hazelcast.nio.Connection;
import com.hazelcast.security.permission.QueuePermission;
import com.hazelcast.spi.Operation;
import java.security.Permission;

public class QueueRemainingCapacityMessageTask extends AbstractPartitionMessageTask<QueueRemainingCapacityCodec.RequestParameters> {
  public QueueRemainingCapacityMessageTask(ClientMessage clientMessage, Node node, Connection connection) { super(clientMessage, node, connection); }
  
  protected Operation prepareOperation() { return new RemainingCapacityOperation(((QueueRemainingCapacityCodec.RequestParameters)this.parameters).name); }
  
  protected QueueRemainingCapacityCodec.RequestParameters decodeClientMessage(ClientMessage clientMessage) { return QueueRemainingCapacityCodec.decodeRequest(clientMessage); }
  
  protected ClientMessage encodeResponse(Object response) {
    int result = (response != null) ? ((Integer)response).intValue() : 0;
    return QueueRemainingCapacityCodec.encodeResponse(result);
  }
  
  public Permission getRequiredPermission() { return new QueuePermission(((QueueRemainingCapacityCodec.RequestParameters)this.parameters).name, new String[] { "read" }); }
  
  public String getMethodName() { return "remainingCapacity"; }
  
  public String getServiceName() { return "hz:impl:queueService"; }
  
  public Object[] getParameters() { return null; }
  
  public String getDistributedObjectName() { return ((QueueRemainingCapacityCodec.RequestParameters)this.parameters).name; }
}
