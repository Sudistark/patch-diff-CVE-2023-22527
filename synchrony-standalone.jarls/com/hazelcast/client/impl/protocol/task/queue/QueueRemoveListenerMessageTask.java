package com.hazelcast.client.impl.protocol.task.queue;

import com.hazelcast.client.impl.protocol.ClientMessage;
import com.hazelcast.client.impl.protocol.codec.QueueRemoveListenerCodec;
import com.hazelcast.client.impl.protocol.task.AbstractRemoveListenerMessageTask;
import com.hazelcast.collection.impl.queue.QueueService;
import com.hazelcast.instance.Node;
import com.hazelcast.nio.Connection;
import com.hazelcast.security.permission.QueuePermission;
import java.security.Permission;

public class QueueRemoveListenerMessageTask extends AbstractRemoveListenerMessageTask<QueueRemoveListenerCodec.RequestParameters> {
  public QueueRemoveListenerMessageTask(ClientMessage clientMessage, Node node, Connection connection) { super(clientMessage, node, connection); }
  
  protected boolean deRegisterListener() {
    QueueService service = (QueueService)getService(getServiceName());
    return service.removeItemListener(((QueueRemoveListenerCodec.RequestParameters)this.parameters).name, ((QueueRemoveListenerCodec.RequestParameters)this.parameters).registrationId);
  }
  
  protected String getRegistrationId() { return ((QueueRemoveListenerCodec.RequestParameters)this.parameters).registrationId; }
  
  protected QueueRemoveListenerCodec.RequestParameters decodeClientMessage(ClientMessage clientMessage) { return QueueRemoveListenerCodec.decodeRequest(clientMessage); }
  
  protected ClientMessage encodeResponse(Object response) { return QueueRemoveListenerCodec.encodeResponse(((Boolean)response).booleanValue()); }
  
  public Permission getRequiredPermission() { return new QueuePermission(((QueueRemoveListenerCodec.RequestParameters)this.parameters).name, new String[] { "listen" }); }
  
  public String getMethodName() { return "removeItemListener"; }
  
  public String getServiceName() { return "hz:impl:queueService"; }
  
  public String getDistributedObjectName() { return ((QueueRemoveListenerCodec.RequestParameters)this.parameters).name; }
}
