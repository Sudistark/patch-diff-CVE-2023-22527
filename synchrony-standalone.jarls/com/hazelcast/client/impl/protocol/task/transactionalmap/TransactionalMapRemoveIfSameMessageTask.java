package com.hazelcast.client.impl.protocol.task.transactionalmap;

import com.hazelcast.client.impl.protocol.ClientMessage;
import com.hazelcast.client.impl.protocol.codec.TransactionalMapRemoveIfSameCodec;
import com.hazelcast.client.impl.protocol.task.AbstractTransactionalMessageTask;
import com.hazelcast.core.TransactionalMap;
import com.hazelcast.instance.Node;
import com.hazelcast.nio.Connection;
import com.hazelcast.security.permission.MapPermission;
import com.hazelcast.transaction.TransactionContext;
import java.security.Permission;

public class TransactionalMapRemoveIfSameMessageTask extends AbstractTransactionalMessageTask<TransactionalMapRemoveIfSameCodec.RequestParameters> {
  public TransactionalMapRemoveIfSameMessageTask(ClientMessage clientMessage, Node node, Connection connection) { super(clientMessage, node, connection); }
  
  protected Object innerCall() throws Exception {
    TransactionContext context = this.endpoint.getTransactionContext(((TransactionalMapRemoveIfSameCodec.RequestParameters)this.parameters).txnId);
    TransactionalMap map = context.getMap(((TransactionalMapRemoveIfSameCodec.RequestParameters)this.parameters).name);
    return Boolean.valueOf(map.remove(((TransactionalMapRemoveIfSameCodec.RequestParameters)this.parameters).key, ((TransactionalMapRemoveIfSameCodec.RequestParameters)this.parameters).value));
  }
  
  protected long getClientThreadId() { return ((TransactionalMapRemoveIfSameCodec.RequestParameters)this.parameters).threadId; }
  
  protected TransactionalMapRemoveIfSameCodec.RequestParameters decodeClientMessage(ClientMessage clientMessage) { return TransactionalMapRemoveIfSameCodec.decodeRequest(clientMessage); }
  
  protected ClientMessage encodeResponse(Object response) { return TransactionalMapRemoveIfSameCodec.encodeResponse(((Boolean)response).booleanValue()); }
  
  public String getServiceName() { return "hz:impl:mapService"; }
  
  public Permission getRequiredPermission() { return new MapPermission(((TransactionalMapRemoveIfSameCodec.RequestParameters)this.parameters).name, new String[] { "remove", "lock" }); }
  
  public String getDistributedObjectName() { return ((TransactionalMapRemoveIfSameCodec.RequestParameters)this.parameters).name; }
  
  public String getMethodName() { return "remove"; }
  
  public Object[] getParameters() { return new Object[] { ((TransactionalMapRemoveIfSameCodec.RequestParameters)this.parameters).key }; }
}
