package com.hazelcast.client.impl.protocol.task.multimap;

import com.hazelcast.client.impl.protocol.ClientMessage;
import com.hazelcast.client.impl.protocol.codec.MultiMapKeySetCodec;
import com.hazelcast.client.impl.protocol.task.AbstractAllPartitionsMessageTask;
import com.hazelcast.instance.Node;
import com.hazelcast.multimap.impl.operations.MultiMapOperationFactory;
import com.hazelcast.multimap.impl.operations.MultiMapResponse;
import com.hazelcast.nio.Connection;
import com.hazelcast.nio.serialization.Data;
import com.hazelcast.security.permission.MultiMapPermission;
import com.hazelcast.spi.OperationFactory;
import java.security.Permission;
import java.util.ArrayList;
import java.util.Collection;
import java.util.List;
import java.util.Map;

public class MultiMapKeySetMessageTask extends AbstractAllPartitionsMessageTask<MultiMapKeySetCodec.RequestParameters> {
  public MultiMapKeySetMessageTask(ClientMessage clientMessage, Node node, Connection connection) { super(clientMessage, node, connection); }
  
  protected OperationFactory createOperationFactory() { return new MultiMapOperationFactory(((MultiMapKeySetCodec.RequestParameters)this.parameters).name, MultiMapOperationFactory.OperationFactoryType.KEY_SET); }
  
  protected Object reduce(Map<Integer, Object> map) {
    List<Data> keys = new ArrayList<Data>();
    for (Object obj : map.values()) {
      if (obj == null)
        continue; 
      MultiMapResponse response = (MultiMapResponse)obj;
      Collection<Data> coll = response.getCollection();
      if (coll != null)
        keys.addAll(coll); 
    } 
    return keys;
  }
  
  protected MultiMapKeySetCodec.RequestParameters decodeClientMessage(ClientMessage clientMessage) { return MultiMapKeySetCodec.decodeRequest(clientMessage); }
  
  protected ClientMessage encodeResponse(Object response) { return MultiMapKeySetCodec.encodeResponse((List)response); }
  
  public String getServiceName() { return "hz:impl:multiMapService"; }
  
  public Permission getRequiredPermission() { return new MultiMapPermission(((MultiMapKeySetCodec.RequestParameters)this.parameters).name, new String[] { "read" }); }
  
  public String getDistributedObjectName() { return ((MultiMapKeySetCodec.RequestParameters)this.parameters).name; }
  
  public String getMethodName() { return "keySet"; }
  
  public Object[] getParameters() { return null; }
}
