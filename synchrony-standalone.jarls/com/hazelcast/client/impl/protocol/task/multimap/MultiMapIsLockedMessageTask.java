package com.hazelcast.client.impl.protocol.task.multimap;

import com.hazelcast.client.impl.protocol.ClientMessage;
import com.hazelcast.client.impl.protocol.codec.MultiMapIsLockedCodec;
import com.hazelcast.client.impl.protocol.task.AbstractPartitionMessageTask;
import com.hazelcast.concurrent.lock.operations.IsLockedOperation;
import com.hazelcast.instance.Node;
import com.hazelcast.nio.Connection;
import com.hazelcast.security.permission.MultiMapPermission;
import com.hazelcast.spi.DistributedObjectNamespace;
import com.hazelcast.spi.Operation;
import java.security.Permission;

public class MultiMapIsLockedMessageTask extends AbstractPartitionMessageTask<MultiMapIsLockedCodec.RequestParameters> {
  public MultiMapIsLockedMessageTask(ClientMessage clientMessage, Node node, Connection connection) { super(clientMessage, node, connection); }
  
  protected Operation prepareOperation() {
    DistributedObjectNamespace namespace = new DistributedObjectNamespace("hz:impl:multiMapService", ((MultiMapIsLockedCodec.RequestParameters)this.parameters).name);
    return new IsLockedOperation(namespace, ((MultiMapIsLockedCodec.RequestParameters)this.parameters).key);
  }
  
  protected MultiMapIsLockedCodec.RequestParameters decodeClientMessage(ClientMessage clientMessage) { return MultiMapIsLockedCodec.decodeRequest(clientMessage); }
  
  protected ClientMessage encodeResponse(Object response) { return MultiMapIsLockedCodec.encodeResponse(((Boolean)response).booleanValue()); }
  
  public String getServiceName() { return "hz:impl:lockService"; }
  
  public String getDistributedObjectType() { return "hz:impl:multiMapService"; }
  
  public String getMethodName() { return "isLocked"; }
  
  public Object[] getParameters() { return new Object[] { ((MultiMapIsLockedCodec.RequestParameters)this.parameters).key }; }
  
  public Permission getRequiredPermission() { return new MultiMapPermission(((MultiMapIsLockedCodec.RequestParameters)this.parameters).name, new String[] { "lock" }); }
  
  public String getDistributedObjectName() { return ((MultiMapIsLockedCodec.RequestParameters)this.parameters).name; }
}
