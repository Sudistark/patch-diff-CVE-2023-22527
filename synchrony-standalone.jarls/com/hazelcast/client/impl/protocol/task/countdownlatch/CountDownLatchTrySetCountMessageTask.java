package com.hazelcast.client.impl.protocol.task.countdownlatch;

import com.hazelcast.client.impl.protocol.ClientMessage;
import com.hazelcast.client.impl.protocol.codec.CountDownLatchTrySetCountCodec;
import com.hazelcast.client.impl.protocol.task.AbstractPartitionMessageTask;
import com.hazelcast.concurrent.countdownlatch.operations.SetCountOperation;
import com.hazelcast.instance.Node;
import com.hazelcast.nio.Connection;
import com.hazelcast.security.permission.CountDownLatchPermission;
import com.hazelcast.spi.Operation;
import java.security.Permission;

public class CountDownLatchTrySetCountMessageTask extends AbstractPartitionMessageTask<CountDownLatchTrySetCountCodec.RequestParameters> {
  public CountDownLatchTrySetCountMessageTask(ClientMessage clientMessage, Node node, Connection connection) { super(clientMessage, node, connection); }
  
  protected Operation prepareOperation() { return new SetCountOperation(((CountDownLatchTrySetCountCodec.RequestParameters)this.parameters).name, ((CountDownLatchTrySetCountCodec.RequestParameters)this.parameters).count); }
  
  protected CountDownLatchTrySetCountCodec.RequestParameters decodeClientMessage(ClientMessage clientMessage) { return CountDownLatchTrySetCountCodec.decodeRequest(clientMessage); }
  
  protected ClientMessage encodeResponse(Object response) { return CountDownLatchTrySetCountCodec.encodeResponse(((Boolean)response).booleanValue()); }
  
  public String getServiceName() { return "hz:impl:countDownLatchService"; }
  
  public Permission getRequiredPermission() { return new CountDownLatchPermission(((CountDownLatchTrySetCountCodec.RequestParameters)this.parameters).name, new String[] { "modify" }); }
  
  public String getDistributedObjectName() { return ((CountDownLatchTrySetCountCodec.RequestParameters)this.parameters).name; }
  
  public String getMethodName() { return "trySetCount"; }
  
  public Object[] getParameters() { return new Object[] { Integer.valueOf(((CountDownLatchTrySetCountCodec.RequestParameters)this.parameters).count) }; }
}
