package com.hazelcast.client.impl.protocol.task.transaction;

import com.hazelcast.client.impl.CollectRemoteTransactionsOperationSupplier;
import com.hazelcast.client.impl.protocol.ClientMessage;
import com.hazelcast.client.impl.protocol.codec.XATransactionCollectTransactionsCodec;
import com.hazelcast.client.impl.protocol.task.AbstractMultiTargetMessageTask;
import com.hazelcast.core.Member;
import com.hazelcast.instance.Node;
import com.hazelcast.nio.Connection;
import com.hazelcast.nio.serialization.Data;
import com.hazelcast.security.permission.TransactionPermission;
import com.hazelcast.spi.Operation;
import com.hazelcast.spi.impl.SerializableList;
import com.hazelcast.util.function.Supplier;
import java.security.Permission;
import java.util.ArrayList;
import java.util.Collection;
import java.util.List;
import java.util.Map;

public class XACollectTransactionsMessageTask extends AbstractMultiTargetMessageTask<XATransactionCollectTransactionsCodec.RequestParameters> {
  public XACollectTransactionsMessageTask(ClientMessage clientMessage, Node node, Connection connection) { super(clientMessage, node, connection); }
  
  protected XATransactionCollectTransactionsCodec.RequestParameters decodeClientMessage(ClientMessage clientMessage) { return XATransactionCollectTransactionsCodec.decodeRequest(clientMessage); }
  
  protected ClientMessage encodeResponse(Object response) { return XATransactionCollectTransactionsCodec.encodeResponse((List)response); }
  
  protected Supplier<Operation> createOperationSupplier() { return new CollectRemoteTransactionsOperationSupplier(); }
  
  protected Object reduce(Map<Member, Object> map) throws Throwable {
    List<Data> list = new ArrayList<Data>();
    for (Object o : map.values()) {
      if (o instanceof Throwable) {
        if (o instanceof com.hazelcast.core.MemberLeftException)
          continue; 
        throw (Throwable)o;
      } 
      SerializableList xidSet = (SerializableList)o;
      list.addAll(xidSet.getCollection());
    } 
    return list;
  }
  
  public Collection<Member> getTargets() { return this.clientEngine.getClusterService().getMembers(); }
  
  public String getServiceName() { return "hz:impl:xaService"; }
  
  public String getDistributedObjectName() { return null; }
  
  public String getMethodName() { return null; }
  
  public Object[] getParameters() { return null; }
  
  public Permission getRequiredPermission() { return new TransactionPermission(); }
}
