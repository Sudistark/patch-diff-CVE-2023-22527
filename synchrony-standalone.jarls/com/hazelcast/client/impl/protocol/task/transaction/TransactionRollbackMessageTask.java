package com.hazelcast.client.impl.protocol.task.transaction;

import com.hazelcast.client.impl.protocol.ClientMessage;
import com.hazelcast.client.impl.protocol.codec.TransactionRollbackCodec;
import com.hazelcast.client.impl.protocol.task.AbstractTransactionalMessageTask;
import com.hazelcast.instance.Node;
import com.hazelcast.nio.Connection;
import com.hazelcast.security.permission.TransactionPermission;
import com.hazelcast.transaction.TransactionContext;
import java.security.Permission;

public class TransactionRollbackMessageTask extends AbstractTransactionalMessageTask<TransactionRollbackCodec.RequestParameters> {
  public TransactionRollbackMessageTask(ClientMessage clientMessage, Node node, Connection connection) { super(clientMessage, node, connection); }
  
  protected Object innerCall() throws Exception {
    TransactionContext transactionContext = this.endpoint.getTransactionContext(((TransactionRollbackCodec.RequestParameters)this.parameters).transactionId);
    transactionContext.rollbackTransaction();
    this.endpoint.removeTransactionContext(((TransactionRollbackCodec.RequestParameters)this.parameters).transactionId);
    return null;
  }
  
  protected long getClientThreadId() { return ((TransactionRollbackCodec.RequestParameters)this.parameters).threadId; }
  
  protected TransactionRollbackCodec.RequestParameters decodeClientMessage(ClientMessage clientMessage) { return TransactionRollbackCodec.decodeRequest(clientMessage); }
  
  protected ClientMessage encodeResponse(Object response) { return TransactionRollbackCodec.encodeResponse(); }
  
  public String getServiceName() { return "hz:core:clientEngine"; }
  
  public Permission getRequiredPermission() { return new TransactionPermission(); }
  
  public String getDistributedObjectName() { return null; }
  
  public String getMethodName() { return null; }
  
  public Object[] getParameters() { return null; }
}
