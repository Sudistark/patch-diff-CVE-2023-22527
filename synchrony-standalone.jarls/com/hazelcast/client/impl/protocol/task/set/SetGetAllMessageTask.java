package com.hazelcast.client.impl.protocol.task.set;

import com.hazelcast.client.impl.protocol.ClientMessage;
import com.hazelcast.client.impl.protocol.codec.SetGetAllCodec;
import com.hazelcast.client.impl.protocol.task.AbstractPartitionMessageTask;
import com.hazelcast.collection.impl.collection.operations.CollectionGetAllOperation;
import com.hazelcast.instance.Node;
import com.hazelcast.nio.Connection;
import com.hazelcast.security.permission.SetPermission;
import com.hazelcast.spi.Operation;
import com.hazelcast.spi.impl.SerializableList;
import java.security.Permission;

public class SetGetAllMessageTask extends AbstractPartitionMessageTask<SetGetAllCodec.RequestParameters> {
  public SetGetAllMessageTask(ClientMessage clientMessage, Node node, Connection connection) { super(clientMessage, node, connection); }
  
  protected Operation prepareOperation() { return new CollectionGetAllOperation(((SetGetAllCodec.RequestParameters)this.parameters).name); }
  
  protected SetGetAllCodec.RequestParameters decodeClientMessage(ClientMessage clientMessage) { return SetGetAllCodec.decodeRequest(clientMessage); }
  
  protected ClientMessage encodeResponse(Object response) { return SetGetAllCodec.encodeResponse(((SerializableList)response).getCollection()); }
  
  public String getServiceName() { return "hz:impl:setService"; }
  
  public Object[] getParameters() { return null; }
  
  public Permission getRequiredPermission() { return new SetPermission(((SetGetAllCodec.RequestParameters)this.parameters).name, new String[] { "read" }); }
  
  public String getMethodName() { return "iterator"; }
  
  public String getDistributedObjectName() { return ((SetGetAllCodec.RequestParameters)this.parameters).name; }
}
