package com.hazelcast.client.impl.protocol.task.transactionalmultimap;

import com.hazelcast.client.impl.protocol.ClientMessage;
import com.hazelcast.client.impl.protocol.codec.TransactionalMultiMapValueCountCodec;
import com.hazelcast.client.impl.protocol.task.AbstractTransactionalMessageTask;
import com.hazelcast.core.TransactionalMultiMap;
import com.hazelcast.instance.Node;
import com.hazelcast.nio.Connection;
import com.hazelcast.security.permission.MultiMapPermission;
import com.hazelcast.transaction.TransactionContext;
import java.security.Permission;

public class TransactionalMultiMapValueCountMessageTask extends AbstractTransactionalMessageTask<TransactionalMultiMapValueCountCodec.RequestParameters> {
  public TransactionalMultiMapValueCountMessageTask(ClientMessage clientMessage, Node node, Connection connection) { super(clientMessage, node, connection); }
  
  protected Object innerCall() throws Exception {
    TransactionContext context = this.endpoint.getTransactionContext(((TransactionalMultiMapValueCountCodec.RequestParameters)this.parameters).txnId);
    TransactionalMultiMap<Object, Object> multiMap = context.getMultiMap(((TransactionalMultiMapValueCountCodec.RequestParameters)this.parameters).name);
    return Integer.valueOf(multiMap.valueCount(((TransactionalMultiMapValueCountCodec.RequestParameters)this.parameters).key));
  }
  
  protected long getClientThreadId() { return ((TransactionalMultiMapValueCountCodec.RequestParameters)this.parameters).threadId; }
  
  protected TransactionalMultiMapValueCountCodec.RequestParameters decodeClientMessage(ClientMessage clientMessage) { return TransactionalMultiMapValueCountCodec.decodeRequest(clientMessage); }
  
  protected ClientMessage encodeResponse(Object response) { return TransactionalMultiMapValueCountCodec.encodeResponse(((Integer)response).intValue()); }
  
  public String getServiceName() { return "hz:impl:multiMapService"; }
  
  public Permission getRequiredPermission() { return new MultiMapPermission(((TransactionalMultiMapValueCountCodec.RequestParameters)this.parameters).name, new String[] { "read" }); }
  
  public String getDistributedObjectName() { return ((TransactionalMultiMapValueCountCodec.RequestParameters)this.parameters).name; }
  
  public String getMethodName() { return "valueCount"; }
  
  public Object[] getParameters() { return new Object[] { ((TransactionalMultiMapValueCountCodec.RequestParameters)this.parameters).key }; }
}
