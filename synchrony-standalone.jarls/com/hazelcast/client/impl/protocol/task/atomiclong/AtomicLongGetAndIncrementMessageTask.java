package com.hazelcast.client.impl.protocol.task.atomiclong;

import com.hazelcast.client.impl.protocol.ClientMessage;
import com.hazelcast.client.impl.protocol.codec.AtomicLongGetAndIncrementCodec;
import com.hazelcast.client.impl.protocol.task.AbstractPartitionMessageTask;
import com.hazelcast.concurrent.atomiclong.operations.GetAndAddOperation;
import com.hazelcast.instance.Node;
import com.hazelcast.nio.Connection;
import com.hazelcast.security.permission.AtomicLongPermission;
import com.hazelcast.spi.Operation;
import java.security.Permission;

public class AtomicLongGetAndIncrementMessageTask extends AbstractPartitionMessageTask<AtomicLongGetAndIncrementCodec.RequestParameters> {
  public AtomicLongGetAndIncrementMessageTask(ClientMessage clientMessage, Node node, Connection connection) { super(clientMessage, node, connection); }
  
  protected Operation prepareOperation() { return new GetAndAddOperation(((AtomicLongGetAndIncrementCodec.RequestParameters)this.parameters).name, 1L); }
  
  protected AtomicLongGetAndIncrementCodec.RequestParameters decodeClientMessage(ClientMessage clientMessage) { return AtomicLongGetAndIncrementCodec.decodeRequest(clientMessage); }
  
  protected ClientMessage encodeResponse(Object response) { return AtomicLongGetAndIncrementCodec.encodeResponse(((Long)response).longValue()); }
  
  public String getServiceName() { return "hz:impl:atomicLongService"; }
  
  public Permission getRequiredPermission() { return new AtomicLongPermission(((AtomicLongGetAndIncrementCodec.RequestParameters)this.parameters).name, new String[] { "modify" }); }
  
  public String getDistributedObjectName() { return ((AtomicLongGetAndIncrementCodec.RequestParameters)this.parameters).name; }
  
  public String getMethodName() { return "getAndIncrement"; }
  
  public Object[] getParameters() { return null; }
}
