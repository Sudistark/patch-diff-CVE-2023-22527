package com.hazelcast.client.impl.protocol.task.scheduledexecutor;

import com.hazelcast.client.impl.protocol.ClientMessage;
import com.hazelcast.client.impl.protocol.codec.ScheduledExecutorShutdownCodec;
import com.hazelcast.client.impl.protocol.task.AbstractInvocationMessageTask;
import com.hazelcast.instance.Node;
import com.hazelcast.nio.Connection;
import com.hazelcast.scheduledexecutor.impl.operations.ShutdownOperation;
import com.hazelcast.security.permission.ScheduledExecutorPermission;
import com.hazelcast.spi.InvocationBuilder;
import com.hazelcast.spi.Operation;
import com.hazelcast.spi.impl.operationservice.InternalOperationService;
import java.security.Permission;

public class ScheduledExecutorShutdownMessageTask extends AbstractInvocationMessageTask<ScheduledExecutorShutdownCodec.RequestParameters> {
  public ScheduledExecutorShutdownMessageTask(ClientMessage clientMessage, Node node, Connection connection) { super(clientMessage, node, connection); }
  
  protected InvocationBuilder getInvocationBuilder(Operation op) {
    InternalOperationService operationService = this.nodeEngine.getOperationService();
    return operationService.createInvocationBuilder(getServiceName(), op, ((ScheduledExecutorShutdownCodec.RequestParameters)this.parameters).address);
  }
  
  protected Operation prepareOperation() {
    ShutdownOperation shutdownOperation = new ShutdownOperation(((ScheduledExecutorShutdownCodec.RequestParameters)this.parameters).schedulerName);
    shutdownOperation.setCallerUuid(this.endpoint.getUuid());
    return shutdownOperation;
  }
  
  protected ScheduledExecutorShutdownCodec.RequestParameters decodeClientMessage(ClientMessage clientMessage) {
    this.parameters = ScheduledExecutorShutdownCodec.decodeRequest(clientMessage);
    ((ScheduledExecutorShutdownCodec.RequestParameters)this.parameters).address = this.clientEngine.memberAddressOf(((ScheduledExecutorShutdownCodec.RequestParameters)this.parameters).address);
    return (ScheduledExecutorShutdownCodec.RequestParameters)this.parameters;
  }
  
  protected ClientMessage encodeResponse(Object response) { return ScheduledExecutorShutdownCodec.encodeResponse(); }
  
  public String getServiceName() { return "hz:impl:scheduledExecutorService"; }
  
  public Permission getRequiredPermission() { return new ScheduledExecutorPermission(((ScheduledExecutorShutdownCodec.RequestParameters)this.parameters).schedulerName, new String[] { "modify" }); }
  
  public String getDistributedObjectName() { return ((ScheduledExecutorShutdownCodec.RequestParameters)this.parameters).schedulerName; }
  
  public String getMethodName() { return "shutdown"; }
  
  public Object[] getParameters() { return new Object[] { ((ScheduledExecutorShutdownCodec.RequestParameters)this.parameters).schedulerName }; }
}
