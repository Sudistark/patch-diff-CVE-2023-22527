package com.hazelcast.client.impl.protocol.task.scheduledexecutor;

import com.hazelcast.client.impl.protocol.ClientMessage;
import com.hazelcast.client.impl.protocol.codec.ScheduledExecutorGetDelayFromAddressCodec;
import com.hazelcast.client.impl.protocol.task.AbstractAddressMessageTask;
import com.hazelcast.instance.Node;
import com.hazelcast.nio.Address;
import com.hazelcast.nio.Connection;
import com.hazelcast.scheduledexecutor.ScheduledTaskHandler;
import com.hazelcast.scheduledexecutor.impl.ScheduledTaskHandlerImpl;
import com.hazelcast.scheduledexecutor.impl.operations.GetDelayOperation;
import com.hazelcast.security.permission.ScheduledExecutorPermission;
import com.hazelcast.spi.Operation;
import java.security.Permission;
import java.util.concurrent.TimeUnit;

public class ScheduledExecutorTaskGetDelayFromAddressMessageTask extends AbstractAddressMessageTask<ScheduledExecutorGetDelayFromAddressCodec.RequestParameters> {
  public ScheduledExecutorTaskGetDelayFromAddressMessageTask(ClientMessage clientMessage, Node node, Connection connection) { super(clientMessage, node, connection); }
  
  protected Operation prepareOperation() {
    ScheduledTaskHandler handler = ScheduledTaskHandlerImpl.of(((ScheduledExecutorGetDelayFromAddressCodec.RequestParameters)this.parameters).address, ((ScheduledExecutorGetDelayFromAddressCodec.RequestParameters)this.parameters).schedulerName, ((ScheduledExecutorGetDelayFromAddressCodec.RequestParameters)this.parameters).taskName);
    return new GetDelayOperation(handler, TimeUnit.NANOSECONDS);
  }
  
  protected Address getAddress() { return ((ScheduledExecutorGetDelayFromAddressCodec.RequestParameters)this.parameters).address; }
  
  protected ScheduledExecutorGetDelayFromAddressCodec.RequestParameters decodeClientMessage(ClientMessage clientMessage) {
    this.parameters = ScheduledExecutorGetDelayFromAddressCodec.decodeRequest(clientMessage);
    ((ScheduledExecutorGetDelayFromAddressCodec.RequestParameters)this.parameters).address = this.clientEngine.memberAddressOf(((ScheduledExecutorGetDelayFromAddressCodec.RequestParameters)this.parameters).address);
    return (ScheduledExecutorGetDelayFromAddressCodec.RequestParameters)this.parameters;
  }
  
  protected ClientMessage encodeResponse(Object response) { return ScheduledExecutorGetDelayFromAddressCodec.encodeResponse(((Long)response).longValue()); }
  
  public String getServiceName() { return "hz:impl:scheduledExecutorService"; }
  
  public Permission getRequiredPermission() { return new ScheduledExecutorPermission(((ScheduledExecutorGetDelayFromAddressCodec.RequestParameters)this.parameters).schedulerName, new String[] { "read" }); }
  
  public String getDistributedObjectName() { return ((ScheduledExecutorGetDelayFromAddressCodec.RequestParameters)this.parameters).schedulerName; }
  
  public String getMethodName() { return "getDelay"; }
  
  public Object[] getParameters() { return new Object[] { TimeUnit.NANOSECONDS }; }
}
