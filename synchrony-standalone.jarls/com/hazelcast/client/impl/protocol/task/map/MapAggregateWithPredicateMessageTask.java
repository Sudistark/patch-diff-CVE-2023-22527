package com.hazelcast.client.impl.protocol.task.map;

import com.hazelcast.aggregation.Aggregator;
import com.hazelcast.client.impl.protocol.ClientMessage;
import com.hazelcast.client.impl.protocol.codec.MapAggregateWithPredicateCodec;
import com.hazelcast.instance.Node;
import com.hazelcast.nio.Connection;
import com.hazelcast.nio.serialization.Data;
import com.hazelcast.query.Predicate;
import com.hazelcast.security.permission.MapPermission;
import java.security.Permission;

public class MapAggregateWithPredicateMessageTask extends DefaultMapAggregateMessageTask<MapAggregateWithPredicateCodec.RequestParameters> {
  public MapAggregateWithPredicateMessageTask(ClientMessage clientMessage, Node node, Connection connection) { super(clientMessage, node, connection); }
  
  protected Aggregator<?, ?> getAggregator() { return (Aggregator)this.nodeEngine.getSerializationService().toObject(((MapAggregateWithPredicateCodec.RequestParameters)this.parameters).aggregator); }
  
  protected Predicate getPredicate() { return (Predicate)this.nodeEngine.getSerializationService().toObject(((MapAggregateWithPredicateCodec.RequestParameters)this.parameters).predicate); }
  
  protected MapAggregateWithPredicateCodec.RequestParameters decodeClientMessage(ClientMessage clientMessage) { return MapAggregateWithPredicateCodec.decodeRequest(clientMessage); }
  
  protected ClientMessage encodeResponse(Object response) {
    Data data = this.nodeEngine.getSerializationService().toData(response);
    return MapAggregateWithPredicateCodec.encodeResponse(data);
  }
  
  public Permission getRequiredPermission() { return new MapPermission(((MapAggregateWithPredicateCodec.RequestParameters)this.parameters).name, new String[] { "aggregate" }); }
  
  public String getDistributedObjectName() { return ((MapAggregateWithPredicateCodec.RequestParameters)this.parameters).name; }
  
  public String getMethodName() { return "aggregateWithPredicate"; }
  
  public Object[] getParameters() { return new Object[] { ((MapAggregateWithPredicateCodec.RequestParameters)this.parameters).name, ((MapAggregateWithPredicateCodec.RequestParameters)this.parameters).aggregator, ((MapAggregateWithPredicateCodec.RequestParameters)this.parameters).predicate }; }
}
