package com.hazelcast.client.impl.protocol.task.map;

import com.hazelcast.client.impl.protocol.ClientMessage;
import com.hazelcast.client.impl.protocol.codec.MapAddNearCacheInvalidationListenerCodec;
import com.hazelcast.instance.Node;
import com.hazelcast.map.impl.EventListenerFilter;
import com.hazelcast.map.impl.nearcache.invalidation.UuidFilter;
import com.hazelcast.nio.Connection;
import com.hazelcast.nio.serialization.Data;
import com.hazelcast.spi.EventFilter;

public class MapAddNearCacheInvalidationListenerMessageTask extends AbstractMapAddEntryListenerMessageTask<MapAddNearCacheInvalidationListenerCodec.RequestParameters> {
  public MapAddNearCacheInvalidationListenerMessageTask(ClientMessage clientMessage, Node node, Connection connection) { super(clientMessage, node, connection); }
  
  protected boolean isLocalOnly() { return ((MapAddNearCacheInvalidationListenerCodec.RequestParameters)this.parameters).localOnly; }
  
  protected ClientMessage encodeEvent(Data keyData, Data newValueData, Data oldValueData, Data meringValueData, int type, String uuid, int numberOfAffectedEntries) { throw new UnsupportedOperationException(); }
  
  public String getDistributedObjectName() { return ((MapAddNearCacheInvalidationListenerCodec.RequestParameters)this.parameters).name; }
  
  public Object[] getParameters() { return null; }
  
  protected MapAddNearCacheInvalidationListenerCodec.RequestParameters decodeClientMessage(ClientMessage clientMessage) { return MapAddNearCacheInvalidationListenerCodec.decodeRequest(clientMessage); }
  
  protected ClientMessage encodeResponse(Object response) { return MapAddNearCacheInvalidationListenerCodec.encodeResponse((String)response); }
  
  protected Object newMapListener() {
    String uuid = this.nodeEngine.getLocalMember().getUuid();
    long correlationId = this.clientMessage.getCorrelationId();
    return new NearCacheInvalidationListener(this, this.endpoint, uuid, correlationId);
  }
  
  protected EventFilter getEventFilter() { return new EventListenerFilter(((MapAddNearCacheInvalidationListenerCodec.RequestParameters)this.parameters).listenerFlags, new UuidFilter(this.endpoint.getUuid())); }
}
