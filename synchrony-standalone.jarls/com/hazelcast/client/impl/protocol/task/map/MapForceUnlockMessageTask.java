package com.hazelcast.client.impl.protocol.task.map;

import com.hazelcast.client.impl.protocol.ClientMessage;
import com.hazelcast.client.impl.protocol.codec.MapForceUnlockCodec;
import com.hazelcast.client.impl.protocol.task.AbstractPartitionMessageTask;
import com.hazelcast.concurrent.lock.operations.UnlockOperation;
import com.hazelcast.instance.Node;
import com.hazelcast.map.impl.MapService;
import com.hazelcast.nio.Connection;
import com.hazelcast.security.permission.MapPermission;
import com.hazelcast.spi.ObjectNamespace;
import com.hazelcast.spi.Operation;
import java.security.Permission;

public class MapForceUnlockMessageTask extends AbstractPartitionMessageTask<MapForceUnlockCodec.RequestParameters> {
  public MapForceUnlockMessageTask(ClientMessage clientMessage, Node node, Connection connection) { super(clientMessage, node, connection); }
  
  protected Operation prepareOperation() { return new UnlockOperation(getNamespace(), ((MapForceUnlockCodec.RequestParameters)this.parameters).key, -1L, true, ((MapForceUnlockCodec.RequestParameters)this.parameters).referenceId); }
  
  protected MapForceUnlockCodec.RequestParameters decodeClientMessage(ClientMessage clientMessage) { return MapForceUnlockCodec.decodeRequest(clientMessage); }
  
  protected ClientMessage encodeResponse(Object response) { return MapForceUnlockCodec.encodeResponse(); }
  
  public String getServiceName() { return "hz:impl:lockService"; }
  
  public String getDistributedObjectType() { return "hz:impl:mapService"; }
  
  public Permission getRequiredPermission() { return new MapPermission(((MapForceUnlockCodec.RequestParameters)this.parameters).name, new String[] { "lock" }); }
  
  public String getDistributedObjectName() { return ((MapForceUnlockCodec.RequestParameters)this.parameters).name; }
  
  private ObjectNamespace getNamespace() { return MapService.getObjectNamespace(((MapForceUnlockCodec.RequestParameters)this.parameters).name); }
  
  public String getMethodName() { return "forceUnlock"; }
  
  public Object[] getParameters() { return new Object[] { ((MapForceUnlockCodec.RequestParameters)this.parameters).key }; }
}
