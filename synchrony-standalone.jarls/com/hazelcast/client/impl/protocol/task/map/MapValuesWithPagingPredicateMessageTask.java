package com.hazelcast.client.impl.protocol.task.map;

import com.hazelcast.client.impl.protocol.ClientMessage;
import com.hazelcast.client.impl.protocol.codec.MapValuesWithPagingPredicateCodec;
import com.hazelcast.instance.Node;
import com.hazelcast.map.impl.query.QueryResultRow;
import com.hazelcast.nio.Connection;
import com.hazelcast.nio.serialization.Data;
import com.hazelcast.query.Predicate;
import com.hazelcast.util.IterationType;
import java.util.ArrayList;
import java.util.Collection;
import java.util.List;
import java.util.Map;

public class MapValuesWithPagingPredicateMessageTask extends DefaultMapQueryMessageTask<MapValuesWithPagingPredicateCodec.RequestParameters> {
  public MapValuesWithPagingPredicateMessageTask(ClientMessage clientMessage, Node node, Connection connection) { super(clientMessage, node, connection); }
  
  protected Object reduce(Collection<QueryResultRow> result) {
    List<Map.Entry<Data, Data>> entries = new ArrayList<Map.Entry<Data, Data>>(result.size());
    for (QueryResultRow resultRow : result)
      entries.add(resultRow); 
    return entries;
  }
  
  protected Predicate getPredicate() { return (Predicate)this.serializationService.toObject(((MapValuesWithPagingPredicateCodec.RequestParameters)this.parameters).predicate); }
  
  protected IterationType getIterationType() { return IterationType.ENTRY; }
  
  protected MapValuesWithPagingPredicateCodec.RequestParameters decodeClientMessage(ClientMessage clientMessage) { return MapValuesWithPagingPredicateCodec.decodeRequest(clientMessage); }
  
  protected ClientMessage encodeResponse(Object response) { return MapValuesWithPagingPredicateCodec.encodeResponse((List)response); }
  
  public Object[] getParameters() { return new Object[] { ((MapValuesWithPagingPredicateCodec.RequestParameters)this.parameters).predicate }; }
  
  public String getDistributedObjectName() { return ((MapValuesWithPagingPredicateCodec.RequestParameters)this.parameters).name; }
  
  public String getMethodName() { return "values"; }
}
