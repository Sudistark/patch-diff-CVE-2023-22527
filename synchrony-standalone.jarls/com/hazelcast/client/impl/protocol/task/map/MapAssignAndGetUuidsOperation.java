package com.hazelcast.client.impl.protocol.task.map;

import com.hazelcast.internal.nearcache.impl.invalidation.Invalidator;
import com.hazelcast.internal.nearcache.impl.invalidation.MetaDataGenerator;
import com.hazelcast.map.impl.MapDataSerializerHook;
import com.hazelcast.map.impl.MapService;
import com.hazelcast.map.impl.MapServiceContext;
import com.hazelcast.map.impl.nearcache.MapNearCacheManager;
import com.hazelcast.nio.serialization.IdentifiedDataSerializable;
import com.hazelcast.spi.Operation;
import com.hazelcast.spi.PartitionAwareOperation;
import com.hazelcast.spi.impl.AllowedDuringPassiveState;
import java.util.UUID;

public class MapAssignAndGetUuidsOperation extends Operation implements PartitionAwareOperation, IdentifiedDataSerializable, AllowedDuringPassiveState {
  private UUID partitionUuid;
  
  public void run() { this.partitionUuid = getMetaDataGenerator().getOrCreateUuid(getPartitionId()); }
  
  public Object getResponse() { return this.partitionUuid; }
  
  public String getServiceName() { return "hz:impl:mapService"; }
  
  private MetaDataGenerator getMetaDataGenerator() {
    MapService mapService = (MapService)getService();
    MapServiceContext mapServiceContext = mapService.getMapServiceContext();
    MapNearCacheManager mapNearCacheManager = mapServiceContext.getMapNearCacheManager();
    Invalidator invalidator = mapNearCacheManager.getInvalidator();
    return invalidator.getMetaDataGenerator();
  }
  
  public int getFactoryId() { return MapDataSerializerHook.F_ID; }
  
  public int getId() { return 121; }
}
