package com.hazelcast.client.impl.protocol.task;

import com.hazelcast.client.impl.protocol.ClientMessage;
import com.hazelcast.client.impl.protocol.codec.ClientRemoveAllListenersCodec;
import com.hazelcast.instance.Node;
import com.hazelcast.nio.Connection;
import java.security.Permission;

public class RemoveAllListenersMessageTask extends AbstractCallableMessageTask<ClientRemoveAllListenersCodec.RequestParameters> implements ListenerMessageTask {
  public RemoveAllListenersMessageTask(ClientMessage clientMessage, Node node, Connection connection) { super(clientMessage, node, connection); }
  
  protected Object call() throws Exception {
    this.endpoint.clearAllListeners();
    return null;
  }
  
  protected ClientRemoveAllListenersCodec.RequestParameters decodeClientMessage(ClientMessage clientMessage) { return ClientRemoveAllListenersCodec.decodeRequest(clientMessage); }
  
  protected ClientMessage encodeResponse(Object response) { return ClientRemoveAllListenersCodec.encodeResponse(); }
  
  public String getServiceName() { return null; }
  
  public Permission getRequiredPermission() { return null; }
  
  public String getDistributedObjectName() { return null; }
  
  public String getMethodName() { return null; }
  
  public Object[] getParameters() { return null; }
}
