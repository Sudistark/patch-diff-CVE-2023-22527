package com.hazelcast.client.impl.protocol.task;

import com.hazelcast.client.impl.protocol.ClientMessage;
import com.hazelcast.client.impl.protocol.codec.ClientAddMembershipListenerCodec;
import com.hazelcast.instance.Node;
import com.hazelcast.internal.cluster.impl.ClusterServiceImpl;
import com.hazelcast.nio.Connection;
import java.security.Permission;

public class AddMembershipListenerMessageTask extends AbstractCallableMessageTask<ClientAddMembershipListenerCodec.RequestParameters> {
  public AddMembershipListenerMessageTask(ClientMessage clientMessage, Node node, Connection connection) { super(clientMessage, node, connection); }
  
  protected Object call() {
    String serviceName = "hz:core:clusterService";
    ClusterServiceImpl service = (ClusterServiceImpl)getService(serviceName);
    boolean advancedNetworkConfigEnabled = isAdvancedNetworkEnabled();
    String registrationId = service.addMembershipListener(new MembershipListenerImpl(this, this.endpoint, advancedNetworkConfigEnabled));
    this.endpoint.addListenerDestroyAction(serviceName, serviceName, registrationId);
    return registrationId;
  }
  
  protected ClientAddMembershipListenerCodec.RequestParameters decodeClientMessage(ClientMessage clientMessage) { return ClientAddMembershipListenerCodec.decodeRequest(clientMessage); }
  
  protected ClientMessage encodeResponse(Object response) { return ClientAddMembershipListenerCodec.encodeResponse((String)response); }
  
  public String getServiceName() { return "hz:core:clusterService"; }
  
  public String getDistributedObjectName() { return null; }
  
  public String getMethodName() { return null; }
  
  public Object[] getParameters() { return null; }
  
  public Permission getRequiredPermission() { return null; }
}
