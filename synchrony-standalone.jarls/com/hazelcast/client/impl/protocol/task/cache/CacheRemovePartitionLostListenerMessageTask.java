package com.hazelcast.client.impl.protocol.task.cache;

import com.hazelcast.cache.impl.ICacheService;
import com.hazelcast.client.impl.protocol.ClientMessage;
import com.hazelcast.client.impl.protocol.codec.CacheRemovePartitionLostListenerCodec;
import com.hazelcast.client.impl.protocol.task.AbstractRemoveListenerMessageTask;
import com.hazelcast.instance.Node;
import com.hazelcast.nio.Connection;
import java.security.Permission;

public class CacheRemovePartitionLostListenerMessageTask extends AbstractRemoveListenerMessageTask<CacheRemovePartitionLostListenerCodec.RequestParameters> {
  public CacheRemovePartitionLostListenerMessageTask(ClientMessage clientMessage, Node node, Connection connection) { super(clientMessage, node, connection); }
  
  protected boolean deRegisterListener() {
    ICacheService service = (ICacheService)getService("hz:impl:cacheService");
    return service.getNodeEngine().getEventService()
      .deregisterListener("hz:impl:cacheService", ((CacheRemovePartitionLostListenerCodec.RequestParameters)this.parameters).name, ((CacheRemovePartitionLostListenerCodec.RequestParameters)this.parameters).registrationId);
  }
  
  protected String getRegistrationId() { return ((CacheRemovePartitionLostListenerCodec.RequestParameters)this.parameters).registrationId; }
  
  protected CacheRemovePartitionLostListenerCodec.RequestParameters decodeClientMessage(ClientMessage clientMessage) { return CacheRemovePartitionLostListenerCodec.decodeRequest(clientMessage); }
  
  protected ClientMessage encodeResponse(Object response) { return CacheRemovePartitionLostListenerCodec.encodeResponse(((Boolean)response).booleanValue()); }
  
  public String getServiceName() { return "hz:impl:cacheService"; }
  
  public String getDistributedObjectName() { return ((CacheRemovePartitionLostListenerCodec.RequestParameters)this.parameters).name; }
  
  public Permission getRequiredPermission() { return null; }
  
  public String getMethodName() { return "removeCachePartitionLostListener"; }
}
