package com.hazelcast.client.impl.protocol.task.cache;

import com.hazelcast.cache.impl.operation.CacheManagementConfigOperation;
import com.hazelcast.client.impl.protocol.ClientMessage;
import com.hazelcast.client.impl.protocol.codec.CacheManagementConfigCodec;
import com.hazelcast.client.impl.protocol.task.AbstractInvocationMessageTask;
import com.hazelcast.instance.Node;
import com.hazelcast.nio.Connection;
import com.hazelcast.spi.InvocationBuilder;
import com.hazelcast.spi.Operation;
import com.hazelcast.spi.impl.operationservice.InternalOperationService;
import java.security.Permission;

public class CacheManagementConfigMessageTask extends AbstractInvocationMessageTask<CacheManagementConfigCodec.RequestParameters> {
  public CacheManagementConfigMessageTask(ClientMessage clientMessage, Node node, Connection connection) { super(clientMessage, node, connection); }
  
  protected Operation prepareOperation() { return new CacheManagementConfigOperation(((CacheManagementConfigCodec.RequestParameters)this.parameters).name, ((CacheManagementConfigCodec.RequestParameters)this.parameters).isStat, ((CacheManagementConfigCodec.RequestParameters)this.parameters).enabled); }
  
  protected CacheManagementConfigCodec.RequestParameters decodeClientMessage(ClientMessage clientMessage) {
    this.parameters = CacheManagementConfigCodec.decodeRequest(clientMessage);
    ((CacheManagementConfigCodec.RequestParameters)this.parameters).address = this.clientEngine.memberAddressOf(((CacheManagementConfigCodec.RequestParameters)this.parameters).address);
    return (CacheManagementConfigCodec.RequestParameters)this.parameters;
  }
  
  protected ClientMessage encodeResponse(Object response) { return CacheManagementConfigCodec.encodeResponse(); }
  
  protected InvocationBuilder getInvocationBuilder(Operation op) {
    InternalOperationService operationService = this.nodeEngine.getOperationService();
    return operationService.createInvocationBuilder(getServiceName(), op, ((CacheManagementConfigCodec.RequestParameters)this.parameters).address);
  }
  
  public String getServiceName() { return "hz:impl:cacheService"; }
  
  public Permission getRequiredPermission() { return null; }
  
  public String getDistributedObjectName() { return ((CacheManagementConfigCodec.RequestParameters)this.parameters).name; }
  
  public String getMethodName() { return null; }
  
  public Object[] getParameters() { return null; }
}
