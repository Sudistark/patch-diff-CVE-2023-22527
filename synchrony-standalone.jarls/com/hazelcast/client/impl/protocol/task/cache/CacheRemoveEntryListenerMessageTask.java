package com.hazelcast.client.impl.protocol.task.cache;

import com.hazelcast.cache.impl.CacheService;
import com.hazelcast.client.impl.protocol.ClientMessage;
import com.hazelcast.client.impl.protocol.codec.CacheRemoveEntryListenerCodec;
import com.hazelcast.client.impl.protocol.task.AbstractRemoveListenerMessageTask;
import com.hazelcast.instance.Node;
import com.hazelcast.nio.Connection;
import com.hazelcast.security.permission.CachePermission;
import java.security.Permission;

public class CacheRemoveEntryListenerMessageTask extends AbstractRemoveListenerMessageTask<CacheRemoveEntryListenerCodec.RequestParameters> {
  public CacheRemoveEntryListenerMessageTask(ClientMessage clientMessage, Node node, Connection connection) { super(clientMessage, node, connection); }
  
  protected String getRegistrationId() { return ((CacheRemoveEntryListenerCodec.RequestParameters)this.parameters).registrationId; }
  
  protected boolean deRegisterListener() {
    CacheService service = (CacheService)getService("hz:impl:cacheService");
    return service.deregisterListener(((CacheRemoveEntryListenerCodec.RequestParameters)this.parameters).name, ((CacheRemoveEntryListenerCodec.RequestParameters)this.parameters).registrationId);
  }
  
  protected CacheRemoveEntryListenerCodec.RequestParameters decodeClientMessage(ClientMessage clientMessage) { return CacheRemoveEntryListenerCodec.decodeRequest(clientMessage); }
  
  protected ClientMessage encodeResponse(Object response) { return CacheRemoveEntryListenerCodec.encodeResponse(((Boolean)response).booleanValue()); }
  
  public String getServiceName() { return "hz:impl:cacheService"; }
  
  public String getDistributedObjectName() { return ((CacheRemoveEntryListenerCodec.RequestParameters)this.parameters).name; }
  
  public Permission getRequiredPermission() { return new CachePermission(((CacheRemoveEntryListenerCodec.RequestParameters)this.parameters).name, new String[] { "listen" }); }
  
  public String getMethodName() { return "deregisterCacheEntryListener"; }
  
  public Object[] getParameters() { return null; }
}
