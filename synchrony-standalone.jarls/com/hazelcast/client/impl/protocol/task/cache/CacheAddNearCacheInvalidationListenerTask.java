package com.hazelcast.client.impl.protocol.task.cache;

import com.hazelcast.cache.impl.CacheContext;
import com.hazelcast.cache.impl.CacheService;
import com.hazelcast.client.impl.protocol.ClientMessage;
import com.hazelcast.client.impl.protocol.codec.CacheAddNearCacheInvalidationListenerCodec;
import com.hazelcast.client.impl.protocol.task.AbstractCallableMessageTask;
import com.hazelcast.client.impl.protocol.task.ListenerMessageTask;
import com.hazelcast.instance.Node;
import com.hazelcast.nio.Connection;
import java.security.Permission;

public class CacheAddNearCacheInvalidationListenerTask extends AbstractCallableMessageTask<CacheAddNearCacheInvalidationListenerCodec.RequestParameters> implements ListenerMessageTask {
  public CacheAddNearCacheInvalidationListenerTask(ClientMessage clientMessage, Node node, Connection connection) { super(clientMessage, node, connection); }
  
  protected Object call() {
    CacheService cacheService = (CacheService)getService("hz:impl:cacheService");
    CacheContext cacheContext = cacheService.getOrCreateCacheContext(((CacheAddNearCacheInvalidationListenerCodec.RequestParameters)this.parameters).name);
    NearCacheInvalidationListener listener = new NearCacheInvalidationListener(this, this.endpoint, cacheContext, this.nodeEngine.getLocalMember().getUuid(), this.clientMessage.getCorrelationId());
    String registrationId = cacheService.addInvalidationListener(((CacheAddNearCacheInvalidationListenerCodec.RequestParameters)this.parameters).name, listener, ((CacheAddNearCacheInvalidationListenerCodec.RequestParameters)this.parameters).localOnly);
    this.endpoint.addListenerDestroyAction("hz:impl:cacheService", ((CacheAddNearCacheInvalidationListenerCodec.RequestParameters)this.parameters).name, registrationId);
    return registrationId;
  }
  
  protected CacheAddNearCacheInvalidationListenerCodec.RequestParameters decodeClientMessage(ClientMessage clientMessage) { return CacheAddNearCacheInvalidationListenerCodec.decodeRequest(clientMessage); }
  
  protected ClientMessage encodeResponse(Object response) { return CacheAddNearCacheInvalidationListenerCodec.encodeResponse((String)response); }
  
  public String getDistributedObjectName() { return ((CacheAddNearCacheInvalidationListenerCodec.RequestParameters)this.parameters).name; }
  
  public String getMethodName() { return null; }
  
  public Object[] getParameters() { return null; }
  
  public String getServiceName() { return "hz:impl:cacheService"; }
  
  public Permission getRequiredPermission() { return null; }
}
