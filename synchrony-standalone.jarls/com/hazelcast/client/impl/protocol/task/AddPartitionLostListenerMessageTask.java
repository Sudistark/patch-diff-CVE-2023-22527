package com.hazelcast.client.impl.protocol.task;

import com.hazelcast.client.impl.protocol.ClientMessage;
import com.hazelcast.client.impl.protocol.codec.ClientAddPartitionLostListenerCodec;
import com.hazelcast.instance.Node;
import com.hazelcast.nio.Connection;
import com.hazelcast.spi.partition.IPartitionService;
import java.security.Permission;

public class AddPartitionLostListenerMessageTask extends AbstractCallableMessageTask<ClientAddPartitionLostListenerCodec.RequestParameters> implements ListenerMessageTask {
  public AddPartitionLostListenerMessageTask(ClientMessage clientMessage, Node node, Connection connection) { super(clientMessage, node, connection); }
  
  protected Object call() throws Exception {
    String registrationId;
    IPartitionService partitionService = (IPartitionService)getService(getServiceName());
    Object object = new Object(this);
    if (((ClientAddPartitionLostListenerCodec.RequestParameters)this.parameters).localOnly) {
      registrationId = partitionService.addLocalPartitionLostListener(object);
    } else {
      registrationId = partitionService.addPartitionLostListener(object);
    } 
    this.endpoint.addListenerDestroyAction(getServiceName(), ".partitionLost", registrationId);
    return registrationId;
  }
  
  protected ClientAddPartitionLostListenerCodec.RequestParameters decodeClientMessage(ClientMessage clientMessage) { return ClientAddPartitionLostListenerCodec.decodeRequest(clientMessage); }
  
  protected ClientMessage encodeResponse(Object response) { return ClientAddPartitionLostListenerCodec.encodeResponse((String)response); }
  
  public String getServiceName() { return "hz:core:partitionService"; }
  
  public Permission getRequiredPermission() { return null; }
  
  public String getDistributedObjectName() { return null; }
  
  public String getMethodName() { return "addPartitionLostListener"; }
  
  public Object[] getParameters() { return null; }
}
