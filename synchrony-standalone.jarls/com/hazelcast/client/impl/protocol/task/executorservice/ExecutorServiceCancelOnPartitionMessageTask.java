package com.hazelcast.client.impl.protocol.task.executorservice;

import com.hazelcast.client.impl.protocol.ClientMessage;
import com.hazelcast.client.impl.protocol.codec.ExecutorServiceCancelOnPartitionCodec;
import com.hazelcast.client.impl.protocol.task.AbstractPartitionMessageTask;
import com.hazelcast.executor.impl.operations.CancellationOperation;
import com.hazelcast.instance.Node;
import com.hazelcast.nio.Connection;
import com.hazelcast.spi.Operation;
import java.security.Permission;

public class ExecutorServiceCancelOnPartitionMessageTask extends AbstractPartitionMessageTask<ExecutorServiceCancelOnPartitionCodec.RequestParameters> {
  public ExecutorServiceCancelOnPartitionMessageTask(ClientMessage clientMessage, Node node, Connection connection) { super(clientMessage, node, connection); }
  
  protected Operation prepareOperation() { return new CancellationOperation(((ExecutorServiceCancelOnPartitionCodec.RequestParameters)this.parameters).uuid, ((ExecutorServiceCancelOnPartitionCodec.RequestParameters)this.parameters).interrupt); }
  
  protected ExecutorServiceCancelOnPartitionCodec.RequestParameters decodeClientMessage(ClientMessage clientMessage) { return ExecutorServiceCancelOnPartitionCodec.decodeRequest(clientMessage); }
  
  protected ClientMessage encodeResponse(Object response) { return ExecutorServiceCancelOnPartitionCodec.encodeResponse(((Boolean)response).booleanValue()); }
  
  public String getDistributedObjectName() { return null; }
  
  public String getServiceName() { return "hz:impl:executorService"; }
  
  public Permission getRequiredPermission() { return null; }
  
  public String getMethodName() { return "cancel"; }
  
  public Object[] getParameters() { return null; }
}
