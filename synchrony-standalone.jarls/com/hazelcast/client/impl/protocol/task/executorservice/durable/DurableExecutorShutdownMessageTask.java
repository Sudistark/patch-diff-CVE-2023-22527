package com.hazelcast.client.impl.protocol.task.executorservice.durable;

import com.hazelcast.client.impl.protocol.ClientMessage;
import com.hazelcast.client.impl.protocol.codec.DurableExecutorShutdownCodec;
import com.hazelcast.client.impl.protocol.task.AbstractCallableMessageTask;
import com.hazelcast.durableexecutor.impl.DistributedDurableExecutorService;
import com.hazelcast.instance.Node;
import com.hazelcast.nio.Connection;
import java.security.Permission;

public class DurableExecutorShutdownMessageTask extends AbstractCallableMessageTask<DurableExecutorShutdownCodec.RequestParameters> {
  public DurableExecutorShutdownMessageTask(ClientMessage clientMessage, Node node, Connection connection) { super(clientMessage, node, connection); }
  
  protected Object call() throws Exception {
    DistributedDurableExecutorService service = (DistributedDurableExecutorService)getService("hz:impl:durableExecutorService");
    service.shutdownExecutor(((DurableExecutorShutdownCodec.RequestParameters)this.parameters).name);
    return null;
  }
  
  protected DurableExecutorShutdownCodec.RequestParameters decodeClientMessage(ClientMessage clientMessage) { return DurableExecutorShutdownCodec.decodeRequest(clientMessage); }
  
  protected ClientMessage encodeResponse(Object response) { return DurableExecutorShutdownCodec.encodeResponse(); }
  
  public String getServiceName() { return "hz:impl:durableExecutorService"; }
  
  public Permission getRequiredPermission() { return null; }
  
  public String getDistributedObjectName() { return ((DurableExecutorShutdownCodec.RequestParameters)this.parameters).name; }
  
  public String getMethodName() { return "shutdown"; }
  
  public Object[] getParameters() { return null; }
}
