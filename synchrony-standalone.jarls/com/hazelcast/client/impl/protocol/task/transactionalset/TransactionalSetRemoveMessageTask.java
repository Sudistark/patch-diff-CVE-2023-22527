package com.hazelcast.client.impl.protocol.task.transactionalset;

import com.hazelcast.client.impl.protocol.ClientMessage;
import com.hazelcast.client.impl.protocol.codec.TransactionalSetRemoveCodec;
import com.hazelcast.client.impl.protocol.task.AbstractTransactionalMessageTask;
import com.hazelcast.core.TransactionalSet;
import com.hazelcast.instance.Node;
import com.hazelcast.nio.Connection;
import com.hazelcast.security.permission.SetPermission;
import com.hazelcast.transaction.TransactionContext;
import java.security.Permission;

public class TransactionalSetRemoveMessageTask extends AbstractTransactionalMessageTask<TransactionalSetRemoveCodec.RequestParameters> {
  public TransactionalSetRemoveMessageTask(ClientMessage clientMessage, Node node, Connection connection) { super(clientMessage, node, connection); }
  
  protected Object innerCall() throws Exception {
    TransactionContext context = this.endpoint.getTransactionContext(((TransactionalSetRemoveCodec.RequestParameters)this.parameters).txnId);
    TransactionalSet<Object> set = context.getSet(((TransactionalSetRemoveCodec.RequestParameters)this.parameters).name);
    boolean success = set.remove(((TransactionalSetRemoveCodec.RequestParameters)this.parameters).item);
    return Boolean.valueOf(success);
  }
  
  protected long getClientThreadId() { return ((TransactionalSetRemoveCodec.RequestParameters)this.parameters).threadId; }
  
  protected TransactionalSetRemoveCodec.RequestParameters decodeClientMessage(ClientMessage clientMessage) { return TransactionalSetRemoveCodec.decodeRequest(clientMessage); }
  
  protected ClientMessage encodeResponse(Object response) { return TransactionalSetRemoveCodec.encodeResponse(((Boolean)response).booleanValue()); }
  
  public String getServiceName() { return "hz:impl:setService"; }
  
  public Permission getRequiredPermission() { return new SetPermission(((TransactionalSetRemoveCodec.RequestParameters)this.parameters).name, new String[] { "remove" }); }
  
  public String getDistributedObjectName() { return ((TransactionalSetRemoveCodec.RequestParameters)this.parameters).name; }
  
  public String getMethodName() { return "remove"; }
  
  public Object[] getParameters() { return new Object[] { ((TransactionalSetRemoveCodec.RequestParameters)this.parameters).item }; }
}
