package com.hazelcast.client.impl;

import com.hazelcast.client.impl.client.ClientPrincipal;
import com.hazelcast.core.Client;
import com.hazelcast.nio.Connection;
import com.hazelcast.security.Credentials;
import com.hazelcast.transaction.TransactionContext;
import java.util.Set;
import java.util.concurrent.Callable;
import javax.security.auth.Subject;
import javax.security.auth.login.LoginContext;

public interface ClientEndpoint extends Client {
  boolean isAlive();
  
  void addListenerDestroyAction(String paramString1, String paramString2, String paramString3);
  
  void addDestroyAction(String paramString, Callable<Boolean> paramCallable);
  
  boolean removeDestroyAction(String paramString);
  
  Credentials getCredentials();
  
  void setTransactionContext(TransactionContext paramTransactionContext);
  
  TransactionContext getTransactionContext(String paramString);
  
  void removeTransactionContext(String paramString);
  
  boolean isOwnerConnection();
  
  Subject getSubject();
  
  void clearAllListeners();
  
  Connection getConnection();
  
  void setLoginContext(LoginContext paramLoginContext);
  
  void authenticated(ClientPrincipal paramClientPrincipal, Credentials paramCredentials, boolean paramBoolean, String paramString1, long paramLong, String paramString2, Set<String> paramSet);
  
  void authenticated(ClientPrincipal paramClientPrincipal);
  
  boolean isAuthenticated();
  
  int getClientVersion();
  
  void setClientVersion(String paramString);
  
  void setClientStatistics(String paramString);
  
  String getClientStatistics();
}
