package com.hazelcast.client.impl;

import com.hazelcast.client.impl.protocol.ClientExceptions;
import com.hazelcast.client.impl.protocol.ClientMessage;
import com.hazelcast.core.Client;
import com.hazelcast.core.ClientType;
import com.hazelcast.internal.cluster.ClusterService;
import com.hazelcast.logging.ILogger;
import com.hazelcast.nio.Address;
import com.hazelcast.security.SecurityContext;
import com.hazelcast.spi.EventService;
import com.hazelcast.spi.ProxyService;
import com.hazelcast.spi.exception.TargetNotMemberException;
import com.hazelcast.spi.partition.IPartitionService;
import com.hazelcast.transaction.TransactionManagerService;
import java.util.Collection;
import java.util.Collections;
import java.util.Map;

public class NoOpClientEngine implements ClientEngine {
  public boolean bind(ClientEndpoint endpoint) { return true; }
  
  public Collection<Client> getClients() { return Collections.emptyList(); }
  
  public int getClientEndpointCount() { return 0; }
  
  public IPartitionService getPartitionService() { return null; }
  
  public ClusterService getClusterService() { return null; }
  
  public EventService getEventService() { return null; }
  
  public ProxyService getProxyService() { return null; }
  
  public ILogger getLogger(Class clazz) { return null; }
  
  public Address getThisAddress() { return null; }
  
  public String getThisUuid() { return null; }
  
  public ClientEndpointManager getEndpointManager() { return null; }
  
  public ClientExceptions getClientExceptions() { return null; }
  
  public SecurityContext getSecurityContext() { return null; }
  
  public TransactionManagerService getTransactionManagerService() { return null; }
  
  public ClientPartitionListenerService getPartitionListenerService() { return null; }
  
  public Map<ClientType, Integer> getConnectedClientStats() { return Collections.emptyMap(); }
  
  public Map<String, String> getClientStatistics() { return Collections.emptyMap(); }
  
  public String getOwnerUuid(String clientUuid) { return null; }
  
  public boolean isClientAllowed(Client client) { return true; }
  
  public void applySelector(ClientSelector selector) {}
  
  public void accept(ClientMessage clientMessage) {}
  
  public Address memberAddressOf(Address clientAddress) { throw new TargetNotMemberException("NoOpClientEngine does not supply translation from client to member address"); }
  
  public Address clientAddressOf(Address clientAddress) { throw new TargetNotMemberException("NoOpClientEngine does not supply translation from member to client address"); }
}
