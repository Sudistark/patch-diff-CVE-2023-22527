package com.hazelcast.scheduledexecutor.impl;

import com.hazelcast.internal.serialization.DataSerializerHook;
import com.hazelcast.internal.serialization.impl.FactoryIdHelper;
import com.hazelcast.nio.serialization.DataSerializableFactory;

public class ScheduledExecutorDataSerializerHook implements DataSerializerHook {
  public static final int F_ID = FactoryIdHelper.getFactoryId("hazelcast.serialization.ds.scheduled.executor", -39);
  
  public static final int TASK_HANDLER = 1;
  
  public static final int TASK_DESCRIPTOR = 2;
  
  public static final int RUNNABLE_DEFINITION = 3;
  
  public static final int RUNNABLE_ADAPTER = 4;
  
  public static final int NAMED_TASK_DECORATOR = 5;
  
  public static final int SCHEDULE_OP = 6;
  
  public static final int SCHEDULE_BACKUP_OP = 7;
  
  public static final int CANCEL_OP = 8;
  
  public static final int CANCEL_BACKUP_OP = 9;
  
  public static final int GET_RESULT = 10;
  
  public static final int PUBLISH_RESULT = 11;
  
  public static final int GET_DELAY_OP = 12;
  
  public static final int IS_DONE_OP = 13;
  
  public static final int IS_CANCELED_OP = 14;
  
  public static final int GET_STATS_OP = 15;
  
  public static final int TASK_STATS = 16;
  
  public static final int SYNC_STATE_OP = 17;
  
  public static final int SYNC_BACKUP_STATE_OP = 18;
  
  public static final int REPLICATION = 19;
  
  public static final int DISPOSE_TASK_OP = 20;
  
  public static final int DISPOSE_BACKUP_TASK_OP = 21;
  
  public static final int GET_ALL_SCHEDULED_ON_MEMBER = 22;
  
  public static final int GET_ALL_SCHEDULED_ON_PARTITION = 25;
  
  public static final int GET_ALL_SCHEDULED_ON_PARTITION_OPERATION_FACTORY = 26;
  
  public static final int SHUTDOWN = 23;
  
  public static final int TASK_RESOLUTION = 24;
  
  public static final int MERGE = 27;
  
  public static final int MERGE_BACKUP = 28;
  
  public int getFactoryId() { return F_ID; }
  
  public DataSerializableFactory createFactory() { return new Object(this); }
}
