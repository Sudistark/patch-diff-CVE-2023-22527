package com.hazelcast.multimap.impl;

import java.util.Collection;
import java.util.HashSet;
import java.util.LinkedList;

public class MultiMapValue {
  private final Collection<MultiMapRecord> collection;
  
  private long hits;
  
  public MultiMapValue(Collection<MultiMapRecord> collection) { this.collection = collection; }
  
  public Collection<MultiMapRecord> getCollection(boolean copyOf) {
    if (copyOf)
      return getCopyOfCollection(); 
    return this.collection;
  }
  
  private Collection<MultiMapRecord> getCopyOfCollection() {
    if (this.collection instanceof java.util.Set)
      return new HashSet(this.collection); 
    if (this.collection instanceof java.util.List)
      return new LinkedList(this.collection); 
    throw new IllegalArgumentException("No Matching CollectionProxyType!");
  }
  
  public void incrementHit() { this.hits++; }
  
  public long getHits() { return this.hits; }
  
  public void setHits(long hits) { this.hits = hits; }
  
  public boolean containsRecordId(long recordId) {
    for (MultiMapRecord record : this.collection) {
      if (record.getRecordId() == recordId)
        return true; 
    } 
    return false;
  }
}
