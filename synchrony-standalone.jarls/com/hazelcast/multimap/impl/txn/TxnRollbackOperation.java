package com.hazelcast.multimap.impl.txn;

import com.hazelcast.multimap.impl.MultiMapContainer;
import com.hazelcast.multimap.impl.operations.AbstractBackupAwareMultiMapOperation;
import com.hazelcast.nio.serialization.Data;
import com.hazelcast.spi.Notifier;
import com.hazelcast.spi.Operation;
import com.hazelcast.spi.WaitNotifyKey;
import com.hazelcast.transaction.TransactionException;

public class TxnRollbackOperation extends AbstractBackupAwareMultiMapOperation implements Notifier {
  public TxnRollbackOperation() {}
  
  public TxnRollbackOperation(int partitionId, String name, Data dataKey, long threadId) {
    super(name, dataKey, threadId);
    setPartitionId(partitionId);
  }
  
  public void run() {
    MultiMapContainer container = getOrCreateContainer();
    if (container.isLocked(this.dataKey) && !container.unlock(this.dataKey, getCallerUuid(), this.threadId, getCallId()))
      throw new TransactionException("Lock is not owned by the transaction! Owner: " + container
          .getLockOwnerInfo(this.dataKey)); 
  }
  
  public Operation getBackupOperation() { return new TxnRollbackBackupOperation(this.name, this.dataKey, getCallerUuid(), this.threadId); }
  
  public boolean shouldNotify() { return true; }
  
  public WaitNotifyKey getNotifiedKey() { return getWaitKey(); }
  
  public int getId() { return 39; }
}
