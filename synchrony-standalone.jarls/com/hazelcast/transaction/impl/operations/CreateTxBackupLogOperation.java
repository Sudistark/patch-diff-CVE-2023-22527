package com.hazelcast.transaction.impl.operations;

import com.hazelcast.nio.ObjectDataInput;
import com.hazelcast.nio.ObjectDataOutput;
import com.hazelcast.spi.ExceptionAction;
import com.hazelcast.transaction.impl.TransactionManagerServiceImpl;
import java.io.IOException;

public class CreateTxBackupLogOperation extends AbstractTxOperation {
  private String callerUuid;
  
  private String txnId;
  
  public CreateTxBackupLogOperation() {}
  
  public CreateTxBackupLogOperation(String callerUuid, String txnId) {
    this.callerUuid = callerUuid;
    this.txnId = txnId;
  }
  
  public void run() {
    TransactionManagerServiceImpl txManagerService = (TransactionManagerServiceImpl)getService();
    txManagerService.createBackupLog(this.callerUuid, this.txnId);
  }
  
  public Object getResponse() { return Boolean.valueOf(true); }
  
  public ExceptionAction onInvocationException(Throwable throwable) {
    if (throwable instanceof com.hazelcast.core.MemberLeftException || throwable instanceof com.hazelcast.spi.exception.TargetNotMemberException)
      return ExceptionAction.THROW_EXCEPTION; 
    return super.onInvocationException(throwable);
  }
  
  public int getId() { return 0; }
  
  public String getCallerUuid() { return this.callerUuid; }
  
  public String getTxnId() { return this.txnId; }
  
  protected void writeInternal(ObjectDataOutput out) throws IOException {
    out.writeUTF(this.callerUuid);
    out.writeUTF(this.txnId);
  }
  
  protected void readInternal(ObjectDataInput in) throws IOException {
    this.callerUuid = in.readUTF();
    this.txnId = in.readUTF();
  }
}
