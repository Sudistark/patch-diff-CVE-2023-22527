package com.hazelcast.transaction.impl.xa.operations;

import com.hazelcast.nio.ObjectDataInput;
import com.hazelcast.nio.ObjectDataOutput;
import com.hazelcast.nio.serialization.IdentifiedDataSerializable;
import com.hazelcast.spi.NodeEngine;
import com.hazelcast.spi.Operation;
import com.hazelcast.transaction.impl.TransactionDataSerializerHook;
import com.hazelcast.transaction.impl.xa.XAService;
import com.hazelcast.transaction.impl.xa.XATransaction;
import com.hazelcast.transaction.impl.xa.XATransactionDTO;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

public class XaReplicationOperation extends Operation implements IdentifiedDataSerializable {
  private List<XATransactionDTO> migrationData;
  
  public XaReplicationOperation() {}
  
  public XaReplicationOperation(List<XATransactionDTO> migrationData, int partitionId, int replicaIndex) {
    setPartitionId(partitionId);
    setReplicaIndex(replicaIndex);
    this.migrationData = migrationData;
  }
  
  public void run() {
    XAService xaService = (XAService)getService();
    NodeEngine nodeEngine = getNodeEngine();
    for (XATransactionDTO transactionDTO : this.migrationData) {
      XATransaction transaction = new XATransaction(nodeEngine, transactionDTO.getRecords(), transactionDTO.getTxnId(), transactionDTO.getXid(), transactionDTO.getOwnerUuid(), transactionDTO.getTimeoutMilis(), transactionDTO.getStartTime());
      xaService.putTransaction(transaction);
    } 
  }
  
  protected void writeInternal(ObjectDataOutput out) throws IOException {
    out.writeInt(this.migrationData.size());
    for (XATransactionDTO transactionDTO : this.migrationData)
      out.writeObject(transactionDTO); 
  }
  
  protected void readInternal(ObjectDataInput in) throws IOException {
    int size = in.readInt();
    this.migrationData = new ArrayList(size);
    for (int i = 0; i < size; i++) {
      XATransactionDTO transactionDTO = (XATransactionDTO)in.readObject();
      this.migrationData.add(transactionDTO);
    } 
  }
  
  public int getFactoryId() { return TransactionDataSerializerHook.F_ID; }
  
  public int getId() { return 17; }
}
