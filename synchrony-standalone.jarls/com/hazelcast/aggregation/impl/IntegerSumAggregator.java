package com.hazelcast.aggregation.impl;

import com.hazelcast.aggregation.Aggregator;
import com.hazelcast.nio.ObjectDataInput;
import com.hazelcast.nio.ObjectDataOutput;
import com.hazelcast.nio.serialization.IdentifiedDataSerializable;
import com.hazelcast.query.impl.Numbers;
import java.io.IOException;

public final class IntegerSumAggregator<I> extends AbstractAggregator<I, Number, Long> implements IdentifiedDataSerializable {
  private long sum;
  
  public IntegerSumAggregator() {}
  
  public IntegerSumAggregator(String attributePath) { super(attributePath); }
  
  public void accumulateExtracted(I entry, Number value) { this.sum += Numbers.asIntExactly(value); }
  
  public void combine(Aggregator aggregator) {
    IntegerSumAggregator integerSumAggregator = (IntegerSumAggregator)aggregator;
    this.sum += integerSumAggregator.sum;
  }
  
  public Long aggregate() { return Long.valueOf(this.sum); }
  
  public int getFactoryId() { return AggregatorDataSerializerHook.F_ID; }
  
  public int getId() { return 11; }
  
  public void writeData(ObjectDataOutput out) throws IOException {
    out.writeUTF(this.attributePath);
    out.writeLong(this.sum);
  }
  
  public void readData(ObjectDataInput in) throws IOException {
    this.attributePath = in.readUTF();
    this.sum = in.readLong();
  }
}
