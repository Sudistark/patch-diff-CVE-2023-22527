package com.hazelcast.aggregation.impl;

import com.hazelcast.aggregation.Aggregator;
import com.hazelcast.nio.ObjectDataInput;
import com.hazelcast.nio.ObjectDataOutput;
import com.hazelcast.nio.serialization.IdentifiedDataSerializable;
import java.io.IOException;

public final class CountAggregator<I> extends AbstractAggregator<I, Object, Long> implements IdentifiedDataSerializable {
  private long count;
  
  public CountAggregator() {}
  
  public CountAggregator(String attributePath) { super(attributePath); }
  
  public void accumulateExtracted(I entry, Object value) { this.count++; }
  
  public void combine(Aggregator aggregator) {
    CountAggregator countAggregator = (CountAggregator)aggregator;
    this.count += countAggregator.count;
  }
  
  public Long aggregate() { return Long.valueOf(this.count); }
  
  public int getFactoryId() { return AggregatorDataSerializerHook.F_ID; }
  
  public int getId() { return 4; }
  
  public void writeData(ObjectDataOutput out) throws IOException {
    out.writeUTF(this.attributePath);
    out.writeLong(this.count);
  }
  
  public void readData(ObjectDataInput in) throws IOException {
    this.attributePath = in.readUTF();
    this.count = in.readLong();
  }
}
