package com.hazelcast.replicatedmap.impl.operation;

import com.hazelcast.nio.ObjectDataInput;
import com.hazelcast.nio.ObjectDataOutput;
import com.hazelcast.nio.serialization.Data;
import com.hazelcast.replicatedmap.impl.ReplicatedMapService;
import com.hazelcast.replicatedmap.impl.record.ReplicatedRecordStore;
import com.hazelcast.spi.ReadonlyOperation;
import java.io.IOException;
import java.util.Collection;

public class ContainsValueOperation extends AbstractNamedSerializableOperation implements ReadonlyOperation {
  private String name;
  
  private Data value;
  
  private boolean response;
  
  public ContainsValueOperation() {}
  
  public ContainsValueOperation(String name, Data value) {
    this.name = name;
    this.value = value;
  }
  
  public void run() {
    ReplicatedMapService service = (ReplicatedMapService)getService();
    Collection<ReplicatedRecordStore> stores = service.getAllReplicatedRecordStores(this.name);
    for (ReplicatedRecordStore store : stores) {
      if (store.containsValue(this.value)) {
        this.response = true;
        break;
      } 
    } 
  }
  
  public Object getResponse() { return Boolean.valueOf(this.response); }
  
  protected void writeInternal(ObjectDataOutput out) throws IOException {
    out.writeUTF(this.name);
    out.writeData(this.value);
  }
  
  protected void readInternal(ObjectDataInput in) throws IOException {
    this.name = in.readUTF();
    this.value = in.readData();
  }
  
  public int getId() { return 14; }
  
  public String getName() { return this.name; }
}
