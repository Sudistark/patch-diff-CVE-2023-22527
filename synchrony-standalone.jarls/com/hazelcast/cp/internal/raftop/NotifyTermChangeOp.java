package com.hazelcast.cp.internal.raftop;

import com.hazelcast.cp.CPGroupId;
import com.hazelcast.cp.internal.RaftOp;
import com.hazelcast.cp.internal.RaftServiceDataSerializerHook;
import com.hazelcast.cp.internal.TermChangeAwareService;
import com.hazelcast.logging.ILogger;
import com.hazelcast.nio.ObjectDataInput;
import com.hazelcast.nio.ObjectDataOutput;
import com.hazelcast.nio.serialization.IdentifiedDataSerializable;
import java.io.IOException;

public class NotifyTermChangeOp extends RaftOp implements IdentifiedDataSerializable {
  public Object run(CPGroupId groupId, long commitIndex) {
    ILogger logger = getLogger();
    for (TermChangeAwareService service : getNodeEngine().getServices(TermChangeAwareService.class)) {
      try {
        service.onNewTermCommit(groupId, commitIndex);
      } catch (Exception e) {
        logger.severe("onNewTermCommit() failed for service: " + service.getClass().getSimpleName() + " and CP group: " + groupId, e);
      } 
    } 
    return null;
  }
  
  protected String getServiceName() { return null; }
  
  public int getFactoryId() { return RaftServiceDataSerializerHook.F_ID; }
  
  public int getId() { return 30; }
  
  public void writeData(ObjectDataOutput out) throws IOException {}
  
  public void readData(ObjectDataInput in) throws IOException {}
}
