package com.hazelcast.cp.internal.raftop.metadata;

import com.hazelcast.cp.CPGroupId;
import com.hazelcast.cp.internal.RaftService;
import com.hazelcast.cp.internal.RaftServiceDataSerializerHook;
import com.hazelcast.cp.internal.RaftSystemOperation;
import com.hazelcast.nio.ObjectDataInput;
import com.hazelcast.nio.ObjectDataOutput;
import com.hazelcast.nio.serialization.IdentifiedDataSerializable;
import com.hazelcast.spi.Operation;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Collection;

public class DestroyRaftNodesOp extends Operation implements IdentifiedDataSerializable, RaftSystemOperation {
  private Collection<CPGroupId> groupIds;
  
  public DestroyRaftNodesOp() {}
  
  public DestroyRaftNodesOp(Collection<CPGroupId> groupIds) { this.groupIds = groupIds; }
  
  public void run() {
    RaftService service = (RaftService)getService();
    for (CPGroupId groupId : this.groupIds)
      service.destroyRaftNode(groupId); 
  }
  
  public String getServiceName() { return "hz:core:raft"; }
  
  public boolean returnsResponse() { return false; }
  
  public int getFactoryId() { return RaftServiceDataSerializerHook.F_ID; }
  
  public int getId() { return 21; }
  
  protected void writeInternal(ObjectDataOutput out) throws IOException {
    super.writeInternal(out);
    out.writeInt(this.groupIds.size());
    for (CPGroupId groupId : this.groupIds)
      out.writeObject(groupId); 
  }
  
  protected void readInternal(ObjectDataInput in) throws IOException {
    super.readInternal(in);
    int count = in.readInt();
    this.groupIds = new ArrayList();
    for (int i = 0; i < count; i++) {
      CPGroupId groupId = (CPGroupId)in.readObject();
      this.groupIds.add(groupId);
    } 
  }
  
  protected void toString(StringBuilder sb) { sb.append(", groupIds=").append(this.groupIds); }
}
