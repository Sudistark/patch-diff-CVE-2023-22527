package com.hazelcast.cp.internal.raftop.metadata;

import com.hazelcast.cp.CPGroupId;
import com.hazelcast.cp.internal.IndeterminateOperationStateAware;
import com.hazelcast.cp.internal.MetadataRaftGroupManager;
import com.hazelcast.cp.internal.RaftServiceDataSerializerHook;
import com.hazelcast.nio.ObjectDataInput;
import com.hazelcast.nio.ObjectDataOutput;
import com.hazelcast.nio.serialization.IdentifiedDataSerializable;
import java.io.IOException;
import java.util.HashSet;
import java.util.Set;

public class CompleteDestroyRaftGroupsOp extends MetadataRaftGroupOp implements IndeterminateOperationStateAware, IdentifiedDataSerializable {
  private Set<CPGroupId> groupIds;
  
  public CompleteDestroyRaftGroupsOp() {}
  
  public CompleteDestroyRaftGroupsOp(Set<CPGroupId> groupIds) { this.groupIds = groupIds; }
  
  public Object run(MetadataRaftGroupManager metadataGroupManager, long commitIndex) {
    metadataGroupManager.completeDestroyRaftGroups(this.groupIds);
    return null;
  }
  
  public boolean isRetryableOnIndeterminateOperationState() { return true; }
  
  public int getFactoryId() { return RaftServiceDataSerializerHook.F_ID; }
  
  public int getId() { return 15; }
  
  public void writeData(ObjectDataOutput out) throws IOException {
    out.writeInt(this.groupIds.size());
    for (CPGroupId groupId : this.groupIds)
      out.writeObject(groupId); 
  }
  
  public void readData(ObjectDataInput in) throws IOException {
    int count = in.readInt();
    this.groupIds = new HashSet();
    for (int i = 0; i < count; i++) {
      CPGroupId groupId = (CPGroupId)in.readObject();
      this.groupIds.add(groupId);
    } 
  }
  
  protected void toString(StringBuilder sb) { sb.append(", groupIds=").append(this.groupIds); }
}
