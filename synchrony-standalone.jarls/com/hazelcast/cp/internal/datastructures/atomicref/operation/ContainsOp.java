package com.hazelcast.cp.internal.datastructures.atomicref.operation;

import com.hazelcast.cp.CPGroupId;
import com.hazelcast.cp.internal.IndeterminateOperationStateAware;
import com.hazelcast.cp.internal.datastructures.atomicref.RaftAtomicRef;
import com.hazelcast.nio.ObjectDataInput;
import com.hazelcast.nio.ObjectDataOutput;
import com.hazelcast.nio.serialization.Data;
import com.hazelcast.nio.serialization.IdentifiedDataSerializable;
import java.io.IOException;

public class ContainsOp extends AbstractAtomicRefOp implements IndeterminateOperationStateAware, IdentifiedDataSerializable {
  private Data value;
  
  public ContainsOp() {}
  
  public ContainsOp(String name, Data value) {
    super(name);
    this.value = value;
  }
  
  public Object run(CPGroupId groupId, long commitIndex) {
    RaftAtomicRef ref = getAtomicRef(groupId);
    return Boolean.valueOf(ref.contains(this.value));
  }
  
  public boolean isRetryableOnIndeterminateOperationState() { return true; }
  
  public int getId() { return 4; }
  
  public void writeData(ObjectDataOutput out) throws IOException {
    super.writeData(out);
    out.writeData(this.value);
  }
  
  public void readData(ObjectDataInput in) throws IOException {
    super.readData(in);
    this.value = in.readData();
  }
}
