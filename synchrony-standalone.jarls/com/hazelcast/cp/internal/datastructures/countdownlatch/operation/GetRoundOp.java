package com.hazelcast.cp.internal.datastructures.countdownlatch.operation;

import com.hazelcast.cp.CPGroupId;
import com.hazelcast.cp.internal.IndeterminateOperationStateAware;
import com.hazelcast.cp.internal.datastructures.countdownlatch.RaftCountDownLatchService;

public class GetRoundOp extends AbstractCountDownLatchOp implements IndeterminateOperationStateAware {
  public GetRoundOp() {}
  
  public GetRoundOp(String name) { super(name); }
  
  public Object run(CPGroupId groupId, long commitIndex) {
    RaftCountDownLatchService service = (RaftCountDownLatchService)getService();
    return Integer.valueOf(service.getRound(groupId, this.name));
  }
  
  public boolean isRetryableOnIndeterminateOperationState() { return true; }
  
  public int getId() { return 7; }
}
