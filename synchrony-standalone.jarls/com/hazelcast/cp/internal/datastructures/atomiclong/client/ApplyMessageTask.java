package com.hazelcast.cp.internal.datastructures.atomiclong.client;

import com.hazelcast.client.impl.protocol.ClientMessage;
import com.hazelcast.client.impl.protocol.codec.CPAtomicLongApplyCodec;
import com.hazelcast.core.IFunction;
import com.hazelcast.cp.internal.client.AbstractCPMessageTask;
import com.hazelcast.cp.internal.datastructures.atomiclong.operation.ApplyOp;
import com.hazelcast.cp.internal.raft.QueryPolicy;
import com.hazelcast.instance.Node;
import com.hazelcast.nio.Connection;
import com.hazelcast.security.permission.AtomicLongPermission;
import java.security.Permission;

public class ApplyMessageTask extends AbstractCPMessageTask<CPAtomicLongApplyCodec.RequestParameters> {
  public ApplyMessageTask(ClientMessage clientMessage, Node node, Connection connection) { super(clientMessage, node, connection); }
  
  protected void processMessage() {
    IFunction<Long, Object> function = (IFunction)this.serializationService.toObject(((CPAtomicLongApplyCodec.RequestParameters)this.parameters).function);
    query(((CPAtomicLongApplyCodec.RequestParameters)this.parameters).groupId, new ApplyOp(((CPAtomicLongApplyCodec.RequestParameters)this.parameters).name, function), QueryPolicy.LINEARIZABLE);
  }
  
  protected CPAtomicLongApplyCodec.RequestParameters decodeClientMessage(ClientMessage clientMessage) { return CPAtomicLongApplyCodec.decodeRequest(clientMessage); }
  
  protected ClientMessage encodeResponse(Object response) { return CPAtomicLongApplyCodec.encodeResponse(this.nodeEngine.toData(response)); }
  
  public String getServiceName() { return "hz:raft:atomicLongService"; }
  
  public Permission getRequiredPermission() { return new AtomicLongPermission(((CPAtomicLongApplyCodec.RequestParameters)this.parameters).name, new String[] { "modify" }); }
  
  public String getDistributedObjectName() { return ((CPAtomicLongApplyCodec.RequestParameters)this.parameters).name; }
  
  public String getMethodName() { return "apply"; }
  
  public Object[] getParameters() { return new Object[] { ((CPAtomicLongApplyCodec.RequestParameters)this.parameters).function }; }
}
