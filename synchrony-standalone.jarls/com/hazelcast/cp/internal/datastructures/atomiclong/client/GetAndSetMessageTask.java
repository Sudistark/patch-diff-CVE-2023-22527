package com.hazelcast.cp.internal.datastructures.atomiclong.client;

import com.hazelcast.client.impl.protocol.ClientMessage;
import com.hazelcast.client.impl.protocol.codec.CPAtomicLongGetAndSetCodec;
import com.hazelcast.cp.internal.client.AbstractCPMessageTask;
import com.hazelcast.cp.internal.datastructures.atomiclong.operation.GetAndSetOp;
import com.hazelcast.instance.Node;
import com.hazelcast.nio.Connection;
import com.hazelcast.security.permission.AtomicLongPermission;
import java.security.Permission;

public class GetAndSetMessageTask extends AbstractCPMessageTask<CPAtomicLongGetAndSetCodec.RequestParameters> {
  public GetAndSetMessageTask(ClientMessage clientMessage, Node node, Connection connection) { super(clientMessage, node, connection); }
  
  protected void processMessage() { invoke(((CPAtomicLongGetAndSetCodec.RequestParameters)this.parameters).groupId, new GetAndSetOp(((CPAtomicLongGetAndSetCodec.RequestParameters)this.parameters).name, ((CPAtomicLongGetAndSetCodec.RequestParameters)this.parameters).newValue)); }
  
  protected CPAtomicLongGetAndSetCodec.RequestParameters decodeClientMessage(ClientMessage clientMessage) { return CPAtomicLongGetAndSetCodec.decodeRequest(clientMessage); }
  
  protected ClientMessage encodeResponse(Object response) { return CPAtomicLongGetAndSetCodec.encodeResponse(((Long)response).longValue()); }
  
  public String getServiceName() { return "hz:raft:atomicLongService"; }
  
  public Permission getRequiredPermission() { return new AtomicLongPermission(((CPAtomicLongGetAndSetCodec.RequestParameters)this.parameters).name, new String[] { "modify" }); }
  
  public String getDistributedObjectName() { return ((CPAtomicLongGetAndSetCodec.RequestParameters)this.parameters).name; }
  
  public String getMethodName() { return "getAndSet"; }
  
  public Object[] getParameters() { return new Object[] { Long.valueOf(((CPAtomicLongGetAndSetCodec.RequestParameters)this.parameters).newValue) }; }
}
