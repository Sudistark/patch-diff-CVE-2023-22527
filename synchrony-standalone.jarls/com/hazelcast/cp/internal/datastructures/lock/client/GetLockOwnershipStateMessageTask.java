package com.hazelcast.cp.internal.datastructures.lock.client;

import com.hazelcast.client.impl.protocol.ClientMessage;
import com.hazelcast.client.impl.protocol.codec.CPFencedLockGetLockOwnershipCodec;
import com.hazelcast.cp.internal.client.AbstractCPMessageTask;
import com.hazelcast.cp.internal.datastructures.lock.RaftLockOwnershipState;
import com.hazelcast.cp.internal.datastructures.lock.operation.GetLockOwnershipStateOp;
import com.hazelcast.cp.internal.raft.QueryPolicy;
import com.hazelcast.instance.Node;
import com.hazelcast.nio.Connection;
import com.hazelcast.security.permission.LockPermission;
import java.security.Permission;

public class GetLockOwnershipStateMessageTask extends AbstractCPMessageTask<CPFencedLockGetLockOwnershipCodec.RequestParameters> {
  public GetLockOwnershipStateMessageTask(ClientMessage clientMessage, Node node, Connection connection) { super(clientMessage, node, connection); }
  
  protected void processMessage() { query(((CPFencedLockGetLockOwnershipCodec.RequestParameters)this.parameters).groupId, new GetLockOwnershipStateOp(((CPFencedLockGetLockOwnershipCodec.RequestParameters)this.parameters).name), QueryPolicy.LINEARIZABLE); }
  
  protected CPFencedLockGetLockOwnershipCodec.RequestParameters decodeClientMessage(ClientMessage clientMessage) { return CPFencedLockGetLockOwnershipCodec.decodeRequest(clientMessage); }
  
  protected ClientMessage encodeResponse(Object response) {
    RaftLockOwnershipState lockState = (RaftLockOwnershipState)response;
    return CPFencedLockGetLockOwnershipCodec.encodeResponse(lockState.getFence(), lockState.getLockCount(), lockState
        .getSessionId(), lockState.getThreadId());
  }
  
  public String getServiceName() { return "hz:raft:lockService"; }
  
  public Permission getRequiredPermission() { return new LockPermission(((CPFencedLockGetLockOwnershipCodec.RequestParameters)this.parameters).name, new String[] { "read" }); }
  
  public String getDistributedObjectName() { return ((CPFencedLockGetLockOwnershipCodec.RequestParameters)this.parameters).name; }
  
  public String getMethodName() { return "getLockOwnershipState"; }
  
  public Object[] getParameters() { return new Object[0]; }
}
