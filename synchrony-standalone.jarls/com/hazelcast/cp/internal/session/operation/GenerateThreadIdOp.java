package com.hazelcast.cp.internal.session.operation;

import com.hazelcast.cp.CPGroupId;
import com.hazelcast.cp.internal.IndeterminateOperationStateAware;
import com.hazelcast.cp.internal.RaftOp;
import com.hazelcast.cp.internal.session.RaftSessionService;
import com.hazelcast.cp.internal.session.RaftSessionServiceDataSerializerHook;
import com.hazelcast.nio.ObjectDataInput;
import com.hazelcast.nio.ObjectDataOutput;
import com.hazelcast.nio.serialization.IdentifiedDataSerializable;
import java.io.IOException;

public class GenerateThreadIdOp extends RaftOp implements IndeterminateOperationStateAware, IdentifiedDataSerializable {
  public Object run(CPGroupId groupId, long commitIndex) {
    RaftSessionService service = (RaftSessionService)getService();
    return Long.valueOf(service.generateThreadId(groupId));
  }
  
  public boolean isRetryableOnIndeterminateOperationState() { return true; }
  
  protected String getServiceName() { return "hz:core:raftSession"; }
  
  public int getFactoryId() { return RaftSessionServiceDataSerializerHook.F_ID; }
  
  public int getId() { return 10; }
  
  public void writeData(ObjectDataOutput out) throws IOException {}
  
  public void readData(ObjectDataInput in) throws IOException {}
}
