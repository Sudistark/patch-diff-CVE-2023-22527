package com.hazelcast.cp.internal.session.client;

import com.hazelcast.client.impl.protocol.ClientMessage;
import com.hazelcast.client.impl.protocol.codec.CPSessionGenerateThreadIdCodec;
import com.hazelcast.cp.internal.client.AbstractCPMessageTask;
import com.hazelcast.cp.internal.session.operation.GenerateThreadIdOp;
import com.hazelcast.instance.Node;
import com.hazelcast.nio.Connection;
import java.security.Permission;

public class GenerateThreadIdMessageTask extends AbstractCPMessageTask<CPSessionGenerateThreadIdCodec.RequestParameters> {
  public GenerateThreadIdMessageTask(ClientMessage clientMessage, Node node, Connection connection) { super(clientMessage, node, connection); }
  
  protected void processMessage() { invoke(((CPSessionGenerateThreadIdCodec.RequestParameters)this.parameters).groupId, new GenerateThreadIdOp()); }
  
  protected CPSessionGenerateThreadIdCodec.RequestParameters decodeClientMessage(ClientMessage clientMessage) { return CPSessionGenerateThreadIdCodec.decodeRequest(clientMessage); }
  
  protected ClientMessage encodeResponse(Object response) { return CPSessionGenerateThreadIdCodec.encodeResponse(((Long)response).longValue()); }
  
  public String getServiceName() { return "hz:raft:semaphoreService"; }
  
  public String getDistributedObjectName() { return null; }
  
  public Permission getRequiredPermission() { return null; }
  
  public String getMethodName() { return null; }
  
  public Object[] getParameters() { return new Object[0]; }
}
