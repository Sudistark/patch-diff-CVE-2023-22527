package com.hazelcast.cache.impl;

import java.util.Map;
import javax.cache.Cache;

public class CacheEntry<K, V> extends Object implements Cache.Entry<K, V>, Map.Entry<K, V> {
  private final K key;
  
  private V value;
  
  public CacheEntry(K key, V value) {
    this.key = key;
    this.value = value;
  }
  
  public K getKey() { return (K)this.key; }
  
  public V getValue() { return (V)this.value; }
  
  public <T> T unwrap(Class<T> clazz) {
    if (clazz.isAssignableFrom(getClass()))
      return (T)clazz.cast(this); 
    throw new IllegalArgumentException("Unwrapping to " + clazz + " is not supported by this implementation");
  }
  
  public V setValue(V value) { throw new UnsupportedOperationException(); }
}
