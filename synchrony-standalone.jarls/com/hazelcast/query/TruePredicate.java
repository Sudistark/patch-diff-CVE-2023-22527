package com.hazelcast.query;

import com.hazelcast.nio.ObjectDataInput;
import com.hazelcast.nio.ObjectDataOutput;
import com.hazelcast.nio.serialization.BinaryInterface;
import com.hazelcast.nio.serialization.IdentifiedDataSerializable;
import com.hazelcast.query.impl.predicates.PredicateDataSerializerHook;
import java.io.IOException;
import java.util.Map;

@BinaryInterface
public class TruePredicate<K, V> extends Object implements IdentifiedDataSerializable, Predicate<K, V> {
  public static final TruePredicate INSTANCE = new TruePredicate();
  
  private static final long serialVersionUID = 1L;
  
  public static <K, V> TruePredicate<K, V> truePredicate() { return INSTANCE; }
  
  public void writeData(ObjectDataOutput out) throws IOException {}
  
  public void readData(ObjectDataInput in) throws IOException {}
  
  public boolean apply(Map.Entry mapEntry) { return true; }
  
  public String toString() { return "TruePredicate{}"; }
  
  public int getFactoryId() { return PredicateDataSerializerHook.F_ID; }
  
  public int getId() { return 14; }
  
  public boolean equals(Object o) { return o instanceof TruePredicate; }
  
  public int hashCode() { return getClass().hashCode(); }
}
