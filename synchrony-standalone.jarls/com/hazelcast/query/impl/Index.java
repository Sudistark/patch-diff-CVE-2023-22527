package com.hazelcast.query.impl;

import com.hazelcast.core.TypeConverter;
import com.hazelcast.nio.serialization.Data;
import com.hazelcast.query.Predicate;
import java.util.Set;

public interface Index {
  String getName();
  
  String[] getComponents();
  
  boolean isOrdered();
  
  String getUniqueKey();
  
  TypeConverter getConverter();
  
  void putEntry(QueryableEntry paramQueryableEntry, Object paramObject, OperationSource paramOperationSource);
  
  void removeEntry(Data paramData, Object paramObject, OperationSource paramOperationSource);
  
  boolean isEvaluateOnly();
  
  boolean canEvaluate(Class<? extends Predicate> paramClass);
  
  Set<QueryableEntry> evaluate(Predicate paramPredicate);
  
  Set<QueryableEntry> getRecords(Comparable paramComparable);
  
  Set<QueryableEntry> getRecords(Comparable[] paramArrayOfComparable);
  
  Set<QueryableEntry> getRecords(Comparable paramComparable1, boolean paramBoolean1, Comparable paramComparable2, boolean paramBoolean2);
  
  Set<QueryableEntry> getRecords(Comparison paramComparison, Comparable paramComparable);
  
  void clear();
  
  void destroy();
}
