package com.hazelcast.query.impl.predicates;

import com.hazelcast.internal.serialization.DataSerializerHook;
import com.hazelcast.internal.serialization.impl.ArrayDataSerializableFactory;
import com.hazelcast.internal.serialization.impl.FactoryIdHelper;
import com.hazelcast.nio.serialization.DataSerializableFactory;
import com.hazelcast.util.ConstructorFunction;

public class PredicateDataSerializerHook implements DataSerializerHook {
  public static final int F_ID = FactoryIdHelper.getFactoryId("hazelcast.serialization.ds.predicate", -32);
  
  public static final int SQL_PREDICATE = 0;
  
  public static final int AND_PREDICATE = 1;
  
  public static final int BETWEEN_PREDICATE = 2;
  
  public static final int EQUAL_PREDICATE = 3;
  
  public static final int GREATERLESS_PREDICATE = 4;
  
  public static final int LIKE_PREDICATE = 5;
  
  public static final int ILIKE_PREDICATE = 6;
  
  public static final int IN_PREDICATE = 7;
  
  public static final int INSTANCEOF_PREDICATE = 8;
  
  public static final int NOTEQUAL_PREDICATE = 9;
  
  public static final int NOT_PREDICATE = 10;
  
  public static final int OR_PREDICATE = 11;
  
  public static final int REGEX_PREDICATE = 12;
  
  public static final int FALSE_PREDICATE = 13;
  
  public static final int TRUE_PREDICATE = 14;
  
  public static final int PAGING_PREDICATE = 15;
  
  public static final int PARTITION_PREDICATE = 16;
  
  public static final int NULL_OBJECT = 17;
  
  public static final int COMPOSITE_VALUE = 18;
  
  public static final int NEGATIVE_INFINITY = 19;
  
  public static final int POSITIVE_INFINITY = 20;
  
  public static final int LEN = 21;
  
  public int getFactoryId() { return F_ID; }
  
  public DataSerializableFactory createFactory() {
    ConstructorFunction[] constructors = new ConstructorFunction[21];
    constructors[0] = new Object(this);
    constructors[1] = new Object(this);
    constructors[2] = new Object(this);
    constructors[3] = new Object(this);
    constructors[4] = new Object(this);
    constructors[5] = new Object(this);
    constructors[6] = new Object(this);
    constructors[7] = new Object(this);
    constructors[8] = new Object(this);
    constructors[9] = new Object(this);
    constructors[10] = new Object(this);
    constructors[11] = new Object(this);
    constructors[12] = new Object(this);
    constructors[13] = new Object(this);
    constructors[14] = new Object(this);
    constructors[15] = new Object(this);
    constructors[16] = new Object(this);
    constructors[17] = new Object(this);
    constructors[18] = new Object(this);
    constructors[19] = new Object(this);
    constructors[20] = new Object(this);
    return new ArrayDataSerializableFactory(constructors);
  }
}
