package com.hazelcast.query.impl.predicates;

import com.hazelcast.query.Predicate;
import com.hazelcast.query.impl.Indexes;

public abstract class AbstractVisitor implements Visitor {
  public Predicate visit(EqualPredicate predicate, Indexes indexes) { return predicate; }
  
  public Predicate visit(NotEqualPredicate predicate, Indexes indexes) { return predicate; }
  
  public Predicate visit(AndPredicate predicate, Indexes indexes) { return predicate; }
  
  public Predicate visit(OrPredicate predicate, Indexes indexes) { return predicate; }
  
  public Predicate visit(NotPredicate predicate, Indexes indexes) { return predicate; }
  
  public Predicate visit(InPredicate predicate, Indexes indexes) { return predicate; }
  
  public Predicate visit(BetweenPredicate predicate, Indexes indexes) { return predicate; }
}
