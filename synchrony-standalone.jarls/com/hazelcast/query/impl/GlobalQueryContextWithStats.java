package com.hazelcast.query.impl;

import java.util.HashMap;
import java.util.HashSet;

public class GlobalQueryContextWithStats extends QueryContext {
  private final HashMap<String, QueryTrackingIndex> knownIndexes = new HashMap();
  
  private final HashSet<QueryTrackingIndex> trackedIndexes = new HashSet(8);
  
  void attachTo(Indexes indexes, int ownedPartitionCount) {
    super.attachTo(indexes, ownedPartitionCount);
    for (QueryTrackingIndex trackedIndex : this.trackedIndexes)
      trackedIndex.resetPerQueryStats(); 
    this.trackedIndexes.clear();
  }
  
  void applyPerQueryStats() {
    for (QueryTrackingIndex trackedIndex : this.trackedIndexes)
      trackedIndex.incrementQueryCount(); 
  }
  
  public Index matchIndex(String pattern, QueryContext.IndexMatchHint matchHint) {
    InternalIndex delegate = this.indexes.matchIndex(pattern, matchHint, this.ownedPartitionCount);
    if (delegate == null)
      return null; 
    QueryTrackingIndex trackingIndex = (QueryTrackingIndex)this.knownIndexes.get(pattern);
    if (trackingIndex == null) {
      trackingIndex = new QueryTrackingIndex(null);
      this.knownIndexes.put(pattern, trackingIndex);
    } 
    trackingIndex.attachTo(delegate);
    this.trackedIndexes.add(trackingIndex);
    return trackingIndex;
  }
}
