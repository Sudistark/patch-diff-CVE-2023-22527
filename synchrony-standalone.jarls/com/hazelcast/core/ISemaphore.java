package com.hazelcast.core;

import java.util.concurrent.TimeUnit;

public interface ISemaphore extends DistributedObject {
  String getName();
  
  boolean init(int paramInt);
  
  void acquire() throws InterruptedException;
  
  void acquire(int paramInt) throws InterruptedException;
  
  int availablePermits();
  
  int drainPermits();
  
  void reducePermits(int paramInt) throws InterruptedException;
  
  void increasePermits(int paramInt) throws InterruptedException;
  
  void release() throws InterruptedException;
  
  void release(int paramInt) throws InterruptedException;
  
  boolean tryAcquire();
  
  boolean tryAcquire(int paramInt);
  
  boolean tryAcquire(long paramLong, TimeUnit paramTimeUnit) throws InterruptedException;
  
  boolean tryAcquire(int paramInt, long paramLong, TimeUnit paramTimeUnit) throws InterruptedException;
}
