package com.hazelcast.core;

import com.hazelcast.monitor.LocalReplicatedMapStats;
import com.hazelcast.query.Predicate;
import java.util.Collection;
import java.util.Comparator;
import java.util.Map;
import java.util.Set;
import java.util.concurrent.TimeUnit;

public interface ReplicatedMap<K, V> extends Map<K, V>, DistributedObject {
  V put(K paramK, V paramV, long paramLong, TimeUnit paramTimeUnit);
  
  void clear();
  
  boolean removeEntryListener(String paramString);
  
  String addEntryListener(EntryListener<K, V> paramEntryListener);
  
  String addEntryListener(EntryListener<K, V> paramEntryListener, K paramK);
  
  String addEntryListener(EntryListener<K, V> paramEntryListener, Predicate<K, V> paramPredicate);
  
  String addEntryListener(EntryListener<K, V> paramEntryListener, Predicate<K, V> paramPredicate, K paramK);
  
  Collection<V> values();
  
  Collection<V> values(Comparator<V> paramComparator);
  
  Set<Map.Entry<K, V>> entrySet();
  
  Set<K> keySet();
  
  LocalReplicatedMapStats getReplicatedMapStats();
}
