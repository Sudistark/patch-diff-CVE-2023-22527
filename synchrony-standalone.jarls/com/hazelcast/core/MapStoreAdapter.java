package com.hazelcast.core;

import com.hazelcast.util.MapUtil;
import java.util.Collection;
import java.util.Map;

public class MapStoreAdapter<K, V> extends Object implements MapStore<K, V> {
  public void delete(K key) {}
  
  public void store(K key, V value) {}
  
  public void storeAll(Map<K, V> map) {
    for (Map.Entry<K, V> entry : map.entrySet())
      store(entry.getKey(), entry.getValue()); 
  }
  
  public void deleteAll(Collection<K> keys) {
    for (K key : keys)
      delete(key); 
  }
  
  public V load(K key) { return null; }
  
  public Map<K, V> loadAll(Collection<K> keys) {
    Map<K, V> result = MapUtil.createHashMap(keys.size());
    for (K key : keys) {
      V value = (V)load(key);
      if (value != null)
        result.put(key, value); 
    } 
    return result;
  }
  
  public Iterable<K> loadAllKeys() { return null; }
}
