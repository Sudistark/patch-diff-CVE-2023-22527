package com.hazelcast.mapreduce.impl.operation;

import com.hazelcast.mapreduce.impl.MapReduceDataSerializerHook;
import com.hazelcast.mapreduce.impl.MapReduceService;
import com.hazelcast.mapreduce.impl.task.JobProcessInformationImpl;
import com.hazelcast.mapreduce.impl.task.JobSupervisor;
import com.hazelcast.nio.ObjectDataInput;
import com.hazelcast.nio.ObjectDataOutput;
import java.io.IOException;

public class ProcessStatsUpdateOperation extends ProcessingOperation {
  private int processedRecords;
  
  public ProcessStatsUpdateOperation() {}
  
  public ProcessStatsUpdateOperation(String name, String jobId, int processedRecords) {
    super(name, jobId);
    this.processedRecords = processedRecords;
  }
  
  public void run() {
    MapReduceService mapReduceService = (MapReduceService)getService();
    JobSupervisor supervisor = mapReduceService.getJobSupervisor(getName(), getJobId());
    if (supervisor != null) {
      JobProcessInformationImpl processInformation = supervisor.getJobProcessInformation();
      processInformation.addProcessedRecords(this.processedRecords);
    } 
  }
  
  public Object getResponse() { return Boolean.TRUE; }
  
  protected void writeInternal(ObjectDataOutput out) throws IOException {
    super.writeInternal(out);
    out.writeInt(this.processedRecords);
  }
  
  protected void readInternal(ObjectDataInput in) throws IOException {
    super.readInternal(in);
    this.processedRecords = in.readInt();
  }
  
  public int getFactoryId() { return MapReduceDataSerializerHook.F_ID; }
  
  public int getId() { return 14; }
}
