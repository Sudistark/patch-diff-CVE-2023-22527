package com.hazelcast.mapreduce.impl.operation;

import com.hazelcast.mapreduce.impl.MapReduceDataSerializerHook;
import com.hazelcast.mapreduce.impl.MapReduceService;
import com.hazelcast.mapreduce.impl.task.JobSupervisor;
import com.hazelcast.nio.Address;
import com.hazelcast.nio.ObjectDataInput;
import com.hazelcast.nio.ObjectDataOutput;
import java.io.IOException;

public class CancelJobSupervisorOperation extends ProcessingOperation {
  private Address jobOwner;
  
  public CancelJobSupervisorOperation() {}
  
  public CancelJobSupervisorOperation(String name, String jobId) { super(name, jobId); }
  
  public Object getResponse() { return Boolean.TRUE; }
  
  public void run() {
    MapReduceService mapReduceService = (MapReduceService)getService();
    mapReduceService.registerJobSupervisorCancellation(getName(), getJobId(), this.jobOwner);
    JobSupervisor supervisor = mapReduceService.getJobSupervisor(getName(), getJobId());
    if (supervisor != null)
      supervisor.cancel(); 
  }
  
  protected void writeInternal(ObjectDataOutput out) throws IOException {
    super.writeInternal(out);
    out.writeObject(this.jobOwner);
  }
  
  protected void readInternal(ObjectDataInput in) throws IOException {
    super.readInternal(in);
    this.jobOwner = (Address)in.readObject();
  }
  
  public int getFactoryId() { return MapReduceDataSerializerHook.F_ID; }
  
  public int getId() { return 16; }
}
