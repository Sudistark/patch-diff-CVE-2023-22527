package com.hazelcast.mapreduce.aggregation.impl;

import com.hazelcast.mapreduce.Collator;
import com.hazelcast.mapreduce.CombinerFactory;
import com.hazelcast.mapreduce.Mapper;
import com.hazelcast.mapreduce.ReducerFactory;
import com.hazelcast.mapreduce.aggregation.Supplier;
import java.util.Map;

public class ComparableMinAggregation<Key, Value> extends Object implements AggType<Key, Value, Key, Comparable, Comparable, Comparable, Comparable> {
  public Collator<Map.Entry<Key, Comparable>, Comparable> getCollator() { return new Object(this); }
  
  public Mapper<Key, Value, Key, Comparable> getMapper(Supplier<Key, Value, Comparable> supplier) { return new SupplierConsumingMapper(supplier); }
  
  public CombinerFactory<Key, Comparable, Comparable> getCombinerFactory() { return new ComparableMinCombinerFactory(); }
  
  public ReducerFactory<Key, Comparable, Comparable> getReducerFactory() { return new ComparableMinReducerFactory(); }
}
