package com.hazelcast.mapreduce.aggregation.impl;

import com.hazelcast.mapreduce.Collator;
import com.hazelcast.mapreduce.CombinerFactory;
import com.hazelcast.mapreduce.Mapper;
import com.hazelcast.mapreduce.ReducerFactory;
import com.hazelcast.mapreduce.aggregation.Supplier;
import java.util.Map;

public class CountAggregation<Key, Value> extends Object implements AggType<Key, Value, Key, Object, Long, Long, Long> {
  public Collator<Map.Entry<Key, Long>, Long> getCollator() { return new Object(this); }
  
  public Mapper<Key, Value, Key, Object> getMapper(Supplier<Key, Value, Object> supplier) { return new SupplierConsumingMapper(supplier); }
  
  public CombinerFactory<Key, Object, Long> getCombinerFactory() { return new CountCombinerFactory(); }
  
  public ReducerFactory<Key, Long, Long> getReducerFactory() { return new CountReducerFactory(); }
}
