package com.hazelcast.partition.membergroup;

import com.hazelcast.core.Member;
import com.hazelcast.instance.MemberImpl;
import com.hazelcast.nio.Address;
import com.hazelcast.util.MapUtil;
import java.util.Collection;
import java.util.HashSet;
import java.util.Map;
import java.util.Set;

public class HostAwareMemberGroupFactory extends BackupSafeMemberGroupFactory implements MemberGroupFactory {
  protected Set<MemberGroup> createInternalMemberGroups(Collection<? extends Member> allMembers) {
    Map<String, MemberGroup> groups = MapUtil.createHashMap(allMembers.size());
    for (Member member : allMembers) {
      Address address = ((MemberImpl)member).getAddress();
      DefaultMemberGroup defaultMemberGroup = (MemberGroup)groups.get(address.getHost());
      if (defaultMemberGroup == null) {
        defaultMemberGroup = new DefaultMemberGroup();
        groups.put(address.getHost(), defaultMemberGroup);
      } 
      defaultMemberGroup.addMember(member);
    } 
    return new HashSet(groups.values());
  }
}
