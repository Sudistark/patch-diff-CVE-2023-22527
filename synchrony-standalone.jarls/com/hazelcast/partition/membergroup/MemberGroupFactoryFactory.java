package com.hazelcast.partition.membergroup;

import com.hazelcast.config.PartitionGroupConfig;
import com.hazelcast.spi.discovery.integration.DiscoveryService;

public final class MemberGroupFactoryFactory {
  public static MemberGroupFactory newMemberGroupFactory(PartitionGroupConfig partitionGroupConfig, DiscoveryService discoveryService) {
    PartitionGroupConfig.MemberGroupType memberGroupType;
    if (partitionGroupConfig == null || !partitionGroupConfig.isEnabled()) {
      memberGroupType = PartitionGroupConfig.MemberGroupType.PER_MEMBER;
    } else {
      memberGroupType = partitionGroupConfig.getGroupType();
    } 
    switch (null.$SwitchMap$com$hazelcast$config$PartitionGroupConfig$MemberGroupType[memberGroupType.ordinal()]) {
      case 1:
        return new HostAwareMemberGroupFactory();
      case 2:
        return new ConfigMemberGroupFactory(partitionGroupConfig.getMemberGroupConfigs());
      case 3:
        return new SingleMemberGroupFactory();
      case 4:
        return new ZoneAwareMemberGroupFactory();
      case 5:
        return new NodeAwareMemberGroupFactory();
      case 6:
        return new SPIAwareMemberGroupFactory(discoveryService);
    } 
    throw new RuntimeException("Unknown MemberGroupType:" + memberGroupType);
  }
}
