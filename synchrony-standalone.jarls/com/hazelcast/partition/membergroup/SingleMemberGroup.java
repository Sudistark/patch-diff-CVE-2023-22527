package com.hazelcast.partition.membergroup;

import com.hazelcast.core.Member;
import java.util.Collection;
import java.util.Iterator;

public class SingleMemberGroup implements MemberGroup {
  private Member member;
  
  public SingleMemberGroup() {}
  
  public SingleMemberGroup(Member member) { this.member = member; }
  
  public void addMember(Member member) {
    if (this.member != null)
      throw new UnsupportedOperationException(); 
    this.member = member;
  }
  
  public void addMembers(Collection<Member> members) { throw new UnsupportedOperationException(); }
  
  public void removeMember(Member member) {
    if (this.member != null && this.member.equals(member))
      this.member = null; 
  }
  
  public boolean hasMember(Member member) { return (this.member != null && this.member.equals(member)); }
  
  public Iterator<Member> iterator() { return new MemberIterator(this, null); }
  
  public int size() { return (this.member != null) ? 1 : 0; }
  
  public int hashCode() {
    int prime = 31;
    result = 1;
    return prime * result + ((this.member == null) ? 0 : this.member.hashCode());
  }
  
  public boolean equals(Object obj) {
    if (this == obj)
      return true; 
    if (obj == null)
      return false; 
    if (getClass() != obj.getClass())
      return false; 
    SingleMemberGroup other = (SingleMemberGroup)obj;
    if (this.member == null) {
      if (other.member != null)
        return false; 
    } else if (!this.member.equals(other.member)) {
      return false;
    } 
    return true;
  }
  
  public String toString() { return "SingleMemberGroup{member=" + this.member + '}'; }
}
