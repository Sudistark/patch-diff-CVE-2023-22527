package com.hazelcast.map.eviction;

import com.hazelcast.config.ConfigDataSerializerHook;
import com.hazelcast.core.EntryView;
import com.hazelcast.nio.ObjectDataInput;
import com.hazelcast.nio.ObjectDataOutput;
import com.hazelcast.nio.serialization.IdentifiedDataSerializable;
import java.io.IOException;

public class LRUEvictionPolicy extends MapEvictionPolicy implements IdentifiedDataSerializable {
  public static final LRUEvictionPolicy INSTANCE = new LRUEvictionPolicy();
  
  public int compare(EntryView entryView1, EntryView entryView2) {
    long lastAccessTime1 = entryView1.getLastAccessTime();
    long lastAccessTime2 = entryView2.getLastAccessTime();
    return (lastAccessTime1 < lastAccessTime2) ? -1 : ((lastAccessTime1 == lastAccessTime2) ? 0 : 1);
  }
  
  public int getFactoryId() { return ConfigDataSerializerHook.F_ID; }
  
  public int getId() { return 13; }
  
  public void writeData(ObjectDataOutput out) throws IOException {}
  
  public void readData(ObjectDataInput in) throws IOException {}
  
  public boolean equals(Object obj) {
    if (obj == null)
      return false; 
    return getClass().equals(obj.getClass());
  }
  
  public int hashCode() { return getClass().hashCode(); }
}
