package com.hazelcast.map.impl.wan;

import com.hazelcast.core.EntryView;
import com.hazelcast.nio.ObjectDataInput;
import com.hazelcast.nio.ObjectDataOutput;
import com.hazelcast.nio.serialization.Data;
import com.hazelcast.nio.serialization.IdentifiedDataSerializable;
import com.hazelcast.wan.ReplicationEventObject;
import com.hazelcast.wan.impl.DistributedServiceWanEventCounters;
import com.hazelcast.wan.impl.WanDataSerializerHook;
import java.io.IOException;

public class MapReplicationUpdate implements ReplicationEventObject, IdentifiedDataSerializable {
  private String mapName;
  
  private Object mergePolicy;
  
  private WanMapEntryView<Data, Data> entryView;
  
  public MapReplicationUpdate() {}
  
  public MapReplicationUpdate(String mapName, Object mergePolicy, EntryView<Data, Data> entryView) {
    this.mergePolicy = mergePolicy;
    this.mapName = mapName;
    if (entryView instanceof WanMapEntryView) {
      this.entryView = (WanMapEntryView)entryView;
    } else {
      this.entryView = new WanMapEntryView(entryView);
    } 
  }
  
  public String getMapName() { return this.mapName; }
  
  public void setMapName(String mapName) { this.mapName = mapName; }
  
  public Object getMergePolicy() { return this.mergePolicy; }
  
  public void setMergePolicy(Object mergePolicy) { this.mergePolicy = mergePolicy; }
  
  public WanMapEntryView<Data, Data> getEntryView() { return this.entryView; }
  
  public void setEntryView(WanMapEntryView<Data, Data> entryView) { this.entryView = entryView; }
  
  public void writeData(ObjectDataOutput out) throws IOException {
    out.writeUTF(this.mapName);
    out.writeObject(this.mergePolicy);
    out.writeObject(this.entryView);
  }
  
  public void readData(ObjectDataInput in) throws IOException {
    this.mapName = in.readUTF();
    this.mergePolicy = in.readObject();
    EntryView<Data, Data> entryView = (EntryView)in.readObject();
    if (entryView instanceof WanMapEntryView) {
      this.entryView = (WanMapEntryView)entryView;
    } else {
      this.entryView = new WanMapEntryView(entryView);
    } 
  }
  
  public int getFactoryId() { return WanDataSerializerHook.F_ID; }
  
  public int getId() { return 1; }
  
  public void incrementEventCount(DistributedServiceWanEventCounters counters) { counters.incrementUpdate(this.mapName); }
  
  public Data getKey() { return (Data)this.entryView.getKey(); }
}
