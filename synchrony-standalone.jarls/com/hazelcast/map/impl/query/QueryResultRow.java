package com.hazelcast.map.impl.query;

import com.hazelcast.map.impl.MapDataSerializerHook;
import com.hazelcast.nio.ObjectDataInput;
import com.hazelcast.nio.ObjectDataOutput;
import com.hazelcast.nio.serialization.Data;
import com.hazelcast.nio.serialization.IdentifiedDataSerializable;
import java.io.IOException;
import java.util.Map;

public class QueryResultRow extends Object implements IdentifiedDataSerializable, Map.Entry<Data, Data> {
  private Data key;
  
  private Data value;
  
  public QueryResultRow() {}
  
  public QueryResultRow(Data key, Data valueData) {
    this.key = key;
    this.value = valueData;
  }
  
  public Data getKey() { return this.key; }
  
  public Data getValue() { return this.value; }
  
  public Data setValue(Data value) { return value; }
  
  public int getFactoryId() { return MapDataSerializerHook.F_ID; }
  
  public int getId() { return 9; }
  
  public void writeData(ObjectDataOutput out) throws IOException {
    out.writeData(this.key);
    out.writeData(this.value);
  }
  
  public void readData(ObjectDataInput in) throws IOException {
    this.key = in.readData();
    this.value = in.readData();
  }
  
  public boolean equals(Object o) {
    if (this == o)
      return true; 
    if (o == null || getClass() != o.getClass())
      return false; 
    QueryResultRow that = (QueryResultRow)o;
    if ((this.key != null) ? !this.key.equals(that.key) : (that.key != null))
      return false; 
    if ((this.value != null) ? !this.value.equals(that.value) : (that.value != null))
      return false; 
    return true;
  }
  
  public int hashCode() { return hashCode(this.key) * 31 + hashCode(this.value); }
  
  private int hashCode(Data data) { return (data == null) ? 0 : data.hashCode(); }
}
