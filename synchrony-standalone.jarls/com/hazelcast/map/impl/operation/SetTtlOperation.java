package com.hazelcast.map.impl.operation;

import com.hazelcast.map.impl.record.Record;
import com.hazelcast.nio.serialization.Data;
import com.hazelcast.spi.BackupAwareOperation;
import com.hazelcast.spi.Operation;
import com.hazelcast.spi.impl.MutatingOperation;

public class SetTtlOperation extends LockAwareOperation implements BackupAwareOperation, MutatingOperation {
  private boolean response;
  
  public SetTtlOperation() {}
  
  public SetTtlOperation(String name, Data dataKey, long ttl) { super(name, dataKey, ttl, -1L); }
  
  public void onWaitExpire() { sendResponse(null); }
  
  public void run() { this.response = this.recordStore.setTtl(this.dataKey, this.ttl); }
  
  public void afterRun() {
    Record record = this.recordStore.getRecord(this.dataKey);
    if (record != null) {
      publishWanUpdate(this.dataKey, record.getValue());
      invalidateNearCache(this.dataKey);
    } 
  }
  
  public int getId() { return 148; }
  
  public Object getResponse() { return Boolean.valueOf(this.response); }
  
  public boolean shouldBackup() { return (this.mapContainer.getTotalBackupCount() > 0); }
  
  public int getSyncBackupCount() { return this.mapContainer.getBackupCount(); }
  
  public int getAsyncBackupCount() { return this.mapContainer.getAsyncBackupCount(); }
  
  public Operation getBackupOperation() { return new SetTtlBackupOperation(this.name, this.dataKey, this.ttl); }
}
