package com.hazelcast.map.impl.operation;

import com.hazelcast.nio.ObjectDataInput;
import com.hazelcast.nio.ObjectDataOutput;
import com.hazelcast.nio.serialization.Data;
import com.hazelcast.spi.impl.MutatingOperation;
import java.io.IOException;

public class ReplaceIfSameOperation extends BasePutOperation implements MutatingOperation {
  private Data expect;
  
  private boolean successful;
  
  public ReplaceIfSameOperation() {}
  
  public ReplaceIfSameOperation(String name, Data dataKey, Data expect, Data update) {
    super(name, dataKey, update);
    this.expect = expect;
  }
  
  public void run() {
    this.successful = this.recordStore.replace(this.dataKey, this.expect, this.dataValue);
    if (this.successful)
      this.oldValue = this.expect; 
  }
  
  public void afterRun() {
    if (this.successful)
      super.afterRun(); 
  }
  
  public Object getResponse() { return Boolean.valueOf(this.successful); }
  
  public boolean shouldBackup() { return (this.successful && this.recordStore.getRecord(this.dataKey) != null); }
  
  public void onWaitExpire() { sendResponse(Boolean.valueOf(false)); }
  
  protected void writeInternal(ObjectDataOutput out) throws IOException {
    super.writeInternal(out);
    out.writeData(this.expect);
  }
  
  protected void readInternal(ObjectDataInput in) throws IOException {
    super.readInternal(in);
    this.expect = in.readData();
  }
  
  public int getId() { return 62; }
}
