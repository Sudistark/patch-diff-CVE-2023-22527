package com.hazelcast.map.impl.operation;

import com.hazelcast.internal.cluster.Versions;
import com.hazelcast.nio.ObjectDataInput;
import com.hazelcast.nio.ObjectDataOutput;
import com.hazelcast.nio.serialization.Data;
import com.hazelcast.nio.serialization.impl.Versioned;
import java.io.IOException;

public class DeleteOperation extends BaseRemoveOperation implements Versioned {
  private boolean success;
  
  public DeleteOperation(String name, Data dataKey) { super(name, dataKey); }
  
  public DeleteOperation(String name, Data dataKey, boolean disableWanReplicationEvent) { super(name, dataKey, disableWanReplicationEvent); }
  
  public DeleteOperation() {}
  
  public void run() { this.success = this.recordStore.delete(this.dataKey, getCallerProvenance()); }
  
  public Object getResponse() { return Boolean.valueOf(this.success); }
  
  public void afterRun() {
    if (this.success)
      super.afterRun(); 
  }
  
  public boolean shouldBackup() { return this.success; }
  
  public void onWaitExpire() { sendResponse(Boolean.valueOf(false)); }
  
  public int getId() { return 29; }
  
  protected void writeInternal(ObjectDataOutput out) throws IOException {
    super.writeInternal(out);
    if (out.getVersion().isGreaterOrEqual(Versions.V3_11))
      out.writeBoolean(this.disableWanReplicationEvent); 
  }
  
  protected void readInternal(ObjectDataInput in) throws IOException {
    super.readInternal(in);
    if (in.getVersion().isGreaterOrEqual(Versions.V3_11))
      this.disableWanReplicationEvent = in.readBoolean(); 
  }
}
