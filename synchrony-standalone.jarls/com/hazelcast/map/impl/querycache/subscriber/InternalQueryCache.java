package com.hazelcast.map.impl.querycache.subscriber;

import com.hazelcast.core.EntryEventType;
import com.hazelcast.core.IMap;
import com.hazelcast.map.QueryCache;
import com.hazelcast.query.impl.Indexes;
import com.hazelcast.query.impl.getters.Extractors;

public interface InternalQueryCache<K, V> extends QueryCache<K, V> {
  void set(K paramK, V paramV, EntryEventType paramEntryEventType);
  
  void prepopulate(K paramK, V paramV);
  
  void delete(Object paramObject, EntryEventType paramEntryEventType);
  
  int removeEntriesOf(int paramInt);
  
  IMap<K, V> getDelegate();
  
  Indexes getIndexes();
  
  void clear();
  
  void setPublisherListenerId(String paramString);
  
  String getPublisherListenerId();
  
  String getCacheId();
  
  boolean reachedMaxCapacity();
  
  Extractors getExtractors();
  
  void recreate();
}
