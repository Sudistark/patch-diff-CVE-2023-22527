package com.hazelcast.map.impl.journal;

import com.hazelcast.internal.journal.EventJournalInitialSubscriberState;
import com.hazelcast.map.impl.operation.MapOperation;
import com.hazelcast.spi.ObjectNamespace;
import com.hazelcast.spi.PartitionAwareOperation;
import com.hazelcast.spi.ReadonlyOperation;

public class MapEventJournalSubscribeOperation extends MapOperation implements PartitionAwareOperation, ReadonlyOperation {
  private EventJournalInitialSubscriberState response;
  
  private ObjectNamespace namespace;
  
  public MapEventJournalSubscribeOperation() {}
  
  public MapEventJournalSubscribeOperation(String name) { super(name); }
  
  public void beforeRun() {
    super.beforeRun();
    this.namespace = getServiceNamespace();
    if (!this.mapServiceContext.getEventJournal().hasEventJournal(this.namespace))
      throw new UnsupportedOperationException("Cannot subscribe to event journal because it is either not configured or disabled for map '" + this.name + '\''); 
  }
  
  public void run() {
    MapEventJournal eventJournal = this.mapServiceContext.getEventJournal();
    long newestSequence = eventJournal.newestSequence(this.namespace, getPartitionId());
    long oldestSequence = eventJournal.oldestSequence(this.namespace, getPartitionId());
    this.response = new EventJournalInitialSubscriberState(oldestSequence, newestSequence);
  }
  
  public EventJournalInitialSubscriberState getResponse() { return this.response; }
  
  public int getId() { return 141; }
}
