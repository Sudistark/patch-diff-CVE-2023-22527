package com.hazelcast.map.impl;

import com.hazelcast.concurrent.lock.LockService;
import com.hazelcast.spi.ManagedService;
import com.hazelcast.spi.NodeEngine;
import java.util.Properties;

public class MapManagedService implements ManagedService {
  private final MapServiceContext mapServiceContext;
  
  MapManagedService(MapServiceContext mapServiceContext) { this.mapServiceContext = mapServiceContext; }
  
  public void init(NodeEngine nodeEngine, Properties properties) {
    LockService lockService = (LockService)nodeEngine.getSharedService("hz:impl:lockService");
    if (lockService != null)
      lockService.registerLockStoreConstructor("hz:impl:mapService", new ObjectNamespaceLockStoreInfoConstructorFunction(this, null)); 
    this.mapServiceContext.initPartitionsContainers();
  }
  
  public void reset() { this.mapServiceContext.reset(); }
  
  public void shutdown(boolean terminate) {
    if (!terminate) {
      this.mapServiceContext.flushMaps();
      this.mapServiceContext.destroyMapStores();
    } 
    this.mapServiceContext.shutdown();
  }
}
