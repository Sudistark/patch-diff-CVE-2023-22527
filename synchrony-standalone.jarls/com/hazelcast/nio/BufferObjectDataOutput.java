package com.hazelcast.nio;

import com.hazelcast.spi.annotation.PrivateApi;
import com.hazelcast.version.Version;
import java.io.Closeable;
import java.io.IOException;
import java.nio.ByteOrder;

@PrivateApi
public interface BufferObjectDataOutput extends ObjectDataOutput, Closeable {
  public static final int UTF_BUFFER_SIZE = 1024;
  
  void write(int paramInt1, int paramInt2);
  
  void writeInt(int paramInt1, int paramInt2);
  
  void writeInt(int paramInt, ByteOrder paramByteOrder) throws IOException;
  
  void writeInt(int paramInt1, int paramInt2, ByteOrder paramByteOrder) throws IOException;
  
  void writeLong(int paramInt, long paramLong) throws IOException;
  
  void writeLong(long paramLong, ByteOrder paramByteOrder) throws IOException;
  
  void writeLong(int paramInt, long paramLong, ByteOrder paramByteOrder) throws IOException;
  
  void writeBoolean(int paramInt, boolean paramBoolean) throws IOException;
  
  void writeByte(int paramInt1, int paramInt2);
  
  void writeZeroBytes(int paramInt);
  
  void writeChar(int paramInt1, int paramInt2);
  
  void writeDouble(int paramInt, double paramDouble) throws IOException;
  
  void writeDouble(double paramDouble, ByteOrder paramByteOrder) throws IOException;
  
  void writeDouble(int paramInt, double paramDouble, ByteOrder paramByteOrder) throws IOException;
  
  void writeFloat(int paramInt, float paramFloat) throws IOException;
  
  void writeFloat(float paramFloat, ByteOrder paramByteOrder) throws IOException;
  
  void writeFloat(int paramInt, float paramFloat, ByteOrder paramByteOrder) throws IOException;
  
  void writeShort(int paramInt1, int paramInt2);
  
  void writeShort(int paramInt, ByteOrder paramByteOrder) throws IOException;
  
  void writeShort(int paramInt1, int paramInt2, ByteOrder paramByteOrder) throws IOException;
  
  int position();
  
  void position(int paramInt);
  
  void clear();
  
  void setVersion(Version paramVersion);
}
