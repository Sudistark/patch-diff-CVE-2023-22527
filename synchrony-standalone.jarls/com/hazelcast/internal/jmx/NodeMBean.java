package com.hazelcast.internal.jmx;

import com.hazelcast.core.HazelcastInstance;
import com.hazelcast.instance.Node;
import com.hazelcast.nio.Address;
import com.hazelcast.util.MapUtil;
import java.util.Map;

@ManagedDescription("HazelcastInstance.Node")
public class NodeMBean extends HazelcastMBean<Node> {
  private static final int INITIAL_CAPACITY = 3;
  
  public NodeMBean(HazelcastInstance hazelcastInstance, Node node, ManagementService service) {
    super(node, service);
    Map<String, String> properties = MapUtil.createHashMap(3);
    properties.put("type", ManagementService.quote("HazelcastInstance.Node"));
    properties.put("name", ManagementService.quote("node" + node.address));
    properties.put("instance", ManagementService.quote(hazelcastInstance.getName()));
    setObjectName(properties);
  }
  
  @ManagedAnnotation("address")
  @ManagedDescription("Address of the node")
  public String getName() { return ((Node)this.managedObject).address.toString(); }
  
  @ManagedAnnotation("masterAddress")
  @ManagedDescription("The master address of the cluster")
  public String getMasterAddress() {
    Address masterAddress = ((Node)this.managedObject).getMasterAddress();
    return (masterAddress == null) ? null : masterAddress.toString();
  }
}
