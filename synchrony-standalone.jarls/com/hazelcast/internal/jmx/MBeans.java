package com.hazelcast.internal.jmx;

import com.hazelcast.core.DistributedObject;
import com.hazelcast.util.MapUtil;
import java.util.concurrent.ConcurrentMap;

final class MBeans {
  private static final ConcurrentMap<String, MBeanFactory> MBEAN_FACTORY_TYPES_REGISTRY = MapUtil.createConcurrentHashMap(MBeanFactory.values().length);
  
  static  {
    MBeanFactory[] arrayOfMBeanFactory = MBeanFactory.values();
    for (MBeanFactory mBeanFactory : arrayOfMBeanFactory)
      MBEAN_FACTORY_TYPES_REGISTRY.put(mBeanFactory.getServiceName(), mBeanFactory); 
  }
  
  static HazelcastMBean createHazelcastMBeanOrNull(DistributedObject distributedObject, ManagementService managementService) {
    MBeanFactory mBeanFactory = getMBeanFactory(distributedObject.getServiceName());
    return (mBeanFactory == null) ? null : mBeanFactory.createNew(distributedObject, managementService);
  }
  
  static String getObjectTypeOrNull(String serviceName) {
    MBeanFactory mBeanFactory = getMBeanFactory(serviceName);
    return (mBeanFactory == null) ? null : mBeanFactory.getObjectType();
  }
  
  private static MBeanFactory getMBeanFactory(String serviceName) { return (MBeanFactory)MBEAN_FACTORY_TYPES_REGISTRY.get(serviceName); }
}
