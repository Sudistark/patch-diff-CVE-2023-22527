package com.hazelcast.internal.jmx;

import com.hazelcast.core.HazelcastInstance;
import com.hazelcast.spi.impl.operationservice.InternalOperationService;
import com.hazelcast.util.MapUtil;
import java.util.Map;

@ManagedDescription("HazelcastInstance.OperationService")
public class OperationServiceMBean extends HazelcastMBean<InternalOperationService> {
  private static final int INITIAL_CAPACITY = 3;
  
  public OperationServiceMBean(HazelcastInstance hazelcastInstance, InternalOperationService operationService, ManagementService service) {
    super(operationService, service);
    Map<String, String> properties = MapUtil.createHashMap(3);
    properties.put("type", ManagementService.quote("HazelcastInstance.OperationService"));
    properties.put("name", ManagementService.quote("operationService" + hazelcastInstance.getName()));
    properties.put("instance", ManagementService.quote(hazelcastInstance.getName()));
    setObjectName(properties);
  }
  
  @ManagedAnnotation("responseQueueSize")
  @ManagedDescription("The size of the response queue")
  public int getResponseQueueSize() { return ((InternalOperationService)this.managedObject).getResponseQueueSize(); }
  
  @ManagedAnnotation("operationExecutorQueueSize")
  @ManagedDescription("The size of the operation executor queue")
  public int getOperationExecutorQueueSize() { return ((InternalOperationService)this.managedObject).getOperationExecutorQueueSize(); }
  
  @ManagedAnnotation("runningOperationsCount")
  @ManagedDescription("the running operations count")
  public int getRunningOperationsCount() { return ((InternalOperationService)this.managedObject).getRunningOperationsCount(); }
  
  @ManagedAnnotation("remoteOperationCount")
  @ManagedDescription("The number of remote operations")
  public int getRemoteOperationsCount() { return ((InternalOperationService)this.managedObject).getRemoteOperationsCount(); }
  
  @ManagedAnnotation("executedOperationCount")
  @ManagedDescription("The number of executed operations")
  public long getExecutedOperationCount() { return ((InternalOperationService)this.managedObject).getExecutedOperationCount(); }
  
  @ManagedAnnotation("operationThreadCount")
  @ManagedDescription("Number of threads executing operations")
  public long getOperationThreadCount() { return ((InternalOperationService)this.managedObject).getPartitionThreadCount(); }
}
