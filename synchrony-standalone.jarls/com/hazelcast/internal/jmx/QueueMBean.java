package com.hazelcast.internal.jmx;

import com.hazelcast.config.Config;
import com.hazelcast.config.QueueConfig;
import com.hazelcast.core.IQueue;
import com.hazelcast.internal.jmx.suppliers.LocalQueueStatsSupplier;
import com.hazelcast.monitor.LocalQueueStats;

@ManagedDescription("IQueue")
public class QueueMBean extends HazelcastMBean<IQueue> {
  private final LocalStatsDelegate<LocalQueueStats> localQueueStatsDelegate;
  
  protected QueueMBean(IQueue managedObject, ManagementService service) {
    super(managedObject, service);
    this.objectName = service.createObjectName("IQueue", managedObject.getName());
    LocalQueueStatsSupplier localQueueStatsSupplier1 = new LocalQueueStatsSupplier(managedObject);
    this.localQueueStatsDelegate = new LocalStatsDelegate(localQueueStatsSupplier1, this.updateIntervalSec);
  }
  
  @ManagedAnnotation("localOwnedItemCount")
  @ManagedDescription("the number of owned items in this member.")
  public long getLocalOwnedItemCount() { return ((LocalQueueStats)this.localQueueStatsDelegate.getLocalStats()).getOwnedItemCount(); }
  
  @ManagedAnnotation("localBackupItemCount")
  @ManagedDescription("the number of backup items in this member.")
  public long getLocalBackupItemCount() { return ((LocalQueueStats)this.localQueueStatsDelegate.getLocalStats()).getBackupItemCount(); }
  
  @ManagedAnnotation("localMinAge")
  @ManagedDescription("the min age of the items in this member.")
  public long getLocalMinAge() { return ((LocalQueueStats)this.localQueueStatsDelegate.getLocalStats()).getMinAge(); }
  
  @ManagedAnnotation("localMaxAge")
  @ManagedDescription("the max age of the items in this member.")
  public long getLocalMaxAge() { return ((LocalQueueStats)this.localQueueStatsDelegate.getLocalStats()).getMaxAge(); }
  
  @ManagedAnnotation("localAvgAge")
  @ManagedDescription("the average age of the items in this member.")
  public long getLocalAvgAge() { return ((LocalQueueStats)this.localQueueStatsDelegate.getLocalStats()).getAvgAge(); }
  
  @ManagedAnnotation("localOfferOperationCount")
  @ManagedDescription("the number of offer/put/add operations in this member")
  public long getLocalOfferOperationCount() { return ((LocalQueueStats)this.localQueueStatsDelegate.getLocalStats()).getOfferOperationCount(); }
  
  @ManagedAnnotation("localRejectedOfferOperationCount")
  @ManagedDescription("the number of rejected offers in this member")
  public long getLocalRejectedOfferOperationCount() { return ((LocalQueueStats)this.localQueueStatsDelegate.getLocalStats()).getRejectedOfferOperationCount(); }
  
  @ManagedAnnotation("localPollOperationCount")
  @ManagedDescription("the number of poll/take/remove operations in this member")
  public long getLocalPollOperationCount() { return ((LocalQueueStats)this.localQueueStatsDelegate.getLocalStats()).getPollOperationCount(); }
  
  @ManagedAnnotation("localEmptyPollOperationCount")
  @ManagedDescription("number of null returning poll operations in this member")
  public long getLocalEmptyPollOperationCount() { return ((LocalQueueStats)this.localQueueStatsDelegate.getLocalStats()).getEmptyPollOperationCount(); }
  
  @ManagedAnnotation("localOtherOperationsCount")
  @ManagedDescription("number of other operations in this member")
  public long getLocalOtherOperationsCount() { return ((LocalQueueStats)this.localQueueStatsDelegate.getLocalStats()).getOtherOperationsCount(); }
  
  @ManagedAnnotation("localEventOperationCount")
  @ManagedDescription("number of event operations in this member")
  public long getLocalEventOperationCount() { return ((LocalQueueStats)this.localQueueStatsDelegate.getLocalStats()).getEventOperationCount(); }
  
  @ManagedAnnotation("name")
  @ManagedDescription("Name of the DistributedObject")
  public String getName() { return ((IQueue)this.managedObject).getName(); }
  
  @ManagedAnnotation("partitionKey")
  @ManagedDescription("the partitionKey")
  public String getPartitionKey() { return ((IQueue)this.managedObject).getPartitionKey(); }
  
  @ManagedAnnotation("config")
  @ManagedDescription("QueueConfig")
  public String getConfig() {
    String managedObjectName = ((IQueue)this.managedObject).getName();
    Config config = this.service.instance.getConfig();
    QueueConfig queueConfig = config.findQueueConfig(managedObjectName);
    return queueConfig.toString();
  }
  
  @ManagedAnnotation(value = "clear", operation = true)
  @ManagedDescription("Clear Queue")
  public void clear() { ((IQueue)this.managedObject).clear(); }
}
