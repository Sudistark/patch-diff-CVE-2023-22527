package com.hazelcast.internal.ascii.memcache;

import com.hazelcast.internal.ascii.TextCommandConstants;
import com.hazelcast.internal.ascii.TextCommandService;
import com.hazelcast.logging.ILogger;

public class SimpleCommandProcessor extends MemcacheCommandProcessor<SimpleCommand> {
  private final ILogger logger;
  
  public SimpleCommandProcessor(TextCommandService textCommandService) {
    super(textCommandService);
    this.logger = textCommandService.getNode().getLogger(getClass());
  }
  
  public void handle(SimpleCommand command) {
    if (command.getType() == TextCommandConstants.TextCommandType.QUIT) {
      try {
        command.getDecoder().closeConnection();
      } catch (Exception e) {
        this.logger.warning(e);
      } 
    } else if (command.getType() == TextCommandConstants.TextCommandType.UNKNOWN) {
      command.setResponse(TextCommandConstants.ERROR);
      this.textCommandService.sendResponse(command);
    } 
  }
  
  public void handleRejection(SimpleCommand command) { handle(command); }
}
