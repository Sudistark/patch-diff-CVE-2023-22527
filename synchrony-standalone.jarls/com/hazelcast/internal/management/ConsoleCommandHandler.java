package com.hazelcast.internal.management;

import com.hazelcast.core.HazelcastInstance;
import java.util.concurrent.TimeUnit;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReentrantLock;

public class ConsoleCommandHandler {
  private final ConsoleHandlerApp app;
  
  private final Lock lock;
  
  private final StringBuilder buffer;
  
  public ConsoleCommandHandler(HazelcastInstance instance) {
    this.lock = new ReentrantLock();
    this.buffer = new StringBuilder();
    this.app = new ConsoleHandlerApp(this, instance);
  }
  
  public String handleCommand(String command) throws InterruptedException {
    if (this.lock.tryLock(1L, TimeUnit.SECONDS))
      try {
        return doHandleCommand(command);
      } finally {
        this.lock.unlock();
      }  
    return "'" + command + "' execution is timed out!";
  }
  
  String doHandleCommand(String command) throws InterruptedException {
    this.app.handleCommand(command);
    String output = this.buffer.toString();
    this.buffer.setLength(0);
    return output;
  }
}
