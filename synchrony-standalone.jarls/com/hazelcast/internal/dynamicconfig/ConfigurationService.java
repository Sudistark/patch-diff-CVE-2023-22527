package com.hazelcast.internal.dynamicconfig;

import com.hazelcast.config.AtomicLongConfig;
import com.hazelcast.config.AtomicReferenceConfig;
import com.hazelcast.config.CacheSimpleConfig;
import com.hazelcast.config.CardinalityEstimatorConfig;
import com.hazelcast.config.CountDownLatchConfig;
import com.hazelcast.config.DurableExecutorConfig;
import com.hazelcast.config.EventJournalConfig;
import com.hazelcast.config.ExecutorConfig;
import com.hazelcast.config.FlakeIdGeneratorConfig;
import com.hazelcast.config.ListConfig;
import com.hazelcast.config.LockConfig;
import com.hazelcast.config.MapConfig;
import com.hazelcast.config.MerkleTreeConfig;
import com.hazelcast.config.MultiMapConfig;
import com.hazelcast.config.PNCounterConfig;
import com.hazelcast.config.QueueConfig;
import com.hazelcast.config.ReliableTopicConfig;
import com.hazelcast.config.ReplicatedMapConfig;
import com.hazelcast.config.RingbufferConfig;
import com.hazelcast.config.ScheduledExecutorConfig;
import com.hazelcast.config.SemaphoreConfig;
import com.hazelcast.config.SetConfig;
import com.hazelcast.config.TopicConfig;
import com.hazelcast.nio.serialization.IdentifiedDataSerializable;
import java.util.Map;

public interface ConfigurationService {
  void broadcastConfig(IdentifiedDataSerializable paramIdentifiedDataSerializable);
  
  MultiMapConfig findMultiMapConfig(String paramString);
  
  MapConfig findMapConfig(String paramString);
  
  TopicConfig findTopicConfig(String paramString);
  
  CardinalityEstimatorConfig findCardinalityEstimatorConfig(String paramString);
  
  PNCounterConfig findPNCounterConfig(String paramString);
  
  ExecutorConfig findExecutorConfig(String paramString);
  
  ScheduledExecutorConfig findScheduledExecutorConfig(String paramString);
  
  DurableExecutorConfig findDurableExecutorConfig(String paramString);
  
  SemaphoreConfig findSemaphoreConfig(String paramString);
  
  RingbufferConfig findRingbufferConfig(String paramString);
  
  AtomicLongConfig findAtomicLongConfig(String paramString);
  
  AtomicReferenceConfig findAtomicReferenceConfig(String paramString);
  
  CountDownLatchConfig findCountDownLatchConfig(String paramString);
  
  LockConfig findLockConfig(String paramString);
  
  ListConfig findListConfig(String paramString);
  
  QueueConfig findQueueConfig(String paramString);
  
  SetConfig findSetConfig(String paramString);
  
  ReplicatedMapConfig findReplicatedMapConfig(String paramString);
  
  ReliableTopicConfig findReliableTopicConfig(String paramString);
  
  CacheSimpleConfig findCacheSimpleConfig(String paramString);
  
  EventJournalConfig findCacheEventJournalConfig(String paramString);
  
  EventJournalConfig findMapEventJournalConfig(String paramString);
  
  MerkleTreeConfig findMapMerkleTreeConfig(String paramString);
  
  FlakeIdGeneratorConfig findFlakeIdGeneratorConfig(String paramString);
  
  Map<String, MapConfig> getMapConfigs();
  
  Map<String, LockConfig> getLockConfigs();
  
  Map<String, QueueConfig> getQueueConfigs();
  
  Map<String, ListConfig> getListConfigs();
  
  Map<String, SetConfig> getSetConfigs();
  
  Map<String, MultiMapConfig> getMultiMapConfigs();
  
  Map<String, ReplicatedMapConfig> getReplicatedMapConfigs();
  
  Map<String, RingbufferConfig> getRingbufferConfigs();
  
  Map<String, AtomicLongConfig> getAtomicLongConfigs();
  
  Map<String, AtomicReferenceConfig> getAtomicReferenceConfigs();
  
  Map<String, CountDownLatchConfig> getCountDownLatchConfigs();
  
  Map<String, TopicConfig> getTopicConfigs();
  
  Map<String, ReliableTopicConfig> getReliableTopicConfigs();
  
  Map<String, ExecutorConfig> getExecutorConfigs();
  
  Map<String, DurableExecutorConfig> getDurableExecutorConfigs();
  
  Map<String, ScheduledExecutorConfig> getScheduledExecutorConfigs();
  
  Map<String, CardinalityEstimatorConfig> getCardinalityEstimatorConfigs();
  
  Map<String, PNCounterConfig> getPNCounterConfigs();
  
  Map<String, SemaphoreConfig> getSemaphoreConfigs();
  
  Map<String, CacheSimpleConfig> getCacheSimpleConfigs();
  
  Map<String, EventJournalConfig> getCacheEventJournalConfigs();
  
  Map<String, EventJournalConfig> getMapEventJournalConfigs();
  
  Map<String, MerkleTreeConfig> getMapMerkleTreeConfigs();
  
  Map<String, FlakeIdGeneratorConfig> getFlakeIdGeneratorConfigs();
}
