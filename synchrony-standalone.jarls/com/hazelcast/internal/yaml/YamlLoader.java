package com.hazelcast.internal.yaml;

import java.io.InputStream;
import java.io.Reader;

public final class YamlLoader {
  public static YamlNode load(InputStream inputStream, String rootName) {
    try {
      YamlDocumentLoader load = getLoad();
      Object document = load.loadFromInputStream(inputStream);
      return buildDom(rootName, document);
    } catch (Exception ex) {
      throw new YamlException("An error occurred while loading and parsing the YAML stream", ex);
    } 
  }
  
  public static YamlNode load(InputStream inputStream) {
    try {
      YamlDocumentLoader load = getLoad();
      Object document = load.loadFromInputStream(inputStream);
      return buildDom(document);
    } catch (Exception ex) {
      throw new YamlException("An error occurred while loading and parsing the YAML stream", ex);
    } 
  }
  
  public static YamlNode load(Reader reader, String rootName) {
    try {
      YamlDocumentLoader load = getLoad();
      Object document = load.loadFromReader(reader);
      return buildDom(rootName, document);
    } catch (Exception ex) {
      throw new YamlException("An error occurred while loading and parsing the YAML stream", ex);
    } 
  }
  
  public static YamlNode load(Reader reader) {
    try {
      YamlDocumentLoader load = getLoad();
      Object document = load.loadFromReader(reader);
      return buildDom(document);
    } catch (Exception ex) {
      throw new YamlException("An error occurred while loading and parsing the YAML stream", ex);
    } 
  }
  
  public static YamlNode load(String yaml, String rootName) {
    try {
      YamlDocumentLoader load = getLoad();
      Object document = load.loadFromString(yaml);
      return buildDom(rootName, document);
    } catch (Exception ex) {
      throw new YamlException("An error occurred while loading and parsing the YAML string", ex);
    } 
  }
  
  public static YamlNode load(String yaml) {
    try {
      YamlDocumentLoader loader = getLoad();
      Object document = loader.loadFromString(yaml);
      return buildDom(document);
    } catch (Exception ex) {
      throw new YamlException("An error occurred while loading and parsing the YAML string", ex);
    } 
  }
  
  private static YamlDocumentLoader getLoad() {
    YamlUtil.ensureRunningOnJava8OrHigher();
    return new ReflectiveYamlDocumentLoader();
  }
  
  private static YamlNode buildDom(String rootName, Object document) { return YamlDomBuilder.build(document, rootName); }
  
  private static YamlNode buildDom(Object document) { return YamlDomBuilder.build(document); }
}
