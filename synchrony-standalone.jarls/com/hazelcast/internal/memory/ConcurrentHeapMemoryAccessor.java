package com.hazelcast.internal.memory;

public interface ConcurrentHeapMemoryAccessor extends HeapMemoryAccessor {
  boolean getBooleanVolatile(Object paramObject, long paramLong);
  
  void putBooleanVolatile(Object paramObject, long paramLong, boolean paramBoolean);
  
  byte getByteVolatile(Object paramObject, long paramLong);
  
  void putByteVolatile(Object paramObject, long paramLong, byte paramByte);
  
  char getCharVolatile(Object paramObject, long paramLong);
  
  void putCharVolatile(Object paramObject, long paramLong, char paramChar);
  
  short getShortVolatile(Object paramObject, long paramLong);
  
  void putShortVolatile(Object paramObject, long paramLong, short paramShort);
  
  int getIntVolatile(Object paramObject, long paramLong);
  
  void putIntVolatile(Object paramObject, long paramLong, int paramInt);
  
  float getFloatVolatile(Object paramObject, long paramLong);
  
  void putFloatVolatile(Object paramObject, long paramLong, float paramFloat);
  
  long getLongVolatile(Object paramObject, long paramLong);
  
  void putLongVolatile(Object paramObject, long paramLong1, long paramLong2);
  
  double getDoubleVolatile(Object paramObject, long paramLong);
  
  void putDoubleVolatile(Object paramObject, long paramLong, double paramDouble);
  
  Object getObjectVolatile(Object paramObject, long paramLong);
  
  void putObjectVolatile(Object paramObject1, long paramLong, Object paramObject2);
  
  boolean compareAndSwapInt(Object paramObject, long paramLong, int paramInt1, int paramInt2);
  
  boolean compareAndSwapLong(Object paramObject, long paramLong1, long paramLong2, long paramLong3);
  
  boolean compareAndSwapObject(Object paramObject1, long paramLong, Object paramObject2, Object paramObject3);
  
  void putOrderedInt(Object paramObject, long paramLong, int paramInt);
  
  void putOrderedLong(Object paramObject, long paramLong1, long paramLong2);
  
  void putOrderedObject(Object paramObject1, long paramLong, Object paramObject2);
}
