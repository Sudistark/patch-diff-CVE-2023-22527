package com.hazelcast.internal.memory;

public interface MemoryAccessor {
  boolean isBigEndian();
  
  boolean getBoolean(long paramLong);
  
  void putBoolean(long paramLong, boolean paramBoolean);
  
  byte getByte(long paramLong);
  
  void putByte(long paramLong, byte paramByte);
  
  char getChar(long paramLong);
  
  void putChar(long paramLong, char paramChar);
  
  short getShort(long paramLong);
  
  void putShort(long paramLong, short paramShort);
  
  int getInt(long paramLong);
  
  void putInt(long paramLong, int paramInt);
  
  float getFloat(long paramLong);
  
  void putFloat(long paramLong, float paramFloat);
  
  long getLong(long paramLong);
  
  void putLong(long paramLong1, long paramLong2);
  
  double getDouble(long paramLong);
  
  void putDouble(long paramLong, double paramDouble);
  
  void copyMemory(long paramLong1, long paramLong2, long paramLong3);
  
  void copyFromByteArray(byte[] paramArrayOfByte, int paramInt1, long paramLong, int paramInt2);
  
  void copyToByteArray(long paramLong, byte[] paramArrayOfByte, int paramInt1, int paramInt2);
  
  void setMemory(long paramLong1, long paramLong2, byte paramByte);
}
