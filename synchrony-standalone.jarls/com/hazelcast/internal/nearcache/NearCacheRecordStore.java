package com.hazelcast.internal.nearcache;

import com.hazelcast.internal.adapter.DataStructureAdapter;
import com.hazelcast.internal.nearcache.impl.invalidation.StaleReadDetector;
import com.hazelcast.monitor.NearCacheStats;
import com.hazelcast.nio.serialization.Data;
import com.hazelcast.spi.InitializingObject;

public interface NearCacheRecordStore<K, V> extends InitializingObject {
  V get(K paramK);
  
  void put(K paramK, Data paramData1, V paramV, Data paramData2);
  
  long tryReserveForUpdate(K paramK, Data paramData);
  
  V tryPublishReserved(K paramK, V paramV, long paramLong, boolean paramBoolean);
  
  void invalidate(K paramK);
  
  void clear();
  
  void destroy();
  
  int size();
  
  NearCacheRecord getRecord(K paramK);
  
  NearCacheStats getNearCacheStats();
  
  void doExpiration();
  
  void doEviction(boolean paramBoolean);
  
  void loadKeys(DataStructureAdapter<Object, ?> paramDataStructureAdapter);
  
  void storeKeys();
  
  void setStaleReadDetector(StaleReadDetector paramStaleReadDetector);
}
