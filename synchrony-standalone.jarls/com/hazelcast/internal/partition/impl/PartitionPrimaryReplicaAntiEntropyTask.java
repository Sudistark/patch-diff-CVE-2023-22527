package com.hazelcast.internal.partition.impl;

import com.hazelcast.internal.partition.InternalPartition;
import com.hazelcast.internal.partition.PartitionReplica;
import com.hazelcast.spi.ServiceNamespace;
import com.hazelcast.spi.impl.NodeEngineImpl;
import java.util.Collection;

final class PartitionPrimaryReplicaAntiEntropyTask extends AbstractPartitionPrimaryReplicaAntiEntropyTask {
  PartitionPrimaryReplicaAntiEntropyTask(NodeEngineImpl nodeEngine, int partitionId) { super(nodeEngine, partitionId); }
  
  public void run() {
    InternalPartition partition = this.partitionService.getPartition(this.partitionId, false);
    if (!partition.isLocal() || partition.isMigrating())
      return; 
    Collection<ServiceNamespace> namespaces = retainAndGetNamespaces();
    for (int index = 1; index < 7; index++) {
      PartitionReplica replica = partition.getReplica(index);
      if (replica != null)
        invokePartitionBackupReplicaAntiEntropyOp(index, replica, namespaces, null); 
    } 
  }
}
