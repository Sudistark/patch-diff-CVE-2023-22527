package com.hazelcast.internal.partition;

import com.hazelcast.core.Member;
import com.hazelcast.internal.partition.impl.PartitionReplicaStateChecker;
import com.hazelcast.nio.Address;
import com.hazelcast.spi.GracefulShutdownAwareService;
import com.hazelcast.spi.ManagedService;
import com.hazelcast.spi.partition.IPartition;
import com.hazelcast.spi.partition.IPartitionService;
import java.util.List;

public interface InternalPartitionService extends IPartitionService, ManagedService, GracefulShutdownAwareService {
  public static final int MIGRATION_RETRY_COUNT = 12;
  
  public static final long MIGRATION_RETRY_PAUSE = 10000L;
  
  public static final String MIGRATION_EVENT_TOPIC = ".migration";
  
  public static final String PARTITION_LOST_EVENT_TOPIC = ".partitionLost";
  
  InternalPartition getPartition(int paramInt);
  
  InternalPartition getPartition(int paramInt, boolean paramBoolean);
  
  int getMemberGroupsSize();
  
  void pauseMigration();
  
  void resumeMigration();
  
  void memberAdded(Member paramMember);
  
  void memberRemoved(Member paramMember);
  
  InternalPartition[] getInternalPartitions();
  
  PartitionRuntimeState firstArrangement();
  
  PartitionRuntimeState createPartitionState();
  
  PartitionReplicaVersionManager getPartitionReplicaVersionManager();
  
  PartitionTableView createPartitionTableView();
  
  List<Integer> getMemberPartitionsIfAssigned(Address paramAddress);
  
  PartitionServiceProxy getPartitionServiceProxy();
  
  PartitionReplicaStateChecker getPartitionReplicaStateChecker();
}
