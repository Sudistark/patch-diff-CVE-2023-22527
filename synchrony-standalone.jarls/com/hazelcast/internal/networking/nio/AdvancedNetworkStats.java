package com.hazelcast.internal.networking.nio;

import com.hazelcast.instance.ProtocolType;
import com.hazelcast.internal.metrics.MetricsRegistry;
import com.hazelcast.internal.metrics.ProbeLevel;
import java.util.EnumMap;
import java.util.concurrent.atomic.AtomicLong;

public final class AdvancedNetworkStats {
  private final EnumMap<ProtocolType, AtomicLong> bytesTransceived = new EnumMap(ProtocolType.class);
  
  public AdvancedNetworkStats() {
    for (ProtocolType type : ProtocolType.valuesAsSet())
      this.bytesTransceived.put(type, new AtomicLong()); 
  }
  
  public void setBytesTransceivedForProtocol(ProtocolType protocolType, long bytes) { ((AtomicLong)this.bytesTransceived.get(protocolType)).lazySet(bytes); }
  
  public long getBytesTransceivedForProtocol(ProtocolType protocolType) { return ((AtomicLong)this.bytesTransceived.get(protocolType)).get(); }
  
  public void registerMetrics(MetricsRegistry metricsRegistry, String prefix) {
    for (ProtocolType type : ProtocolType.valuesAsSet())
      metricsRegistry.register(this, prefix + "." + type.name(), ProbeLevel.INFO, new Object(this, type)); 
  }
  
  public String toString() { return "AdvancedNetworkStats{bytesTransceived=" + this.bytesTransceived + '}'; }
}
