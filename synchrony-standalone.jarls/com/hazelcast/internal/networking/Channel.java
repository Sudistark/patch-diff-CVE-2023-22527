package com.hazelcast.internal.networking;

import java.io.Closeable;
import java.io.IOException;
import java.net.InetSocketAddress;
import java.net.Socket;
import java.net.SocketAddress;
import java.util.concurrent.ConcurrentMap;

public interface Channel extends Closeable {
  ChannelOptions options();
  
  ConcurrentMap attributeMap();
  
  InboundPipeline inboundPipeline();
  
  OutboundPipeline outboundPipeline();
  
  Socket socket();
  
  SocketAddress remoteSocketAddress();
  
  SocketAddress localSocketAddress();
  
  long lastReadTimeMillis();
  
  long lastWriteTimeMillis();
  
  void start();
  
  void connect(InetSocketAddress paramInetSocketAddress, int paramInt) throws IOException;
  
  void close();
  
  boolean isClosed();
  
  void addCloseListener(ChannelCloseListener paramChannelCloseListener);
  
  boolean isClientMode();
  
  boolean write(OutboundFrame paramOutboundFrame);
  
  long bytesRead();
  
  long bytesWritten();
}
