package com.hazelcast.collection.impl.txncollection.operations;

import com.hazelcast.collection.impl.CollectionTxnUtil;
import com.hazelcast.collection.impl.collection.operations.CollectionBackupAwareOperation;
import com.hazelcast.nio.ObjectDataInput;
import com.hazelcast.nio.ObjectDataOutput;
import com.hazelcast.spi.Operation;
import java.io.IOException;
import java.util.List;

public class CollectionCommitOperation extends CollectionBackupAwareOperation {
  private List<Operation> operationList;
  
  private List<Operation> backupList;
  
  public CollectionCommitOperation() {}
  
  public CollectionCommitOperation(int partitionId, String name, String serviceName, List<Operation> operationList) {
    super(name);
    setPartitionId(partitionId);
    setServiceName(serviceName);
    this.operationList = operationList;
  }
  
  public void beforeRun() {
    super.beforeRun();
    CollectionTxnUtil.before(this.operationList, this);
  }
  
  public void run() { this.backupList = CollectionTxnUtil.run(this.operationList); }
  
  public void afterRun() {
    super.afterRun();
    CollectionTxnUtil.after(this.operationList);
  }
  
  public boolean shouldBackup() { return !this.backupList.isEmpty(); }
  
  public Operation getBackupOperation() { return new CollectionCommitBackupOperation(this.name, getServiceName(), this.backupList); }
  
  public int getId() { return 39; }
  
  protected void writeInternal(ObjectDataOutput out) throws IOException {
    super.writeInternal(out);
    CollectionTxnUtil.write(out, this.operationList);
  }
  
  protected void readInternal(ObjectDataInput in) throws IOException {
    super.readInternal(in);
    this.operationList = CollectionTxnUtil.read(in);
  }
}
