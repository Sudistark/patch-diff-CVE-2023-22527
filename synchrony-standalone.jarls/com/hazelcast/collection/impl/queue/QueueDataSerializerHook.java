package com.hazelcast.collection.impl.queue;

import com.hazelcast.internal.serialization.DataSerializerHook;
import com.hazelcast.internal.serialization.impl.ArrayDataSerializableFactory;
import com.hazelcast.internal.serialization.impl.FactoryIdHelper;
import com.hazelcast.nio.serialization.DataSerializableFactory;
import com.hazelcast.util.ConstructorFunction;

public final class QueueDataSerializerHook implements DataSerializerHook {
  public static final int F_ID = FactoryIdHelper.getFactoryId("hazelcast.serialization.ds.queue", -11);
  
  public static final int OFFER = 0;
  
  public static final int POLL = 1;
  
  public static final int PEEK = 2;
  
  public static final int OFFER_BACKUP = 3;
  
  public static final int POLL_BACKUP = 4;
  
  public static final int ADD_ALL_BACKUP = 5;
  
  public static final int ADD_ALL = 6;
  
  public static final int CLEAR_BACKUP = 7;
  
  public static final int CLEAR = 8;
  
  public static final int COMPARE_AND_REMOVE_BACKUP = 9;
  
  public static final int COMPARE_AND_REMOVE = 10;
  
  public static final int CONTAINS = 11;
  
  public static final int DRAIN_BACKUP = 12;
  
  public static final int DRAIN = 13;
  
  public static final int ITERATOR = 14;
  
  public static final int QUEUE_EVENT = 15;
  
  public static final int QUEUE_EVENT_FILTER = 16;
  
  public static final int QUEUE_ITEM = 17;
  
  public static final int QUEUE_REPLICATION = 18;
  
  public static final int REMOVE_BACKUP = 19;
  
  public static final int REMOVE = 20;
  
  public static final int SIZE = 22;
  
  public static final int TXN_OFFER_BACKUP = 23;
  
  public static final int TXN_OFFER = 24;
  
  public static final int TXN_POLL_BACKUP = 25;
  
  public static final int TXN_POLL = 26;
  
  public static final int TXN_PREPARE_BACKUP = 27;
  
  public static final int TXN_PREPARE = 28;
  
  public static final int TXN_RESERVE_OFFER = 29;
  
  public static final int TXN_RESERVE_OFFER_BACKUP = 30;
  
  public static final int TXN_RESERVE_POLL = 31;
  
  public static final int TXN_RESERVE_POLL_BACKUP = 32;
  
  public static final int TXN_ROLLBACK_BACKUP = 33;
  
  public static final int TXN_ROLLBACK = 34;
  
  public static final int CHECK_EVICT = 35;
  
  public static final int TRANSACTION_ROLLBACK = 36;
  
  public static final int TX_QUEUE_ITEM = 37;
  
  public static final int QUEUE_CONTAINER = 38;
  
  public static final int TXN_PEEK = 39;
  
  public static final int IS_EMPTY = 40;
  
  public static final int REMAINING_CAPACITY = 41;
  
  public static final int TXN_COMMIT = 42;
  
  public static final int TXN_COMMIT_BACKUP = 43;
  
  public static final int MERGE = 44;
  
  public static final int MERGE_BACKUP = 45;
  
  public int getFactoryId() { return F_ID; }
  
  public DataSerializableFactory createFactory() {
    ConstructorFunction[] constructors = new ConstructorFunction[46];
    constructors[0] = new Object(this);
    constructors[3] = new Object(this);
    constructors[1] = new Object(this);
    constructors[4] = new Object(this);
    constructors[2] = new Object(this);
    constructors[5] = new Object(this);
    constructors[6] = new Object(this);
    constructors[7] = new Object(this);
    constructors[8] = new Object(this);
    constructors[9] = new Object(this);
    constructors[10] = new Object(this);
    constructors[11] = new Object(this);
    constructors[12] = new Object(this);
    constructors[13] = new Object(this);
    constructors[14] = new Object(this);
    constructors[15] = new Object(this);
    constructors[16] = new Object(this);
    constructors[17] = new Object(this);
    constructors[18] = new Object(this);
    constructors[19] = new Object(this);
    constructors[20] = new Object(this);
    constructors[22] = new Object(this);
    constructors[23] = new Object(this);
    constructors[24] = new Object(this);
    constructors[25] = new Object(this);
    constructors[26] = new Object(this);
    constructors[27] = new Object(this);
    constructors[28] = new Object(this);
    constructors[29] = new Object(this);
    constructors[30] = new Object(this);
    constructors[31] = new Object(this);
    constructors[32] = new Object(this);
    constructors[33] = new Object(this);
    constructors[34] = new Object(this);
    constructors[35] = new Object(this);
    constructors[38] = new Object(this);
    constructors[36] = new Object(this);
    constructors[37] = new Object(this);
    constructors[39] = new Object(this);
    constructors[40] = new Object(this);
    constructors[41] = new Object(this);
    constructors[42] = new Object(this);
    constructors[43] = new Object(this);
    constructors[44] = new Object(this);
    constructors[45] = new Object(this);
    return new ArrayDataSerializableFactory(constructors);
  }
}
