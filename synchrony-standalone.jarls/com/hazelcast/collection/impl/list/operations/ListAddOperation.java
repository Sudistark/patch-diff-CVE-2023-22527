package com.hazelcast.collection.impl.list.operations;

import com.hazelcast.collection.impl.collection.CollectionItem;
import com.hazelcast.collection.impl.collection.operations.CollectionAddBackupOperation;
import com.hazelcast.collection.impl.collection.operations.CollectionAddOperation;
import com.hazelcast.collection.impl.list.ListContainer;
import com.hazelcast.nio.ObjectDataInput;
import com.hazelcast.nio.ObjectDataOutput;
import com.hazelcast.nio.serialization.Data;
import com.hazelcast.spi.Operation;
import java.io.IOException;

public class ListAddOperation extends CollectionAddOperation {
  private int index = -1;
  
  public ListAddOperation() {}
  
  public ListAddOperation(String name, int index, Data value) {
    super(name, value);
    this.index = index;
  }
  
  public void run() {
    ListContainer listContainer = getOrCreateListContainer();
    this.response = Boolean.valueOf(false);
    if (!hasEnoughCapacity(1))
      return; 
    CollectionItem item = listContainer.add(this.index, this.value);
    if (item != null) {
      this.itemId = item.getItemId();
      this.response = Boolean.valueOf(true);
    } 
  }
  
  public Operation getBackupOperation() { return new CollectionAddBackupOperation(this.name, this.itemId, this.value); }
  
  public int getId() { return 3; }
  
  protected void writeInternal(ObjectDataOutput out) throws IOException {
    super.writeInternal(out);
    out.writeInt(this.index);
  }
  
  protected void readInternal(ObjectDataInput in) throws IOException {
    super.readInternal(in);
    this.index = in.readInt();
  }
}
