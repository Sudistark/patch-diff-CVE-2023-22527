package com.fasterxml.jackson.databind.introspect;

import com.fasterxml.jackson.annotation.JsonAutoDetect;
import com.fasterxml.jackson.annotation.PropertyAccessor;
import java.lang.reflect.Field;
import java.lang.reflect.Member;
import java.lang.reflect.Method;

public interface VisibilityChecker<T extends VisibilityChecker<T>> {
  T with(JsonAutoDetect paramJsonAutoDetect);
  
  T withOverrides(JsonAutoDetect.Value paramValue);
  
  T with(JsonAutoDetect.Visibility paramVisibility);
  
  T withVisibility(PropertyAccessor paramPropertyAccessor, JsonAutoDetect.Visibility paramVisibility);
  
  T withGetterVisibility(JsonAutoDetect.Visibility paramVisibility);
  
  T withIsGetterVisibility(JsonAutoDetect.Visibility paramVisibility);
  
  T withSetterVisibility(JsonAutoDetect.Visibility paramVisibility);
  
  T withCreatorVisibility(JsonAutoDetect.Visibility paramVisibility);
  
  T withFieldVisibility(JsonAutoDetect.Visibility paramVisibility);
  
  boolean isGetterVisible(Method paramMethod);
  
  boolean isGetterVisible(AnnotatedMethod paramAnnotatedMethod);
  
  boolean isIsGetterVisible(Method paramMethod);
  
  boolean isIsGetterVisible(AnnotatedMethod paramAnnotatedMethod);
  
  boolean isSetterVisible(Method paramMethod);
  
  boolean isSetterVisible(AnnotatedMethod paramAnnotatedMethod);
  
  boolean isCreatorVisible(Member paramMember);
  
  boolean isCreatorVisible(AnnotatedMember paramAnnotatedMember);
  
  boolean isFieldVisible(Field paramField);
  
  boolean isFieldVisible(AnnotatedField paramAnnotatedField);
}
