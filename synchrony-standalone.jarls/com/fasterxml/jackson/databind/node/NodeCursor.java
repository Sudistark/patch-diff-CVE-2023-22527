package com.fasterxml.jackson.databind.node;

import com.fasterxml.jackson.core.JsonStreamContext;
import com.fasterxml.jackson.core.JsonToken;
import com.fasterxml.jackson.databind.JsonNode;

abstract class NodeCursor extends JsonStreamContext {
  protected final NodeCursor _parent;
  
  protected String _currentName;
  
  protected Object _currentValue;
  
  public NodeCursor(int contextType, NodeCursor p) {
    this._type = contextType;
    this._index = -1;
    this._parent = p;
  }
  
  public final NodeCursor getParent() { return this._parent; }
  
  public final String getCurrentName() { return this._currentName; }
  
  public void overrideCurrentName(String name) { this._currentName = name; }
  
  public Object getCurrentValue() { return this._currentValue; }
  
  public void setCurrentValue(Object v) { this._currentValue = v; }
  
  public final NodeCursor iterateChildren() {
    JsonNode n = currentNode();
    if (n == null)
      throw new IllegalStateException("No current node"); 
    if (n.isArray())
      return new ArrayCursor(n, this); 
    if (n.isObject())
      return new ObjectCursor(n, this); 
    throw new IllegalStateException("Current node of type " + n.getClass().getName());
  }
  
  public abstract JsonToken nextToken();
  
  public abstract JsonNode currentNode();
  
  public abstract NodeCursor startObject();
  
  public abstract NodeCursor startArray();
}
