package com.fasterxml.jackson.databind.ext;

import com.fasterxml.jackson.databind.BeanDescription;
import com.fasterxml.jackson.databind.DeserializationConfig;
import com.fasterxml.jackson.databind.JavaType;
import com.fasterxml.jackson.databind.JsonDeserializer;
import com.fasterxml.jackson.databind.deser.Deserializers;
import javax.xml.datatype.DatatypeConfigurationException;
import javax.xml.datatype.DatatypeFactory;

public class CoreXMLDeserializers extends Deserializers.Base {
  static final DatatypeFactory _dataTypeFactory;
  
  protected static final int TYPE_DURATION = 1;
  
  protected static final int TYPE_G_CALENDAR = 2;
  
  protected static final int TYPE_QNAME = 3;
  
  static  {
    try {
      _dataTypeFactory = DatatypeFactory.newInstance();
    } catch (DatatypeConfigurationException e) {
      throw new RuntimeException(e);
    } 
  }
  
  public JsonDeserializer<?> findBeanDeserializer(JavaType type, DeserializationConfig config, BeanDescription beanDesc) {
    Class<?> raw = type.getRawClass();
    if (raw == javax.xml.namespace.QName.class)
      return new Std(raw, 3); 
    if (raw == javax.xml.datatype.XMLGregorianCalendar.class)
      return new Std(raw, 2); 
    if (raw == javax.xml.datatype.Duration.class)
      return new Std(raw, 1); 
    return null;
  }
  
  public boolean hasDeserializerFor(DeserializationConfig config, Class<?> valueType) { return (valueType == javax.xml.namespace.QName.class || valueType == javax.xml.datatype.XMLGregorianCalendar.class || valueType == javax.xml.datatype.Duration.class); }
}
