package com.mysema.commons.lang;

public class Pair<F, S> extends Object {
  private final F first;
  
  private final S second;
  
  public Pair(F first, S second) {
    this.first = first;
    this.second = second;
  }
  
  public static <F, S> Pair<F, S> of(F f, S s) { return new Pair(f, s); }
  
  public boolean equals(Object o) {
    if (o == this)
      return true; 
    if (o instanceof Pair) {
      Pair p = (Pair)o;
      return (equals(this.first, p.first) && equals(this.second, p.second));
    } 
    return false;
  }
  
  private static boolean equals(Object a, Object b) { return (a == b || (a != null && a.equals(b))); }
  
  public F getFirst() { return (F)this.first; }
  
  public S getSecond() { return (S)this.second; }
  
  public int hashCode() { return 31 * ((this.first != null) ? this.first.hashCode() : 0) + ((this.second != null) ? this.second.hashCode() : 0); }
}
