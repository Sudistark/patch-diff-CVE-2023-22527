package com.mysema.query.types.path;

import com.mysema.query.types.Path;
import com.mysema.query.types.PathImpl;
import com.mysema.query.types.PathMetadata;
import com.mysema.query.types.PathMetadataFactory;
import com.mysema.query.types.Visitor;
import com.mysema.query.types.expr.EnumExpression;
import java.lang.reflect.AnnotatedElement;

public class EnumPath<T extends Enum<T>> extends EnumExpression<T> implements Path<T> {
  private static final long serialVersionUID = 338191992784020563L;
  
  private final PathImpl<T> pathMixin;
  
  public EnumPath(Class<? extends T> type, Path<?> parent, String property) { this(type, PathMetadataFactory.forProperty(parent, property)); }
  
  public EnumPath(Class<? extends T> type, PathMetadata<?> metadata) {
    super(new PathImpl(type, metadata));
    this.pathMixin = (PathImpl)this.mixin;
  }
  
  public EnumPath(Class<? extends T> type, String var) { this(type, PathMetadataFactory.forVariable(var)); }
  
  public final <R, C> R accept(Visitor<R, C> v, C context) { return (R)v.visit(this.pathMixin, context); }
  
  public PathMetadata<?> getMetadata() { return this.pathMixin.getMetadata(); }
  
  public Path<?> getRoot() { return this.pathMixin.getRoot(); }
  
  public AnnotatedElement getAnnotatedElement() { return this.pathMixin.getAnnotatedElement(); }
}
