package com.mysema.query.types.expr;

import com.mysema.query.types.Expression;
import com.mysema.query.types.Ops;
import com.mysema.query.types.Path;
import com.mysema.query.types.PathImpl;

public abstract class EnumExpression<T extends Enum<T>> extends ComparableExpression<T> {
  private static final long serialVersionUID = 8819222316513862829L;
  
  public EnumExpression(Expression<T> mixin) { super(mixin); }
  
  public EnumExpression<T> as(Path<T> alias) { return EnumOperation.create(getType(), Ops.ALIAS, this.mixin, alias); }
  
  public EnumExpression<T> as(String alias) { return as(new PathImpl(getType(), alias)); }
  
  public NumberExpression<Integer> ordinal() { return NumberOperation.create(Integer.class, Ops.ORDINAL, this.mixin); }
}
