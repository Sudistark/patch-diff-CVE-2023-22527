package com.mysema.query.types.expr;

import com.mysema.query.types.Expression;
import com.mysema.query.types.Ops;
import com.mysema.query.types.Path;
import com.mysema.query.types.PathImpl;

public abstract class DslExpression<T> extends Object implements Expression<T> {
  private static final long serialVersionUID = -3383063447710753290L;
  
  protected final Expression<T> mixin;
  
  protected final int hashCode;
  
  public DslExpression(Expression<T> mixin) {
    this.mixin = mixin;
    this.hashCode = mixin.hashCode();
  }
  
  public final Class<? extends T> getType() { return this.mixin.getType(); }
  
  public DslExpression<T> as(Path<T> alias) { return DslOperation.create(getType(), Ops.ALIAS, this.mixin, alias); }
  
  public DslExpression<T> as(String alias) { return as(new PathImpl(getType(), alias)); }
  
  public boolean equals(Object o) { return this.mixin.equals(o); }
  
  public final int hashCode() { return this.hashCode; }
  
  public final String toString() { return this.mixin.toString(); }
}
