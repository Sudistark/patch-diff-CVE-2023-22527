package com.mysema.query.types;

public final class HashCodeVisitor extends Object implements Visitor<Integer, Void> {
  public static final HashCodeVisitor DEFAULT = new HashCodeVisitor();
  
  public Integer visit(Constant<?> expr, Void context) { return Integer.valueOf(expr.getConstant().hashCode()); }
  
  public Integer visit(FactoryExpression<?> expr, Void context) {
    int result = expr.getType().hashCode();
    return Integer.valueOf(31 * result + expr.getArgs().hashCode());
  }
  
  public Integer visit(Operation<?> expr, Void context) {
    int result = expr.getOperator().hashCode();
    return Integer.valueOf(31 * result + expr.getArgs().hashCode());
  }
  
  public Integer visit(ParamExpression<?> expr, Void context) { return Integer.valueOf(expr.getName().hashCode()); }
  
  public Integer visit(Path<?> expr, Void context) { return Integer.valueOf(expr.getMetadata().hashCode()); }
  
  public Integer visit(SubQueryExpression<?> expr, Void context) { return Integer.valueOf(expr.getMetadata().hashCode()); }
  
  public Integer visit(TemplateExpression<?> expr, Void context) {
    int result = expr.getTemplate().hashCode();
    return Integer.valueOf(31 * result + expr.getArgs().hashCode());
  }
}
