package com.mysema.query.sql.dml;

import com.google.common.collect.Maps;
import com.mysema.query.sql.RelationalPath;
import com.mysema.query.types.Path;
import java.util.Map;

public abstract class AbstractMapper<T> extends Object implements Mapper<T> {
  protected Map<String, Path<?>> getColumns(RelationalPath<?> path) {
    Map<String, Path<?>> columns = Maps.newLinkedHashMap();
    for (Path<?> column : path.getColumns())
      columns.put(column.getMetadata().getName(), column); 
    return columns;
  }
  
  protected boolean isPrimaryKeyColumn(RelationalPath<?> parent, Path<?> property) {
    return (parent.getPrimaryKey() != null && parent
      .getPrimaryKey().getLocalColumns().contains(property));
  }
}
