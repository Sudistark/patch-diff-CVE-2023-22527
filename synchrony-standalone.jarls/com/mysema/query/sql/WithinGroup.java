package com.mysema.query.sql;

import com.google.common.collect.ImmutableList;
import com.mysema.query.types.Expression;
import com.mysema.query.types.ExpressionUtils;
import com.mysema.query.types.Operator;
import com.mysema.query.types.expr.SimpleOperation;

public class WithinGroup<T> extends SimpleOperation<T> {
  private static final long serialVersionUID = 464583892898579544L;
  
  private static Expression<?> merge(Expression... args) {
    if (args.length == 1)
      return args[0]; 
    return ExpressionUtils.list(Object.class, args);
  }
  
  public WithinGroup(Class<T> type, Operator<? super T> op) { super(type, op, ImmutableList.of()); }
  
  public WithinGroup(Class<T> type, Operator<? super T> op, Expression<?> arg) { super(type, op, ImmutableList.of(arg)); }
  
  public WithinGroup(Class<T> type, Operator<? super T> op, Expression<?> arg1, Expression<?> arg2) { super(type, op, ImmutableList.of(arg1, arg2)); }
  
  public WithinGroup(Class<T> type, Operator<? super T> op, Expression... args) { super(type, op, new Expression[] { merge(args) }); }
  
  public OrderBy withinGroup() { return new OrderBy(this); }
}
