package com.mysema.query.group;

import com.mysema.query.types.Expression;
import java.util.Comparator;
import java.util.Set;
import java.util.SortedSet;

abstract class GSet<T, S extends Set<T>> extends AbstractGroupExpression<T, S> {
  private static final long serialVersionUID = -1575808026237160843L;
  
  public GSet(Expression<T> expr) { super(Set.class, expr); }
  
  protected abstract S createSet();
  
  public GroupCollector<T, S> createGroupCollector() { return new Object(this); }
  
  public static <U> GSet<U, Set<U>> createLinked(Expression<U> expr) { return new Object(expr); }
  
  public static <U extends Comparable<? super U>> GSet<U, SortedSet<U>> createSorted(Expression<U> expr) { return new Object(expr); }
  
  public static <U> GSet<U, SortedSet<U>> createSorted(Expression<U> expr, Comparator<? super U> comparator) { return new Object(expr, comparator); }
}
