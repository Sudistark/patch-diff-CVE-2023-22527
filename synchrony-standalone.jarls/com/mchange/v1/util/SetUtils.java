package com.mchange.v1.util;

import java.util.HashSet;
import java.util.Set;

public final class SetUtils {
  public static Set oneElementUnmodifiableSet(Object paramObject) { return new Object(paramObject); }
  
  public static Set setFromArray(Object[] paramArrayOfObject) {
    HashSet hashSet = new HashSet();
    byte b;
    int i;
    for (b = 0, i = paramArrayOfObject.length; b < i; b++)
      hashSet.add(paramArrayOfObject[b]); 
    return hashSet;
  }
  
  public static boolean equivalentDisregardingSort(Set paramSet1, Set paramSet2) {
    return (paramSet1
      .containsAll(paramSet2) && paramSet2
      .containsAll(paramSet1));
  }
  
  public static int hashContentsDisregardingSort(Set paramSet) {
    int i = 0;
    for (Object object : paramSet) {
      if (object != null)
        i ^= object.hashCode(); 
    } 
    return i;
  }
}
