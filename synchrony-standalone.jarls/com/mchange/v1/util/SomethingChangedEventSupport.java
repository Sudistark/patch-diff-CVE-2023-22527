package com.mchange.v1.util;

import java.util.Enumeration;
import java.util.Vector;

public class SomethingChangedEventSupport {
  Object source;
  
  Vector listeners;
  
  public SomethingChangedEventSupport(Object paramObject) {
    this.listeners = new Vector();
    this.source = paramObject;
  }
  
  public void addSomethingChangedListener(SomethingChangedListener paramSomethingChangedListener) {
    if (!this.listeners.contains(paramSomethingChangedListener))
      this.listeners.addElement(paramSomethingChangedListener); 
  }
  
  public void removeSomethingChangedListener(SomethingChangedListener paramSomethingChangedListener) { this.listeners.removeElement(paramSomethingChangedListener); }
  
  public void fireSomethingChanged() {
    SomethingChangedEvent somethingChangedEvent = new SomethingChangedEvent(this.source);
    for (Enumeration enumeration = this.listeners.elements(); enumeration.hasMoreElements(); ) {
      SomethingChangedListener somethingChangedListener = (SomethingChangedListener)enumeration.nextElement();
      somethingChangedListener.somethingChanged(somethingChangedEvent);
    } 
  }
}
