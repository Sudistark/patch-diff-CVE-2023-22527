package com.mchange.v1.xmlprops;

import com.mchange.v1.xml.StdErrErrorHandler;
import java.io.BufferedInputStream;
import java.io.FileInputStream;
import java.io.InputStream;
import java.util.Properties;
import org.xml.sax.EntityResolver;
import org.xml.sax.ErrorHandler;
import org.xml.sax.InputSource;
import org.xml.sax.SAXException;
import org.xml.sax.XMLReader;

public class SaxXmlPropsParser {
  static final String DEFAULT_XML_READER = "org.apache.xerces.parsers.SAXParser";
  
  static final String XMLPROPS_NAMESPACE_URI = "http://www.mchange.com/namespaces/xmlprops";
  
  public static Properties parseXmlProps(InputStream paramInputStream) throws XmlPropsException {
    try {
      String str = "org.apache.xerces.parsers.SAXParser";
      XMLReader xMLReader = (XMLReader)Class.forName(str).newInstance();
      InputSource inputSource = new InputSource(paramInputStream);
      return parseXmlProps(inputSource, xMLReader, null, null);
    } catch (XmlPropsException xmlPropsException) {
      throw xmlPropsException;
    } catch (Exception exception) {
      exception.printStackTrace();
      throw new XmlPropsException("Exception while instantiating XMLReader.", exception);
    } 
  }
  
  private static Properties parseXmlProps(InputSource paramInputSource, XMLReader paramXMLReader, EntityResolver paramEntityResolver, ErrorHandler paramErrorHandler) throws XmlPropsException {
    try {
      StdErrErrorHandler stdErrErrorHandler;
      if (paramEntityResolver != null)
        paramXMLReader.setEntityResolver(paramEntityResolver); 
      if (paramErrorHandler == null)
        stdErrErrorHandler = new StdErrErrorHandler(); 
      paramXMLReader.setErrorHandler(stdErrErrorHandler);
      XmlPropsContentHandler xmlPropsContentHandler = new XmlPropsContentHandler();
      paramXMLReader.setContentHandler(xmlPropsContentHandler);
      paramXMLReader.parse(paramInputSource);
      return xmlPropsContentHandler.getLastProperties();
    } catch (Exception exception) {
      if (exception instanceof SAXException)
        ((SAXException)exception).getException().printStackTrace(); 
      exception.printStackTrace();
      throw new XmlPropsException(exception);
    } 
  }
  
  public static void main(String[] paramArrayOfString) {
    try {
      BufferedInputStream bufferedInputStream = new BufferedInputStream(new FileInputStream(paramArrayOfString[0]));
      SaxXmlPropsParser saxXmlPropsParser = new SaxXmlPropsParser();
      Properties properties = saxXmlPropsParser.parseXmlProps(bufferedInputStream);
      for (String str1 : properties.keySet()) {
        String str2 = properties.getProperty(str1);
        System.err.println(str1 + '=' + str2);
      } 
    } catch (Exception exception) {
      exception.printStackTrace();
    } 
  }
}
