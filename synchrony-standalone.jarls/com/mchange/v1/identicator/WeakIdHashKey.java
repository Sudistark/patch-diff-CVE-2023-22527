package com.mchange.v1.identicator;

import java.lang.ref.ReferenceQueue;

final class WeakIdHashKey extends IdHashKey {
  Ref keyRef;
  
  int hash;
  
  public WeakIdHashKey(Object paramObject, Identicator paramIdenticator, ReferenceQueue paramReferenceQueue) {
    super(paramIdenticator);
    if (paramObject == null)
      throw new UnsupportedOperationException("Collection does not accept nulls!"); 
    this.keyRef = new Ref(this, paramObject, paramReferenceQueue);
    this.hash = paramIdenticator.hash(paramObject);
  }
  
  public Ref getInternalRef() { return this.keyRef; }
  
  public Object getKeyObj() { return this.keyRef.get(); }
  
  public boolean equals(Object paramObject) {
    if (paramObject instanceof WeakIdHashKey) {
      WeakIdHashKey weakIdHashKey = (WeakIdHashKey)paramObject;
      if (this.keyRef == weakIdHashKey.keyRef)
        return true; 
      Object object1 = this.keyRef.get();
      Object object2 = weakIdHashKey.keyRef.get();
      if (object1 == null || object2 == null)
        return false; 
      return this.id.identical(object1, object2);
    } 
    return false;
  }
  
  public int hashCode() { return this.hash; }
}
