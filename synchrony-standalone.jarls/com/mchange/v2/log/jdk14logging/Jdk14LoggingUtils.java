package com.mchange.v2.log.jdk14logging;

import com.mchange.v2.log.MLevel;
import java.util.logging.Level;

public final class Jdk14LoggingUtils {
  public static MLevel mlevelFromLevel(Level paramLevel) {
    if (paramLevel == Level.ALL)
      return MLevel.ALL; 
    if (paramLevel == Level.CONFIG)
      return MLevel.CONFIG; 
    if (paramLevel == Level.FINE)
      return MLevel.FINE; 
    if (paramLevel == Level.FINER)
      return MLevel.FINER; 
    if (paramLevel == Level.FINEST)
      return MLevel.FINEST; 
    if (paramLevel == Level.INFO)
      return MLevel.INFO; 
    if (paramLevel == Level.OFF)
      return MLevel.OFF; 
    if (paramLevel == Level.SEVERE)
      return MLevel.SEVERE; 
    if (paramLevel == Level.WARNING)
      return MLevel.WARNING; 
    throw new IllegalArgumentException("Unexpected Jdk14 logging level: " + paramLevel);
  }
  
  public static Level levelFromMLevel(MLevel paramMLevel) {
    if (paramMLevel == MLevel.ALL)
      return Level.ALL; 
    if (paramMLevel == MLevel.CONFIG)
      return Level.CONFIG; 
    if (paramMLevel == MLevel.FINE)
      return Level.FINE; 
    if (paramMLevel == MLevel.FINER)
      return Level.FINER; 
    if (paramMLevel == MLevel.FINEST)
      return Level.FINEST; 
    if (paramMLevel == MLevel.INFO)
      return Level.INFO; 
    if (paramMLevel == MLevel.OFF)
      return Level.OFF; 
    if (paramMLevel == MLevel.SEVERE)
      return Level.SEVERE; 
    if (paramMLevel == MLevel.WARNING)
      return Level.WARNING; 
    throw new IllegalArgumentException("Unexpected MLevel: " + paramMLevel);
  }
}
