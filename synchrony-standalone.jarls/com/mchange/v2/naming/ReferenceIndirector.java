package com.mchange.v2.naming;

import com.mchange.v2.log.MLog;
import com.mchange.v2.log.MLogger;
import com.mchange.v2.ser.IndirectlySerialized;
import com.mchange.v2.ser.Indirector;
import java.util.Hashtable;
import javax.naming.Name;
import javax.naming.Reference;
import javax.naming.Referenceable;

public class ReferenceIndirector implements Indirector {
  static final MLogger logger = MLog.getLogger(ReferenceIndirector.class);
  
  Name name;
  
  Name contextName;
  
  Hashtable environmentProperties;
  
  public Name getName() { return this.name; }
  
  public void setName(Name paramName) { this.name = paramName; }
  
  public Name getNameContextName() { return this.contextName; }
  
  public void setNameContextName(Name paramName) { this.contextName = paramName; }
  
  public Hashtable getEnvironmentProperties() { return this.environmentProperties; }
  
  public void setEnvironmentProperties(Hashtable paramHashtable) { this.environmentProperties = paramHashtable; }
  
  public IndirectlySerialized indirectForm(Object paramObject) throws Exception {
    Reference reference = ((Referenceable)paramObject).getReference();
    return new ReferenceSerialized(reference, this.name, this.contextName, this.environmentProperties);
  }
}
