package synchrony.querydsl.history_store;

import clojure.lang.AFn;
import clojure.lang.APersistentMap;
import clojure.lang.Associative;
import clojure.lang.Counted;
import clojure.lang.IFn;
import clojure.lang.IHashEq;
import clojure.lang.IKeywordLookup;
import clojure.lang.ILookup;
import clojure.lang.ILookupThunk;
import clojure.lang.IMapEntry;
import clojure.lang.IObj;
import clojure.lang.IPersistentCollection;
import clojure.lang.IPersistentMap;
import clojure.lang.IPersistentVector;
import clojure.lang.IRecord;
import clojure.lang.ISeq;
import clojure.lang.Keyword;
import clojure.lang.MapEntry;
import clojure.lang.Numbers;
import clojure.lang.PersistentHashSet;
import clojure.lang.RT;
import clojure.lang.RecordIterator;
import clojure.lang.Symbol;
import clojure.lang.Util;
import clojure.lang.Var;
import java.io.Serializable;
import java.util.Collection;
import java.util.Iterator;
import java.util.Map;
import java.util.Set;
import synchrony.history_store.Store;

public final class QueryDslHistoryStore implements Store, IRecord, IHashEq, IObj, ILookup, IKeywordLookup, IPersistentMap, Map, Serializable {
  public final Object db;
  
  public final Object configuration;
  
  public final Object serialize;
  
  public final Object deserialize;
  
  public final Object size;
  
  public final Object dispatch;
  
  public final Object schema;
  
  public final Object table;
  
  public final Object __meta;
  
  public final Object __extmap;
  
  int __hash;
  
  int __hasheq;
  
  public static final Var const__0 = (Var)RT.var("clojure.core", "set");
  
  public static final Var const__1 = (Var)RT.var("clojure.core", "vals");
  
  public static final Var const__2 = (Var)RT.var("clojure.core", "keys");
  
  public static final Var const__4 = (Var)RT.var("clojure.core", "some");
  
  public static final Var const__7 = (Var)RT.var("clojure.core", "contains?");
  
  public static final Keyword const__8 = (Keyword)RT.keyword(null, "schema");
  
  public static final Keyword const__9 = (Keyword)RT.keyword(null, "serialize");
  
  public static final Keyword const__10 = (Keyword)RT.keyword(null, "table");
  
  public static final Keyword const__11 = (Keyword)RT.keyword(null, "db");
  
  public static final Keyword const__12 = (Keyword)RT.keyword(null, "size");
  
  public static final Keyword const__13 = (Keyword)RT.keyword(null, "dispatch");
  
  public static final Keyword const__14 = (Keyword)RT.keyword(null, "deserialize");
  
  public static final Keyword const__15 = (Keyword)RT.keyword(null, "configuration");
  
  public static final AFn const__16 = (AFn)PersistentHashSet.create(new Object[] { RT.keyword(null, "schema"), RT.keyword(null, "serialize"), RT.keyword(null, "table"), RT.keyword(null, "db"), RT.keyword(null, "size"), RT.keyword(null, "dispatch"), RT.keyword(null, "deserialize"), RT.keyword(null, "configuration") });
  
  public static final Var const__17 = (Var)RT.var("clojure.core", "dissoc");
  
  public static final Var const__18 = (Var)RT.var("clojure.core", "with-meta");
  
  public static final Var const__19 = (Var)RT.var("clojure.core", "into");
  
  public static final Var const__20 = (Var)RT.var("clojure.core", "not-empty");
  
  public static final Var const__21 = (Var)RT.var("clojure.core", "identical?");
  
  public static final Var const__22 = (Var)RT.var("clojure.core", "assoc");
  
  public static final AFn const__23 = (AFn)RT.vector(new Object[] { RT.keyword(null, "db"), RT.keyword(null, "configuration"), RT.keyword(null, "serialize"), RT.keyword(null, "deserialize"), RT.keyword(null, "size"), RT.keyword(null, "dispatch"), RT.keyword(null, "schema"), RT.keyword(null, "table") });
  
  public static final Var const__24 = (Var)RT.var("clojure.core", "seq"), const__25 = (Var)RT.var("clojure.core", "concat"), const__26 = (Var)RT.var("clojure.core", "not"), const__27 = (Var)RT.var("clojure.core", "class"), const__28 = (Var)RT.var("clojure.core", "imap-cons"), const__29 = (Var)RT.var("clojure.core", "str"), const__38 = (Var)RT.var("clojure.core.async", "thread-call");
  
  public QueryDslHistoryStore(Object paramObject1, Object paramObject2, Object paramObject3, Object paramObject4, Object paramObject5, Object paramObject6, Object paramObject7, Object paramObject8, Object paramObject9, Object paramObject10, int paramInt1, int paramInt2) { this.db = paramObject1;
    this.configuration = paramObject2;
    this.serialize = paramObject3;
    this.deserialize = paramObject4;
    this.size = paramObject5;
    this.dispatch = paramObject6;
    this.schema = paramObject7;
    this.table = paramObject8;
    this.__meta = paramObject9;
    this.__extmap = paramObject10;
    this.__hash = paramInt1;
    this.__hasheq = paramInt2; }
  
  public QueryDslHistoryStore(Object paramObject1, Object paramObject2, Object paramObject3, Object paramObject4, Object paramObject5, Object paramObject6, Object paramObject7, Object paramObject8) { this(paramObject1, paramObject2, paramObject3, paramObject4, paramObject5, paramObject6, paramObject7, paramObject8, null, null, 0, 0); }
  
  public QueryDslHistoryStore(Object paramObject1, Object paramObject2, Object paramObject3, Object paramObject4, Object paramObject5, Object paramObject6, Object paramObject7, Object paramObject8, Object paramObject9, Object paramObject10) { this(paramObject1, paramObject2, paramObject3, paramObject4, paramObject5, paramObject6, paramObject7, paramObject8, paramObject9, paramObject10, 0, 0); }
  
  public static IPersistentVector getBasis() { return RT.vector(new Object[] { Symbol.intern(null, "db"), Symbol.intern(null, "configuration"), Symbol.intern(null, "serialize"), Symbol.intern(null, "deserialize"), Symbol.intern(null, "size"), Symbol.intern(null, "dispatch"), Symbol.intern(null, "schema"), Symbol.intern(null, "table") }); }
  
  public static QueryDslHistoryStore create(IPersistentMap paramIPersistentMap) {
    Object object1 = paramIPersistentMap.valAt(Keyword.intern("db"), null);
    paramIPersistentMap = paramIPersistentMap.without(Keyword.intern("db"));
    Object object2 = paramIPersistentMap.valAt(Keyword.intern("configuration"), null);
    paramIPersistentMap = paramIPersistentMap.without(Keyword.intern("configuration"));
    Object object3 = paramIPersistentMap.valAt(Keyword.intern("serialize"), null);
    paramIPersistentMap = paramIPersistentMap.without(Keyword.intern("serialize"));
    Object object4 = paramIPersistentMap.valAt(Keyword.intern("deserialize"), null);
    paramIPersistentMap = paramIPersistentMap.without(Keyword.intern("deserialize"));
    Object object5 = paramIPersistentMap.valAt(Keyword.intern("size"), null);
    paramIPersistentMap = paramIPersistentMap.without(Keyword.intern("size"));
    Object object6 = paramIPersistentMap.valAt(Keyword.intern("dispatch"), null);
    paramIPersistentMap = paramIPersistentMap.without(Keyword.intern("dispatch"));
    Object object7 = paramIPersistentMap.valAt(Keyword.intern("schema"), null);
    paramIPersistentMap = paramIPersistentMap.without(Keyword.intern("schema"));
    Object object8 = paramIPersistentMap.valAt(Keyword.intern("table"), null);
    paramIPersistentMap = paramIPersistentMap.without(Keyword.intern("table"));
    return new QueryDslHistoryStore(object1, object2, object3, object4, object5, object6, object7, object8, null, RT.seqOrElse(paramIPersistentMap), 0, 0);
  }
  
  public Object get_max_part_BANG_(Object history_id) { history_id = null;
    this = null;
    return ((IFn)const__38.getRawRoot()).invoke(new fn__44730(this.configuration, this.size, history_id, this.deserialize, this.table, this.schema, this.db)); }
  
  public Object get_part_id_having_event_id_BANG_(Object history_id, Object event_id) { history_id = null;
    event_id = null;
    this = null;
    return ((IFn)const__38.getRawRoot()).invoke(new fn__44728(this.configuration, history_id, this.table, this.schema, this.db, event_id)); }
  
  public Object get_max_part_id_BANG_(Object history_id) { history_id = null;
    this = null;
    return ((IFn)const__38.getRawRoot()).invoke(new fn__44725(this.configuration, this.table, this.schema, this.db, history_id)); }
  
  public Object delete_entity_BANG_(Object history_id) { history_id = null;
    this = null;
    return ((IFn)const__38.getRawRoot()).invoke(new fn__44722(this.configuration, history_id, this.table, this.schema, this.db)); }
  
  public Object delete_part_BANG_(Object history_id, Object part_id) { history_id = null;
    part_id = null;
    this = null;
    return ((IFn)const__38.getRawRoot()).invoke(new fn__44718(history_id, this.configuration, this.table, this.schema, this.db, part_id)); }
  
  public Object get_part_BANG_(Object history_id, Object part_id) { history_id = null;
    part_id = null;
    this = null;
    return ((IFn)const__38.getRawRoot()).invoke(new fn__44714(this.configuration, this.size, history_id, this.deserialize, this.table, part_id, this.schema, this.db)); }
  
  public Object get_part_having_event_id_BANG_(Object history_id, Object event_id) { history_id = null;
    event_id = null;
    this = null;
    return ((IFn)const__38.getRawRoot()).invoke(new fn__44710(this.configuration, this.size, history_id, event_id, this.deserialize, this.table, this.schema, this.db)); }
  
  public Object put_events_BANG_(Object history_id, Object part_id, Object sequence, Object id_event_alist) { part_id = null;
    id_event_alist = null;
    sequence = null;
    history_id = null;
    this = null;
    return ((IFn)const__38.getRawRoot()).invoke(new fn__44698(this.configuration, this.size, part_id, id_event_alist, this.table, this.serialize, this.schema, sequence, this.db, history_id)); }
  
  public int hasheq() {
    int hq__7768__auto__44735 = this.__hasheq, h__7769__auto__44734 = RT.intCast(0xFFFFFFFFDAA35533L ^ APersistentMap.mapHasheq((IPersistentMap)this));
    this.__hasheq = h__7769__auto__44734;
    return (hq__7768__auto__44735 == 0L) ? h__7769__auto__44734 : hq__7768__auto__44735;
  }
  
  public int hashCode() {
    int hash__7771__auto__44737 = this.__hash, h__7772__auto__44736 = APersistentMap.mapHash((IPersistentMap)this);
    this.__hash = h__7772__auto__44736;
    return (hash__7771__auto__44737 == 0L) ? h__7772__auto__44736 : hash__7771__auto__44737;
  }
  
  public boolean equals(Object G__44676) { G__44676 = null;
    return APersistentMap.mapEquals((IPersistentMap)this, G__44676); }
  
  public IPersistentMap meta() { return (IPersistentMap)this.__meta; }
  
  public IObj withMeta(IPersistentMap G__44676) { G__44676 = null;
    return (IObj)new QueryDslHistoryStore(this.db, this.configuration, this.serialize, this.deserialize, this.size, this.dispatch, this.schema, this.table, G__44676, this.__extmap, this.__hash, this.__hasheq); }
  
  public Object valAt(Object k__7777__auto__) { k__7777__auto__ = null;
    return ((ILookup)this).valAt(k__7777__auto__, null); }
  
  public Object valAt(Object k__7779__auto__, Object else__7780__auto__) {
    Object G__44697 = k__7779__auto__;
    switch (Util.hash(G__44697) >> 6 & 0xF) {
      case 1:
        if (G__44697 == const__8);
        break;
      case 3:
        if (G__44697 == const__14);
        break;
      case 6:
        if (G__44697 == const__10);
        break;
      case 7:
        if (G__44697 == const__11);
        break;
      case 8:
        if (G__44697 == const__15);
        break;
      case 11:
        if (G__44697 == const__13);
        break;
      case 13:
        if (G__44697 == const__9);
        break;
      case 14:
        if (G__44697 == const__12);
        break;
    } 
    k__7779__auto__ = null;
    else__7780__auto__ = null;
    this = null;
    return RT.get(this.__extmap, k__7779__auto__, else__7780__auto__);
  }
  
  public ILookupThunk getLookupThunk(Keyword k__7782__auto__) {
    Object gclass = ((IFn)const__27.getRawRoot()).invoke(this), G__44680 = k__7782__auto__ = null;
    switch (Util.hash(G__44680) >> 6 & 0xF) {
      case 1:
        if (G__44680 == const__8)
          gclass = null; 
        break;
      case 3:
        if (G__44680 == const__14)
          gclass = null; 
        break;
      case 6:
        if (G__44680 == const__10)
          gclass = null; 
        break;
      case 7:
        if (G__44680 == const__11)
          gclass = null; 
        break;
      case 8:
        if (G__44680 == const__15)
          gclass = null; 
        break;
      case 11:
        if (G__44680 == const__13)
          gclass = null; 
        break;
      case 13:
        if (G__44680 == const__9)
          gclass = null; 
        break;
      case 14:
        if (G__44680 == const__12)
          gclass = null; 
        break;
    } 
    return (ILookupThunk)null;
  }
  
  public int count() { return RT.intCast(Numbers.add(8L, RT.count(this.__extmap))); }
  
  public IPersistentCollection empty() { throw (Throwable)new UnsupportedOperationException((String)((IFn)const__29.getRawRoot()).invoke("Can't create empty: ", "synchrony.querydsl.history_store.QueryDslHistoryStore")); }
  
  public IPersistentCollection cons(Object e__7786__auto__) { e__7786__auto__ = null;
    this = null;
    return (IPersistentCollection)((IFn)const__28).invoke(this, e__7786__auto__); }
  
  public boolean equiv(Object G__44676) {
    boolean or__5516__auto__44746 = Util.identical(this, G__44676);
    Object G__44676 = G__44676 = null;
    boolean and__5514__auto__44745 = Util.equiv(this.db, ((QueryDslHistoryStore)G__44676).db), and__5514__auto__44744 = Util.equiv(this.configuration, ((QueryDslHistoryStore)G__44676).configuration), and__5514__auto__44743 = Util.equiv(this.serialize, ((QueryDslHistoryStore)G__44676).serialize), and__5514__auto__44742 = Util.equiv(this.deserialize, ((QueryDslHistoryStore)G__44676).deserialize), and__5514__auto__44741 = Util.equiv(this.size, ((QueryDslHistoryStore)G__44676).size), and__5514__auto__44740 = Util.equiv(this.dispatch, ((QueryDslHistoryStore)G__44676).dispatch), and__5514__auto__44739 = Util.equiv(this.schema, ((QueryDslHistoryStore)G__44676).schema), and__5514__auto__44738 = Util.equiv(this.table, ((QueryDslHistoryStore)G__44676).table);
    G__44676 = null;
    return RT.booleanCast(or__5516__auto__44746 ? (or__5516__auto__44746 ? Boolean.TRUE : Boolean.FALSE) : (Util.identical(((IFn)const__27.getRawRoot()).invoke(this), ((IFn)const__27.getRawRoot()).invoke(G__44676)) ? (and__5514__auto__44745 ? (and__5514__auto__44744 ? (and__5514__auto__44743 ? (and__5514__auto__44742 ? (and__5514__auto__44741 ? (and__5514__auto__44740 ? (and__5514__auto__44739 ? (and__5514__auto__44738 ? (Util.equiv(this.__extmap, ((QueryDslHistoryStore)G__44676).__extmap) ? Boolean.TRUE : Boolean.FALSE) : (and__5514__auto__44738 ? Boolean.TRUE : Boolean.FALSE)) : (and__5514__auto__44739 ? Boolean.TRUE : Boolean.FALSE)) : (and__5514__auto__44740 ? Boolean.TRUE : Boolean.FALSE)) : (and__5514__auto__44741 ? Boolean.TRUE : Boolean.FALSE)) : (and__5514__auto__44742 ? Boolean.TRUE : Boolean.FALSE)) : (and__5514__auto__44743 ? Boolean.TRUE : Boolean.FALSE)) : (and__5514__auto__44744 ? Boolean.TRUE : Boolean.FALSE)) : (and__5514__auto__44745 ? Boolean.TRUE : Boolean.FALSE)) : null));
  }
  
  public boolean containsKey(Object k__7789__auto__) { k__7789__auto__ = null;
    this = null;
    return ((Boolean)((IFn)const__26.getRawRoot()).invoke(Util.identical(this, ((ILookup)this).valAt(k__7789__auto__, this)) ? Boolean.TRUE : Boolean.FALSE)).booleanValue(); }
  
  public IMapEntry entryAt(Object k__7791__auto__) {
    Object v__7792__auto__44747 = ((ILookup)this).valAt(k__7791__auto__, this);
    k__7791__auto__ = null;
    v__7792__auto__44747 = null;
    this = null;
    return (IMapEntry)(Util.identical(this, v__7792__auto__44747) ? null : MapEntry.create(k__7791__auto__, v__7792__auto__44747));
  }
  
  public ISeq seq() { this = null;
    return (ISeq)((IFn)const__24.getRawRoot()).invoke(((IFn)const__25.getRawRoot()).invoke(RT.vector(new Object[] { MapEntry.create(const__11, this.db), MapEntry.create(const__15, this.configuration), MapEntry.create(const__9, this.serialize), MapEntry.create(const__14, this.deserialize), MapEntry.create(const__12, this.size), MapEntry.create(const__13, this.dispatch), MapEntry.create(const__8, this.schema), MapEntry.create(const__10, this.table) }), this.__extmap)); }
  
  public Iterator iterator() { return (Iterator)new RecordIterator((ILookup)this, (IPersistentVector)const__23, (Iterator)RT.iter(this.__extmap)); }
  
  public IPersistentMap assoc(Object k__7796__auto__, Object G__44676) {
    Object pred__44678 = const__21.getRawRoot(), expr__44679 = k__7796__auto__;
    if (((IFn)pred__44678).invoke(const__11, expr__44679) != null) {
      if (((IFn)pred__44678).invoke(const__11, expr__44679) != Boolean.FALSE)
        G__44676 = null; 
    } else {
      ((IFn)pred__44678).invoke(const__11, expr__44679);
    } 
    if (((IFn)pred__44678).invoke(const__15, expr__44679) != null) {
      if (((IFn)pred__44678).invoke(const__15, expr__44679) != Boolean.FALSE)
        G__44676 = null; 
    } else {
      ((IFn)pred__44678).invoke(const__15, expr__44679);
    } 
    if (((IFn)pred__44678).invoke(const__9, expr__44679) != null) {
      if (((IFn)pred__44678).invoke(const__9, expr__44679) != Boolean.FALSE)
        G__44676 = null; 
    } else {
      ((IFn)pred__44678).invoke(const__9, expr__44679);
    } 
    if (((IFn)pred__44678).invoke(const__14, expr__44679) != null) {
      if (((IFn)pred__44678).invoke(const__14, expr__44679) != Boolean.FALSE)
        G__44676 = null; 
    } else {
      ((IFn)pred__44678).invoke(const__14, expr__44679);
    } 
    if (((IFn)pred__44678).invoke(const__12, expr__44679) != null) {
      if (((IFn)pred__44678).invoke(const__12, expr__44679) != Boolean.FALSE)
        G__44676 = null; 
    } else {
      ((IFn)pred__44678).invoke(const__12, expr__44679);
    } 
    if (((IFn)pred__44678).invoke(const__13, expr__44679) != null) {
      if (((IFn)pred__44678).invoke(const__13, expr__44679) != Boolean.FALSE)
        G__44676 = null; 
    } else {
      ((IFn)pred__44678).invoke(const__13, expr__44679);
    } 
    if (((IFn)pred__44678).invoke(const__8, expr__44679) != null) {
      if (((IFn)pred__44678).invoke(const__8, expr__44679) != Boolean.FALSE)
        G__44676 = null; 
    } else {
      ((IFn)pred__44678).invoke(const__8, expr__44679);
    } 
    pred__44678 = null;
    expr__44679 = null;
    if (((IFn)pred__44678).invoke(const__10, expr__44679) != null) {
      if (((IFn)pred__44678).invoke(const__10, expr__44679) != Boolean.FALSE)
        G__44676 = null; 
    } else {
      ((IFn)pred__44678).invoke(const__10, expr__44679);
    } 
    k__7796__auto__ = null;
    G__44676 = null;
    return (IPersistentMap)new QueryDslHistoryStore(this.db, this.configuration, this.serialize, this.deserialize, this.size, this.dispatch, this.schema, this.table, this.__meta, ((IFn)const__22.getRawRoot()).invoke(this.__extmap, k__7796__auto__, G__44676));
  }
  
  public IPersistentMap without(Object k__7798__auto__) { if (((IFn)const__7.getRawRoot()).invoke(const__16, k__7798__auto__) != null) {
      if (((IFn)const__7.getRawRoot()).invoke(const__16, k__7798__auto__) != Boolean.FALSE) {
        k__7798__auto__ = null;
        this = null;
      } 
    } else {
      ((IFn)const__7.getRawRoot()).invoke(const__16, k__7798__auto__);
    } 
    k__7798__auto__ = null;
    return (IPersistentMap)new QueryDslHistoryStore(this.db, this.configuration, this.serialize, this.deserialize, this.size, this.dispatch, this.schema, this.table, this.__meta, ((IFn)const__20.getRawRoot()).invoke(((IFn)const__17.getRawRoot()).invoke(this.__extmap, k__7798__auto__))); }
  
  public int size() { this = null;
    return ((Counted)this).count(); }
  
  public boolean isEmpty() { return Util.equiv(0L, ((Counted)this).count()); }
  
  public boolean containsValue(Object v__7802__auto__) { v__7802__auto__ = null;
    return RT.booleanCast(((IFn)const__4.getRawRoot()).invoke(RT.set(new Object[] { v__7802__auto__ }, ), ((IFn)const__1.getRawRoot()).invoke(this))); }
  
  public Object get(Object k__7804__auto__) { k__7804__auto__ = null;
    return ((ILookup)this).valAt(k__7804__auto__); }
  
  public Object put(Object k__7806__auto__, Object v__7807__auto__) { throw (Throwable)new UnsupportedOperationException(); }
  
  public Object remove(Object k__7809__auto__) { throw (Throwable)new UnsupportedOperationException(); }
  
  public void putAll(Map m__7811__auto__) { throw (Throwable)new UnsupportedOperationException(); }
  
  public void clear() { throw (Throwable)new UnsupportedOperationException(); }
  
  public Set keySet() { this = null;
    return (Set)((IFn)const__0.getRawRoot()).invoke(((IFn)const__2.getRawRoot()).invoke(this)); }
  
  public Collection values() { this = null;
    return (Collection)((IFn)const__1.getRawRoot()).invoke(this); }
  
  public Set entrySet() { this = null;
    return (Set)((IFn)const__0.getRawRoot()).invoke(this); }
}
