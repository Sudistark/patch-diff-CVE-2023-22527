package synchrony.querydsl;

import clojure.lang.AFn;
import clojure.lang.Compiler;
import clojure.lang.IPersistentMap;
import clojure.lang.LockingTransaction;
import clojure.lang.PersistentList;
import clojure.lang.RT;
import clojure.lang.Symbol;
import clojure.lang.Tuple;
import clojure.lang.Var;
import java.util.Arrays;
import java.util.concurrent.Callable;

public class db__init {
  public static final Var const__0;
  
  public static final AFn const__1;
  
  public static final AFn const__2;
  
  public static final Var const__3;
  
  public static final AFn const__11;
  
  public static final Var const__12;
  
  public static final AFn const__15;
  
  public static final Var const__16;
  
  public static final AFn const__19;
  
  public static final Var const__20;
  
  public static final AFn const__23;
  
  public static final Var const__24;
  
  public static final AFn const__27;
  
  public static final Var const__28;
  
  public static final AFn const__31;
  
  public static final Var const__32;
  
  public static final AFn const__34;
  
  public static final AFn const__42;
  
  public static final Var const__43;
  
  public static final AFn const__46;
  
  public static final Var const__47;
  
  public static final AFn const__49;
  
  public static final Var const__50;
  
  public static final AFn const__52;
  
  public static final Var const__53;
  
  public static final AFn const__55;
  
  public static final Var const__56;
  
  public static final AFn const__58;
  
  public static final Var const__59;
  
  public static final AFn const__62;
  
  public static final Var const__63;
  
  public static final AFn const__66;
  
  public static final Var const__67;
  
  public static final AFn const__70;
  
  public static final Var const__71;
  
  public static final AFn const__74;
  
  public static void load() {
    LockingTransaction.runInTransaction((Callable)new db.fn__25259());
    const__3.setMeta((IPersistentMap)const__11);
    const__3.bindRoot(new db.make_postgres_configuration());
    const__12.setMeta((IPersistentMap)const__15);
    const__12.bindRoot(new db.make_jdbc_opts());
    const__16.setMeta((IPersistentMap)const__19);
    const__16.bindRoot(new db.make_query_opts());
    const__20.setMeta((IPersistentMap)const__23);
    const__20.bindRoot(new db.make_path());
    const__24.setMeta((IPersistentMap)const__27);
    const__24.bindRoot(new db.make_pool_datasource());
    const__28.setMeta((IPersistentMap)const__31);
    const__28.bindRoot(new db.make_pool_db_spec());
    const__32.setMeta((IPersistentMap)const__34);
    const__32.bindRoot(const__42);
    const__43.setMeta((IPersistentMap)const__46);
    const__43.bindRoot(new db.load_config());
    const__47.setMeta((IPersistentMap)const__49);
    const__47.bindRoot("wikidocs");
    const__50.setMeta((IPersistentMap)const__52);
    const__50.bindRoot("EVENTS");
    const__53.setMeta((IPersistentMap)const__55);
    const__53.bindRoot("SNAPSHOTS");
    const__56.setMeta((IPersistentMap)const__58);
    const__56.bindRoot("SECRETS");
    const__59.setMeta((IPersistentMap)const__62);
    const__59.bindRoot(new db.get_connection());
    const__63.setMeta((IPersistentMap)const__66);
    const__63.bindRoot(new db.get_db_connection());
    const__67.setMeta((IPersistentMap)const__70);
    const__67.bindRoot(new db.execute_BANG_());
    const__71.setMeta((IPersistentMap)const__74);
    const__71.bindRoot(new db.query());
  }
  
  public static void __init0() {
    const__0 = (Var)RT.var("clojure.core", "in-ns");
    const__1 = (AFn)Symbol.intern(null, "synchrony.querydsl.db");
    const__2 = (AFn)Symbol.intern(null, "clojure.core");
    const__3 = (Var)RT.var("synchrony.querydsl.db", "make-postgres-configuration");
    const__11 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create() })), RT.keyword(null, "line"), Integer.valueOf(28), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/querydsl/db.clj" });
    const__12 = (Var)RT.var("synchrony.querydsl.db", "make-jdbc-opts");
    const__15 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "database-url")) })), RT.keyword(null, "line"), Integer.valueOf(31), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/querydsl/db.clj" });
    const__16 = (Var)RT.var("synchrony.querydsl.db", "make-query-opts");
    const__19 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "tables-by-schema")) })), RT.keyword(null, "line"), Integer.valueOf(46), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/querydsl/db.clj" });
    const__20 = (Var)RT.var("synchrony.querydsl.db", "make-path");
    const__23 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "schema"), Symbol.intern(null, "table")) })), RT.keyword(null, "line"), Integer.valueOf(60), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/querydsl/db.clj" });
    const__24 = (Var)RT.var("synchrony.querydsl.db", "make-pool-datasource");
    const__27 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "spec")) })), RT.keyword(null, "line"), Integer.valueOf(66), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/querydsl/db.clj" });
    const__28 = (Var)RT.var("synchrony.querydsl.db", "make-pool-db-spec");
    const__31 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "config")) })), RT.keyword(null, "line"), Integer.valueOf(82), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/querydsl/db.clj" });
    const__32 = (Var)RT.var("synchrony.querydsl.db", "db-config-keys");
    const__34 = (AFn)RT.map(new Object[] { RT.keyword(null, "line"), Integer.valueOf(91), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/querydsl/db.clj" });
    const__42 = (AFn)RT.vector(new Object[] { RT.keyword(null, "database-url"), RT.keyword(null, "database-username"), RT.keyword(null, "database-password"), RT.keyword(null, "database-test-connection-on-checkin"), RT.keyword(null, "database-idle-connection-test-period"), RT.keyword(null, "database-max-idle-time-excess-connections"), RT.keyword(null, "database-max-idle-time") });
    const__43 = (Var)RT.var("synchrony.querydsl.db", "load-config");
    const__46 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create() })), RT.keyword(null, "line"), Integer.valueOf(96), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/querydsl/db.clj" });
    const__47 = (Var)RT.var("synchrony.querydsl.db", "schema");
    const__49 = (AFn)RT.map(new Object[] { RT.keyword(null, "line"), Integer.valueOf(99), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/querydsl/db.clj" });
    const__50 = (Var)RT.var("synchrony.querydsl.db", "events-table");
    const__52 = (AFn)RT.map(new Object[] { RT.keyword(null, "line"), Integer.valueOf(100), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/querydsl/db.clj" });
    const__53 = (Var)RT.var("synchrony.querydsl.db", "snapshots-table");
    const__55 = (AFn)RT.map(new Object[] { RT.keyword(null, "line"), Integer.valueOf(101), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/querydsl/db.clj" });
    const__56 = (Var)RT.var("synchrony.querydsl.db", "secrets-table");
    const__58 = (AFn)RT.map(new Object[] { RT.keyword(null, "line"), Integer.valueOf(102), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/querydsl/db.clj" });
    const__59 = (Var)RT.var("synchrony.querydsl.db", "get-connection");
    const__62 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "datasource")) })), RT.keyword(null, "line"), Integer.valueOf(119), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/querydsl/db.clj" });
    const__63 = (Var)RT.var("synchrony.querydsl.db", "get-db-connection");
    const__66 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create() })), RT.keyword(null, "line"), Integer.valueOf(128), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/querydsl/db.clj" });
    const__67 = (Var)RT.var("synchrony.querydsl.db", "execute!");
    const__70 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "sql-params"), Symbol.intern(null, "&"), Symbol.intern(null, "opts")) })), RT.keyword(null, "line"), Integer.valueOf(130), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/querydsl/db.clj" });
    const__71 = (Var)RT.var("synchrony.querydsl.db", "query");
    const__74 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "sql-params"), Symbol.intern(null, "&"), Symbol.intern(null, "opts")) })), RT.keyword(null, "line"), Integer.valueOf(131), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/querydsl/db.clj" });
  }
  
  static  {
    __init0();
    Compiler.pushNSandLoader(RT.classForName("synchrony.querydsl.db__init").getClassLoader());
    try {
      load();
    } finally {
      Var.popThreadBindings();
    } 
  }
}
