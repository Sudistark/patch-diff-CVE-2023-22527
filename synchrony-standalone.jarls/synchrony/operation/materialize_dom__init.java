package synchrony.operation;

import clojure.lang.AFn;
import clojure.lang.Compiler;
import clojure.lang.IPersistentMap;
import clojure.lang.LockingTransaction;
import clojure.lang.PersistentList;
import clojure.lang.RT;
import clojure.lang.Symbol;
import clojure.lang.Tuple;
import clojure.lang.Var;
import java.util.Arrays;
import java.util.concurrent.Callable;

public class materialize_dom__init {
  public static final Var const__0;
  
  public static final AFn const__1;
  
  public static final AFn const__2;
  
  public static final Var const__3;
  
  public static final AFn const__10;
  
  public static final Var const__11;
  
  public static final AFn const__13;
  
  public static final Var const__14;
  
  public static final AFn const__16;
  
  public static final Var const__17;
  
  public static final AFn const__19;
  
  public static final Var const__20;
  
  public static final AFn const__24;
  
  public static final Var const__25;
  
  public static final AFn const__28;
  
  public static final Var const__29;
  
  public static final AFn const__32;
  
  public static final Var const__33;
  
  public static final AFn const__36;
  
  public static final Var const__37;
  
  public static final AFn const__39;
  
  public static final Var const__40;
  
  public static final AFn const__42;
  
  public static final Var const__43;
  
  public static final AFn const__45;
  
  public static final Var const__46;
  
  public static final AFn const__48;
  
  public static final Var const__49;
  
  public static final AFn const__51;
  
  public static final Var const__52;
  
  public static final AFn const__54;
  
  public static final Var const__55;
  
  public static final AFn const__57;
  
  public static final Var const__58;
  
  public static final AFn const__60;
  
  public static final Var const__61;
  
  public static final AFn const__63;
  
  public static final Var const__64;
  
  public static final AFn const__67;
  
  public static final Var const__68;
  
  public static final AFn const__71;
  
  public static final Var const__72;
  
  public static final AFn const__75;
  
  public static final Var const__76;
  
  public static final AFn const__79;
  
  public static final Var const__80;
  
  public static final AFn const__83;
  
  public static final Var const__84;
  
  public static final AFn const__87;
  
  public static final Var const__88;
  
  public static final AFn const__91;
  
  public static final Var const__92;
  
  public static final AFn const__95;
  
  public static final Var const__96;
  
  public static final AFn const__99;
  
  public static final Var const__100;
  
  public static final AFn const__103;
  
  public static final Var const__104;
  
  public static final AFn const__107;
  
  public static final Var const__108;
  
  public static final AFn const__111;
  
  public static final Var const__112;
  
  public static final AFn const__115;
  
  public static final Var const__116;
  
  public static final AFn const__119;
  
  public static final Var const__120;
  
  public static final AFn const__123;
  
  public static final Var const__124;
  
  public static final AFn const__127;
  
  public static final Var const__128;
  
  public static final AFn const__131;
  
  public static final Var const__132;
  
  public static final AFn const__134;
  
  public static final Var const__135;
  
  public static final AFn const__138;
  
  public static final Var const__139;
  
  public static final AFn const__142;
  
  public static final Var const__143;
  
  public static final AFn const__146;
  
  public static final Var const__147;
  
  public static final AFn const__150;
  
  public static final Var const__151;
  
  public static final AFn const__154;
  
  public static final Var const__155;
  
  public static final AFn const__158;
  
  public static final AFn const__161;
  
  public static final AFn const__164;
  
  public static final Var const__165;
  
  public static final AFn const__168;
  
  public static void load() {
    LockingTransaction.runInTransaction((Callable)new materialize_dom.fn__37715());
    const__3.setDynamic(true).setMeta((IPersistentMap)const__10);
    const__3.setDynamic(true).bindRoot(null);
    const__11.setDynamic(true).setMeta((IPersistentMap)const__13);
    const__11.setDynamic(true).bindRoot(null);
    const__14.setDynamic(true).setMeta((IPersistentMap)const__16);
    const__14.setDynamic(true).bindRoot(Boolean.FALSE);
    const__17.setDynamic(true).setMeta((IPersistentMap)const__19);
    const__17.setDynamic(true).bindRoot(null);
    const__20.setMeta((IPersistentMap)const__24);
    const__20.bindRoot(new materialize_dom.text_node_QMARK_());
    const__25.setMeta((IPersistentMap)const__28);
    const__25.bindRoot(new materialize_dom.element_node_QMARK_());
    const__29.setMeta((IPersistentMap)const__32);
    const__29.bindRoot(new materialize_dom.dom_node_length());
    const__33.setMeta((IPersistentMap)const__36);
    const__33.bindRoot(new materialize_dom.invalid_target());
    const__37.setMeta((IPersistentMap)const__39);
    const__37.bindRoot(const__33.getRawRoot());
    const__40.setMeta((IPersistentMap)const__42);
    const__40.bindRoot(const__33.getRawRoot());
    const__43.setMeta((IPersistentMap)const__45);
    const__43.bindRoot(const__33.getRawRoot());
    const__46.setMeta((IPersistentMap)const__48);
    const__46.bindRoot(const__33.getRawRoot());
    const__49.setMeta((IPersistentMap)const__51);
    const__49.bindRoot(const__33.getRawRoot());
    const__52.setMeta((IPersistentMap)const__54);
    const__52.bindRoot(const__33.getRawRoot());
    const__55.setMeta((IPersistentMap)const__57);
    const__55.bindRoot(const__33.getRawRoot());
    const__58.setMeta((IPersistentMap)const__60);
    const__58.bindRoot(const__33.getRawRoot());
    const__61.setMeta((IPersistentMap)const__63);
    const__61.bindRoot(const__33.getRawRoot());
    const__64.setMeta((IPersistentMap)const__67);
    const__64.bindRoot(new materialize_dom.get_real_off());
    const__68.setMeta((IPersistentMap)const__71);
    const__68.bindRoot(new materialize_dom.skip());
    const__72.setMeta((IPersistentMap)const__75);
    const__72.bindRoot(new materialize_dom.empty_text_node_QMARK_());
    const__76.setMeta((IPersistentMap)const__79);
    const__76.bindRoot(new materialize_dom.text_node_slice());
    const__80.setMeta((IPersistentMap)const__83);
    const__80.bindRoot(new materialize_dom.cohesive_get3());
    const__84.setMeta((IPersistentMap)const__87);
    const__84.bindRoot(new materialize_dom.cohesive_count());
    const__88.setMeta((IPersistentMap)const__91);
    const__88.bindRoot(new materialize_dom.cohesive_subvec());
    const__92.setMeta((IPersistentMap)const__95);
    const__92.bindRoot(new materialize_dom.dom_get3());
    const__96.setMeta((IPersistentMap)const__99);
    const__96.bindRoot(new materialize_dom.append_BANG_());
    const__100.setMeta((IPersistentMap)const__103);
    const__100.bindRoot(new materialize_dom.retain_BANG_());
    const__104.setMeta((IPersistentMap)const__107);
    const__104.bindRoot(new materialize_dom.remove_subvec_BANG_());
    const__108.setMeta((IPersistentMap)const__111);
    const__108.bindRoot(new materialize_dom.maybe_cohesive_append_BANG_());
    const__112.setMeta((IPersistentMap)const__115);
    const__112.bindRoot(new materialize_dom.cohesive_append_BANG_());
    const__116.setMeta((IPersistentMap)const__119);
    const__116.bindRoot(new materialize_dom.cohesive_append_or_retain());
    const__120.setMeta((IPersistentMap)const__123);
    const__120.bindRoot(new materialize_dom.cohesive_into_BANG_());
    const__124.setMeta((IPersistentMap)const__127);
    const__124.bindRoot(new materialize_dom.finalize_children());
    const__128.setMeta((IPersistentMap)const__131);
    const__132.setMeta((IPersistentMap)const__134);
    const__135.setMeta((IPersistentMap)const__138);
    const__135.bindRoot(new materialize_dom.children_subeditor());
    const__139.setMeta((IPersistentMap)const__142);
    const__139.bindRoot(new materialize_dom.move_cohesive_subvec());
    const__143.setMeta((IPersistentMap)const__146);
    const__143.bindRoot(new materialize_dom.delete_cohesive_subvec());
    const__147.setMeta((IPersistentMap)const__150);
    const__147.bindRoot(new materialize_dom.box_replace());
    const__151.setMeta((IPersistentMap)const__154);
    const__151.bindRoot(new materialize_dom.box_new());
    const__155.setMeta((IPersistentMap)const__158);
    const__155.bindRoot(new materialize_dom.adapt_new());
    const__128.setMeta((IPersistentMap)const__161);
    const__128.bindRoot(new materialize_dom.children_editor());
    const__132.setMeta((IPersistentMap)const__164);
    const__132.bindRoot(new materialize_dom.element_editor());
    const__165.setMeta((IPersistentMap)const__168);
    const__165.bindRoot(new materialize_dom.materialize_dom());
  }
  
  public static void __init0() {
    const__0 = (Var)RT.var("clojure.core", "in-ns");
    const__1 = (AFn)Symbol.intern(null, "synchrony.operation.materialize-dom");
    const__2 = (AFn)Symbol.intern(null, "clojure.core");
    const__3 = (Var)RT.var("synchrony.operation.materialize-dom", "*domModifiers*");
    const__10 = (AFn)RT.map(new Object[] { RT.keyword(null, "dynamic"), Boolean.TRUE, RT.keyword(null, "line"), Integer.valueOf(16), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/operation/materialize_dom.cljc" });
    const__11 = (Var)RT.var("synchrony.operation.materialize-dom", "*document*");
    const__13 = (AFn)RT.map(new Object[] { RT.keyword(null, "dynamic"), Boolean.TRUE, RT.keyword(null, "line"), Integer.valueOf(17), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/operation/materialize_dom.cljc" });
    const__14 = (Var)RT.var("synchrony.operation.materialize-dom", "*mutate?*");
    const__16 = (AFn)RT.map(new Object[] { RT.keyword(null, "dynamic"), Boolean.TRUE, RT.keyword(null, "line"), Integer.valueOf(18), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/operation/materialize_dom.cljc" });
    const__17 = (Var)RT.var("synchrony.operation.materialize-dom", "*visited*");
    const__19 = (AFn)RT.map(new Object[] { RT.keyword(null, "dynamic"), Boolean.TRUE, RT.keyword(null, "line"), Integer.valueOf(19), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/operation/materialize_dom.cljc" });
    const__20 = (Var)RT.var("synchrony.operation.materialize-dom", "text-node?");
    const__24 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "node")) })), RT.keyword(null, "line"), Integer.valueOf(21), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/operation/materialize_dom.cljc" });
    const__25 = (Var)RT.var("synchrony.operation.materialize-dom", "element-node?");
    const__28 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "node")) })), RT.keyword(null, "line"), Integer.valueOf(24), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/operation/materialize_dom.cljc" });
    const__29 = (Var)RT.var("synchrony.operation.materialize-dom", "dom-node-length");
    const__32 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "node")) })), RT.keyword(null, "line"), Integer.valueOf(27), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/operation/materialize_dom.cljc" });
    const__33 = (Var)RT.var("synchrony.operation.materialize-dom", "invalid-target");
    const__36 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "&"), Symbol.intern(null, "args")) })), RT.keyword(null, "line"), Integer.valueOf(184), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/operation/materialize_dom.cljc" });
    const__37 = (Var)RT.var("synchrony.operation.materialize-dom", "append-node!");
    const__39 = (AFn)RT.map(new Object[] { RT.keyword(null, "line"), Integer.valueOf(185), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/operation/materialize_dom.cljc" });
    const__40 = (Var)RT.var("synchrony.operation.materialize-dom", "remove-node!");
    const__42 = (AFn)RT.map(new Object[] { RT.keyword(null, "line"), Integer.valueOf(186), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/operation/materialize_dom.cljc" });
    const__43 = (Var)RT.var("synchrony.operation.materialize-dom", "retain-node!");
    const__45 = (AFn)RT.map(new Object[] { RT.keyword(null, "line"), Integer.valueOf(187), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/operation/materialize_dom.cljc" });
    const__46 = (Var)RT.var("synchrony.operation.materialize-dom", "update-attrs!");
    const__48 = (AFn)RT.map(new Object[] { RT.keyword(null, "line"), Integer.valueOf(188), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/operation/materialize_dom.cljc" });
    const__49 = (Var)RT.var("synchrony.operation.materialize-dom", "update-styles!");
    const__51 = (AFn)RT.map(new Object[] { RT.keyword(null, "line"), Integer.valueOf(189), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/operation/materialize_dom.cljc" });
    const__52 = (Var)RT.var("synchrony.operation.materialize-dom", "props-editor");
    const__54 = (AFn)RT.map(new Object[] { RT.keyword(null, "line"), Integer.valueOf(190), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/operation/materialize_dom.cljc" });
    const__55 = (Var)RT.var("synchrony.operation.materialize-dom", "ensure-dom-node");
    const__57 = (AFn)RT.map(new Object[] { RT.keyword(null, "line"), Integer.valueOf(191), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/operation/materialize_dom.cljc" });
    const__58 = (Var)RT.var("synchrony.operation.materialize-dom", "read-attrs");
    const__60 = (AFn)RT.map(new Object[] { RT.keyword(null, "line"), Integer.valueOf(192), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/operation/materialize_dom.cljc" });
    const__61 = (Var)RT.var("synchrony.operation.materialize-dom", "read-styles");
    const__63 = (AFn)RT.map(new Object[] { RT.keyword(null, "line"), Integer.valueOf(193), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/operation/materialize_dom.cljc" });
    const__64 = (Var)RT.var("synchrony.operation.materialize-dom", "get-real-off");
    const__67 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "a"), Symbol.intern(null, "real"), Symbol.intern(null, "virt"), Symbol.intern(null, "lookup-virt")) })), RT.keyword(null, "line"), Integer.valueOf(197), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/operation/materialize_dom.cljc" });
    const__68 = (Var)RT.var("synchrony.operation.materialize-dom", "skip");
    const__71 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "pred?"), Symbol.intern(null, "a"), Symbol.intern(null, "i")) })), RT.keyword(null, "line"), Integer.valueOf(216), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/operation/materialize_dom.cljc" });
    const__72 = (Var)RT.var("synchrony.operation.materialize-dom", "empty-text-node?");
    const__75 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "node")) })), RT.keyword(null, "line"), Integer.valueOf(225), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/operation/materialize_dom.cljc" });
    const__76 = (Var)RT.var("synchrony.operation.materialize-dom", "text-node-slice");
    const__79 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "text-node"), Symbol.intern(null, "start")), Tuple.create(Symbol.intern(null, "text-node"), Symbol.intern(null, "start"), Symbol.intern(null, "end")) })), RT.keyword(null, "line"), Integer.valueOf(229), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/operation/materialize_dom.cljc" });
    const__80 = (Var)RT.var("synchrony.operation.materialize-dom", "cohesive-get3");
    const__83 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "a"), Symbol.intern(null, "virt-off"), Symbol.intern(null, "default")) })), RT.keyword(null, "line"), Integer.valueOf(236), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/operation/materialize_dom.cljc" });
    const__84 = (Var)RT.var("synchrony.operation.materialize-dom", "cohesive-count");
    const__87 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "a")) })), RT.keyword(null, "line"), Integer.valueOf(243), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/operation/materialize_dom.cljc" });
    const__88 = (Var)RT.var("synchrony.operation.materialize-dom", "cohesive-subvec");
    const__91 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "a"), Symbol.intern(null, "start")), Tuple.create(Symbol.intern(null, "a"), Symbol.intern(null, "start"), Symbol.intern(null, "end")) })), RT.keyword(null, "line"), Integer.valueOf(248), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/operation/materialize_dom.cljc" });
    const__92 = (Var)RT.var("synchrony.operation.materialize-dom", "dom-get3");
    const__95 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "node"), Symbol.intern(null, "key")), Tuple.create(Symbol.intern(null, "node"), Symbol.intern(null, "key"), Symbol.intern(null, "default")) })), RT.keyword(null, "line"), Integer.valueOf(280), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/operation/materialize_dom.cljc" });
    const__96 = (Var)RT.var("synchrony.operation.materialize-dom", "append!");
    const__99 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "parent"), Symbol.intern(null, "r"), Symbol.intern(null, "node")) })), RT.keyword(null, "line"), Integer.valueOf(301), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/operation/materialize_dom.cljc" });
  }
  
  public static void __init1() {
    const__100 = (Var)RT.var("synchrony.operation.materialize-dom", "retain!");
    const__103 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "parent"), Symbol.intern(null, "r"), Symbol.intern(null, "node")) })), RT.keyword(null, "line"), Integer.valueOf(306), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/operation/materialize_dom.cljc" });
    const__104 = (Var)RT.var("synchrony.operation.materialize-dom", "remove-subvec!");
    const__107 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "subvec")) })), RT.keyword(null, "line"), Integer.valueOf(311), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/operation/materialize_dom.cljc" });
    const__108 = (Var)RT.var("synchrony.operation.materialize-dom", "maybe-cohesive-append!");
    const__111 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "parent"), Symbol.intern(null, "r"), Symbol.intern(null, "node")) })), RT.keyword(null, "line"), Integer.valueOf(316), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/operation/materialize_dom.cljc" });
    const__112 = (Var)RT.var("synchrony.operation.materialize-dom", "cohesive-append!");
    const__115 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "parent"), Symbol.intern(null, "r"), Symbol.intern(null, "node")) })), RT.keyword(null, "line"), Integer.valueOf(327), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/operation/materialize_dom.cljc" });
    const__116 = (Var)RT.var("synchrony.operation.materialize-dom", "cohesive-append-or-retain");
    const__119 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "append-or-retain!"), Symbol.intern(null, "parent"), Symbol.intern(null, "r"), Symbol.intern(null, "subvec")) })), RT.keyword(null, "line"), Integer.valueOf(331), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/operation/materialize_dom.cljc" });
    const__120 = (Var)RT.var("synchrony.operation.materialize-dom", "cohesive-into!");
    const__123 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "parent"), Symbol.intern(null, "r"), Symbol.intern(null, "subvec")) })), RT.keyword(null, "line"), Integer.valueOf(340), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/operation/materialize_dom.cljc" });
    const__124 = (Var)RT.var("synchrony.operation.materialize-dom", "finalize-children");
    const__127 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "parent"), Symbol.intern(null, "subvecs")) })), RT.keyword(null, "line"), Integer.valueOf(353), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/operation/materialize_dom.cljc" });
    const__128 = (Var)RT.var("synchrony.operation.materialize-dom", "children-editor");
    const__131 = (AFn)RT.map(new Object[] { RT.keyword(null, "declared"), Boolean.TRUE, RT.keyword(null, "line"), Integer.valueOf(371), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/operation/materialize_dom.cljc" });
    const__132 = (Var)RT.var("synchrony.operation.materialize-dom", "element-editor");
    const__134 = (AFn)RT.map(new Object[] { RT.keyword(null, "declared"), Boolean.TRUE, RT.keyword(null, "line"), Integer.valueOf(371), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/operation/materialize_dom.cljc" });
    const__135 = (Var)RT.var("synchrony.operation.materialize-dom", "children-subeditor");
    const__138 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "editor"), Symbol.intern(null, "i"), Symbol.intern(null, "node")) })), RT.keyword(null, "line"), Integer.valueOf(373), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/operation/materialize_dom.cljc" });
    const__139 = (Var)RT.var("synchrony.operation.materialize-dom", "move-cohesive-subvec");
    const__142 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "a"), Symbol.intern(null, "start"), Symbol.intern(null, "end")) })), RT.keyword(null, "line"), Integer.valueOf(390), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/operation/materialize_dom.cljc" });
    const__143 = (Var)RT.var("synchrony.operation.materialize-dom", "delete-cohesive-subvec");
    const__146 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "a"), Symbol.intern(null, "start"), Symbol.intern(null, "end"), Symbol.intern(null, "op")) })), RT.keyword(null, "line"), Integer.valueOf(394), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/operation/materialize_dom.cljc" });
    const__147 = (Var)RT.var("synchrony.operation.materialize-dom", "box-replace");
    const__150 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "val")) })), RT.keyword(null, "line"), Integer.valueOf(398), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/operation/materialize_dom.cljc" });
    const__151 = (Var)RT.var("synchrony.operation.materialize-dom", "box-new");
    const__154 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "val")) })), RT.keyword(null, "line"), Integer.valueOf(401), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/operation/materialize_dom.cljc" });
    const__155 = (Var)RT.var("synchrony.operation.materialize-dom", "adapt-new");
    const__158 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "vals"), Symbol.intern(null, "op")) })), RT.keyword(null, "line"), Integer.valueOf(404), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/operation/materialize_dom.cljc" });
    const__161 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "finalize"), Symbol.intern(null, "subvec")) })), RT.keyword(null, "line"), Integer.valueOf(409), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/operation/materialize_dom.cljc" });
    const__164 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "element-node")) })), RT.keyword(null, "line"), Integer.valueOf(445), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/operation/materialize_dom.cljc" });
    const__165 = (Var)RT.var("synchrony.operation.materialize-dom", "materialize-dom");
    const__168 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "tree"), Symbol.intern(null, "delta")) })), RT.keyword(null, "line"), Integer.valueOf(471), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/operation/materialize_dom.cljc" });
  }
  
  static  {
    __init0();
    __init1();
    Compiler.pushNSandLoader(RT.classForName("synchrony.operation.materialize_dom__init").getClassLoader());
    try {
      load();
    } finally {
      Var.popThreadBindings();
    } 
  }
}
