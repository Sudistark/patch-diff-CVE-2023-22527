package synchrony.operation;

import clojure.lang.AFn;
import clojure.lang.Compiler;
import clojure.lang.IFn;
import clojure.lang.IPersistentMap;
import clojure.lang.Keyword;
import clojure.lang.LockingTransaction;
import clojure.lang.PersistentList;
import clojure.lang.RT;
import clojure.lang.Symbol;
import clojure.lang.Tuple;
import clojure.lang.Var;
import java.util.Arrays;
import java.util.concurrent.Callable;

public class simplify__init {
  public static final Var const__0;
  
  public static final AFn const__1;
  
  public static final AFn const__2;
  
  public static final Var const__3;
  
  public static final AFn const__11;
  
  public static final Var const__12;
  
  public static final AFn const__14;
  
  public static final Var const__15;
  
  public static final AFn const__18;
  
  public static final Var const__19;
  
  public static final AFn const__23;
  
  public static final Var const__24;
  
  public static final AFn const__27;
  
  public static final Var const__28;
  
  public static final AFn const__31;
  
  public static final Var const__32;
  
  public static final AFn const__34;
  
  public static final Var const__35;
  
  public static final AFn const__36;
  
  public static final Var const__37;
  
  public static final AFn const__38;
  
  public static final Var const__39;
  
  public static final AFn const__42;
  
  public static final Var const__43;
  
  public static final AFn const__46;
  
  public static final Var const__47;
  
  public static final AFn const__50;
  
  public static final Var const__51;
  
  public static final AFn const__54;
  
  public static final Var const__55;
  
  public static final AFn const__58;
  
  public static final AFn const__61;
  
  public static final Var const__62;
  
  public static final AFn const__65;
  
  public static final Var const__66;
  
  public static final AFn const__69;
  
  public static final Var const__70;
  
  public static final AFn const__73;
  
  public static final Var const__74;
  
  public static final AFn const__77;
  
  public static final AFn const__80;
  
  public static final Var const__81;
  
  public static final AFn const__83;
  
  public static final Var const__84;
  
  public static final Var const__85;
  
  public static final Var const__86;
  
  public static final Keyword const__87;
  
  public static final AFn const__89;
  
  public static final AFn const__91;
  
  public static final Var const__92;
  
  public static final AFn const__95;
  
  public static void load() {
    LockingTransaction.runInTransaction((Callable)new simplify.fn__36882());
    const__3.setDynamic(true).setMeta((IPersistentMap)const__11);
    const__12.setDynamic(true).setMeta((IPersistentMap)const__14);
    const__15.setMeta((IPersistentMap)const__18);
    const__19.setMeta((IPersistentMap)const__23);
    const__19.bindRoot(new simplify.simplify_unit());
    const__24.setMeta((IPersistentMap)const__27);
    const__24.bindRoot(new simplify.remove_zero_width_ops());
    const__28.setMeta((IPersistentMap)const__31);
    const__28.bindRoot(new simplify.join_partition());
    const__32.setMeta((IPersistentMap)const__34);
    const__35.setMeta((IPersistentMap)const__36);
    const__37.setMeta((IPersistentMap)const__38);
    const__39.setMeta((IPersistentMap)const__42);
    const__39.bindRoot(new simplify.simplify_delete_child());
    const__43.setMeta((IPersistentMap)const__46);
    const__43.bindRoot(new simplify.simplify_map_value());
    const__47.setMeta((IPersistentMap)const__50);
    const__47.bindRoot(new simplify.retain_map_value());
    const__51.setMeta((IPersistentMap)const__54);
    const__51.bindRoot(new simplify.delete_map_value());
    const__55.setMeta((IPersistentMap)const__58);
    const__55.bindRoot(new simplify.simplify_map());
    const__32.setMeta((IPersistentMap)const__61);
    const__32.bindRoot(new simplify.simplify_seq());
    const__62.setMeta((IPersistentMap)const__65);
    const__62.bindRoot(new simplify.not_empty_op_seq());
    const__66.setMeta((IPersistentMap)const__69);
    const__66.bindRoot(new simplify.group_delete_insert_other());
    const__70.setMeta((IPersistentMap)const__73);
    const__70.bindRoot(new simplify.simplify_source());
    const__74.setMeta((IPersistentMap)const__77);
    const__74.bindRoot(new simplify.simplify_target());
    const__15.setMeta((IPersistentMap)const__80);
    const__15.bindRoot(new simplify.simplify_subtree());
    const__81.setMeta((IPersistentMap)const__83);
    const__81























































































































































      
      .bindRoot(((IFn)const__84.getRawRoot()).invoke(((IFn)const__85.getRawRoot()).invoke(const__15.getRawRoot()), ((IFn)const__85.getRawRoot())
          .invoke(const__24.getRawRoot()), ((IFn)const__86.getRawRoot())
          .invoke(const__87), ((IFn)const__85.getRawRoot())
          .invoke(const__28.getRawRoot())));
    const__35.setMeta((IPersistentMap)const__89);
    const__35.bindRoot(const__81.getRawRoot());
    const__37.setMeta((IPersistentMap)const__91);
    const__37.bindRoot(((IFn)const__84.getRawRoot()).invoke(((IFn)const__85.getRawRoot())
          
          .invoke(const__39.getRawRoot()), const__81.getRawRoot()));
    const__92.setMeta((IPersistentMap)const__95);
    const__92.bindRoot(new simplify.simplify());
  }
  
  public static void __init0() {
    const__0 = (Var)RT.var("clojure.core", "in-ns");
    const__1 = (AFn)Symbol.intern(null, "synchrony.operation.simplify");
    const__2 = (AFn)Symbol.intern(null, "clojure.core");
    const__3 = (Var)RT.var("synchrony.operation.simplify", "*resolve-sources*");
    const__11 = (AFn)RT.map(new Object[] { RT.keyword(null, "dynamic"), Boolean.TRUE, RT.keyword(null, "private"), Boolean.TRUE, RT.keyword(null, "line"), Integer.valueOf(7), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/operation/simplify.cljc" });
    const__12 = (Var)RT.var("synchrony.operation.simplify", "*delete-sources*");
    const__14 = (AFn)RT.map(new Object[] { RT.keyword(null, "dynamic"), Boolean.TRUE, RT.keyword(null, "private"), Boolean.TRUE, RT.keyword(null, "line"), Integer.valueOf(8), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/operation/simplify.cljc" });
    const__15 = (Var)RT.var("synchrony.operation.simplify", "simplify-subtree");
    const__18 = (AFn)RT.map(new Object[] { RT.keyword(null, "declared"), Boolean.TRUE, RT.keyword(null, "line"), Integer.valueOf(10), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/operation/simplify.cljc" });
    const__19 = (Var)RT.var("synchrony.operation.simplify", "simplify-unit");
    const__23 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "op")) })), RT.keyword(null, "line"), Integer.valueOf(12), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/operation/simplify.cljc" });
    const__24 = (Var)RT.var("synchrony.operation.simplify", "remove-zero-width-ops");
    const__27 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "op")) })), RT.keyword(null, "line"), Integer.valueOf(15), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/operation/simplify.cljc" });
    const__28 = (Var)RT.var("synchrony.operation.simplify", "join-partition");
    const__31 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Tuple.create(Symbol.intern(null, "fop"), RT.keyword(null, "as"), Symbol.intern(null, "part"))) })), RT.keyword(null, "line"), Integer.valueOf(26), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/operation/simplify.cljc" });
    const__32 = (Var)RT.var("synchrony.operation.simplify", "simplify-seq");
    const__34 = (AFn)RT.map(new Object[] { RT.keyword(null, "declared"), Boolean.TRUE, RT.keyword(null, "line"), Integer.valueOf(33), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/operation/simplify.cljc" });
    const__35 = (Var)RT.var("synchrony.operation.simplify", "retain-seq-xf");
    const__36 = (AFn)RT.map(new Object[] { RT.keyword(null, "declared"), Boolean.TRUE, RT.keyword(null, "line"), Integer.valueOf(33), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/operation/simplify.cljc" });
    const__37 = (Var)RT.var("synchrony.operation.simplify", "delete-seq-xf");
    const__38 = (AFn)RT.map(new Object[] { RT.keyword(null, "declared"), Boolean.TRUE, RT.keyword(null, "line"), Integer.valueOf(33), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/operation/simplify.cljc" });
    const__39 = (Var)RT.var("synchrony.operation.simplify", "simplify-delete-child");
    const__42 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "op")) })), RT.keyword(null, "line"), Integer.valueOf(35), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/operation/simplify.cljc" });
    const__43 = (Var)RT.var("synchrony.operation.simplify", "simplify-map-value");
    const__46 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "eliminate-type"), Symbol.intern(null, "m"), Symbol.intern(null, "k"), Symbol.intern(null, "op")) })), RT.keyword(null, "line"), Integer.valueOf(53), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/operation/simplify.cljc" });
    const__47 = (Var)RT.var("synchrony.operation.simplify", "retain-map-value");
    const__50 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "m"), Symbol.intern(null, "k"), Symbol.intern(null, "op")) })), RT.keyword(null, "line"), Integer.valueOf(67), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/operation/simplify.cljc" });
    const__51 = (Var)RT.var("synchrony.operation.simplify", "delete-map-value");
    const__54 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "m"), Symbol.intern(null, "k"), Symbol.intern(null, "op")) })), RT.keyword(null, "line"), Integer.valueOf(70), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/operation/simplify.cljc" });
    const__55 = (Var)RT.var("synchrony.operation.simplify", "simplify-map");
    const__58 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "f"), Symbol.intern(null, "m")) })), RT.keyword(null, "line"), Integer.valueOf(76), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/operation/simplify.cljc" });
    const__61 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "xf"), Symbol.intern(null, "s")) })), RT.keyword(null, "line"), Integer.valueOf(79), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/operation/simplify.cljc" });
    const__62 = (Var)RT.var("synchrony.operation.simplify", "not-empty-op-seq");
    const__65 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "type"), Symbol.intern(null, "s")) })), RT.keyword(null, "line"), Integer.valueOf(82), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/operation/simplify.cljc" });
    const__66 = (Var)RT.var("synchrony.operation.simplify", "group-delete-insert-other");
    const__69 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "op")) })), RT.keyword(null, "line"), Integer.valueOf(88), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/operation/simplify.cljc" });
    const__70 = (Var)RT.var("synchrony.operation.simplify", "simplify-source");
    const__73 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "op")) })), RT.keyword(null, "line"), Integer.valueOf(100), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/operation/simplify.cljc" });
    const__74 = (Var)RT.var("synchrony.operation.simplify", "simplify-target");
    const__77 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "op")) })), RT.keyword(null, "line"), Integer.valueOf(115), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/operation/simplify.cljc" });
    const__80 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "op")) })), RT.keyword(null, "line"), Integer.valueOf(121), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/operation/simplify.cljc" });
    const__81 = (Var)RT.var("synchrony.operation.simplify", "simplify-seq-xf");
    const__83 = (AFn)RT.map(new Object[] { RT.keyword(null, "line"), Integer.valueOf(153), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/operation/simplify.cljc" });
    const__84 = (Var)RT.var("clojure.core", "comp");
    const__85 = (Var)RT.var("clojure.core", "mapcat");
    const__86 = (Var)RT.var("clojure.core", "partition-by");
    const__87 = (Keyword)RT.keyword(null, "type");
    const__89 = (AFn)RT.map(new Object[] { RT.keyword(null, "line"), Integer.valueOf(159), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/operation/simplify.cljc" });
    const__91 = (AFn)RT.map(new Object[] { RT.keyword(null, "line"), Integer.valueOf(161), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/operation/simplify.cljc" });
    const__92 = (Var)RT.var("synchrony.operation.simplify", "simplify");
    const__95 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "delta")) })), RT.keyword(null, "line"), Integer.valueOf(203), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/operation/simplify.cljc" });
  }
  
  static  {
    __init0();
    Compiler.pushNSandLoader(RT.classForName("synchrony.operation.simplify__init").getClassLoader());
    try {
      load();
    } finally {
      Var.popThreadBindings();
    } 
  }
}
