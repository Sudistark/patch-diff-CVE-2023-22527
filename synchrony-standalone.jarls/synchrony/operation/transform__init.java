package synchrony.operation;

import clojure.lang.AFn;
import clojure.lang.Compiler;
import clojure.lang.IFn;
import clojure.lang.IPersistentMap;
import clojure.lang.LockingTransaction;
import clojure.lang.PersistentList;
import clojure.lang.RT;
import clojure.lang.Symbol;
import clojure.lang.Tuple;
import clojure.lang.Var;
import java.util.Arrays;
import java.util.concurrent.Callable;

public class transform__init {
  public static final Var const__0;
  
  public static final AFn const__1;
  
  public static final AFn const__2;
  
  public static final Var const__3;
  
  public static final AFn const__10;
  
  public static final Var const__11;
  
  public static final AFn const__12;
  
  public static final Var const__13;
  
  public static final AFn const__18;
  
  public static final Var const__19;
  
  public static final AFn const__22;
  
  public static final Var const__23;
  
  public static final AFn const__26;
  
  public static final Var const__27;
  
  public static final AFn const__30;
  
  public static final Var const__31;
  
  public static final AFn const__34;
  
  public static final Var const__35;
  
  public static final AFn const__38;
  
  public static final Var const__39;
  
  public static final AFn const__42;
  
  public static final Var const__43;
  
  public static final AFn const__46;
  
  public static final Var const__47;
  
  public static final AFn const__50;
  
  public static final Var const__51;
  
  public static final AFn const__54;
  
  public static final Var const__55;
  
  public static final AFn const__58;
  
  public static final Var const__59;
  
  public static final AFn const__62;
  
  public static final Var const__63;
  
  public static final AFn const__66;
  
  public static final Var const__67;
  
  public static final AFn const__70;
  
  public static final Var const__71;
  
  public static final AFn const__74;
  
  public static final Var const__75;
  
  public static final AFn const__78;
  
  public static final Var const__79;
  
  public static final AFn const__82;
  
  public static final Var const__83;
  
  public static final AFn const__85;
  
  public static final Var const__86;
  
  public static final AFn const__88;
  
  public static final Var const__89;
  
  public static final AFn const__91;
  
  public static final Var const__92;
  
  public static final AFn const__94;
  
  public static final Var const__95;
  
  public static final AFn const__98;
  
  public static final Var const__99;
  
  public static final AFn const__102;
  
  public static final Var const__103;
  
  public static final AFn const__106;
  
  public static final Var const__107;
  
  public static final AFn const__110;
  
  public static final Var const__111;
  
  public static final AFn const__114;
  
  public static final Var const__115;
  
  public static final AFn const__118;
  
  public static final Var const__119;
  
  public static final AFn const__122;
  
  public static final Var const__123;
  
  public static final AFn const__126;
  
  public static final Var const__127;
  
  public static final AFn const__130;
  
  public static final Var const__131;
  
  public static final AFn const__134;
  
  public static final Var const__135;
  
  public static final AFn const__137;
  
  public static final Var const__138;
  
  public static final AFn const__140;
  
  public static final Var const__141;
  
  public static final AFn const__143;
  
  public static final Var const__144;
  
  public static final AFn const__146;
  
  public static final Var const__147;
  
  public static final AFn const__149;
  
  public static final Var const__150;
  
  public static final AFn const__152;
  
  public static final Var const__153;
  
  public static final AFn const__155;
  
  public static final Var const__156;
  
  public static final AFn const__158;
  
  public static final Var const__159;
  
  public static final AFn const__161;
  
  public static final Var const__162;
  
  public static final AFn const__164;
  
  public static final Var const__165;
  
  public static final AFn const__167;
  
  public static final Var const__168;
  
  public static final AFn const__170;
  
  public static final Var const__171;
  
  public static final AFn const__173;
  
  public static final Var const__174;
  
  public static final AFn const__176;
  
  public static final Var const__177;
  
  public static final AFn const__179;
  
  public static final Var const__180;
  
  public static final AFn const__182;
  
  public static final Var const__183;
  
  public static final AFn const__186;
  
  public static final Var const__187;
  
  public static final AFn const__190;
  
  public static final Var const__191;
  
  public static final AFn const__194;
  
  public static final Var const__195;
  
  public static final AFn const__198;
  
  public static final Var const__199;
  
  public static final AFn const__202;
  
  public static final Var const__203;
  
  public static final AFn const__206;
  
  public static final Var const__207;
  
  public static final AFn const__210;
  
  public static final Var const__211;
  
  public static final AFn const__214;
  
  public static final Var const__215;
  
  public static final AFn const__217;
  
  public static final Var const__218;
  
  public static final AFn const__220;
  
  public static final Var const__221;
  
  public static final AFn const__223;
  
  public static final Var const__224;
  
  public static final AFn const__226;
  
  public static final Var const__227;
  
  public static final AFn const__229;
  
  public static final Var const__230;
  
  public static final AFn const__232;
  
  public static final Var const__233;
  
  public static final AFn const__235;
  
  public static final Var const__236;
  
  public static final AFn const__238;
  
  public static final Var const__239;
  
  public static final AFn const__241;
  
  public static final Var const__242;
  
  public static final AFn const__244;
  
  public static final Var const__245;
  
  public static final AFn const__248;
  
  public static final Var const__249;
  
  public static final AFn const__252;
  
  public static final Var const__253;
  
  public static final AFn const__255;
  
  public static final Var const__256;
  
  public static final AFn const__258;
  
  public static final Var const__259;
  
  public static final AFn const__262;
  
  public static final Var const__263;
  
  public static final AFn const__265;
  
  public static final Var const__266;
  
  public static final AFn const__269;
  
  public static final Var const__270;
  
  public static final AFn const__272;
  
  public static final Var const__273;
  
  public static final AFn const__275;
  
  public static final Var const__276;
  
  public static final AFn const__278;
  
  public static final Var const__279;
  
  public static final AFn const__281;
  
  public static final Var const__282;
  
  public static final AFn const__284;
  
  public static final Var const__285;
  
  public static final AFn const__287;
  
  public static final Var const__288;
  
  public static final AFn const__290;
  
  public static final Var const__291;
  
  public static final AFn const__293;
  
  public static final Var const__294;
  
  public static final AFn const__296;
  
  public static final Var const__297;
  
  public static final AFn const__299;
  
  public static final Var const__300;
  
  public static final AFn const__302;
  
  public static final Var const__303;
  
  public static final AFn const__305;
  
  public static final Var const__306;
  
  public static final AFn const__308;
  
  public static final Var const__309;
  
  public static final AFn const__311;
  
  public static final Var const__312;
  
  public static final AFn const__314;
  
  public static final Var const__315;
  
  public static final AFn const__317;
  
  public static final Var const__318;
  
  public static final AFn const__320;
  
  public static final Var const__321;
  
  public static final AFn const__323;
  
  public static final Var const__324;
  
  public static final AFn const__327;
  
  public static final Var const__328;
  
  public static final AFn const__331;
  
  public static final Var const__332;
  
  public static final AFn const__335;
  
  public static final Var const__336;
  
  public static final AFn const__338;
  
  public static final Var const__339;
  
  public static final AFn const__341;
  
  public static final Var const__342;
  
  public static final AFn const__344;
  
  public static final Var const__345;
  
  public static final AFn const__347;
  
  public static final Var const__348;
  
  public static final AFn const__350;
  
  public static final Var const__351;
  
  public static final AFn const__353;
  
  public static final Var const__354;
  
  public static final AFn const__357;
  
  public static final Var const__358;
  
  public static final AFn const__360;
  
  public static final Var const__361;
  
  public static final AFn const__364;
  
  public static final Var const__365;
  
  public static final AFn const__368;
  
  public static final AFn const__371;
  
  public static final AFn const__374;
  
  public static final Var const__375;
  
  public static final AFn const__378;
  
  public static final Var const__379;
  
  public static final AFn const__382;
  
  public static final Var const__383;
  
  public static final AFn const__386;
  
  public static final Var const__387;
  
  public static final AFn const__390;
  
  public static final Var const__391;
  
  public static final AFn const__394;
  
  public static final Var const__395;
  
  public static final AFn const__398;
  
  public static final Var const__399;
  
  public static final AFn const__403;
  
  public static final Var const__404;
  
  public static final AFn const__407;
  
  public static final Var const__408;
  
  public static final AFn const__411;
  
  public static final Var const__412;
  
  public static final AFn const__415;
  
  public static final Var const__416;
  
  public static final AFn const__419;
  
  public static final Var const__420;
  
  public static final AFn const__423;
  
  public static void load() {
    LockingTransaction.runInTransaction((Callable)new transform.fn__36930());
    const__3.setMeta((IPersistentMap)const__10);
    const__11.setMeta((IPersistentMap)const__12);
    const__13.setMeta((IPersistentMap)const__18);
    const__13.bindRoot(new transform.origin_tie_break());
    const__19.setMeta((IPersistentMap)const__22);
    const__19.bindRoot(new transform.timestamp_tie_break());
    const__23.setMeta((IPersistentMap)const__26);
    const__23.bindRoot(new transform.renumber_fn());
    const__27.setMeta((IPersistentMap)const__30);
    const__27.bindRoot(new transform.make_node_fn());
    const__31.setMeta((IPersistentMap)const__34);
    const__31.bindRoot(new transform.split_node_fn());
    const__35.setMeta((IPersistentMap)const__38);
    const__35.bindRoot(new transform.make_ctx());
    const__39.setMeta((IPersistentMap)const__42);
    const__39.bindRoot(new transform.swap_ctx());
    const__43.setMeta((IPersistentMap)const__46);
    const__43.bindRoot(new transform.swap());
    const__47.setMeta((IPersistentMap)const__50);
    const__47.bindRoot(new transform.error());
    const__51.setMeta((IPersistentMap)const__54);
    const__51.bindRoot(new transform.transform_ranges());
    const__55.setMeta((IPersistentMap)const__58);
    const__55.bindRoot(new transform.transform_range_unit());
    const__59.setMeta((IPersistentMap)const__62);
    const__59.bindRoot(new transform.next_next());
    const__63.setMeta((IPersistentMap)const__66);
    const__63.bindRoot(new transform.drop_next());
    const__67.setMeta((IPersistentMap)const__70);
    const__67.bindRoot(new transform.next_drop());
    const__71.setMeta((IPersistentMap)const__74);
    const__71.bindRoot(new transform.drop_drop());
    const__75.setMeta((IPersistentMap)const__78);
    const__75.bindRoot(new transform.next_stay());
    const__79.setMeta((IPersistentMap)const__82);
    const__79.bindRoot(new transform.stay_next());
    const__83.setMeta((IPersistentMap)const__85);
    const__83






















































































      
      .bindRoot(((IFn)const__51.getRawRoot()).invoke(const__59.getRawRoot()));
    const__86.setMeta((IPersistentMap)const__88);
    const__86
      .bindRoot(((IFn)const__51.getRawRoot()).invoke(const__63.getRawRoot()));
    const__89.setMeta((IPersistentMap)const__91);
    const__89
      .bindRoot(((IFn)const__51.getRawRoot()).invoke(const__67.getRawRoot()));
    const__92.setMeta((IPersistentMap)const__94);
    const__92
      .bindRoot(((IFn)const__51.getRawRoot()).invoke(const__71.getRawRoot()));
    const__95.setMeta((IPersistentMap)const__98);
    const__95.bindRoot(new transform.transform_maps());
    const__99.setMeta((IPersistentMap)const__102);
    const__99.bindRoot(new transform.retain_rec_retain_map());
    const__103.setMeta((IPersistentMap)const__106);
    const__103.bindRoot(new transform.retain_rec_delete_map());
    const__107.setMeta((IPersistentMap)const__110);
    const__107.bindRoot(new transform.delete_rec_retain_map());
    const__111.setMeta((IPersistentMap)const__114);
    const__111.bindRoot(new transform.delete_rec_delete_map());
    const__115.setMeta((IPersistentMap)const__118);
    const__115.bindRoot(new transform.make_cover_op());
    const__119.setMeta((IPersistentMap)const__122);
    const__119.bindRoot(new transform.retain_rec_retain_seq());
    const__123.setMeta((IPersistentMap)const__126);
    const__123.bindRoot(new transform.retain_rec_delete_seq());
    const__127.setMeta((IPersistentMap)const__130);
    const__127.bindRoot(new transform.delete_rec_retain_seq());
    const__131.setMeta((IPersistentMap)const__134);
    const__131.bindRoot(new transform.delete_rec_delete_seq());
    const__135.setMeta((IPersistentMap)const__137);
    const__135



























































































      
      .bindRoot(((IFn)const__55.getRawRoot()).invoke(const__99.getRawRoot()));
    const__138.setMeta((IPersistentMap)const__140);
    const__138
      .bindRoot(((IFn)const__55.getRawRoot()).invoke(const__103.getRawRoot()));
    const__141.setMeta((IPersistentMap)const__143);
    const__141
      .bindRoot(((IFn)const__55.getRawRoot()).invoke(const__107.getRawRoot()));
    const__144.setMeta((IPersistentMap)const__146);
    const__144
      .bindRoot(((IFn)const__55.getRawRoot()).invoke(const__111.getRawRoot()));
    const__147.setMeta((IPersistentMap)const__149);
    const__147
      .bindRoot(((IFn)const__55.getRawRoot()).invoke(const__119.getRawRoot()));
    const__150.setMeta((IPersistentMap)const__152);
    const__150
      .bindRoot(((IFn)const__55.getRawRoot()).invoke(const__123.getRawRoot()));
    const__153.setMeta((IPersistentMap)const__155);
    const__153
      .bindRoot(((IFn)const__55.getRawRoot()).invoke(const__127.getRawRoot()));
    const__156.setMeta((IPersistentMap)const__158);
    const__156
      .bindRoot(((IFn)const__55.getRawRoot()).invoke(const__131.getRawRoot()));
    const__159.setMeta((IPersistentMap)const__161);
    const__159
      
      .bindRoot(((IFn)const__43.getRawRoot()).invoke(const__135.getRawRoot()));
    const__162.setMeta((IPersistentMap)const__164);
    const__162
      .bindRoot(((IFn)const__43.getRawRoot()).invoke(const__138.getRawRoot()));
    const__165.setMeta((IPersistentMap)const__167);
    const__165
      .bindRoot(((IFn)const__43.getRawRoot()).invoke(const__141.getRawRoot()));
    const__168.setMeta((IPersistentMap)const__170);
    const__168
      .bindRoot(((IFn)const__43.getRawRoot()).invoke(const__144.getRawRoot()));
    const__171.setMeta((IPersistentMap)const__173);
    const__171
      .bindRoot(((IFn)const__43.getRawRoot()).invoke(const__147.getRawRoot()));
    const__174.setMeta((IPersistentMap)const__176);
    const__174
      .bindRoot(((IFn)const__43.getRawRoot()).invoke(const__150.getRawRoot()));
    const__177.setMeta((IPersistentMap)const__179);
    const__177
      .bindRoot(((IFn)const__43.getRawRoot()).invoke(const__153.getRawRoot()));
    const__180.setMeta((IPersistentMap)const__182);
    const__180
      .bindRoot(((IFn)const__43.getRawRoot()).invoke(const__156.getRawRoot()));
    const__183.setMeta((IPersistentMap)const__186);
    const__183.bindRoot(new transform.collect_outer());
    const__187.setMeta((IPersistentMap)const__190);
    const__187.bindRoot(new transform.drop_subtree());
    const__191.setMeta((IPersistentMap)const__194);
    const__191.bindRoot(new transform.delete_map_delete_map());
    const__195.setMeta((IPersistentMap)const__198);
    const__195.bindRoot(new transform.retain_map_retain_map());
    const__199.setMeta((IPersistentMap)const__202);
    const__199.bindRoot(new transform.delete_map_retain_map());
    const__203.setMeta((IPersistentMap)const__206);
    const__203.bindRoot(new transform.delete_seq_delete_seq());
    const__207.setMeta((IPersistentMap)const__210);
    const__207.bindRoot(new transform.retain_seq_retain_seq());
    const__211.setMeta((IPersistentMap)const__214);
    const__211.bindRoot(new transform.delete_seq_retain_seq());
    const__215.setMeta((IPersistentMap)const__217);
    const__215
























































      
      .bindRoot(((IFn)const__43.getRawRoot()).invoke(const__199.getRawRoot()));
    const__218.setMeta((IPersistentMap)const__220);
    const__218
      .bindRoot(((IFn)const__43.getRawRoot()).invoke(const__211.getRawRoot()));
    const__221.setMeta((IPersistentMap)const__223);
    const__221.bindRoot(const__47.getRawRoot());
    const__224.setMeta((IPersistentMap)const__226);
    const__224.bindRoot(const__47.getRawRoot());
    const__227.setMeta((IPersistentMap)const__229);
    const__227.bindRoot(const__47.getRawRoot());
    const__230.setMeta((IPersistentMap)const__232);
    const__230.bindRoot(const__47.getRawRoot());
    const__233.setMeta((IPersistentMap)const__235);
    const__233.bindRoot(const__47.getRawRoot());
    const__236.setMeta((IPersistentMap)const__238);
    const__236.bindRoot(const__47.getRawRoot());
    const__239.setMeta((IPersistentMap)const__241);
    const__239.bindRoot(const__47.getRawRoot());
    const__242.setMeta((IPersistentMap)const__244);
    const__242.bindRoot(const__47.getRawRoot());
    const__245.setMeta((IPersistentMap)const__248);
    const__245.bindRoot(new transform.any_insert());
    const__249.setMeta((IPersistentMap)const__252);
    const__249.bindRoot(new transform.any_insert_vals());
    const__253.setMeta((IPersistentMap)const__255);
    const__253





















      
      .bindRoot(((IFn)const__43.getRawRoot()).invoke(const__245.getRawRoot()));
    const__256.setMeta((IPersistentMap)const__258);
    const__256
      .bindRoot(((IFn)const__43.getRawRoot()).invoke(const__249.getRawRoot()));
    const__259.setMeta((IPersistentMap)const__262);
    const__259.bindRoot(new transform.target_any());
    const__263.setMeta((IPersistentMap)const__265);
    const__263





      
      .bindRoot(((IFn)const__43.getRawRoot()).invoke(const__259.getRawRoot()));
    const__266.setMeta((IPersistentMap)const__269);
    const__266.bindRoot(new transform.tie_break());
    const__270.setMeta((IPersistentMap)const__272);
    const__270






      
      .bindRoot(((IFn)const__266.getRawRoot()).invoke(const__253.getRawRoot(), const__245.getRawRoot()));
    const__273.setMeta((IPersistentMap)const__275);
    const__273
      .bindRoot(((IFn)const__266.getRawRoot()).invoke(const__253.getRawRoot(), const__249.getRawRoot()));
    const__276.setMeta((IPersistentMap)const__278);
    const__276
      .bindRoot(((IFn)const__266.getRawRoot()).invoke(const__256.getRawRoot(), const__249.getRawRoot()));
    const__279.setMeta((IPersistentMap)const__281);
    const__279
      .bindRoot(((IFn)const__266.getRawRoot()).invoke(const__256.getRawRoot(), const__245.getRawRoot()));
    const__282.setMeta((IPersistentMap)const__284);
    const__282
      .bindRoot(((IFn)const__266.getRawRoot()).invoke(const__259.getRawRoot(), const__263.getRawRoot()));
    const__285.setMeta((IPersistentMap)const__287);
    const__285
      .bindRoot(((IFn)const__266.getRawRoot()).invoke(const__259.getRawRoot(), const__245.getRawRoot()));
    const__288.setMeta((IPersistentMap)const__290);
    const__288
      .bindRoot(((IFn)const__266.getRawRoot()).invoke(const__259.getRawRoot(), const__249.getRawRoot()));
    const__291.setMeta((IPersistentMap)const__293);
    const__291
      .bindRoot(((IFn)const__266.getRawRoot()).invoke(const__253.getRawRoot(), const__263.getRawRoot()));
    const__294.setMeta((IPersistentMap)const__296);
    const__294
      .bindRoot(((IFn)const__266.getRawRoot()).invoke(const__256.getRawRoot(), const__263.getRawRoot()));
    const__297.setMeta((IPersistentMap)const__299);
    const__297.bindRoot(const__75.getRawRoot());
    const__300.setMeta((IPersistentMap)const__302);
    const__300.bindRoot(const__79.getRawRoot());
    const__303.setMeta((IPersistentMap)const__305);
    const__303


      
      .bindRoot(((IFn)const__266.getRawRoot()).invoke(const__297.getRawRoot(), const__300.getRawRoot()));
    const__306.setMeta((IPersistentMap)const__308);
    const__306
      .bindRoot(((IFn)const__266.getRawRoot()).invoke(const__297.getRawRoot(), const__245.getRawRoot()));
    const__309.setMeta((IPersistentMap)const__311);
    const__309
      .bindRoot(((IFn)const__266.getRawRoot()).invoke(const__297.getRawRoot(), const__249.getRawRoot()));
    const__312.setMeta((IPersistentMap)const__314);
    const__312
      .bindRoot(((IFn)const__266.getRawRoot()).invoke(const__297.getRawRoot(), const__263.getRawRoot()));
    const__315.setMeta((IPersistentMap)const__317);
    const__315
      .bindRoot(((IFn)const__266.getRawRoot()).invoke(const__253.getRawRoot(), const__300.getRawRoot()));
    const__318.setMeta((IPersistentMap)const__320);
    const__318
      .bindRoot(((IFn)const__266.getRawRoot()).invoke(const__256.getRawRoot(), const__300.getRawRoot()));
    const__321.setMeta((IPersistentMap)const__323);
    const__321
      .bindRoot(((IFn)const__266.getRawRoot()).invoke(const__259.getRawRoot(), const__300.getRawRoot()));
    const__324.setMeta((IPersistentMap)const__327);
    const__324.bindRoot(new transform.retain_any_replace());
    const__328.setMeta((IPersistentMap)const__331);
    const__328.bindRoot(new transform.delete_any_replace());
    const__332.setMeta((IPersistentMap)const__335);
    const__332.bindRoot(new transform.replace_replace());
    const__336.setMeta((IPersistentMap)const__338);
    const__336

























      
      .bindRoot(((IFn)const__43.getRawRoot()).invoke(const__324.getRawRoot()));
    const__339.setMeta((IPersistentMap)const__341);
    const__339
      .bindRoot(((IFn)const__43.getRawRoot()).invoke(const__328.getRawRoot()));
    const__342.setMeta((IPersistentMap)const__344);
    const__342
      
      .bindRoot(((IFn)const__55.getRawRoot()).invoke(const__324.getRawRoot()));
    const__345.setMeta((IPersistentMap)const__347);
    const__345
      .bindRoot(((IFn)const__55.getRawRoot()).invoke(const__328.getRawRoot()));
    const__348.setMeta((IPersistentMap)const__350);
    const__348
      .bindRoot(((IFn)const__43.getRawRoot()).invoke(const__342.getRawRoot()));
    const__351.setMeta((IPersistentMap)const__353);
    const__351
      .bindRoot(((IFn)const__43.getRawRoot()).invoke(const__345.getRawRoot()));
    const__354.setMeta((IPersistentMap)const__357);
    const__354.bindRoot(new transform.end_any());
    const__358.setMeta((IPersistentMap)const__360);
    const__358





      
      .bindRoot(((IFn)const__43.getRawRoot()).invoke(const__354.getRawRoot()));
    const__361.setMeta((IPersistentMap)const__364);
    const__361.bindRoot(new transform.tr_dispatch_fn());
    const__365.setMeta((IPersistentMap)const__368);
    const__365.bindRoot(new transform.process_seq());
    const__3.setMeta((IPersistentMap)const__371);
    const__3.bindRoot(new transform.transform_seq());
    const__11.setMeta((IPersistentMap)const__374);
    const__11.bindRoot(new transform.transform_unit());
    const__375.setMeta((IPersistentMap)const__378);
    const__375.bindRoot(new transform.cycle_id());
    const__379.setMeta((IPersistentMap)const__382);
    const__379.bindRoot(new transform.inverse_cycle_id());
    const__383.setMeta((IPersistentMap)const__386);
    const__383.bindRoot(new transform.break_cycles());
    const__387.setMeta((IPersistentMap)const__390);
    const__387.bindRoot(new transform.collect_cycles());
    const__391.setMeta((IPersistentMap)const__394);
    const__391.bindRoot(new transform.cleanup());
    const__395.setMeta((IPersistentMap)const__398);
    const__395.bindRoot(new transform.swap_expand_renumber());
    const__399.setMeta((IPersistentMap)const__403);
    const__399.bindRoot(new transform.a_b());
    const__404.setMeta((IPersistentMap)const__407);
    const__404.bindRoot(new transform.b_a());
    const__408.setMeta((IPersistentMap)const__411);
    const__408.bindRoot(new transform.break_all_cycles());
    const__412.setMeta((IPersistentMap)const__415);
    const__412.bindRoot(new transform.process_moves());
    const__416.setMeta((IPersistentMap)const__419);
    const__416.bindRoot(new transform.insert__GT_retain());
    const__420.setMeta((IPersistentMap)const__423);
    const__420.bindRoot(new transform.xform());
  }
  
  public static void __init0() {
    const__0 = (Var)RT.var("clojure.core", "in-ns");
    const__1 = (AFn)Symbol.intern(null, "synchrony.operation.transform");
    const__2 = (AFn)Symbol.intern(null, "clojure.core");
    const__3 = (Var)RT.var("synchrony.operation.transform", "transform-seq");
    const__10 = (AFn)RT.map(new Object[] { RT.keyword(null, "declared"), Boolean.TRUE, RT.keyword(null, "line"), Integer.valueOf(11), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/operation/transform.cljc" });
    const__11 = (Var)RT.var("synchrony.operation.transform", "transform-unit");
    const__12 = (AFn)RT.map(new Object[] { RT.keyword(null, "declared"), Boolean.TRUE, RT.keyword(null, "line"), Integer.valueOf(11), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/operation/transform.cljc" });
    const__13 = (Var)RT.var("synchrony.operation.transform", "origin-tie-break");
    const__18 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "ctx"), Symbol.intern(null, "a"), Symbol.intern(null, "b")) })), RT.keyword(null, "doc"), "True if the order of the operations after tie breaking is\n  a, b, false if it is reversed.\n\n  To ensure that consecutive inss from one origin that are\n  transformed against consecutive inss from another origin stay\n  consecutive without being interleaved with rets, we use\n  origin/origin tie breaking.", RT.keyword(null, "line"), Integer.valueOf(13), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/operation/transform.cljc" });
    const__19 = (Var)RT.var("synchrony.operation.transform", "timestamp-tie-break");
    const__22 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "ctx"), Symbol.intern(null, "a"), Symbol.intern(null, "b")) })), RT.keyword(null, "line"), Integer.valueOf(25), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/operation/transform.cljc" });
    const__23 = (Var)RT.var("synchrony.operation.transform", "renumber-fn");
    const__26 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "renumber-ctx-v")) })), RT.keyword(null, "line"), Integer.valueOf(34), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/operation/transform.cljc" });
    const__27 = (Var)RT.var("synchrony.operation.transform", "make-node-fn");
    const__30 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "renumber"), Symbol.intern(null, "renumber-injected")) })), RT.keyword(null, "line"), Integer.valueOf(40), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/operation/transform.cljc" });
    const__31 = (Var)RT.var("synchrony.operation.transform", "split-node-fn");
    const__34 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "make-node")) })), RT.keyword(null, "line"), Integer.valueOf(53), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/operation/transform.cljc" });
    const__35 = (Var)RT.var("synchrony.operation.transform", "make-ctx");
    const__38 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "a-revision"), Symbol.intern(null, "b-revision")) })), RT.keyword(null, "line"), Integer.valueOf(62), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/operation/transform.cljc" });
    const__39 = (Var)RT.var("synchrony.operation.transform", "swap-ctx");
    const__42 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "ctx")) })), RT.keyword(null, "line"), Integer.valueOf(81), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/operation/transform.cljc" });
    const__43 = (Var)RT.var("synchrony.operation.transform", "swap");
    const__46 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "f")) })), RT.keyword(null, "line"), Integer.valueOf(85), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/operation/transform.cljc" });
    const__47 = (Var)RT.var("synchrony.operation.transform", "error");
    const__50 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "ctx"), Symbol.intern(null, "as"), Symbol.intern(null, "bs"), Symbol.intern(null, "a"), Symbol.intern(null, "b")) })), RT.keyword(null, "line"), Integer.valueOf(90), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/operation/transform.cljc" });
    const__51 = (Var)RT.var("synchrony.operation.transform", "transform-ranges");
    const__54 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "exact-overlap")) })), RT.keyword(null, "line"), Integer.valueOf(95), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/operation/transform.cljc" });
    const__55 = (Var)RT.var("synchrony.operation.transform", "transform-range-unit");
    const__58 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "exact-overlap")) })), RT.keyword(null, "line"), Integer.valueOf(114), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/operation/transform.cljc" });
    const__59 = (Var)RT.var("synchrony.operation.transform", "next_next");
    const__62 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "ctx"), Symbol.intern(null, "as"), Symbol.intern(null, "bs"), Symbol.intern(null, "a"), Symbol.intern(null, "b")) })), RT.keyword(null, "line"), Integer.valueOf(130), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/operation/transform.cljc" });
    const__63 = (Var)RT.var("synchrony.operation.transform", "drop_next");
    const__66 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "ctx"), Symbol.intern(null, "as"), Symbol.intern(null, "bs"), Symbol.intern(null, "a"), Symbol.intern(null, "b")) })), RT.keyword(null, "line"), Integer.valueOf(133), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/operation/transform.cljc" });
    const__67 = (Var)RT.var("synchrony.operation.transform", "next_drop");
    const__70 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "ctx"), Symbol.intern(null, "as"), Symbol.intern(null, "bs"), Symbol.intern(null, "a"), Symbol.intern(null, "b")) })), RT.keyword(null, "line"), Integer.valueOf(136), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/operation/transform.cljc" });
    const__71 = (Var)RT.var("synchrony.operation.transform", "drop_drop");
    const__74 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "ctx"), Symbol.intern(null, "as"), Symbol.intern(null, "bs"), Symbol.intern(null, "a"), Symbol.intern(null, "b")) })), RT.keyword(null, "line"), Integer.valueOf(139), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/operation/transform.cljc" });
    const__75 = (Var)RT.var("synchrony.operation.transform", "next_stay");
    const__78 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "ctx"), Symbol.intern(null, "as"), Symbol.intern(null, "bs"), Symbol.intern(null, "a"), Symbol.intern(null, "b")) })), RT.keyword(null, "line"), Integer.valueOf(142), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/operation/transform.cljc" });
    const__79 = (Var)RT.var("synchrony.operation.transform", "stay_next");
    const__82 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "ctx"), Symbol.intern(null, "as"), Symbol.intern(null, "bs"), Symbol.intern(null, "a"), Symbol.intern(null, "b")) })), RT.keyword(null, "line"), Integer.valueOf(145), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/operation/transform.cljc" });
    const__83 = (Var)RT.var("synchrony.operation.transform", "retain-range_retain-range");
    const__85 = (AFn)RT.map(new Object[] { RT.keyword(null, "line"), Integer.valueOf(148), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/operation/transform.cljc" });
    const__86 = (Var)RT.var("synchrony.operation.transform", "retain-range_delete-range");
    const__88 = (AFn)RT.map(new Object[] { RT.keyword(null, "line"), Integer.valueOf(149), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/operation/transform.cljc" });
    const__89 = (Var)RT.var("synchrony.operation.transform", "delete-range_retain-range");
    const__91 = (AFn)RT.map(new Object[] { RT.keyword(null, "line"), Integer.valueOf(150), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/operation/transform.cljc" });
    const__92 = (Var)RT.var("synchrony.operation.transform", "delete-range_delete-range");
    const__94 = (AFn)RT.map(new Object[] { RT.keyword(null, "line"), Integer.valueOf(151), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/operation/transform.cljc" });
    const__95 = (Var)RT.var("synchrony.operation.transform", "transform-maps");
    const__98 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "a-op-default"), Symbol.intern(null, "b-op-default"), Symbol.intern(null, "ctx"), Symbol.intern(null, "am"), Symbol.intern(null, "bm")) })), RT.keyword(null, "line"), Integer.valueOf(154), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/operation/transform.cljc" });
    const__99 = (Var)RT.var("synchrony.operation.transform", "retain-rec_retain-map");
  }
  
  public static void __init1() {
    const__102 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "ctx"), Symbol.intern(null, "as"), Symbol.intern(null, "bs"), Symbol.intern(null, "a"), Symbol.intern(null, "b")) })), RT.keyword(null, "line"), Integer.valueOf(170), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/operation/transform.cljc" });
    const__103 = (Var)RT.var("synchrony.operation.transform", "retain-rec_delete-map");
    const__106 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "ctx"), Symbol.intern(null, "as"), Symbol.intern(null, "bs"), Symbol.intern(null, "a"), Symbol.intern(null, "b")) })), RT.keyword(null, "line"), Integer.valueOf(177), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/operation/transform.cljc" });
    const__107 = (Var)RT.var("synchrony.operation.transform", "delete-rec_retain-map");
    const__110 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "ctx"), Symbol.intern(null, "as"), Symbol.intern(null, "bs"), Symbol.intern(null, "a"), Symbol.intern(null, "b")) })), RT.keyword(null, "line"), Integer.valueOf(184), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/operation/transform.cljc" });
    const__111 = (Var)RT.var("synchrony.operation.transform", "delete-rec_delete-map");
    const__114 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "ctx"), Symbol.intern(null, "as"), Symbol.intern(null, "bs"), Symbol.intern(null, "a"), Symbol.intern(null, "b")) })), RT.keyword(null, "line"), Integer.valueOf(191), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/operation/transform.cljc" });
    const__115 = (Var)RT.var("synchrony.operation.transform", "make-cover-op");
    const__118 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "create-seq-op"), Symbol.intern(null, "create-range-op"), Symbol.intern(null, "cover-seq")) })), RT.keyword(null, "line"), Integer.valueOf(198), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/operation/transform.cljc" });
    const__119 = (Var)RT.var("synchrony.operation.transform", "retain-rec_retain-seq");
    const__122 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "ctx"), Symbol.intern(null, "as"), Symbol.intern(null, "bs"), Symbol.intern(null, "a"), Symbol.intern(null, "b")) })), RT.keyword(null, "line"), Integer.valueOf(204), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/operation/transform.cljc" });
    const__123 = (Var)RT.var("synchrony.operation.transform", "retain-rec_delete-seq");
    const__126 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "ctx"), Symbol.intern(null, "as"), Symbol.intern(null, "bs"), Symbol.intern(null, "a"), Symbol.intern(null, "b")) })), RT.keyword(null, "line"), Integer.valueOf(214), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/operation/transform.cljc" });
    const__127 = (Var)RT.var("synchrony.operation.transform", "delete-rec_retain-seq");
    const__130 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "ctx"), Symbol.intern(null, "as"), Symbol.intern(null, "bs"), Symbol.intern(null, "a"), Symbol.intern(null, "b")) })), RT.keyword(null, "line"), Integer.valueOf(224), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/operation/transform.cljc" });
    const__131 = (Var)RT.var("synchrony.operation.transform", "delete-rec_delete-seq");
    const__134 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "ctx"), Symbol.intern(null, "as"), Symbol.intern(null, "bs"), Symbol.intern(null, "a"), Symbol.intern(null, "b")) })), RT.keyword(null, "line"), Integer.valueOf(234), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/operation/transform.cljc" });
    const__135 = (Var)RT.var("synchrony.operation.transform", "retain-range_retain-map");
    const__137 = (AFn)RT.map(new Object[] { RT.keyword(null, "line"), Integer.valueOf(244), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/operation/transform.cljc" });
    const__138 = (Var)RT.var("synchrony.operation.transform", "retain-range_delete-map");
    const__140 = (AFn)RT.map(new Object[] { RT.keyword(null, "line"), Integer.valueOf(245), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/operation/transform.cljc" });
    const__141 = (Var)RT.var("synchrony.operation.transform", "delete-range_retain-map");
    const__143 = (AFn)RT.map(new Object[] { RT.keyword(null, "line"), Integer.valueOf(246), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/operation/transform.cljc" });
    const__144 = (Var)RT.var("synchrony.operation.transform", "delete-range_delete-map");
    const__146 = (AFn)RT.map(new Object[] { RT.keyword(null, "line"), Integer.valueOf(247), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/operation/transform.cljc" });
    const__147 = (Var)RT.var("synchrony.operation.transform", "retain-range_retain-seq");
    const__149 = (AFn)RT.map(new Object[] { RT.keyword(null, "line"), Integer.valueOf(248), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/operation/transform.cljc" });
    const__150 = (Var)RT.var("synchrony.operation.transform", "retain-range_delete-seq");
    const__152 = (AFn)RT.map(new Object[] { RT.keyword(null, "line"), Integer.valueOf(249), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/operation/transform.cljc" });
    const__153 = (Var)RT.var("synchrony.operation.transform", "delete-range_retain-seq");
    const__155 = (AFn)RT.map(new Object[] { RT.keyword(null, "line"), Integer.valueOf(250), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/operation/transform.cljc" });
    const__156 = (Var)RT.var("synchrony.operation.transform", "delete-range_delete-seq");
    const__158 = (AFn)RT.map(new Object[] { RT.keyword(null, "line"), Integer.valueOf(251), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/operation/transform.cljc" });
    const__159 = (Var)RT.var("synchrony.operation.transform", "retain-map_retain-range");
    const__161 = (AFn)RT.map(new Object[] { RT.keyword(null, "line"), Integer.valueOf(253), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/operation/transform.cljc" });
    const__162 = (Var)RT.var("synchrony.operation.transform", "delete-map_retain-range");
    const__164 = (AFn)RT.map(new Object[] { RT.keyword(null, "line"), Integer.valueOf(254), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/operation/transform.cljc" });
    const__165 = (Var)RT.var("synchrony.operation.transform", "retain-map_delete-range");
    const__167 = (AFn)RT.map(new Object[] { RT.keyword(null, "line"), Integer.valueOf(255), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/operation/transform.cljc" });
    const__168 = (Var)RT.var("synchrony.operation.transform", "delete-map_delete-range");
    const__170 = (AFn)RT.map(new Object[] { RT.keyword(null, "line"), Integer.valueOf(256), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/operation/transform.cljc" });
    const__171 = (Var)RT.var("synchrony.operation.transform", "retain-seq_retain-range");
    const__173 = (AFn)RT.map(new Object[] { RT.keyword(null, "line"), Integer.valueOf(257), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/operation/transform.cljc" });
    const__174 = (Var)RT.var("synchrony.operation.transform", "delete-seq_retain-range");
    const__176 = (AFn)RT.map(new Object[] { RT.keyword(null, "line"), Integer.valueOf(258), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/operation/transform.cljc" });
    const__177 = (Var)RT.var("synchrony.operation.transform", "retain-seq_delete-range");
    const__179 = (AFn)RT.map(new Object[] { RT.keyword(null, "line"), Integer.valueOf(259), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/operation/transform.cljc" });
    const__180 = (Var)RT.var("synchrony.operation.transform", "delete-seq_delete-range");
    const__182 = (AFn)RT.map(new Object[] { RT.keyword(null, "line"), Integer.valueOf(260), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/operation/transform.cljc" });
    const__183 = (Var)RT.var("synchrony.operation.transform", "collect-outer");
    const__186 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "pred?"), Symbol.intern(null, "delta")) })), RT.keyword(null, "line"), Integer.valueOf(262), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/operation/transform.cljc" });
    const__187 = (Var)RT.var("synchrony.operation.transform", "drop-subtree");
    const__190 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "inner-ctx"), Symbol.intern(null, "op")) })), RT.keyword(null, "line"), Integer.valueOf(272), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/operation/transform.cljc" });
    const__191 = (Var)RT.var("synchrony.operation.transform", "delete-map_delete-map");
    const__194 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "ctx"), Symbol.intern(null, "as"), Symbol.intern(null, "bs"), Symbol.intern(null, "a"), Symbol.intern(null, "b")) })), RT.keyword(null, "line"), Integer.valueOf(275), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/operation/transform.cljc" });
    const__195 = (Var)RT.var("synchrony.operation.transform", "retain-map_retain-map");
    const__198 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "ctx"), Symbol.intern(null, "as"), Symbol.intern(null, "bs"), Symbol.intern(null, "a"), Symbol.intern(null, "b")) })), RT.keyword(null, "line"), Integer.valueOf(284), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/operation/transform.cljc" });
    const__199 = (Var)RT.var("synchrony.operation.transform", "delete-map_retain-map");
  }
  
  public static void __init2() {
    const__202 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "ctx"), Symbol.intern(null, "as"), Symbol.intern(null, "bs"), Symbol.intern(null, "a"), Symbol.intern(null, "b")) })), RT.keyword(null, "line"), Integer.valueOf(291), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/operation/transform.cljc" });
    const__203 = (Var)RT.var("synchrony.operation.transform", "delete-seq_delete-seq");
    const__206 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "ctx"), Symbol.intern(null, "as"), Symbol.intern(null, "bs"), Symbol.intern(null, "a"), Symbol.intern(null, "b")) })), RT.keyword(null, "line"), Integer.valueOf(298), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/operation/transform.cljc" });
    const__207 = (Var)RT.var("synchrony.operation.transform", "retain-seq_retain-seq");
    const__210 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "ctx"), Symbol.intern(null, "as"), Symbol.intern(null, "bs"), Symbol.intern(null, "a"), Symbol.intern(null, "b")) })), RT.keyword(null, "line"), Integer.valueOf(306), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/operation/transform.cljc" });
    const__211 = (Var)RT.var("synchrony.operation.transform", "delete-seq_retain-seq");
    const__214 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "ctx"), Symbol.intern(null, "as"), Symbol.intern(null, "bs"), Symbol.intern(null, "a"), Symbol.intern(null, "b")) })), RT.keyword(null, "line"), Integer.valueOf(312), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/operation/transform.cljc" });
    const__215 = (Var)RT.var("synchrony.operation.transform", "retain-map_delete-map");
    const__217 = (AFn)RT.map(new Object[] { RT.keyword(null, "line"), Integer.valueOf(318), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/operation/transform.cljc" });
    const__218 = (Var)RT.var("synchrony.operation.transform", "retain-seq_delete-seq");
    const__220 = (AFn)RT.map(new Object[] { RT.keyword(null, "line"), Integer.valueOf(319), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/operation/transform.cljc" });
    const__221 = (Var)RT.var("synchrony.operation.transform", "retain-map_retain-seq");
    const__223 = (AFn)RT.map(new Object[] { RT.keyword(null, "line"), Integer.valueOf(320), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/operation/transform.cljc" });
    const__224 = (Var)RT.var("synchrony.operation.transform", "retain-seq_retain-map");
    const__226 = (AFn)RT.map(new Object[] { RT.keyword(null, "line"), Integer.valueOf(321), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/operation/transform.cljc" });
    const__227 = (Var)RT.var("synchrony.operation.transform", "delete-map_delete-seq");
    const__229 = (AFn)RT.map(new Object[] { RT.keyword(null, "line"), Integer.valueOf(322), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/operation/transform.cljc" });
    const__230 = (Var)RT.var("synchrony.operation.transform", "delete-seq_delete-map");
    const__232 = (AFn)RT.map(new Object[] { RT.keyword(null, "line"), Integer.valueOf(323), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/operation/transform.cljc" });
    const__233 = (Var)RT.var("synchrony.operation.transform", "retain-map_delete-seq");
    const__235 = (AFn)RT.map(new Object[] { RT.keyword(null, "line"), Integer.valueOf(324), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/operation/transform.cljc" });
    const__236 = (Var)RT.var("synchrony.operation.transform", "retain-seq_delete-map");
    const__238 = (AFn)RT.map(new Object[] { RT.keyword(null, "line"), Integer.valueOf(325), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/operation/transform.cljc" });
    const__239 = (Var)RT.var("synchrony.operation.transform", "delete-map_retain-seq");
    const__241 = (AFn)RT.map(new Object[] { RT.keyword(null, "line"), Integer.valueOf(326), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/operation/transform.cljc" });
    const__242 = (Var)RT.var("synchrony.operation.transform", "delete-seq_retain-map");
    const__244 = (AFn)RT.map(new Object[] { RT.keyword(null, "line"), Integer.valueOf(327), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/operation/transform.cljc" });
    const__245 = (Var)RT.var("synchrony.operation.transform", "any_insert");
    const__248 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "ctx"), Symbol.intern(null, "as"), Symbol.intern(null, "bs"), Symbol.intern(null, "a"), Symbol.intern(null, "b")) })), RT.keyword(null, "line"), Integer.valueOf(330), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/operation/transform.cljc" });
    const__249 = (Var)RT.var("synchrony.operation.transform", "any_insert-vals");
    const__252 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "ctx"), Symbol.intern(null, "as"), Symbol.intern(null, "bs"), Symbol.intern(null, "a"), Symbol.intern(null, "b")) })), RT.keyword(null, "line"), Integer.valueOf(337), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/operation/transform.cljc" });
    const__253 = (Var)RT.var("synchrony.operation.transform", "insert_any");
    const__255 = (AFn)RT.map(new Object[] { RT.keyword(null, "line"), Integer.valueOf(342), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/operation/transform.cljc" });
    const__256 = (Var)RT.var("synchrony.operation.transform", "insert-vals_any");
    const__258 = (AFn)RT.map(new Object[] { RT.keyword(null, "line"), Integer.valueOf(343), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/operation/transform.cljc" });
    const__259 = (Var)RT.var("synchrony.operation.transform", "target_any");
    const__262 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "ctx"), Symbol.intern(null, "as"), Symbol.intern(null, "bs"), Symbol.intern(null, "a"), Symbol.intern(null, "b")) })), RT.keyword(null, "line"), Integer.valueOf(345), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/operation/transform.cljc" });
    const__263 = (Var)RT.var("synchrony.operation.transform", "any_target");
    const__265 = (AFn)RT.map(new Object[] { RT.keyword(null, "line"), Integer.valueOf(350), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/operation/transform.cljc" });
    const__266 = (Var)RT.var("synchrony.operation.transform", "tie-break");
    const__269 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "a-first"), Symbol.intern(null, "b-first")) })), RT.keyword(null, "line"), Integer.valueOf(352), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/operation/transform.cljc" });
    const__270 = (Var)RT.var("synchrony.operation.transform", "insert_insert");
    const__272 = (AFn)RT.map(new Object[] { RT.keyword(null, "line"), Integer.valueOf(358), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/operation/transform.cljc" });
    const__273 = (Var)RT.var("synchrony.operation.transform", "insert_insert-vals");
    const__275 = (AFn)RT.map(new Object[] { RT.keyword(null, "line"), Integer.valueOf(359), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/operation/transform.cljc" });
    const__276 = (Var)RT.var("synchrony.operation.transform", "insert-vals_insert-vals");
    const__278 = (AFn)RT.map(new Object[] { RT.keyword(null, "line"), Integer.valueOf(360), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/operation/transform.cljc" });
    const__279 = (Var)RT.var("synchrony.operation.transform", "insert-vals_insert");
    const__281 = (AFn)RT.map(new Object[] { RT.keyword(null, "line"), Integer.valueOf(361), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/operation/transform.cljc" });
    const__282 = (Var)RT.var("synchrony.operation.transform", "target_target");
    const__284 = (AFn)RT.map(new Object[] { RT.keyword(null, "line"), Integer.valueOf(362), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/operation/transform.cljc" });
    const__285 = (Var)RT.var("synchrony.operation.transform", "target_insert");
    const__287 = (AFn)RT.map(new Object[] { RT.keyword(null, "line"), Integer.valueOf(363), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/operation/transform.cljc" });
    const__288 = (Var)RT.var("synchrony.operation.transform", "target_insert-vals");
    const__290 = (AFn)RT.map(new Object[] { RT.keyword(null, "line"), Integer.valueOf(364), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/operation/transform.cljc" });
    const__291 = (Var)RT.var("synchrony.operation.transform", "insert_target");
    const__293 = (AFn)RT.map(new Object[] { RT.keyword(null, "line"), Integer.valueOf(365), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/operation/transform.cljc" });
    const__294 = (Var)RT.var("synchrony.operation.transform", "insert-vals_target");
    const__296 = (AFn)RT.map(new Object[] { RT.keyword(null, "line"), Integer.valueOf(366), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/operation/transform.cljc" });
    const__297 = (Var)RT.var("synchrony.operation.transform", "marker_any");
    const__299 = (AFn)RT.map(new Object[] { RT.keyword(null, "line"), Integer.valueOf(368), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/operation/transform.cljc" });
  }
  
  public static void __init3() {
    const__300 = (Var)RT.var("synchrony.operation.transform", "any_marker");
    const__302 = (AFn)RT.map(new Object[] { RT.keyword(null, "line"), Integer.valueOf(369), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/operation/transform.cljc" });
    const__303 = (Var)RT.var("synchrony.operation.transform", "marker_marker");
    const__305 = (AFn)RT.map(new Object[] { RT.keyword(null, "line"), Integer.valueOf(370), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/operation/transform.cljc" });
    const__306 = (Var)RT.var("synchrony.operation.transform", "marker_insert");
    const__308 = (AFn)RT.map(new Object[] { RT.keyword(null, "line"), Integer.valueOf(371), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/operation/transform.cljc" });
    const__309 = (Var)RT.var("synchrony.operation.transform", "marker_insert-vals");
    const__311 = (AFn)RT.map(new Object[] { RT.keyword(null, "line"), Integer.valueOf(372), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/operation/transform.cljc" });
    const__312 = (Var)RT.var("synchrony.operation.transform", "marker_target");
    const__314 = (AFn)RT.map(new Object[] { RT.keyword(null, "line"), Integer.valueOf(373), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/operation/transform.cljc" });
    const__315 = (Var)RT.var("synchrony.operation.transform", "insert_marker");
    const__317 = (AFn)RT.map(new Object[] { RT.keyword(null, "line"), Integer.valueOf(374), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/operation/transform.cljc" });
    const__318 = (Var)RT.var("synchrony.operation.transform", "insert-vals_marker");
    const__320 = (AFn)RT.map(new Object[] { RT.keyword(null, "line"), Integer.valueOf(375), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/operation/transform.cljc" });
    const__321 = (Var)RT.var("synchrony.operation.transform", "target_marker");
    const__323 = (AFn)RT.map(new Object[] { RT.keyword(null, "line"), Integer.valueOf(376), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/operation/transform.cljc" });
    const__324 = (Var)RT.var("synchrony.operation.transform", "retain-any_replace");
    const__327 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "ctx"), Symbol.intern(null, "as"), Symbol.intern(null, "bs"), Symbol.intern(null, "a"), Symbol.intern(null, "b")) })), RT.keyword(null, "line"), Integer.valueOf(378), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/operation/transform.cljc" });
    const__328 = (Var)RT.var("synchrony.operation.transform", "delete-any_replace");
    const__331 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "ctx"), Symbol.intern(null, "as"), Symbol.intern(null, "bs"), Symbol.intern(null, "a"), Symbol.intern(null, "b")) })), RT.keyword(null, "line"), Integer.valueOf(384), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/operation/transform.cljc" });
    const__332 = (Var)RT.var("synchrony.operation.transform", "replace_replace");
    const__335 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "ctx"), Symbol.intern(null, "as"), Symbol.intern(null, "bs"), Symbol.intern(null, "a"), Symbol.intern(null, "b")) })), RT.keyword(null, "line"), Integer.valueOf(393), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/operation/transform.cljc" });
    const__336 = (Var)RT.var("synchrony.operation.transform", "replace_retain-any");
    const__338 = (AFn)RT.map(new Object[] { RT.keyword(null, "line"), Integer.valueOf(403), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/operation/transform.cljc" });
    const__339 = (Var)RT.var("synchrony.operation.transform", "replace_delete-any");
    const__341 = (AFn)RT.map(new Object[] { RT.keyword(null, "line"), Integer.valueOf(404), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/operation/transform.cljc" });
    const__342 = (Var)RT.var("synchrony.operation.transform", "retain-range_replace");
    const__344 = (AFn)RT.map(new Object[] { RT.keyword(null, "line"), Integer.valueOf(406), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/operation/transform.cljc" });
    const__345 = (Var)RT.var("synchrony.operation.transform", "delete-range_replace");
    const__347 = (AFn)RT.map(new Object[] { RT.keyword(null, "line"), Integer.valueOf(407), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/operation/transform.cljc" });
    const__348 = (Var)RT.var("synchrony.operation.transform", "replace_retain-range");
    const__350 = (AFn)RT.map(new Object[] { RT.keyword(null, "line"), Integer.valueOf(408), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/operation/transform.cljc" });
    const__351 = (Var)RT.var("synchrony.operation.transform", "replace_delete-range");
    const__353 = (AFn)RT.map(new Object[] { RT.keyword(null, "line"), Integer.valueOf(409), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/operation/transform.cljc" });
    const__354 = (Var)RT.var("synchrony.operation.transform", "end_any");
    const__357 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "ctx"), Symbol.intern(null, "as"), Symbol.intern(null, "bs"), Symbol.intern(null, "a"), Symbol.intern(null, "b")) })), RT.keyword(null, "line"), Integer.valueOf(411), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/operation/transform.cljc" });
    const__358 = (Var)RT.var("synchrony.operation.transform", "any_end");
    const__360 = (AFn)RT.map(new Object[] { RT.keyword(null, "line"), Integer.valueOf(416), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/operation/transform.cljc" });
    const__361 = (Var)RT.var("synchrony.operation.transform", "tr-dispatch-fn");
    const__364 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "op-a"), Symbol.intern(null, "op-b")) })), RT.keyword(null, "line"), Integer.valueOf(418), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/operation/transform.cljc" });
    const__365 = (Var)RT.var("synchrony.operation.transform", "process-seq");
    const__368 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "dispatch-fn"), Symbol.intern(null, "ctx"), Symbol.intern(null, "as"), Symbol.intern(null, "bs")) })), RT.keyword(null, "line"), Integer.valueOf(622), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/operation/transform.cljc" });
    const__371 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "ctx"), Symbol.intern(null, "as"), Symbol.intern(null, "bs")) })), RT.keyword(null, "line"), Integer.valueOf(635), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/operation/transform.cljc" });
    const__374 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "ctx"), Symbol.intern(null, "a"), Symbol.intern(null, "b")) })), RT.keyword(null, "line"), Integer.valueOf(648), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/operation/transform.cljc" });
    const__375 = (Var)RT.var("synchrony.operation.transform", "cycle-id");
    const__378 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "op")) })), RT.keyword(null, "line"), Integer.valueOf(652), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/operation/transform.cljc" });
    const__379 = (Var)RT.var("synchrony.operation.transform", "inverse-cycle-id");
    const__382 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "id")) })), RT.keyword(null, "line"), Integer.valueOf(655), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/operation/transform.cljc" });
    const__383 = (Var)RT.var("synchrony.operation.transform", "break-cycles");
    const__386 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "cycles"), Symbol.intern(null, "source-by-id"), Symbol.intern(null, "delta")) })), RT.keyword(null, "line"), Integer.valueOf(658), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/operation/transform.cljc" });
    const__387 = (Var)RT.var("synchrony.operation.transform", "collect-cycles");
    const__390 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "source-by-id"), Symbol.intern(null, "delta")) })), RT.keyword(null, "line"), Integer.valueOf(687), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/operation/transform.cljc" });
    const__391 = (Var)RT.var("synchrony.operation.transform", "cleanup");
    const__394 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "delta")) })), RT.keyword(null, "line"), Integer.valueOf(713), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/operation/transform.cljc" });
    const__395 = (Var)RT.var("synchrony.operation.transform", "swap-expand-renumber");
    const__398 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "inner-ctx"), Symbol.intern(null, "delta")) })), RT.keyword(null, "line"), Integer.valueOf(731), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/operation/transform.cljc" });
    const__399 = (Var)RT.var("synchrony.operation.transform", "a-b");
  }
  
  public static void __init4() {
    const__403 = (AFn)RT.map(new Object[] { RT.keyword(null, "private"), Boolean.TRUE, RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "a"), Symbol.intern(null, "b")) })), RT.keyword(null, "line"), Integer.valueOf(759), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/operation/transform.cljc" });
    const__404 = (Var)RT.var("synchrony.operation.transform", "b-a");
    const__407 = (AFn)RT.map(new Object[] { RT.keyword(null, "private"), Boolean.TRUE, RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "a"), Symbol.intern(null, "b")) })), RT.keyword(null, "line"), Integer.valueOf(760), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/operation/transform.cljc" });
    const__408 = (Var)RT.var("synchrony.operation.transform", "break-all-cycles");
    const__411 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "a"), Symbol.intern(null, "b")) })), RT.keyword(null, "line"), Integer.valueOf(762), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/operation/transform.cljc" });
    const__412 = (Var)RT.var("synchrony.operation.transform", "process-moves");
    const__415 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "a-has-moves?"), Symbol.intern(null, "b-has-moves?"), Symbol.intern(null, "ctx"), Symbol.intern(null, "a"), Symbol.intern(null, "b")) })), RT.keyword(null, "line"), Integer.valueOf(781), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/operation/transform.cljc" });
    const__416 = (Var)RT.var("synchrony.operation.transform", "insert->retain");
    const__419 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(RT.map(new Object[] { RT.keyword(null, "keys"), Tuple.create(Symbol.intern(null, "type")), RT.keyword(null, "as"), Symbol.intern(null, "op") })) })), RT.keyword(null, "line"), Integer.valueOf(810), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/operation/transform.cljc" });
    const__420 = (Var)RT.var("synchrony.operation.transform", "xform");
    const__423 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "a-revision"), Symbol.intern(null, "b-revision")) })), RT.keyword(null, "line"), Integer.valueOf(832), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/operation/transform.cljc" });
  }
  
  static  {
    __init0();
    __init1();
    __init2();
    __init3();
    __init4();
    Compiler.pushNSandLoader(RT.classForName("synchrony.operation.transform__init").getClassLoader());
    try {
      load();
    } finally {
      Var.popThreadBindings();
    } 
  }
}
