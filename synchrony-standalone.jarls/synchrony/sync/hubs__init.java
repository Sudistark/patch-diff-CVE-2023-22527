package synchrony.sync;

import clojure.lang.AFn;
import clojure.lang.Compiler;
import clojure.lang.IFn;
import clojure.lang.IObj;
import clojure.lang.IPersistentMap;
import clojure.lang.Keyword;
import clojure.lang.LockingTransaction;
import clojure.lang.Numbers;
import clojure.lang.PersistentHashSet;
import clojure.lang.PersistentList;
import clojure.lang.PersistentVector;
import clojure.lang.RT;
import clojure.lang.Symbol;
import clojure.lang.Tuple;
import clojure.lang.Var;
import java.util.Arrays;
import java.util.concurrent.Callable;

public class hubs__init {
  public static final Var const__0;
  
  public static final AFn const__1;
  
  public static final AFn const__2;
  
  public static final Var const__3;
  
  public static final AFn const__10;
  
  public static final Var const__11;
  
  public static final AFn const__13;
  
  public static final Var const__14;
  
  public static final Object const__15;
  
  public static final Var const__16;
  
  public static final AFn const__18;
  
  public static final Var const__19;
  
  public static final Object const__20;
  
  public static final Var const__21;
  
  public static final AFn const__23;
  
  public static final Object const__24;
  
  public static final Var const__25;
  
  public static final AFn const__27;
  
  public static final Var const__28;
  
  public static final AFn const__30;
  
  public static final Object const__31;
  
  public static final Var const__32;
  
  public static final AFn const__34;
  
  public static final Object const__35;
  
  public static final Var const__36;
  
  public static final AFn const__38;
  
  public static final AFn const__42;
  
  public static final Var const__43;
  
  public static final AFn const__45;
  
  public static final AFn const__47;
  
  public static final Var const__48;
  
  public static final AFn const__50;
  
  public static final AFn const__52;
  
  public static final Var const__53;
  
  public static final AFn const__55;
  
  public static final AFn const__57;
  
  public static final Var const__58;
  
  public static final AFn const__60;
  
  public static final AFn const__62;
  
  public static final Var const__63;
  
  public static final AFn const__65;
  
  public static final AFn const__67;
  
  public static final Var const__68;
  
  public static final AFn const__70;
  
  public static final AFn const__72;
  
  public static final Var const__73;
  
  public static final AFn const__75;
  
  public static final AFn const__77;
  
  public static final Var const__78;
  
  public static final AFn const__80;
  
  public static final AFn const__82;
  
  public static final Var const__83;
  
  public static final AFn const__85;
  
  public static final AFn const__87;
  
  public static final Var const__88;
  
  public static final AFn const__90;
  
  public static final AFn const__92;
  
  public static final Var const__93;
  
  public static final AFn const__95;
  
  public static final AFn const__97;
  
  public static final Var const__98;
  
  public static final AFn const__102;
  
  public static final Var const__103;
  
  public static final AFn const__106;
  
  public static final Var const__107;
  
  public static final AFn const__109;
  
  public static final Var const__113;
  
  public static final AFn const__115;
  
  public static final Var const__116;
  
  public static final Keyword const__117;
  
  public static final Object const__118;
  
  public static final Var const__119;
  
  public static final AFn const__121;
  
  public static final Var const__122;
  
  public static final AFn const__124;
  
  public static final Object const__125;
  
  public static final Var const__126;
  
  public static final AFn const__129;
  
  public static final Var const__130;
  
  public static final AFn const__133;
  
  public static final Var const__134;
  
  public static final AFn const__137;
  
  public static final Var const__138;
  
  public static final AFn const__141;
  
  public static final Var const__142;
  
  public static final AFn const__145;
  
  public static final Var const__146;
  
  public static final AFn const__149;
  
  public static final Var const__150;
  
  public static final AFn const__153;
  
  public static final Var const__154;
  
  public static final AFn const__156;
  
  public static final Var const__157;
  
  public static final Var const__158;
  
  public static final Var const__159;
  
  public static final Var const__160;
  
  public static final Keyword const__161;
  
  public static final Var const__162;
  
  public static final AFn const__165;
  
  public static final Var const__166;
  
  public static final AFn const__169;
  
  public static final Var const__170;
  
  public static final AFn const__173;
  
  public static final Var const__174;
  
  public static final AFn const__177;
  
  public static final Var const__178;
  
  public static final AFn const__181;
  
  public static final Var const__182;
  
  public static final AFn const__185;
  
  public static final Var const__186;
  
  public static final AFn const__189;
  
  public static final Var const__190;
  
  public static final AFn const__193;
  
  public static final Var const__194;
  
  public static final AFn const__197;
  
  public static final Var const__198;
  
  public static final AFn const__201;
  
  public static final Var const__202;
  
  public static final AFn const__205;
  
  public static final Var const__206;
  
  public static final AFn const__209;
  
  public static final Var const__210;
  
  public static final AFn const__213;
  
  public static final Var const__214;
  
  public static final AFn const__217;
  
  public static final Var const__218;
  
  public static final AFn const__221;
  
  public static final Var const__222;
  
  public static final AFn const__225;
  
  public static final Var const__226;
  
  public static final AFn const__229;
  
  public static final Var const__230;
  
  public static final AFn const__233;
  
  public static final Var const__234;
  
  public static final Keyword const__235;
  
  public static final Var const__236;
  
  public static final AFn const__239;
  
  public static final Var const__240;
  
  public static final AFn const__243;
  
  public static final Keyword const__244;
  
  public static final Var const__245;
  
  public static final AFn const__248;
  
  public static final Var const__249;
  
  public static final AFn const__252;
  
  public static final Keyword const__253;
  
  public static final Keyword const__254;
  
  public static final Keyword const__255;
  
  public static final Var const__256;
  
  public static final AFn const__259;
  
  public static final Keyword const__260;
  
  public static final Var const__261;
  
  public static final AFn const__264;
  
  public static final Keyword const__265;
  
  public static final Keyword const__266;
  
  public static final Var const__267;
  
  public static final AFn const__269;
  
  public static final Var const__270;
  
  public static final AFn const__275;
  
  public static final Var const__276;
  
  public static final AFn const__279;
  
  public static final Var const__280;
  
  public static final AFn const__283;
  
  public static final Var const__284;
  
  public static final AFn const__287;
  
  public static final Var const__288;
  
  public static final AFn const__291;
  
  public static final Var const__292;
  
  public static final AFn const__295;
  
  public static final Var const__296;
  
  public static final AFn const__298;
  
  public static final AFn const__299;
  
  public static final Var const__300;
  
  public static final AFn const__303;
  
  public static final Var const__304;
  
  public static final AFn const__307;
  
  public static final Var const__308;
  
  public static final AFn const__312;
  
  public static final Var const__313;
  
  public static final AFn const__316;
  
  public static final Var const__317;
  
  public static final AFn const__320;
  
  public static final Var const__321;
  
  public static final AFn const__324;
  
  public static final Var const__325;
  
  public static final AFn const__328;
  
  public static final Var const__329;
  
  public static final AFn const__332;
  
  public static final Var const__333;
  
  public static final AFn const__336;
  
  public static final Var const__337;
  
  public static final AFn const__340;
  
  public static final AFn const__343;
  
  public static final Var const__344;
  
  public static final AFn const__347;
  
  public static final Var const__348;
  
  public static final AFn const__351;
  
  public static final Var const__352;
  
  public static final AFn const__355;
  
  public static final Var const__356;
  
  public static final AFn const__359;
  
  public static final Var const__360;
  
  public static final AFn const__363;
  
  public static final Var const__364;
  
  public static final AFn const__367;
  
  public static final Var const__368;
  
  public static final AFn const__371;
  
  public static final Var const__372;
  
  public static final AFn const__375;
  
  public static final Var const__376;
  
  public static final AFn const__379;
  
  public static void load() {
    LockingTransaction.runInTransaction((Callable)new hubs.fn__49115());
    const__3.setMeta((IPersistentMap)const__10);
    const__11.setMeta((IPersistentMap)const__13);
    const__11


      
      .bindRoot(((IFn)const__14.getRawRoot()).invoke(const__15));
    const__16.setMeta((IPersistentMap)const__18);
    const__16
      .bindRoot(((IFn)const__19.getRawRoot()).invoke(const__20));
    const__21.setMeta((IPersistentMap)const__23);
    const__21
      .bindRoot(((IFn)const__19.getRawRoot()).invoke(const__24));
    const__25.setMeta((IPersistentMap)const__27);
    const__25
      .bindRoot(((IFn)const__19.getRawRoot()).invoke(const__20));
    const__28.setMeta((IPersistentMap)const__30);
    const__28.bindRoot(const__31);
    const__32.setMeta((IPersistentMap)const__34);
    const__32.bindRoot(const__35);
    const__36.setMeta((IPersistentMap)const__38);
    const__36.bindRoot(const__42);
    const__43.setMeta((IPersistentMap)const__45);
    const__43.bindRoot(const__47);
    const__48.setMeta((IPersistentMap)const__50);
    const__48.bindRoot(const__52);
    const__53.setMeta((IPersistentMap)const__55);
    const__53.bindRoot(const__57);
    const__58.setMeta((IPersistentMap)const__60);
    const__58.bindRoot(const__62);
    const__63.setMeta((IPersistentMap)const__65);
    const__63.bindRoot(const__67);
    const__68.setMeta((IPersistentMap)const__70);
    const__68.bindRoot(const__72);
    const__73.setMeta((IPersistentMap)const__75);
    const__73.bindRoot(const__77);
    const__78.setMeta((IPersistentMap)const__80);
    const__78.bindRoot(const__82);
    const__83.setMeta((IPersistentMap)const__85);
    const__83.bindRoot(const__87);
    const__88.setMeta((IPersistentMap)const__90);
    const__88.bindRoot(const__92);
    const__93.setMeta((IPersistentMap)const__95);
    const__93.bindRoot(const__97);
    const__98.setMeta((IPersistentMap)const__102);
    const__98.bindRoot(new hubs.close_session_info());
    const__103.setMeta((IPersistentMap)const__106);
    const__103.bindRoot(new hubs.init_session_info());
    const__107.setMeta((IPersistentMap)const__109);
    const__107

































































      
      .bindRoot(Numbers.num(Numbers.multiply(60L, 1000L)));
    const__113.setMeta((IPersistentMap)const__115);
    const__113
      .bindRoot(((IFn)const__116.getRawRoot()).invoke(const__117, const__118, const__118));
    const__119.setMeta((IPersistentMap)const__121);
    const__119.bindRoot(PersistentVector.EMPTY);
    const__122.setMeta((IPersistentMap)const__124);
    const__122.bindRoot(const__125);
    const__126.setMeta((IPersistentMap)const__129);
    const__126.bindRoot(new hubs.normalize_last_seen());
    const__130.setMeta((IPersistentMap)const__133);
    const__130.bindRoot(new hubs.eid_map_contains_QMARK_());
    const__134.setMeta((IPersistentMap)const__137);
    const__134.bindRoot(new hubs.eid_map_GT__EQ_());
    const__138.setMeta((IPersistentMap)const__141);
    const__138.bindRoot(new hubs.eid_buf_expire());
    const__142.setMeta((IPersistentMap)const__145);
    const__142.bindRoot(new hubs.eid_buf_insert());
    const__146.setMeta((IPersistentMap)const__149);
    const__146.bindRoot(new hubs.eid_buf_consistent_insert());
    const__150.setMeta((IPersistentMap)const__153);
    const__150.bindRoot(new hubs.make_session_info());
    const__154.setMeta((IPersistentMap)const__156);
    const__154













      
      .bindRoot(((IFn)const__157.getRawRoot()).invoke(((IFn)const__158.getRawRoot()).invoke(const__159.getRawRoot()), ((IFn)const__160.getRawRoot()).invoke(const__161)));
    const__162.setMeta((IPersistentMap)const__165);
    const__162.bindRoot(new hubs.tr_sessions());
    const__166.setMeta((IPersistentMap)const__169);
    const__166.bindRoot(new hubs.make_tr_hub());
    const__170.setMeta((IPersistentMap)const__173);
    const__170.bindRoot(new hubs.update_tr_state());
    const__174.setMeta((IPersistentMap)const__177);
    const__174.bindRoot(new hubs.init_tr_session());
    const__178.setMeta((IPersistentMap)const__181);
    const__178.bindRoot(new hubs.tr_session_QMARK_());
    const__182.setMeta((IPersistentMap)const__185);
    const__182.bindRoot(new hubs.free_tr_session());
    const__186.setMeta((IPersistentMap)const__189);
    const__186.bindRoot(new hubs.close_connection());
    const__190.setMeta((IPersistentMap)const__193);
    const__190.bindRoot(new hubs.validate_crypto_key());
    const__194.setMeta((IPersistentMap)const__197);
    const__194.bindRoot(new hubs.register_connection());
    const__198.setMeta((IPersistentMap)const__201);
    const__198.bindRoot(new hubs.init_connection());
    const__202.setMeta((IPersistentMap)const__205);
    const__202.bindRoot(new hubs.free_connection());
    const__206.setMeta((IPersistentMap)const__209);
    const__206.bindRoot(new hubs.init_hub_state());
    const__210.setMeta((IPersistentMap)const__213);
    const__210.bindRoot(new hubs.ensure_initialized_hub());
    const__214.setMeta((IPersistentMap)const__217);
    const__214.bindRoot(new hubs.init_in_new_state());
    const__218.setMeta((IPersistentMap)const__221);
    const__218.bindRoot(new hubs.valid_rev_QMARK_());
    const__222.setMeta((IPersistentMap)const__225);
    const__222.bindRoot(new hubs.init_in_state_from_rev());
    const__226.setMeta((IPersistentMap)const__229);
    const__226.bindRoot(new hubs.init_in_state());
    const__230.setMeta((IPersistentMap)const__233);
    const__230.bindRoot(new hubs.init());
    const__236.setMeta((IPersistentMap)const__239);
    const__236.bindRoot(new hubs.qualify_revision_for_persistence());
    const__240.setMeta((IPersistentMap)const__243);
    const__240.bindRoot(new hubs.process_master_revision());
    const__245.setMeta((IPersistentMap)const__248);
    const__245.bindRoot(new hubs.merge_into_master());
    const__249.setMeta((IPersistentMap)const__252);
    const__249.bindRoot(new hubs.process_merge_into_master());
    const__256.setMeta((IPersistentMap)const__259);
    const__256.bindRoot(new hubs.create_hub());
    const__261.setMeta((IPersistentMap)const__264);
    const__261.bindRoot(new hubs.persist_message());
    const__267.setMeta((IPersistentMap)const__269);
    const__267













      
      .bindRoot(((IFn)const__270.getRawRoot()).invoke(const__275));
    const__276.setMeta((IPersistentMap)const__279);
    const__276.bindRoot(new hubs.reap_connections());
    const__280.setMeta((IPersistentMap)const__283);
    const__280.bindRoot(new hubs.handle_error());
    const__284.setMeta((IPersistentMap)const__287);
    const__284.bindRoot(new hubs.track_collaborators());
    const__288.setMeta((IPersistentMap)const__291);
    const__288.bindRoot(new hubs.track_event());
    const__292.setMeta((IPersistentMap)const__295);
    const__292.bindRoot(new hubs.track_message());
    const__296.setMeta((IPersistentMap)const__298);
    const__296.bindRoot(const__299);
    const__300.setMeta((IPersistentMap)const__303);
    const__300.bindRoot(new hubs.process_message());
    const__304.setMeta((IPersistentMap)const__307);
    const__304.bindRoot(new hubs.instrument_hub_QMARK_());
    const__308.setMeta((IPersistentMap)const__312);
    const__308.bindRoot(new hubs.close_immediately_QMARK_());
    const__313.setMeta((IPersistentMap)const__316);
    const__313.bindRoot(new hubs.run_hub_process());
    const__317.setMeta((IPersistentMap)const__320);
    const__317.bindRoot(new hubs.accept());
    const__321.setMeta((IPersistentMap)const__324);
    const__321.bindRoot(new hubs.init_hub());
    const__325.setMeta((IPersistentMap)const__328);
    const__325.bindRoot(new hubs.maybe_topic_responsibility_changed());
    const__329.setMeta((IPersistentMap)const__332);
    const__329.bindRoot(new hubs.maybe_topic_is_locked());
    const__333.setMeta((IPersistentMap)const__336);
    const__333.bindRoot(new hubs.reason_to_close_the_topic());
    const__337.setMeta((IPersistentMap)const__340);
    const__337.bindRoot(new hubs.prune_hubs());
    const__3.setMeta((IPersistentMap)const__343);
    const__3.bindRoot(new hubs.close_all_hubs());
    const__344.setMeta((IPersistentMap)const__347);
    const__344.bindRoot(new hubs.start_prune_process());
    const__348.setMeta((IPersistentMap)const__351);
    const__348.bindRoot(new hubs.ensure_hub());
    const__352.setMeta((IPersistentMap)const__355);
    const__352.bindRoot(new hubs.make_ex_handler());
    const__356.setMeta((IPersistentMap)const__359);
    const__356.bindRoot(new hubs.wrap_in_chan());
    const__360.setMeta((IPersistentMap)const__363);
    const__360.bindRoot(new hubs.wrap_out_chan());
    const__364.setMeta((IPersistentMap)const__367);
    const__364.bindRoot(new hubs.accept_stream());
    const__368.setMeta((IPersistentMap)const__371);
    const__368.bindRoot(new hubs.open_conn());
    const__372.setMeta((IPersistentMap)const__375);
    const__372.bindRoot(new hubs.accept_stream_handler());
    const__376.setMeta((IPersistentMap)const__379);
    const__376.bindRoot(new hubs.on_hub_locks_changed());
  }
  
  public static void __init0() {
    const__0 = (Var)RT.var("clojure.core", "in-ns");
    const__1 = (AFn)Symbol.intern(null, "synchrony.sync.hubs");
    const__2 = (AFn)Symbol.intern(null, "clojure.core");
    const__3 = (Var)RT.var("synchrony.sync.hubs", "close-all-hubs");
    const__10 = (AFn)RT.map(new Object[] { RT.keyword(null, "declared"), Boolean.TRUE, RT.keyword(null, "line"), Integer.valueOf(33), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/sync/hubs.clj" });
    const__11 = (Var)RT.var("synchrony.sync.hubs", "prune-interval-ms");
    const__13 = (AFn)RT.map(new Object[] { RT.keyword(null, "line"), Integer.valueOf(39), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/sync/hubs.clj" });
    const__14 = (Var)RT.var("ginga.datetime", "seconds-to-ms");
    const__15 = Long.valueOf(10L);
    const__16 = (Var)RT.var("synchrony.sync.hubs", "gc-interval-ms");
    const__18 = (AFn)RT.map(new Object[] { RT.keyword(null, "line"), Integer.valueOf(40), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/sync/hubs.clj" });
    const__19 = (Var)RT.var("ginga.datetime", "minutes-to-ms");
    const__20 = Long.valueOf(1L);
    const__21 = (Var)RT.var("synchrony.sync.hubs", "connection-timeout-ms");
    const__23 = (AFn)RT.map(new Object[] { RT.keyword(null, "line"), Integer.valueOf(41), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/sync/hubs.clj" });
    const__24 = Long.valueOf(5L);
    const__25 = (Var)RT.var("synchrony.sync.hubs", "record-metric-interval-ms");
    const__27 = (AFn)RT.map(new Object[] { RT.keyword(null, "line"), Integer.valueOf(42), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/sync/hubs.clj" });
    const__28 = (Var)RT.var("synchrony.sync.hubs", "metric-send-chance");
    const__30 = (AFn)RT.map(new Object[] { RT.keyword(null, "line"), Integer.valueOf(43), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/sync/hubs.clj" });
    const__31 = Long.valueOf(20L);
    const__32 = (Var)RT.var("synchrony.sync.hubs", "max-connections");
    const__34 = (AFn)RT.map(new Object[] { RT.keyword(null, "line"), Integer.valueOf(44), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/sync/hubs.clj" });
    const__35 = Long.valueOf(100L);
    const__36 = (Var)RT.var("synchrony.sync.hubs", "inconsistent-insert-error");
    const__38 = (AFn)RT.map(new Object[] { RT.keyword(null, "line"), Integer.valueOf(46), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/sync/hubs.clj" });
    const__42 = (AFn)RT.map(new Object[] { RT.keyword(null, "message"), "inconsistent insert", RT.keyword(null, "type"), RT.keyword(null, "inconsistent-insert") });
    const__43 = (Var)RT.var("synchrony.sync.hubs", "contentious-insert-error");
    const__45 = (AFn)RT.map(new Object[] { RT.keyword(null, "line"), Integer.valueOf(50), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/sync/hubs.clj" });
    const__47 = (AFn)RT.map(new Object[] { RT.keyword(null, "message"), "contentious insert", RT.keyword(null, "type"), RT.keyword(null, "contentious-insert") });
    const__48 = (Var)RT.var("synchrony.sync.hubs", "init-revision-has-parent-error");
    const__50 = (AFn)RT.map(new Object[] { RT.keyword(null, "line"), Integer.valueOf(54), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/sync/hubs.clj" });
    const__52 = (AFn)RT.map(new Object[] { RT.keyword(null, "message"), "init revision must not have parents", RT.keyword(null, "type"), RT.keyword("hub.client.error", "init-revision-has-parent") });
    const__53 = (Var)RT.var("synchrony.sync.hubs", "init-with-invalid-rev-error");
    const__55 = (AFn)RT.map(new Object[] { RT.keyword(null, "line"), Integer.valueOf(58), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/sync/hubs.clj" });
    const__57 = (AFn)RT.map(new Object[] { RT.keyword(null, "message"), "init with invalid rev", RT.keyword(null, "type"), RT.keyword("hub.client.error", "init-with-invalid-rev") });
    const__58 = (Var)RT.var("synchrony.sync.hubs", "init-with-unknown-rev-error");
    const__60 = (AFn)RT.map(new Object[] { RT.keyword(null, "line"), Integer.valueOf(62), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/sync/hubs.clj" });
    const__62 = (AFn)RT.map(new Object[] { RT.keyword(null, "message"), "init with unknown rev", RT.keyword(null, "type"), RT.keyword("hub.client.error", "init-with-unknown-rev") });
    const__63 = (Var)RT.var("synchrony.sync.hubs", "init-with-nil-value");
    const__65 = (AFn)RT.map(new Object[] { RT.keyword(null, "line"), Integer.valueOf(66), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/sync/hubs.clj" });
    const__67 = (AFn)RT.map(new Object[] { RT.keyword(null, "message"), "init with nil value", RT.keyword(null, "type"), RT.keyword("hub.client.error", "init-with-nil-value") });
    const__68 = (Var)RT.var("synchrony.sync.hubs", "no-such-sequence-error");
    const__70 = (AFn)RT.map(new Object[] { RT.keyword(null, "line"), Integer.valueOf(70), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/sync/hubs.clj" });
    const__72 = (AFn)RT.map(new Object[] { RT.keyword(null, "message"), "no such sequence", RT.keyword(null, "type"), RT.keyword(null, "no-such-sequence") });
    const__73 = (Var)RT.var("synchrony.sync.hubs", "out-of-date-error");
    const__75 = (AFn)RT.map(new Object[] { RT.keyword(null, "line"), Integer.valueOf(74), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/sync/hubs.clj" });
    const__77 = (AFn)RT.map(new Object[] { RT.keyword(null, "message"), "detected out of date hub during init", RT.keyword(null, "type"), RT.keyword("hub.error", "out-of-date") });
    const__78 = (Var)RT.var("synchrony.sync.hubs", "topic-locked-error");
    const__80 = (AFn)RT.map(new Object[] { RT.keyword(null, "line"), Integer.valueOf(78), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/sync/hubs.clj" });
    const__82 = (AFn)RT.map(new Object[] { RT.keyword(null, "message"), "hub is locked", RT.keyword(null, "type"), RT.keyword("hub.error", "locked") });
    const__83 = (Var)RT.var("synchrony.sync.hubs", "revision-message-without-merge-opts");
    const__85 = (AFn)RT.map(new Object[] { RT.keyword(null, "line"), Integer.valueOf(82), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/sync/hubs.clj" });
    const__87 = (AFn)RT.map(new Object[] { RT.keyword(null, "message"), "merge opts required", RT.keyword(null, "type"), RT.keyword(null, "merge-opts-required") });
    const__88 = (Var)RT.var("synchrony.sync.hubs", "unauthorized-error");
    const__90 = (AFn)RT.map(new Object[] { RT.keyword(null, "line"), Integer.valueOf(86), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/sync/hubs.clj" });
    const__92 = (AFn)RT.map(new Object[] { RT.keyword(null, "message"), "unauthorized", RT.keyword(null, "type"), RT.keyword("jwt", "unauthorized") });
    const__93 = (Var)RT.var("synchrony.sync.hubs", "too-many-connection-attempts-error");
    const__95 = (AFn)RT.map(new Object[] { RT.keyword(null, "line"), Integer.valueOf(91), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/sync/hubs.clj" });
    const__97 = (AFn)RT.map(new Object[] { RT.keyword(null, "message"), "too many connection attempts or hub already closed", RT.keyword(null, "type"), RT.keyword(null, "unavailable") });
    const__98 = (Var)RT.var("synchrony.sync.hubs", "close-session-info");
  }
  
  public static void __init1() {
    const__102 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "entity-id"), Symbol.intern(null, "conn-id"), Symbol.intern(null, "hub")) })), RT.keyword(null, "line"), Integer.valueOf(95), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/sync/hubs.clj" });
    const__103 = (Var)RT.var("synchrony.sync.hubs", "init-session-info");
    const__106 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "entity-id"), Symbol.intern(null, "conn-id")) })), RT.keyword(null, "line"), Integer.valueOf(103), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/sync/hubs.clj" });
    const__107 = (Var)RT.var("synchrony.sync.hubs", "eid-buf-ttl");
    const__109 = (AFn)RT.map(new Object[] { RT.keyword(null, "line"), Integer.valueOf(109), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/sync/hubs.clj" });
    const__113 = (Var)RT.var("synchrony.sync.hubs", "initial-rev");
    const__115 = (AFn)RT.map(new Object[] { RT.keyword(null, "line"), Integer.valueOf(110), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/sync/hubs.clj" });
    const__116 = (Var)RT.var("synchrony.history", "->rev");
    const__117 = (Keyword)RT.keyword("synchrony.sync.hubs", "initial");
    const__118 = Long.valueOf(0L);
    const__119 = (Var)RT.var("synchrony.sync.hubs", "empty-eid-buf");
    const__121 = (AFn)RT.map(new Object[] { RT.keyword(null, "line"), Integer.valueOf(111), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/sync/hubs.clj" });
    const__122 = (Var)RT.var("synchrony.sync.hubs", "message-processing-threshold-ms");
    const__124 = (AFn)RT.map(new Object[] { RT.keyword(null, "line"), Integer.valueOf(112), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/sync/hubs.clj" });
    const__125 = Long.valueOf(1000L);
    const__126 = (Var)RT.var("synchrony.sync.hubs", "normalize-last-seen");
    const__129 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "eid")) })), RT.keyword(null, "line"), Integer.valueOf(114), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/sync/hubs.clj" });
    const__130 = (Var)RT.var("synchrony.sync.hubs", "eid-map-contains?");
    const__133 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "eid-map"), RT.map(new Object[] { RT.keyword(null, "keys"), Tuple.create(Symbol.intern(null, "origin"), Symbol.intern(null, "sequence")), RT.keyword(null, "as"), Symbol.intern(null, "eid") })) })), RT.keyword(null, "line"), Integer.valueOf(117), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/sync/hubs.clj" });
    const__134 = (Var)RT.var("synchrony.sync.hubs", "eid-map>=");
    const__137 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "eid-map"), RT.map(new Object[] { RT.keyword(null, "keys"), Tuple.create(Symbol.intern(null, "origin"), Symbol.intern(null, "sequence")), RT.keyword(null, "as"), Symbol.intern(null, "eid") })) })), RT.keyword(null, "line"), Integer.valueOf(122), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/sync/hubs.clj" });
    const__138 = (Var)RT.var("synchrony.sync.hubs", "eid-buf-expire");
    const__141 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "ttl"), Symbol.intern(null, "eid-buf")) })), RT.keyword(null, "line"), Integer.valueOf(127), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/sync/hubs.clj" });
    const__142 = (Var)RT.var("synchrony.sync.hubs", "eid-buf-insert");
    const__145 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "ttl"), Symbol.intern(null, "eid-buf"), Symbol.intern(null, "eid")) })), RT.keyword(null, "line"), Integer.valueOf(136), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/sync/hubs.clj" });
    const__146 = (Var)RT.var("synchrony.sync.hubs", "eid-buf-consistent-insert");
    const__149 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "ttl"), Symbol.intern(null, "eid-buf"), Symbol.intern(null, "last-seen"), Symbol.intern(null, "eid")) })), RT.keyword(null, "line"), Integer.valueOf(146), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/sync/hubs.clj" });
    const__150 = (Var)RT.var("synchrony.sync.hubs", "make-session-info");
    const__153 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "origin"), Symbol.intern(null, "session")) })), RT.keyword(null, "line"), Integer.valueOf(180), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/sync/hubs.clj" });
    const__154 = (Var)RT.var("synchrony.sync.hubs", "tr-sessions-xform");
    const__156 = (AFn)RT.map(new Object[] { RT.keyword(null, "line"), Integer.valueOf(186), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/sync/hubs.clj" });
    const__157 = (Var)RT.var("clojure.core", "comp");
    const__158 = (Var)RT.var("clojure.core", "map");
    const__159 = (Var)RT.var("clojure.core", "val");
    const__160 = (Var)RT.var("clojure.core", "filter");
    const__161 = (Keyword)RT.keyword(null, "tr-state");
    const__162 = (Var)RT.var("synchrony.sync.hubs", "tr-sessions");
    const__165 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "hub")) })), RT.keyword(null, "line"), Integer.valueOf(188), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/sync/hubs.clj" });
    const__166 = (Var)RT.var("synchrony.sync.hubs", "make-tr-hub");
    const__169 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "hub")) })), RT.keyword(null, "line"), Integer.valueOf(191), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/sync/hubs.clj" });
    const__170 = (Var)RT.var("synchrony.sync.hubs", "update-tr-state");
    const__173 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "hub"), Symbol.intern(null, "tr-hub")) })), RT.keyword(null, "line"), Integer.valueOf(198), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/sync/hubs.clj" });
    const__174 = (Var)RT.var("synchrony.sync.hubs", "init-tr-session");
    const__177 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "hub"), Symbol.intern(null, "init-request"), Symbol.intern(null, "id")) })), RT.keyword(null, "line"), Integer.valueOf(203), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/sync/hubs.clj" });
    const__178 = (Var)RT.var("synchrony.sync.hubs", "tr-session?");
    const__181 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "hub"), Symbol.intern(null, "id")) })), RT.keyword(null, "line"), Integer.valueOf(207), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/sync/hubs.clj" });
    const__182 = (Var)RT.var("synchrony.sync.hubs", "free-tr-session");
    const__185 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "hub"), Symbol.intern(null, "free-id")) })), RT.keyword(null, "line"), Integer.valueOf(210), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/sync/hubs.clj" });
    const__186 = (Var)RT.var("synchrony.sync.hubs", "close-connection");
    const__189 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "conn")) })), RT.keyword(null, "line"), Integer.valueOf(221), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/sync/hubs.clj" });
    const__190 = (Var)RT.var("synchrony.sync.hubs", "validate-crypto-key");
    const__193 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "hub"), Symbol.intern(null, "crypto-key"), Symbol.intern(null, "conn")) })), RT.keyword(null, "line"), Integer.valueOf(226), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/sync/hubs.clj" });
    const__194 = (Var)RT.var("synchrony.sync.hubs", "register-connection");
    const__197 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "hub"), Symbol.intern(null, "conn")) })), RT.keyword(null, "line"), Integer.valueOf(239), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/sync/hubs.clj" });
    const__198 = (Var)RT.var("synchrony.sync.hubs", "init-connection");
  }
  
  public static void __init2() {
    const__201 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "hub"), Symbol.intern(null, "conn")) })), RT.keyword(null, "line"), Integer.valueOf(246), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/sync/hubs.clj" });
    const__202 = (Var)RT.var("synchrony.sync.hubs", "free-connection");
    const__205 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "hub"), Symbol.intern(null, "id")) })), RT.keyword(null, "line"), Integer.valueOf(278), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/sync/hubs.clj" });
    const__206 = (Var)RT.var("synchrony.sync.hubs", "init-hub-state");
    const__209 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "hub")) })), RT.keyword(null, "line"), Integer.valueOf(295), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/sync/hubs.clj" });
    const__210 = (Var)RT.var("synchrony.sync.hubs", "ensure-initialized-hub");
    const__213 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "hub")) })), RT.keyword(null, "line"), Integer.valueOf(322), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/sync/hubs.clj" });
    const__214 = (Var)RT.var("synchrony.sync.hubs", "init-in-new-state");
    const__217 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "hub"), Symbol.intern(null, "init-revision")) })), RT.keyword(null, "line"), Integer.valueOf(326), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/sync/hubs.clj" });
    const__218 = (Var)RT.var("synchrony.sync.hubs", "valid-rev?");
    const__221 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(RT.map(new Object[] { RT.keyword(null, "keys"), Tuple.create(Symbol.intern(null, "origin"), Symbol.intern(null, "sequence")), RT.keyword(null, "as"), Symbol.intern(null, "rev") })) })), RT.keyword(null, "line"), Integer.valueOf(354), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/sync/hubs.clj" });
    const__222 = (Var)RT.var("synchrony.sync.hubs", "init-in-state-from-rev");
    const__225 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "hub"), Symbol.intern(null, "init-rev")) })), RT.keyword(null, "line"), Integer.valueOf(359), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/sync/hubs.clj" });
    const__226 = (Var)RT.var("synchrony.sync.hubs", "init-in-state");
    const__229 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "hub")) })), RT.keyword(null, "line"), Integer.valueOf(388), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/sync/hubs.clj" });
    const__230 = (Var)RT.var("synchrony.sync.hubs", "init");
    const__233 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "hub"), Symbol.intern(null, "init-request"), Symbol.intern(null, "conn")) })), RT.keyword(null, "line"), Integer.valueOf(394), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/sync/hubs.clj" });
    const__234 = (Var)RT.var("synchrony.sync.hubs", "receive-message");
    const__235 = (Keyword)RT.keyword(null, "init-request");
    const__236 = (Var)RT.var("synchrony.sync.hubs", "qualify-revision-for-persistence");
    const__239 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "revision"), Symbol.intern(null, "group-revs"), Symbol.intern(null, "part-id")) })), RT.keyword(null, "line"), Integer.valueOf(436), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/sync/hubs.clj" });
    const__240 = (Var)RT.var("synchrony.sync.hubs", "process-master-revision");
    const__243 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "hub"), Symbol.intern(null, "revision"), Symbol.intern(null, "last-seen"), Symbol.intern(null, "record-by-id"), Symbol.intern(null, "merge-revision-tree-alist")) })), RT.keyword(null, "line"), Integer.valueOf(441), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/sync/hubs.clj" });
    const__244 = (Keyword)RT.keyword(null, "revision-record");
    const__245 = (Var)RT.var("synchrony.sync.hubs", "merge-into-master");
    const__248 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "hub"), Symbol.intern(null, "revision"), Symbol.intern(null, "merge-revision-opts")) })), RT.keyword(null, "line"), Integer.valueOf(521), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/sync/hubs.clj" });
    const__249 = (Var)RT.var("synchrony.sync.hubs", "process-merge-into-master");
    const__252 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "hub"), Symbol.intern(null, "revision"), Symbol.intern(null, "last-seen"), Symbol.intern(null, "consistency"), Symbol.intern(null, "merges")) })), RT.keyword(null, "line"), Integer.valueOf(570), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/sync/hubs.clj" });
    const__253 = (Keyword)RT.keyword(null, "revision-message");
    const__254 = (Keyword)RT.keyword(null, "tp-revision-record");
    const__255 = (Keyword)RT.keyword(null, "tp-remove-request");
    const__256 = (Var)RT.var("synchrony.sync.hubs", "create-hub");
    const__259 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "hub-opts")) })), RT.keyword(null, "line"), Integer.valueOf(632), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/sync/hubs.clj" });
    const__260 = (Keyword)RT.keyword(null, "ping-message");
    const__261 = (Var)RT.var("synchrony.sync.hubs", "persist-message");
    const__264 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "hub"), Symbol.intern(null, "publish"), Symbol.intern(null, "conn")) })), RT.keyword(null, "line"), Integer.valueOf(645), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/sync/hubs.clj" });
    const__265 = (Keyword)RT.keyword(null, "publish");
    const__266 = (Keyword)RT.keyword(null, "direct-message");
    const__267 = (Var)RT.var("synchrony.sync.hubs", "expired-token-message");
    const__269 = (AFn)RT.map(new Object[] { RT.keyword(null, "line"), Integer.valueOf(700), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/sync/hubs.clj" });
    const__270 = (Var)RT.var("synchrony.sync.messages", "error-message");
    const__275 = (AFn)RT.map(new Object[] { RT.keyword(null, "error-type"), RT.keyword("jwt", "expired"), RT.keyword(null, "source"), RT.keyword(null, "server"), RT.keyword(null, "message"), "Expired token" });
    const__276 = (Var)RT.var("synchrony.sync.hubs", "reap-connections");
    const__279 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "hub")) })), RT.keyword(null, "line"), Integer.valueOf(705), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/sync/hubs.clj" });
    const__280 = (Var)RT.var("synchrony.sync.hubs", "handle-error");
    const__283 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "hub"), Symbol.intern(null, "response-ch"), ((IObj)Symbol.intern(null, "ex")).withMeta((IPersistentMap)RT.map(new Object[] { RT.keyword(null, "tag"), Symbol.intern(null, "Throwable") }))) })), RT.keyword(null, "line"), Integer.valueOf(724), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/sync/hubs.clj" });
    const__284 = (Var)RT.var("synchrony.sync.hubs", "track-collaborators");
    const__287 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "hub")) })), RT.keyword(null, "line"), Integer.valueOf(735), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/sync/hubs.clj" });
    const__288 = (Var)RT.var("synchrony.sync.hubs", "track-event");
    const__291 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "hub"), Symbol.intern(null, "event")) })), RT.keyword(null, "line"), Integer.valueOf(741), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/sync/hubs.clj" });
    const__292 = (Var)RT.var("synchrony.sync.hubs", "track-message");
    const__295 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "hub"), Symbol.intern(null, "delta")) })), RT.keyword(null, "line"), Integer.valueOf(745), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/sync/hubs.clj" });
    const__296 = (Var)RT.var("synchrony.sync.hubs", "expensive-messages");
    const__298 = (AFn)RT.map(new Object[] { RT.keyword(null, "line"), Integer.valueOf(754), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/sync/hubs.clj" });
    const__299 = (AFn)PersistentHashSet.create(new Object[] { RT.keyword(null, "revision-record"), RT.keyword(null, "revision-message"), RT.keyword(null, "tp-revision-record"), RT.keyword(null, "init-request") });
  }
  
  public static void __init3() {
    const__300 = (Var)RT.var("synchrony.sync.hubs", "process-message");
    const__303 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "hub"), Symbol.intern(null, "m"), Symbol.intern(null, "conn")) })), RT.keyword(null, "line"), Integer.valueOf(760), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/sync/hubs.clj" });
    const__304 = (Var)RT.var("synchrony.sync.hubs", "instrument-hub?");
    const__307 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "instrument-hub-chance")) })), RT.keyword(null, "line"), Integer.valueOf(790), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/sync/hubs.clj" });
    const__308 = (Var)RT.var("synchrony.sync.hubs", "close-immediately?");
    const__312 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "hub")) })), RT.keyword(null, "doc"), "We only close pubsub hubs immediately.\n\n  Sync hubs are not closed immediately because they carry around the\n  materialized state of a document and we want to avoid the case where a\n  client-side error loop constantly recreates the hub and loads the\n  document from the database.", RT.keyword(null, "line"), Integer.valueOf(793), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/sync/hubs.clj" });
    const__313 = (Var)RT.var("synchrony.sync.hubs", "run-hub-process");
    const__316 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "hub")) })), RT.keyword(null, "line"), Integer.valueOf(804), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/sync/hubs.clj" });
    const__317 = (Var)RT.var("synchrony.sync.hubs", "accept");
    const__320 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "hub"), Symbol.intern(null, "conn-info"), Symbol.intern(null, "out-close-promise")) })), RT.keyword(null, "line"), Integer.valueOf(860), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/sync/hubs.clj" });
    const__321 = (Var)RT.var("synchrony.sync.hubs", "init-hub");
    const__324 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "hub-opts")) })), RT.keyword(null, "line"), Integer.valueOf(890), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/sync/hubs.clj" });
    const__325 = (Var)RT.var("synchrony.sync.hubs", "maybe-topic-responsibility-changed");
    const__328 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "topic")) })), RT.keyword(null, "line"), Integer.valueOf(894), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/sync/hubs.clj" });
    const__329 = (Var)RT.var("synchrony.sync.hubs", "maybe-topic-is-locked");
    const__332 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "topic")) })), RT.keyword(null, "line"), Integer.valueOf(902), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/sync/hubs.clj" });
    const__333 = (Var)RT.var("synchrony.sync.hubs", "reason-to-close-the-topic");
    const__336 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "topic")) })), RT.keyword(null, "line"), Integer.valueOf(908), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/sync/hubs.clj" });
    const__337 = (Var)RT.var("synchrony.sync.hubs", "prune-hubs");
    const__340 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create() })), RT.keyword(null, "line"), Integer.valueOf(912), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/sync/hubs.clj" });
    const__343 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create() })), RT.keyword(null, "line"), Integer.valueOf(920), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/sync/hubs.clj" });
    const__344 = (Var)RT.var("synchrony.sync.hubs", "start-prune-process");
    const__347 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "interval-ch")) })), RT.keyword(null, "line"), Integer.valueOf(924), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/sync/hubs.clj" });
    const__348 = (Var)RT.var("synchrony.sync.hubs", "ensure-hub");
    const__351 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "topic"), Symbol.intern(null, "pubsub?")) })), RT.keyword(null, "line"), Integer.valueOf(931), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/sync/hubs.clj" });
    const__352 = (Var)RT.var("synchrony.sync.hubs", "make-ex-handler");
    const__355 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "msg"), Symbol.intern(null, "chan-to-close")), Tuple.create(Symbol.intern(null, "msg"), Symbol.intern(null, "chan-to-close"), Symbol.intern(null, "level")) })), RT.keyword(null, "line"), Integer.valueOf(948), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/sync/hubs.clj" });
    const__356 = (Var)RT.var("synchrony.sync.hubs", "wrap-in-chan");
    const__359 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(RT.map(new Object[] { RT.keyword(null, "keys"), Tuple.create(Symbol.intern(null, "xf")), RT.keyword(null, "as"), Symbol.intern(null, "hub-in-opts") }), Symbol.intern(null, "in"), Symbol.intern(null, "close-promise")) })), RT.keyword(null, "line"), Integer.valueOf(957), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/sync/hubs.clj" });
    const__360 = (Var)RT.var("synchrony.sync.hubs", "wrap-out-chan");
    const__363 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(RT.map(new Object[] { RT.keyword(null, "keys"), Tuple.create(Symbol.intern(null, "xf"), Symbol.intern(null, "buf-cnt")), RT.keyword(null, "as"), Symbol.intern(null, "hub-out-opts") }), Symbol.intern(null, "out"), Symbol.intern(null, "close-promise")) })), RT.keyword(null, "line"), Integer.valueOf(961), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/sync/hubs.clj" });
    const__364 = (Var)RT.var("synchrony.sync.hubs", "accept-stream");
    const__367 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "hub"), Symbol.intern(null, "init"), Symbol.intern(null, "s")) })), RT.keyword(null, "line"), Integer.valueOf(982), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/sync/hubs.clj" });
    const__368 = (Var)RT.var("synchrony.sync.hubs", "open-conn");
    const__371 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(RT.map(new Object[] { RT.keyword(null, "keys"), Tuple.create(Symbol.intern(null, "topic"), Symbol.intern(null, "jwt"), Symbol.intern(null, "origin"), Symbol.intern(null, "stateless"), Symbol.intern(null, "send-buf")), RT.keyword(null, "or"), RT.map(new Object[] { Symbol.intern(null, "send-buf"), Long.valueOf(1024L) }), RT.keyword(null, "as"), Symbol.intern(null, "opts") }), Symbol.intern(null, "hub")) })), RT.keyword(null, "line"), Integer.valueOf(993), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/sync/hubs.clj" });
    const__372 = (Var)RT.var("synchrony.sync.hubs", "accept-stream-handler");
    const__375 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "s")) })), RT.keyword(null, "line"), Integer.valueOf(1014), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/sync/hubs.clj" });
    const__376 = (Var)RT.var("synchrony.sync.hubs", "on-hub-locks-changed");
    const__379 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "_"), Symbol.intern(null, "_"), Symbol.intern(null, "previous-locks"), Symbol.intern(null, "current-locks")) })), RT.keyword(null, "line"), Integer.valueOf(1038), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/sync/hubs.clj" });
  }
  
  static  {
    __init0();
    __init1();
    __init2();
    __init3();
    Compiler.pushNSandLoader(RT.classForName("synchrony.sync.hubs__init").getClassLoader());
    try {
      load();
    } finally {
      Var.popThreadBindings();
    } 
  }
}
