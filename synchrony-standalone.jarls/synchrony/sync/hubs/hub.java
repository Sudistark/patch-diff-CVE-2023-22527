package synchrony.sync.hubs;

import clojure.lang.AFn;
import clojure.lang.APersistentMap;
import clojure.lang.Associative;
import clojure.lang.Counted;
import clojure.lang.IFn;
import clojure.lang.IHashEq;
import clojure.lang.IKeywordLookup;
import clojure.lang.ILookup;
import clojure.lang.ILookupThunk;
import clojure.lang.IMapEntry;
import clojure.lang.IObj;
import clojure.lang.IPersistentCollection;
import clojure.lang.IPersistentMap;
import clojure.lang.IPersistentVector;
import clojure.lang.IRecord;
import clojure.lang.ISeq;
import clojure.lang.Keyword;
import clojure.lang.MapEntry;
import clojure.lang.Numbers;
import clojure.lang.PersistentHashSet;
import clojure.lang.RT;
import clojure.lang.RecordIterator;
import clojure.lang.Symbol;
import clojure.lang.Util;
import clojure.lang.Var;
import java.io.Serializable;
import java.util.Collection;
import java.util.Iterator;
import java.util.Map;
import java.util.Set;

public final class hub implements IRecord, IHashEq, IObj, ILookup, IKeywordLookup, IPersistentMap, Map, Serializable {
  public final Object init;
  
  public final Object new;
  
  public final Object tree;
  
  public final Object revision;
  
  public final Object connections_ch;
  
  public final Object conn_by_id;
  
  public final Object conn_by_in_ch;
  
  public final Object last_seen_by_id;
  
  public final Object eid_buf;
  
  public final Object history_id;
  
  public final Object crypto_key;
  
  public final Object partitioning_state;
  
  public final Object __meta;
  
  public final Object __extmap;
  
  int __hash;
  
  int __hasheq;
  
  public static final Var const__0 = (Var)RT.var("clojure.core", "set");
  
  public static final Var const__1 = (Var)RT.var("clojure.core", "vals");
  
  public static final Var const__2 = (Var)RT.var("clojure.core", "keys");
  
  public static final Var const__4 = (Var)RT.var("clojure.core", "some");
  
  public static final Var const__7 = (Var)RT.var("clojure.core", "contains?");
  
  public static final Keyword const__8 = (Keyword)RT.keyword(null, "last-seen-by-id");
  
  public static final Keyword const__9 = (Keyword)RT.keyword(null, "crypto-key");
  
  public static final Keyword const__10 = (Keyword)RT.keyword(null, "tree");
  
  public static final Keyword const__11 = (Keyword)RT.keyword(null, "partitioning-state");
  
  public static final Keyword const__12 = (Keyword)RT.keyword(null, "connections-ch");
  
  public static final Keyword const__13 = (Keyword)RT.keyword(null, "revision");
  
  public static final Keyword const__14 = (Keyword)RT.keyword(null, "init");
  
  public static final Keyword const__15 = (Keyword)RT.keyword(null, "new");
  
  public static final Keyword const__16 = (Keyword)RT.keyword(null, "conn-by-in-ch");
  
  public static final Keyword const__17 = (Keyword)RT.keyword(null, "history-id");
  
  public static final Keyword const__18 = (Keyword)RT.keyword(null, "eid-buf");
  
  public static final Keyword const__19 = (Keyword)RT.keyword(null, "conn-by-id");
  
  public static final AFn const__20 = (AFn)PersistentHashSet.create(new Object[] { 
        RT.keyword(null, "last-seen-by-id"), RT.keyword(null, "crypto-key"), RT.keyword(null, "tree"), RT.keyword(null, "partitioning-state"), RT.keyword(null, "connections-ch"), RT.keyword(null, "revision"), RT.keyword(null, "init"), RT.keyword(null, "new"), RT.keyword(null, "conn-by-in-ch"), RT.keyword(null, "history-id"), 
        RT.keyword(null, "eid-buf"), RT.keyword(null, "conn-by-id") });
  
  public static final Var const__21 = (Var)RT.var("clojure.core", "dissoc");
  
  public static final Var const__22 = (Var)RT.var("clojure.core", "with-meta");
  
  public static final Var const__23 = (Var)RT.var("clojure.core", "into");
  
  public static final Var const__24 = (Var)RT.var("clojure.core", "not-empty");
  
  public static final Var const__25 = (Var)RT.var("clojure.core", "identical?");
  
  public static final Var const__26 = (Var)RT.var("clojure.core", "assoc");
  
  public static final AFn const__27 = (AFn)RT.vector(new Object[] { 
        RT.keyword(null, "init"), RT.keyword(null, "new"), RT.keyword(null, "tree"), RT.keyword(null, "revision"), RT.keyword(null, "connections-ch"), RT.keyword(null, "conn-by-id"), RT.keyword(null, "conn-by-in-ch"), RT.keyword(null, "last-seen-by-id"), RT.keyword(null, "eid-buf"), RT.keyword(null, "history-id"), 
        RT.keyword(null, "crypto-key"), RT.keyword(null, "partitioning-state") });
  
  public static final Var const__28 = (Var)RT.var("clojure.core", "seq"), const__29 = (Var)RT.var("clojure.core", "concat"), const__30 = (Var)RT.var("clojure.core", "not"), const__31 = (Var)RT.var("clojure.core", "class"), const__32 = (Var)RT.var("clojure.core", "imap-cons"), const__33 = (Var)RT.var("clojure.core", "str");
  
  public hub(Object paramObject1, Object paramObject2, Object paramObject3, Object paramObject4, Object paramObject5, Object paramObject6, Object paramObject7, Object paramObject8, Object paramObject9, Object paramObject10, Object paramObject11, Object paramObject12, Object paramObject13, Object paramObject14, int paramInt1, int paramInt2) { this.init = paramObject1;
    this.new = paramObject2;
    this.tree = paramObject3;
    this.revision = paramObject4;
    this.connections_ch = paramObject5;
    this.conn_by_id = paramObject6;
    this.conn_by_in_ch = paramObject7;
    this.last_seen_by_id = paramObject8;
    this.eid_buf = paramObject9;
    this.history_id = paramObject10;
    this.crypto_key = paramObject11;
    this.partitioning_state = paramObject12;
    this.__meta = paramObject13;
    this.__extmap = paramObject14;
    this.__hash = paramInt1;
    this.__hasheq = paramInt2; }
  
  public hub(Object paramObject1, Object paramObject2, Object paramObject3, Object paramObject4, Object paramObject5, Object paramObject6, Object paramObject7, Object paramObject8, Object paramObject9, Object paramObject10, Object paramObject11, Object paramObject12) { this(paramObject1, paramObject2, paramObject3, paramObject4, paramObject5, paramObject6, paramObject7, paramObject8, paramObject9, paramObject10, paramObject11, paramObject12, null, null, 0, 0); }
  
  public hub(Object paramObject1, Object paramObject2, Object paramObject3, Object paramObject4, Object paramObject5, Object paramObject6, Object paramObject7, Object paramObject8, Object paramObject9, Object paramObject10, Object paramObject11, Object paramObject12, Object paramObject13, Object paramObject14) { this(paramObject1, paramObject2, paramObject3, paramObject4, paramObject5, paramObject6, paramObject7, paramObject8, paramObject9, paramObject10, paramObject11, paramObject12, paramObject13, paramObject14, 0, 0); }
  
  public static IPersistentVector getBasis() { return RT.vector(new Object[] { 
          Symbol.intern(null, "init"), Symbol.intern(null, "new"), Symbol.intern(null, "tree"), Symbol.intern(null, "revision"), Symbol.intern(null, "connections-ch"), Symbol.intern(null, "conn-by-id"), Symbol.intern(null, "conn-by-in-ch"), Symbol.intern(null, "last-seen-by-id"), Symbol.intern(null, "eid-buf"), Symbol.intern(null, "history-id"), 
          Symbol.intern(null, "crypto-key"), Symbol.intern(null, "partitioning-state") }); }
  
  public static hub create(IPersistentMap paramIPersistentMap) {
    Object object1 = paramIPersistentMap.valAt(Keyword.intern("init"), null);
    paramIPersistentMap = paramIPersistentMap.without(Keyword.intern("init"));
    Object object2 = paramIPersistentMap.valAt(Keyword.intern("new"), null);
    paramIPersistentMap = paramIPersistentMap.without(Keyword.intern("new"));
    Object object3 = paramIPersistentMap.valAt(Keyword.intern("tree"), null);
    paramIPersistentMap = paramIPersistentMap.without(Keyword.intern("tree"));
    Object object4 = paramIPersistentMap.valAt(Keyword.intern("revision"), null);
    paramIPersistentMap = paramIPersistentMap.without(Keyword.intern("revision"));
    Object object5 = paramIPersistentMap.valAt(Keyword.intern("connections-ch"), null);
    paramIPersistentMap = paramIPersistentMap.without(Keyword.intern("connections-ch"));
    Object object6 = paramIPersistentMap.valAt(Keyword.intern("conn-by-id"), null);
    paramIPersistentMap = paramIPersistentMap.without(Keyword.intern("conn-by-id"));
    Object object7 = paramIPersistentMap.valAt(Keyword.intern("conn-by-in-ch"), null);
    paramIPersistentMap = paramIPersistentMap.without(Keyword.intern("conn-by-in-ch"));
    Object object8 = paramIPersistentMap.valAt(Keyword.intern("last-seen-by-id"), null);
    paramIPersistentMap = paramIPersistentMap.without(Keyword.intern("last-seen-by-id"));
    Object object9 = paramIPersistentMap.valAt(Keyword.intern("eid-buf"), null);
    paramIPersistentMap = paramIPersistentMap.without(Keyword.intern("eid-buf"));
    Object object10 = paramIPersistentMap.valAt(Keyword.intern("history-id"), null);
    paramIPersistentMap = paramIPersistentMap.without(Keyword.intern("history-id"));
    Object object11 = paramIPersistentMap.valAt(Keyword.intern("crypto-key"), null);
    paramIPersistentMap = paramIPersistentMap.without(Keyword.intern("crypto-key"));
    Object object12 = paramIPersistentMap.valAt(Keyword.intern("partitioning-state"), null);
    paramIPersistentMap = paramIPersistentMap.without(Keyword.intern("partitioning-state"));
    return new hub(object1, object2, object3, object4, object5, object6, object7, object8, object9, object10, object11, object12, null, RT.seqOrElse(paramIPersistentMap), 0, 0);
  }
  
  public int hasheq() {
    int hq__7768__auto__49198 = this.__hasheq, h__7769__auto__49197 = RT.intCast(0x5275DC13L ^ APersistentMap.mapHasheq((IPersistentMap)this));
    this.__hasheq = h__7769__auto__49197;
    return (hq__7768__auto__49198 == 0L) ? h__7769__auto__49197 : hq__7768__auto__49198;
  }
  
  public int hashCode() {
    int hash__7771__auto__49200 = this.__hash, h__7772__auto__49199 = APersistentMap.mapHash((IPersistentMap)this);
    this.__hash = h__7772__auto__49199;
    return (hash__7771__auto__49200 == 0L) ? h__7772__auto__49199 : hash__7771__auto__49200;
  }
  
  public boolean equals(Object G__49166) { G__49166 = null;
    return APersistentMap.mapEquals((IPersistentMap)this, G__49166); }
  
  public IPersistentMap meta() { return (IPersistentMap)this.__meta; }
  
  public IObj withMeta(IPersistentMap G__49166) { G__49166 = null;
    return (IObj)new hub(this.init, this.new, this.tree, this.revision, this.connections_ch, this.conn_by_id, this.conn_by_in_ch, this.last_seen_by_id, this.eid_buf, this.history_id, this.crypto_key, this.partitioning_state, G__49166, this.__extmap, this.__hash, this.__hasheq); }
  
  public Object valAt(Object k__7777__auto__) { k__7777__auto__ = null;
    return ((ILookup)this).valAt(k__7777__auto__, null); }
  
  public Object valAt(Object k__7779__auto__, Object else__7780__auto__) {
    Object G__49195 = k__7779__auto__;
    switch (Util.hash(G__49195) >> 4 & 0x1F) {
      case 6:
        if (G__49195 == const__11);
        break;
      case 8:
        if (G__49195 == const__16);
        break;
      case 14:
        if (G__49195 == const__8);
        break;
      case 18:
        if (G__49195 == const__18);
        break;
      case 19:
        if (G__49195 == const__15);
        break;
      case 21:
        if (G__49195 == const__19);
        break;
      case 22:
        if (G__49195 == const__13);
        break;
      case 23:
        if (G__49195 == const__10);
        break;
      case 26:
        if (G__49195 == const__14);
        break;
      case 27:
        if (G__49195 == const__17);
        break;
      case 29:
        if (G__49195 == const__9);
        break;
      case 30:
        if (G__49195 == const__12);
        break;
    } 
    k__7779__auto__ = null;
    else__7780__auto__ = null;
    this = null;
    return RT.get(this.__extmap, k__7779__auto__, else__7780__auto__);
  }
  
  public ILookupThunk getLookupThunk(Keyword k__7782__auto__) {
    Object gclass = ((IFn)const__31.getRawRoot()).invoke(this), G__49170 = k__7782__auto__ = null;
    switch (Util.hash(G__49170) >> 4 & 0x1F) {
      case 6:
        if (G__49170 == const__11)
          gclass = null; 
        break;
      case 8:
        if (G__49170 == const__16)
          gclass = null; 
        break;
      case 14:
        if (G__49170 == const__8)
          gclass = null; 
        break;
      case 18:
        if (G__49170 == const__18)
          gclass = null; 
        break;
      case 19:
        if (G__49170 == const__15)
          gclass = null; 
        break;
      case 21:
        if (G__49170 == const__19)
          gclass = null; 
        break;
      case 22:
        if (G__49170 == const__13)
          gclass = null; 
        break;
      case 23:
        if (G__49170 == const__10)
          gclass = null; 
        break;
      case 26:
        if (G__49170 == const__14)
          gclass = null; 
        break;
      case 27:
        if (G__49170 == const__17)
          gclass = null; 
        break;
      case 29:
        if (G__49170 == const__9)
          gclass = null; 
        break;
      case 30:
        if (G__49170 == const__12)
          gclass = null; 
        break;
    } 
    return (ILookupThunk)null;
  }
  
  public int count() { return RT.intCast(Numbers.add(12L, RT.count(this.__extmap))); }
  
  public IPersistentCollection empty() { throw (Throwable)new UnsupportedOperationException((String)((IFn)const__33.getRawRoot()).invoke("Can't create empty: ", "synchrony.sync.hubs.hub")); }
  
  public IPersistentCollection cons(Object e__7786__auto__) { e__7786__auto__ = null;
    this = null;
    return (IPersistentCollection)((IFn)const__32).invoke(this, e__7786__auto__); }
  
  public boolean equiv(Object G__49166) {
    boolean or__5516__auto__49213 = Util.identical(this, G__49166);
    Object G__49166 = G__49166 = null;
    boolean and__5514__auto__49212 = Util.equiv(this.init, ((hub)G__49166).init), and__5514__auto__49211 = Util.equiv(this.new, ((hub)G__49166).new), and__5514__auto__49210 = Util.equiv(this.tree, ((hub)G__49166).tree), and__5514__auto__49209 = Util.equiv(this.revision, ((hub)G__49166).revision), and__5514__auto__49208 = Util.equiv(this.connections_ch, ((hub)G__49166).connections_ch), and__5514__auto__49207 = Util.equiv(this.conn_by_id, ((hub)G__49166).conn_by_id), and__5514__auto__49206 = Util.equiv(this.conn_by_in_ch, ((hub)G__49166).conn_by_in_ch), and__5514__auto__49205 = Util.equiv(this.last_seen_by_id, ((hub)G__49166).last_seen_by_id), and__5514__auto__49204 = Util.equiv(this.eid_buf, ((hub)G__49166).eid_buf), and__5514__auto__49203 = Util.equiv(this.history_id, ((hub)G__49166).history_id), and__5514__auto__49202 = Util.equiv(this.crypto_key, ((hub)G__49166).crypto_key), and__5514__auto__49201 = Util.equiv(this.partitioning_state, ((hub)G__49166).partitioning_state);
    G__49166 = null;
    return RT.booleanCast(or__5516__auto__49213 ? (or__5516__auto__49213 ? Boolean.TRUE : Boolean.FALSE) : (Util.identical(((IFn)const__31.getRawRoot()).invoke(this), ((IFn)const__31.getRawRoot()).invoke(G__49166)) ? (and__5514__auto__49212 ? (and__5514__auto__49211 ? (and__5514__auto__49210 ? (and__5514__auto__49209 ? (and__5514__auto__49208 ? (and__5514__auto__49207 ? (and__5514__auto__49206 ? (and__5514__auto__49205 ? (and__5514__auto__49204 ? (and__5514__auto__49203 ? (and__5514__auto__49202 ? (and__5514__auto__49201 ? (Util.equiv(this.__extmap, ((hub)G__49166).__extmap) ? Boolean.TRUE : Boolean.FALSE) : (and__5514__auto__49201 ? Boolean.TRUE : Boolean.FALSE)) : (and__5514__auto__49202 ? Boolean.TRUE : Boolean.FALSE)) : (and__5514__auto__49203 ? Boolean.TRUE : Boolean.FALSE)) : (and__5514__auto__49204 ? Boolean.TRUE : Boolean.FALSE)) : (and__5514__auto__49205 ? Boolean.TRUE : Boolean.FALSE)) : (and__5514__auto__49206 ? Boolean.TRUE : Boolean.FALSE)) : (and__5514__auto__49207 ? Boolean.TRUE : Boolean.FALSE)) : (and__5514__auto__49208 ? Boolean.TRUE : Boolean.FALSE)) : (and__5514__auto__49209 ? Boolean.TRUE : Boolean.FALSE)) : (and__5514__auto__49210 ? Boolean.TRUE : Boolean.FALSE)) : (and__5514__auto__49211 ? Boolean.TRUE : Boolean.FALSE)) : (and__5514__auto__49212 ? Boolean.TRUE : Boolean.FALSE)) : null));
  }
  
  public boolean containsKey(Object k__7789__auto__) { k__7789__auto__ = null;
    this = null;
    return ((Boolean)((IFn)const__30.getRawRoot()).invoke(Util.identical(this, ((ILookup)this).valAt(k__7789__auto__, this)) ? Boolean.TRUE : Boolean.FALSE)).booleanValue(); }
  
  public IMapEntry entryAt(Object k__7791__auto__) {
    Object v__7792__auto__49214 = ((ILookup)this).valAt(k__7791__auto__, this);
    k__7791__auto__ = null;
    v__7792__auto__49214 = null;
    this = null;
    return (IMapEntry)(Util.identical(this, v__7792__auto__49214) ? null : MapEntry.create(k__7791__auto__, v__7792__auto__49214));
  }
  
  public ISeq seq() { this = null;
    return (ISeq)((IFn)const__28.getRawRoot()).invoke(((IFn)const__29.getRawRoot()).invoke(RT.vector(new Object[] { 
              MapEntry.create(const__14, this.init), MapEntry.create(const__15, this.new), MapEntry.create(const__10, this.tree), MapEntry.create(const__13, this.revision), MapEntry.create(const__12, this.connections_ch), MapEntry.create(const__19, this.conn_by_id), MapEntry.create(const__16, this.conn_by_in_ch), MapEntry.create(const__8, this.last_seen_by_id), MapEntry.create(const__18, this.eid_buf), MapEntry.create(const__17, this.history_id), 
              MapEntry.create(const__9, this.crypto_key), MapEntry.create(const__11, this.partitioning_state) }), this.__extmap)); }
  
  public Iterator iterator() { return (Iterator)new RecordIterator((ILookup)this, (IPersistentVector)const__27, (Iterator)RT.iter(this.__extmap)); }
  
  public IPersistentMap assoc(Object k__7796__auto__, Object G__49166) {
    Object pred__49168 = const__25.getRawRoot(), expr__49169 = k__7796__auto__;
    if (((IFn)pred__49168).invoke(const__14, expr__49169) != null) {
      if (((IFn)pred__49168).invoke(const__14, expr__49169) != Boolean.FALSE)
        G__49166 = null; 
    } else {
      ((IFn)pred__49168).invoke(const__14, expr__49169);
    } 
    if (((IFn)pred__49168).invoke(const__15, expr__49169) != null) {
      if (((IFn)pred__49168).invoke(const__15, expr__49169) != Boolean.FALSE)
        G__49166 = null; 
    } else {
      ((IFn)pred__49168).invoke(const__15, expr__49169);
    } 
    if (((IFn)pred__49168).invoke(const__10, expr__49169) != null) {
      if (((IFn)pred__49168).invoke(const__10, expr__49169) != Boolean.FALSE)
        G__49166 = null; 
    } else {
      ((IFn)pred__49168).invoke(const__10, expr__49169);
    } 
    if (((IFn)pred__49168).invoke(const__13, expr__49169) != null) {
      if (((IFn)pred__49168).invoke(const__13, expr__49169) != Boolean.FALSE)
        G__49166 = null; 
    } else {
      ((IFn)pred__49168).invoke(const__13, expr__49169);
    } 
    if (((IFn)pred__49168).invoke(const__12, expr__49169) != null) {
      if (((IFn)pred__49168).invoke(const__12, expr__49169) != Boolean.FALSE)
        G__49166 = null; 
    } else {
      ((IFn)pred__49168).invoke(const__12, expr__49169);
    } 
    if (((IFn)pred__49168).invoke(const__19, expr__49169) != null) {
      if (((IFn)pred__49168).invoke(const__19, expr__49169) != Boolean.FALSE)
        G__49166 = null; 
    } else {
      ((IFn)pred__49168).invoke(const__19, expr__49169);
    } 
    if (((IFn)pred__49168).invoke(const__16, expr__49169) != null) {
      if (((IFn)pred__49168).invoke(const__16, expr__49169) != Boolean.FALSE)
        G__49166 = null; 
    } else {
      ((IFn)pred__49168).invoke(const__16, expr__49169);
    } 
    if (((IFn)pred__49168).invoke(const__8, expr__49169) != null) {
      if (((IFn)pred__49168).invoke(const__8, expr__49169) != Boolean.FALSE)
        G__49166 = null; 
    } else {
      ((IFn)pred__49168).invoke(const__8, expr__49169);
    } 
    if (((IFn)pred__49168).invoke(const__18, expr__49169) != null) {
      if (((IFn)pred__49168).invoke(const__18, expr__49169) != Boolean.FALSE)
        G__49166 = null; 
    } else {
      ((IFn)pred__49168).invoke(const__18, expr__49169);
    } 
    if (((IFn)pred__49168).invoke(const__17, expr__49169) != null) {
      if (((IFn)pred__49168).invoke(const__17, expr__49169) != Boolean.FALSE)
        G__49166 = null; 
    } else {
      ((IFn)pred__49168).invoke(const__17, expr__49169);
    } 
    if (((IFn)pred__49168).invoke(const__9, expr__49169) != null) {
      if (((IFn)pred__49168).invoke(const__9, expr__49169) != Boolean.FALSE)
        G__49166 = null; 
    } else {
      ((IFn)pred__49168).invoke(const__9, expr__49169);
    } 
    pred__49168 = null;
    expr__49169 = null;
    if (((IFn)pred__49168).invoke(const__11, expr__49169) != null) {
      if (((IFn)pred__49168).invoke(const__11, expr__49169) != Boolean.FALSE)
        G__49166 = null; 
    } else {
      ((IFn)pred__49168).invoke(const__11, expr__49169);
    } 
    k__7796__auto__ = null;
    G__49166 = null;
    return (IPersistentMap)new hub(this.init, this.new, this.tree, this.revision, this.connections_ch, this.conn_by_id, this.conn_by_in_ch, this.last_seen_by_id, this.eid_buf, this.history_id, this.crypto_key, this.partitioning_state, this.__meta, ((IFn)const__26.getRawRoot()).invoke(this.__extmap, k__7796__auto__, G__49166));
  }
  
  public IPersistentMap without(Object k__7798__auto__) { if (((IFn)const__7.getRawRoot()).invoke(const__20, k__7798__auto__) != null) {
      if (((IFn)const__7.getRawRoot()).invoke(const__20, k__7798__auto__) != Boolean.FALSE) {
        k__7798__auto__ = null;
        this = null;
      } 
    } else {
      ((IFn)const__7.getRawRoot()).invoke(const__20, k__7798__auto__);
    } 
    k__7798__auto__ = null;
    return (IPersistentMap)new hub(this.init, this.new, this.tree, this.revision, this.connections_ch, this.conn_by_id, this.conn_by_in_ch, this.last_seen_by_id, this.eid_buf, this.history_id, this.crypto_key, this.partitioning_state, this.__meta, ((IFn)const__24.getRawRoot()).invoke(((IFn)const__21.getRawRoot()).invoke(this.__extmap, k__7798__auto__))); }
  
  public int size() { this = null;
    return ((Counted)this).count(); }
  
  public boolean isEmpty() { return Util.equiv(0L, ((Counted)this).count()); }
  
  public boolean containsValue(Object v__7802__auto__) { v__7802__auto__ = null;
    return RT.booleanCast(((IFn)const__4.getRawRoot()).invoke(RT.set(new Object[] { v__7802__auto__ }, ), ((IFn)const__1.getRawRoot()).invoke(this))); }
  
  public Object get(Object k__7804__auto__) { k__7804__auto__ = null;
    return ((ILookup)this).valAt(k__7804__auto__); }
  
  public Object put(Object k__7806__auto__, Object v__7807__auto__) { throw (Throwable)new UnsupportedOperationException(); }
  
  public Object remove(Object k__7809__auto__) { throw (Throwable)new UnsupportedOperationException(); }
  
  public void putAll(Map m__7811__auto__) { throw (Throwable)new UnsupportedOperationException(); }
  
  public void clear() { throw (Throwable)new UnsupportedOperationException(); }
  
  public Set keySet() { this = null;
    return (Set)((IFn)const__0.getRawRoot()).invoke(((IFn)const__2.getRawRoot()).invoke(this)); }
  
  public Collection values() { this = null;
    return (Collection)((IFn)const__1.getRawRoot()).invoke(this); }
  
  public Set entrySet() { this = null;
    return (Set)((IFn)const__0.getRawRoot()).invoke(this); }
}
