package synchrony.sync.end_point;

import clojure.lang.AFn;
import clojure.lang.APersistentMap;
import clojure.lang.Associative;
import clojure.lang.Counted;
import clojure.lang.IFn;
import clojure.lang.IHashEq;
import clojure.lang.IKeywordLookup;
import clojure.lang.ILookup;
import clojure.lang.ILookupThunk;
import clojure.lang.IMapEntry;
import clojure.lang.IObj;
import clojure.lang.IPersistentCollection;
import clojure.lang.IPersistentMap;
import clojure.lang.IPersistentVector;
import clojure.lang.IRecord;
import clojure.lang.ISeq;
import clojure.lang.Keyword;
import clojure.lang.MapEntry;
import clojure.lang.Numbers;
import clojure.lang.PersistentHashSet;
import clojure.lang.RT;
import clojure.lang.RecordIterator;
import clojure.lang.Symbol;
import clojure.lang.Util;
import clojure.lang.Var;
import java.io.Serializable;
import java.util.Collection;
import java.util.Iterator;
import java.util.Map;
import java.util.Set;

public final class end-point implements IRecord, IHashEq, IObj, ILookup, IKeywordLookup, IPersistentMap, Map, Serializable {
  public final Object id;
  
  public final Object events_in;
  
  public final Object tree;
  
  public final Object sequence;
  
  public final Object connection;
  
  public final Object tr_state;
  
  public final Object ping_interval_ms;
  
  public final Object pong_timeout_ms;
  
  public final Object request_timeout_ms;
  
  public final Object pong_timeout;
  
  public final Object receive_buffer;
  
  public final Object receive_buffer_flush_promise;
  
  public final Object receive_buffer_flush_timeout_ms;
  
  public final Object init_done;
  
  public final Object bound_tree;
  
  public final Object init_rev;
  
  public final Object acked_rev;
  
  public final Object acked_state;
  
  public final Object invalidate_ids;
  
  public final Object undo_history;
  
  public final Object end_points;
  
  public final Object diff_trees;
  
  public final Object materialize;
  
  public final Object on_update;
  
  public final Object on_init;
  
  public final Object on_close;
  
  public final Object on_join;
  
  public final Object on_leave;
  
  public final Object reentry_guard;
  
  public final Object consistent_model_transition;
  
  public final Object event_handlers;
  
  public final Object wait_QMARK_;
  
  public final Object visited_fn;
  
  public final Object domModifiers;
  
  public final Object dom_poll_interval_ms;
  
  public final Object selection;
  
  public final Object telepointer_ctx;
  
  public final Object __meta;
  
  public final Object __extmap;
  
  int __hash;
  
  int __hasheq;
  
  public static final Var const__0 = (Var)RT.var("clojure.core", "set");
  
  public static final Var const__1 = (Var)RT.var("clojure.core", "vals");
  
  public static final Var const__2 = (Var)RT.var("clojure.core", "keys");
  
  public static final Var const__4 = (Var)RT.var("clojure.core", "some");
  
  public static final Var const__7 = (Var)RT.var("clojure.core", "contains?");
  
  public static final Keyword const__8 = (Keyword)RT.keyword(null, "event-handlers");
  
  public static final Keyword const__9 = (Keyword)RT.keyword(null, "events-in");
  
  public static final Keyword const__10 = (Keyword)RT.keyword(null, "acked-state");
  
  public static final Keyword const__11 = (Keyword)RT.keyword(null, "telepointer-ctx");
  
  public static final Keyword const__12 = (Keyword)RT.keyword(null, "tree");
  
  public static final Keyword const__13 = (Keyword)RT.keyword(null, "invalidate-ids");
  
  public static final Keyword const__14 = (Keyword)RT.keyword(null, "receive-buffer-flush-timeout-ms");
  
  public static final Keyword const__15 = (Keyword)RT.keyword(null, "receive-buffer-flush-promise");
  
  public static final Keyword const__16 = (Keyword)RT.keyword(null, "on-close");
  
  public static final Keyword const__17 = (Keyword)RT.keyword(null, "undo-history");
  
  public static final Keyword const__18 = (Keyword)RT.keyword(null, "request-timeout-ms");
  
  public static final Keyword const__19 = (Keyword)RT.keyword(null, "reentry-guard");
  
  public static final Keyword const__20 = (Keyword)RT.keyword(null, "receive-buffer");
  
  public static final Keyword const__21 = (Keyword)RT.keyword(null, "pong-timeout");
  
  public static final Keyword const__22 = (Keyword)RT.keyword(null, "dom-poll-interval-ms");
  
  public static final Keyword const__23 = (Keyword)RT.keyword(null, "on-leave");
  
  public static final Keyword const__24 = (Keyword)RT.keyword(null, "on-update");
  
  public static final Keyword const__25 = (Keyword)RT.keyword(null, "acked-rev");
  
  public static final Keyword const__26 = (Keyword)RT.keyword(null, "consistent-model-transition");
  
  public static final Keyword const__27 = (Keyword)RT.keyword(null, "init-rev");
  
  public static final Keyword const__28 = (Keyword)RT.keyword(null, "materialize");
  
  public static final Keyword const__29 = (Keyword)RT.keyword(null, "id");
  
  public static final Keyword const__30 = (Keyword)RT.keyword(null, "diff-trees");
  
  public static final Keyword const__31 = (Keyword)RT.keyword(null, "sequence");
  
  public static final Keyword const__32 = (Keyword)RT.keyword(null, "visited-fn");
  
  public static final Keyword const__33 = (Keyword)RT.keyword(null, "tr-state");
  
  public static final Keyword const__34 = (Keyword)RT.keyword(null, "end-points");
  
  public static final Keyword const__35 = (Keyword)RT.keyword(null, "pong-timeout-ms");
  
  public static final Keyword const__36 = (Keyword)RT.keyword(null, "ping-interval-ms");
  
  public static final Keyword const__37 = (Keyword)RT.keyword(null, "on-join");
  
  public static final Keyword const__38 = (Keyword)RT.keyword(null, "init-done");
  
  public static final Keyword const__39 = (Keyword)RT.keyword(null, "on-init");
  
  public static final Keyword const__40 = (Keyword)RT.keyword(null, "selection");
  
  public static final Keyword const__41 = (Keyword)RT.keyword(null, "connection");
  
  public static final Keyword const__42 = (Keyword)RT.keyword(null, "wait?");
  
  public static final Keyword const__43 = (Keyword)RT.keyword(null, "domModifiers");
  
  public static final Keyword const__44 = (Keyword)RT.keyword(null, "bound-tree");
  
  public static final AFn const__45 = (AFn)PersistentHashSet.create(new Object[] { 
        RT.keyword(null, "event-handlers"), RT.keyword(null, "events-in"), RT.keyword(null, "acked-state"), RT.keyword(null, "telepointer-ctx"), RT.keyword(null, "tree"), RT.keyword(null, "invalidate-ids"), RT.keyword(null, "receive-buffer-flush-timeout-ms"), RT.keyword(null, "receive-buffer-flush-promise"), RT.keyword(null, "on-close"), RT.keyword(null, "undo-history"), 
        RT.keyword(null, "request-timeout-ms"), RT.keyword(null, "reentry-guard"), RT.keyword(null, "receive-buffer"), RT.keyword(null, "pong-timeout"), RT.keyword(null, "dom-poll-interval-ms"), RT.keyword(null, "on-leave"), RT.keyword(null, "on-update"), RT.keyword(null, "acked-rev"), RT.keyword(null, "consistent-model-transition"), RT.keyword(null, "init-rev"), 
        RT.keyword(null, "materialize"), RT.keyword(null, "id"), RT.keyword(null, "diff-trees"), RT.keyword(null, "sequence"), RT.keyword(null, "visited-fn"), RT.keyword(null, "tr-state"), RT.keyword(null, "end-points"), RT.keyword(null, "pong-timeout-ms"), RT.keyword(null, "ping-interval-ms"), RT.keyword(null, "on-join"), 
        RT.keyword(null, "init-done"), RT.keyword(null, "on-init"), RT.keyword(null, "selection"), RT.keyword(null, "connection"), RT.keyword(null, "wait?"), RT.keyword(null, "domModifiers"), RT.keyword(null, "bound-tree") });
  
  public static final Var const__46 = (Var)RT.var("clojure.core", "dissoc");
  
  public static final Var const__47 = (Var)RT.var("clojure.core", "with-meta");
  
  public static final Var const__48 = (Var)RT.var("clojure.core", "into");
  
  public static final Var const__49 = (Var)RT.var("clojure.core", "not-empty");
  
  public static final Var const__50 = (Var)RT.var("clojure.core", "identical?");
  
  public static final Var const__51 = (Var)RT.var("clojure.core", "assoc");
  
  public static final AFn const__52 = (AFn)RT.vector(new Object[] { 
        RT.keyword(null, "id"), RT.keyword(null, "events-in"), RT.keyword(null, "tree"), RT.keyword(null, "sequence"), RT.keyword(null, "connection"), RT.keyword(null, "tr-state"), RT.keyword(null, "ping-interval-ms"), RT.keyword(null, "pong-timeout-ms"), RT.keyword(null, "request-timeout-ms"), RT.keyword(null, "pong-timeout"), 
        RT.keyword(null, "receive-buffer"), RT.keyword(null, "receive-buffer-flush-promise"), RT.keyword(null, "receive-buffer-flush-timeout-ms"), RT.keyword(null, "init-done"), RT.keyword(null, "bound-tree"), RT.keyword(null, "init-rev"), RT.keyword(null, "acked-rev"), RT.keyword(null, "acked-state"), RT.keyword(null, "invalidate-ids"), RT.keyword(null, "undo-history"), 
        RT.keyword(null, "end-points"), RT.keyword(null, "diff-trees"), RT.keyword(null, "materialize"), RT.keyword(null, "on-update"), RT.keyword(null, "on-init"), RT.keyword(null, "on-close"), RT.keyword(null, "on-join"), RT.keyword(null, "on-leave"), RT.keyword(null, "reentry-guard"), RT.keyword(null, "consistent-model-transition"), 
        RT.keyword(null, "event-handlers"), RT.keyword(null, "wait?"), RT.keyword(null, "visited-fn"), RT.keyword(null, "domModifiers"), RT.keyword(null, "dom-poll-interval-ms"), RT.keyword(null, "selection"), RT.keyword(null, "telepointer-ctx") });
  
  public static final Var const__53 = (Var)RT.var("clojure.core", "seq"), const__54 = (Var)RT.var("clojure.core", "concat"), const__55 = (Var)RT.var("clojure.core", "not"), const__56 = (Var)RT.var("clojure.core", "class"), const__57 = (Var)RT.var("clojure.core", "imap-cons"), const__58 = (Var)RT.var("clojure.core", "str");
  
  public end-point(Object paramObject1, Object paramObject2, Object paramObject3, Object paramObject4, Object paramObject5, Object paramObject6, Object paramObject7, Object paramObject8, Object paramObject9, Object paramObject10, Object paramObject11, Object paramObject12, Object paramObject13, Object paramObject14, Object paramObject15, Object paramObject16, Object paramObject17, Object paramObject18, Object paramObject19, Object paramObject20, Object paramObject21, Object paramObject22, Object paramObject23, Object paramObject24, Object paramObject25, Object paramObject26, Object paramObject27, Object paramObject28, Object paramObject29, Object paramObject30, Object paramObject31, Object paramObject32, Object paramObject33, Object paramObject34, Object paramObject35, Object paramObject36, Object paramObject37, Object paramObject38, Object paramObject39, int paramInt1, int paramInt2) { this.id = paramObject1;
    this.events_in = paramObject2;
    this.tree = paramObject3;
    this.sequence = paramObject4;
    this.connection = paramObject5;
    this.tr_state = paramObject6;
    this.ping_interval_ms = paramObject7;
    this.pong_timeout_ms = paramObject8;
    this.request_timeout_ms = paramObject9;
    this.pong_timeout = paramObject10;
    this.receive_buffer = paramObject11;
    this.receive_buffer_flush_promise = paramObject12;
    this.receive_buffer_flush_timeout_ms = paramObject13;
    this.init_done = paramObject14;
    this.bound_tree = paramObject15;
    this.init_rev = paramObject16;
    this.acked_rev = paramObject17;
    this.acked_state = paramObject18;
    this.invalidate_ids = paramObject19;
    this.undo_history = paramObject20;
    this.end_points = paramObject21;
    this.diff_trees = paramObject22;
    this.materialize = paramObject23;
    this.on_update = paramObject24;
    this.on_init = paramObject25;
    this.on_close = paramObject26;
    this.on_join = paramObject27;
    this.on_leave = paramObject28;
    this.reentry_guard = paramObject29;
    this.consistent_model_transition = paramObject30;
    this.event_handlers = paramObject31;
    this.wait_QMARK_ = paramObject32;
    this.visited_fn = paramObject33;
    this.domModifiers = paramObject34;
    this.dom_poll_interval_ms = paramObject35;
    this.selection = paramObject36;
    this.telepointer_ctx = paramObject37;
    this.__meta = paramObject38;
    this.__extmap = paramObject39;
    this.__hash = paramInt1;
    this.__hasheq = paramInt2; }
  
  public end-point(Object paramObject1, Object paramObject2, Object paramObject3, Object paramObject4, Object paramObject5, Object paramObject6, Object paramObject7, Object paramObject8, Object paramObject9, Object paramObject10, Object paramObject11, Object paramObject12, Object paramObject13, Object paramObject14, Object paramObject15, Object paramObject16, Object paramObject17, Object paramObject18, Object paramObject19, Object paramObject20, Object paramObject21, Object paramObject22, Object paramObject23, Object paramObject24, Object paramObject25, Object paramObject26, Object paramObject27, Object paramObject28, Object paramObject29, Object paramObject30, Object paramObject31, Object paramObject32, Object paramObject33, Object paramObject34, Object paramObject35, Object paramObject36, Object paramObject37) { this(paramObject1, paramObject2, paramObject3, paramObject4, paramObject5, paramObject6, paramObject7, paramObject8, paramObject9, paramObject10, paramObject11, paramObject12, paramObject13, paramObject14, paramObject15, paramObject16, paramObject17, paramObject18, paramObject19, paramObject20, paramObject21, paramObject22, paramObject23, paramObject24, paramObject25, paramObject26, paramObject27, paramObject28, paramObject29, paramObject30, paramObject31, paramObject32, paramObject33, paramObject34, paramObject35, paramObject36, paramObject37, null, null, 0, 0); }
  
  public end-point(Object paramObject1, Object paramObject2, Object paramObject3, Object paramObject4, Object paramObject5, Object paramObject6, Object paramObject7, Object paramObject8, Object paramObject9, Object paramObject10, Object paramObject11, Object paramObject12, Object paramObject13, Object paramObject14, Object paramObject15, Object paramObject16, Object paramObject17, Object paramObject18, Object paramObject19, Object paramObject20, Object paramObject21, Object paramObject22, Object paramObject23, Object paramObject24, Object paramObject25, Object paramObject26, Object paramObject27, Object paramObject28, Object paramObject29, Object paramObject30, Object paramObject31, Object paramObject32, Object paramObject33, Object paramObject34, Object paramObject35, Object paramObject36, Object paramObject37, Object paramObject38, Object paramObject39) { this(paramObject1, paramObject2, paramObject3, paramObject4, paramObject5, paramObject6, paramObject7, paramObject8, paramObject9, paramObject10, paramObject11, paramObject12, paramObject13, paramObject14, paramObject15, paramObject16, paramObject17, paramObject18, paramObject19, paramObject20, paramObject21, paramObject22, paramObject23, paramObject24, paramObject25, paramObject26, paramObject27, paramObject28, paramObject29, paramObject30, paramObject31, paramObject32, paramObject33, paramObject34, paramObject35, paramObject36, paramObject37, paramObject38, paramObject39, 0, 0); }
  
  public static IPersistentVector getBasis() { return RT.vector(new Object[] { 
          Symbol.intern(null, "id"), Symbol.intern(null, "events-in"), Symbol.intern(null, "tree"), Symbol.intern(null, "sequence"), Symbol.intern(null, "connection"), Symbol.intern(null, "tr-state"), Symbol.intern(null, "ping-interval-ms"), Symbol.intern(null, "pong-timeout-ms"), Symbol.intern(null, "request-timeout-ms"), Symbol.intern(null, "pong-timeout"), 
          Symbol.intern(null, "receive-buffer"), Symbol.intern(null, "receive-buffer-flush-promise"), Symbol.intern(null, "receive-buffer-flush-timeout-ms"), Symbol.intern(null, "init-done"), Symbol.intern(null, "bound-tree"), Symbol.intern(null, "init-rev"), Symbol.intern(null, "acked-rev"), Symbol.intern(null, "acked-state"), Symbol.intern(null, "invalidate-ids"), Symbol.intern(null, "undo-history"), 
          Symbol.intern(null, "end-points"), Symbol.intern(null, "diff-trees"), Symbol.intern(null, "materialize"), Symbol.intern(null, "on-update"), Symbol.intern(null, "on-init"), Symbol.intern(null, "on-close"), Symbol.intern(null, "on-join"), Symbol.intern(null, "on-leave"), Symbol.intern(null, "reentry-guard"), Symbol.intern(null, "consistent-model-transition"), 
          Symbol.intern(null, "event-handlers"), Symbol.intern(null, "wait?"), Symbol.intern(null, "visited-fn"), Symbol.intern(null, "domModifiers"), Symbol.intern(null, "dom-poll-interval-ms"), Symbol.intern(null, "selection"), Symbol.intern(null, "telepointer-ctx") }); }
  
  public static end-point create(IPersistentMap paramIPersistentMap) {
    Object object1 = paramIPersistentMap.valAt(Keyword.intern("id"), null);
    paramIPersistentMap = paramIPersistentMap.without(Keyword.intern("id"));
    Object object2 = paramIPersistentMap.valAt(Keyword.intern("events-in"), null);
    paramIPersistentMap = paramIPersistentMap.without(Keyword.intern("events-in"));
    Object object3 = paramIPersistentMap.valAt(Keyword.intern("tree"), null);
    paramIPersistentMap = paramIPersistentMap.without(Keyword.intern("tree"));
    Object object4 = paramIPersistentMap.valAt(Keyword.intern("sequence"), null);
    paramIPersistentMap = paramIPersistentMap.without(Keyword.intern("sequence"));
    Object object5 = paramIPersistentMap.valAt(Keyword.intern("connection"), null);
    paramIPersistentMap = paramIPersistentMap.without(Keyword.intern("connection"));
    Object object6 = paramIPersistentMap.valAt(Keyword.intern("tr-state"), null);
    paramIPersistentMap = paramIPersistentMap.without(Keyword.intern("tr-state"));
    Object object7 = paramIPersistentMap.valAt(Keyword.intern("ping-interval-ms"), null);
    paramIPersistentMap = paramIPersistentMap.without(Keyword.intern("ping-interval-ms"));
    Object object8 = paramIPersistentMap.valAt(Keyword.intern("pong-timeout-ms"), null);
    paramIPersistentMap = paramIPersistentMap.without(Keyword.intern("pong-timeout-ms"));
    Object object9 = paramIPersistentMap.valAt(Keyword.intern("request-timeout-ms"), null);
    paramIPersistentMap = paramIPersistentMap.without(Keyword.intern("request-timeout-ms"));
    Object object10 = paramIPersistentMap.valAt(Keyword.intern("pong-timeout"), null);
    paramIPersistentMap = paramIPersistentMap.without(Keyword.intern("pong-timeout"));
    Object object11 = paramIPersistentMap.valAt(Keyword.intern("receive-buffer"), null);
    paramIPersistentMap = paramIPersistentMap.without(Keyword.intern("receive-buffer"));
    Object object12 = paramIPersistentMap.valAt(Keyword.intern("receive-buffer-flush-promise"), null);
    paramIPersistentMap = paramIPersistentMap.without(Keyword.intern("receive-buffer-flush-promise"));
    Object object13 = paramIPersistentMap.valAt(Keyword.intern("receive-buffer-flush-timeout-ms"), null);
    paramIPersistentMap = paramIPersistentMap.without(Keyword.intern("receive-buffer-flush-timeout-ms"));
    Object object14 = paramIPersistentMap.valAt(Keyword.intern("init-done"), null);
    paramIPersistentMap = paramIPersistentMap.without(Keyword.intern("init-done"));
    Object object15 = paramIPersistentMap.valAt(Keyword.intern("bound-tree"), null);
    paramIPersistentMap = paramIPersistentMap.without(Keyword.intern("bound-tree"));
    Object object16 = paramIPersistentMap.valAt(Keyword.intern("init-rev"), null);
    paramIPersistentMap = paramIPersistentMap.without(Keyword.intern("init-rev"));
    Object object17 = paramIPersistentMap.valAt(Keyword.intern("acked-rev"), null);
    paramIPersistentMap = paramIPersistentMap.without(Keyword.intern("acked-rev"));
    Object object18 = paramIPersistentMap.valAt(Keyword.intern("acked-state"), null);
    paramIPersistentMap = paramIPersistentMap.without(Keyword.intern("acked-state"));
    Object object19 = paramIPersistentMap.valAt(Keyword.intern("invalidate-ids"), null);
    paramIPersistentMap = paramIPersistentMap.without(Keyword.intern("invalidate-ids"));
    Object object20 = paramIPersistentMap.valAt(Keyword.intern("undo-history"), null);
    paramIPersistentMap = paramIPersistentMap.without(Keyword.intern("undo-history"));
    Object object21 = paramIPersistentMap.valAt(Keyword.intern("end-points"), null);
    paramIPersistentMap = paramIPersistentMap.without(Keyword.intern("end-points"));
    Object object22 = paramIPersistentMap.valAt(Keyword.intern("diff-trees"), null);
    paramIPersistentMap = paramIPersistentMap.without(Keyword.intern("diff-trees"));
    Object object23 = paramIPersistentMap.valAt(Keyword.intern("materialize"), null);
    paramIPersistentMap = paramIPersistentMap.without(Keyword.intern("materialize"));
    Object object24 = paramIPersistentMap.valAt(Keyword.intern("on-update"), null);
    paramIPersistentMap = paramIPersistentMap.without(Keyword.intern("on-update"));
    Object object25 = paramIPersistentMap.valAt(Keyword.intern("on-init"), null);
    paramIPersistentMap = paramIPersistentMap.without(Keyword.intern("on-init"));
    Object object26 = paramIPersistentMap.valAt(Keyword.intern("on-close"), null);
    paramIPersistentMap = paramIPersistentMap.without(Keyword.intern("on-close"));
    Object object27 = paramIPersistentMap.valAt(Keyword.intern("on-join"), null);
    paramIPersistentMap = paramIPersistentMap.without(Keyword.intern("on-join"));
    Object object28 = paramIPersistentMap.valAt(Keyword.intern("on-leave"), null);
    paramIPersistentMap = paramIPersistentMap.without(Keyword.intern("on-leave"));
    Object object29 = paramIPersistentMap.valAt(Keyword.intern("reentry-guard"), null);
    paramIPersistentMap = paramIPersistentMap.without(Keyword.intern("reentry-guard"));
    Object object30 = paramIPersistentMap.valAt(Keyword.intern("consistent-model-transition"), null);
    paramIPersistentMap = paramIPersistentMap.without(Keyword.intern("consistent-model-transition"));
    Object object31 = paramIPersistentMap.valAt(Keyword.intern("event-handlers"), null);
    paramIPersistentMap = paramIPersistentMap.without(Keyword.intern("event-handlers"));
    Object object32 = paramIPersistentMap.valAt(Keyword.intern("wait?"), null);
    paramIPersistentMap = paramIPersistentMap.without(Keyword.intern("wait?"));
    Object object33 = paramIPersistentMap.valAt(Keyword.intern("visited-fn"), null);
    paramIPersistentMap = paramIPersistentMap.without(Keyword.intern("visited-fn"));
    Object object34 = paramIPersistentMap.valAt(Keyword.intern("domModifiers"), null);
    paramIPersistentMap = paramIPersistentMap.without(Keyword.intern("domModifiers"));
    Object object35 = paramIPersistentMap.valAt(Keyword.intern("dom-poll-interval-ms"), null);
    paramIPersistentMap = paramIPersistentMap.without(Keyword.intern("dom-poll-interval-ms"));
    Object object36 = paramIPersistentMap.valAt(Keyword.intern("selection"), null);
    paramIPersistentMap = paramIPersistentMap.without(Keyword.intern("selection"));
    Object object37 = paramIPersistentMap.valAt(Keyword.intern("telepointer-ctx"), null);
    paramIPersistentMap = paramIPersistentMap.without(Keyword.intern("telepointer-ctx"));
    return new end-point(object1, object2, object3, object4, object5, object6, object7, object8, object9, object10, object11, object12, object13, object14, object15, object16, object17, object18, object19, object20, object21, object22, object23, object24, object25, object26, object27, object28, object29, object30, object31, object32, object33, object34, object35, object36, object37, null, RT.seqOrElse(paramIPersistentMap), 0, 0);
  }
  
  public int hasheq() {
    int hq__7768__auto__65979 = this.__hasheq, h__7769__auto__65978 = RT.intCast(0xFFFFFFFFB8083C43L ^ APersistentMap.mapHasheq((IPersistentMap)this));
    this.__hasheq = h__7769__auto__65978;
    return (hq__7768__auto__65979 == 0L) ? h__7769__auto__65978 : hq__7768__auto__65979;
  }
  
  public int hashCode() {
    int hash__7771__auto__65981 = this.__hash, h__7772__auto__65980 = APersistentMap.mapHash((IPersistentMap)this);
    this.__hash = h__7772__auto__65980;
    return (hash__7771__auto__65981 == 0L) ? h__7772__auto__65980 : hash__7771__auto__65981;
  }
  
  public boolean equals(Object G__65897) { G__65897 = null;
    return APersistentMap.mapEquals((IPersistentMap)this, G__65897); }
  
  public IPersistentMap meta() { return (IPersistentMap)this.__meta; }
  
  public IObj withMeta(IPersistentMap G__65897) { G__65897 = null;
    return (IObj)new end-point(this.id, this.events_in, this.tree, this.sequence, this.connection, this.tr_state, this.ping_interval_ms, this.pong_timeout_ms, this.request_timeout_ms, this.pong_timeout, this.receive_buffer, this.receive_buffer_flush_promise, this.receive_buffer_flush_timeout_ms, this.init_done, this.bound_tree, this.init_rev, this.acked_rev, this.acked_state, this.invalidate_ids, this.undo_history, this.end_points, this.diff_trees, this.materialize, this.on_update, this.on_init, this.on_close, this.on_join, this.on_leave, this.reentry_guard, this.consistent_model_transition, this.event_handlers, this.wait_QMARK_, this.visited_fn, this.domModifiers, this.dom_poll_interval_ms, this.selection, this.telepointer_ctx, G__65897, this.__extmap, this.__hash, this.__hasheq); }
  
  public Object valAt(Object k__7777__auto__) { k__7777__auto__ = null;
    return ((ILookup)this).valAt(k__7777__auto__, null); }
  
  public Object valAt(Object k__7779__auto__, Object else__7780__auto__) {
    Object G__65976 = k__7779__auto__;
    switch (Util.hash(G__65976) >> 5 & 0xFF) {
      case 2:
        if (G__65976 == const__19);
        break;
      case 4:
        if (G__65976 == const__9);
        break;
      case 5:
        if (G__65976 == const__42);
        break;
      case 6:
        if (G__65976 == const__18);
        break;
      case 9:
        if (G__65976 == const__14);
        break;
      case 17:
        if (G__65976 == const__10);
        break;
      case 18:
        if (G__65976 == const__40);
        break;
      case 25:
        if (G__65976 == const__25);
        break;
      case 30:
        if (G__65976 == const__13);
        break;
      case 59:
        if (G__65976 == const__12);
        break;
      case 62:
        if (G__65976 == const__38);
        break;
      case 63:
        if (G__65976 == const__41);
        break;
      case 64:
        if (G__65976 == const__28);
        break;
      case 66:
        if (G__65976 == const__29);
        break;
      case 68:
        if (G__65976 == const__33);
        break;
      case 74:
        if (G__65976 == const__22);
        break;
      case 75:
        if (G__65976 == const__20);
        break;
      case 76:
        if (G__65976 == const__16);
        break;
      case 79:
        if (G__65976 == const__31);
        break;
      case 81:
        if (G__65976 == const__39);
        break;
      case 93:
        if (G__65976 == const__23);
        break;
      case 101:
        if (G__65976 == const__15);
        break;
      case 107:
        if (G__65976 == const__36);
        break;
      case 114:
        if (G__65976 == const__35);
        break;
      case 117:
        if (G__65976 == const__8);
        break;
      case 132:
        if (G__65976 == const__24);
        break;
      case 140:
        if (G__65976 == const__30);
        break;
      case 146:
        if (G__65976 == const__11);
        break;
      case 150:
        if (G__65976 == const__44);
        break;
      case 170:
        if (G__65976 == const__26);
        break;
      case 198:
        if (G__65976 == const__17);
        break;
      case 203:
        if (G__65976 == const__27);
        break;
      case 208:
        if (G__65976 == const__21);
        break;
      case 215:
        if (G__65976 == const__32);
        break;
      case 228:
        if (G__65976 == const__43);
        break;
      case 242:
        if (G__65976 == const__37);
        break;
      case 249:
        if (G__65976 == const__34);
        break;
    } 
    k__7779__auto__ = null;
    else__7780__auto__ = null;
    this = null;
    return RT.get(this.__extmap, k__7779__auto__, else__7780__auto__);
  }
  
  public ILookupThunk getLookupThunk(Keyword k__7782__auto__) {
    Object gclass = ((IFn)const__56.getRawRoot()).invoke(this), G__65901 = k__7782__auto__ = null;
    switch (Util.hash(G__65901) >> 5 & 0xFF) {
      case 2:
        if (G__65901 == const__19)
          gclass = null; 
        break;
      case 4:
        if (G__65901 == const__9)
          gclass = null; 
        break;
      case 5:
        if (G__65901 == const__42)
          gclass = null; 
        break;
      case 6:
        if (G__65901 == const__18)
          gclass = null; 
        break;
      case 9:
        if (G__65901 == const__14)
          gclass = null; 
        break;
      case 17:
        if (G__65901 == const__10)
          gclass = null; 
        break;
      case 18:
        if (G__65901 == const__40)
          gclass = null; 
        break;
      case 25:
        if (G__65901 == const__25)
          gclass = null; 
        break;
      case 30:
        if (G__65901 == const__13)
          gclass = null; 
        break;
      case 59:
        if (G__65901 == const__12)
          gclass = null; 
        break;
      case 62:
        if (G__65901 == const__38)
          gclass = null; 
        break;
      case 63:
        if (G__65901 == const__41)
          gclass = null; 
        break;
      case 64:
        if (G__65901 == const__28)
          gclass = null; 
        break;
      case 66:
        if (G__65901 == const__29)
          gclass = null; 
        break;
      case 68:
        if (G__65901 == const__33)
          gclass = null; 
        break;
      case 74:
        if (G__65901 == const__22)
          gclass = null; 
        break;
      case 75:
        if (G__65901 == const__20)
          gclass = null; 
        break;
      case 76:
        if (G__65901 == const__16)
          gclass = null; 
        break;
      case 79:
        if (G__65901 == const__31)
          gclass = null; 
        break;
      case 81:
        if (G__65901 == const__39)
          gclass = null; 
        break;
      case 93:
        if (G__65901 == const__23)
          gclass = null; 
        break;
      case 101:
        if (G__65901 == const__15)
          gclass = null; 
        break;
      case 107:
        if (G__65901 == const__36)
          gclass = null; 
        break;
      case 114:
        if (G__65901 == const__35)
          gclass = null; 
        break;
      case 117:
        if (G__65901 == const__8)
          gclass = null; 
        break;
      case 132:
        if (G__65901 == const__24)
          gclass = null; 
        break;
      case 140:
        if (G__65901 == const__30)
          gclass = null; 
        break;
      case 146:
        if (G__65901 == const__11)
          gclass = null; 
        break;
      case 150:
        if (G__65901 == const__44)
          gclass = null; 
        break;
      case 170:
        if (G__65901 == const__26)
          gclass = null; 
        break;
      case 198:
        if (G__65901 == const__17)
          gclass = null; 
        break;
      case 203:
        if (G__65901 == const__27)
          gclass = null; 
        break;
      case 208:
        if (G__65901 == const__21)
          gclass = null; 
        break;
      case 215:
        if (G__65901 == const__32)
          gclass = null; 
        break;
      case 228:
        if (G__65901 == const__43)
          gclass = null; 
        break;
      case 242:
        if (G__65901 == const__37)
          gclass = null; 
        break;
      case 249:
        if (G__65901 == const__34)
          gclass = null; 
        break;
    } 
    return (ILookupThunk)null;
  }
  
  public int count() { return RT.intCast(Numbers.add(37L, RT.count(this.__extmap))); }
  
  public IPersistentCollection empty() { throw (Throwable)new UnsupportedOperationException((String)((IFn)const__58.getRawRoot()).invoke("Can't create empty: ", "synchrony.sync.end_point.end-point")); }
  
  public IPersistentCollection cons(Object e__7786__auto__) { e__7786__auto__ = null;
    this = null;
    return (IPersistentCollection)((IFn)const__57).invoke(this, e__7786__auto__); }
  
  public boolean equiv(Object G__65897) {
    boolean or__5516__auto__66019 = Util.identical(this, G__65897);
    Object G__65897 = G__65897 = null;
    boolean and__5514__auto__66018 = Util.equiv(this.id, ((end-point)G__65897).id), and__5514__auto__66017 = Util.equiv(this.events_in, ((end-point)G__65897).events_in), and__5514__auto__66016 = Util.equiv(this.tree, ((end-point)G__65897).tree), and__5514__auto__66015 = Util.equiv(this.sequence, ((end-point)G__65897).sequence), and__5514__auto__66014 = Util.equiv(this.connection, ((end-point)G__65897).connection), and__5514__auto__66013 = Util.equiv(this.tr_state, ((end-point)G__65897).tr_state), and__5514__auto__66012 = Util.equiv(this.ping_interval_ms, ((end-point)G__65897).ping_interval_ms), and__5514__auto__66011 = Util.equiv(this.pong_timeout_ms, ((end-point)G__65897).pong_timeout_ms), and__5514__auto__66010 = Util.equiv(this.request_timeout_ms, ((end-point)G__65897).request_timeout_ms), and__5514__auto__66009 = Util.equiv(this.pong_timeout, ((end-point)G__65897).pong_timeout), and__5514__auto__66008 = Util.equiv(this.receive_buffer, ((end-point)G__65897).receive_buffer), and__5514__auto__66007 = Util.equiv(this.receive_buffer_flush_promise, ((end-point)G__65897).receive_buffer_flush_promise), and__5514__auto__66006 = Util.equiv(this.receive_buffer_flush_timeout_ms, ((end-point)G__65897).receive_buffer_flush_timeout_ms), and__5514__auto__66005 = Util.equiv(this.init_done, ((end-point)G__65897).init_done), and__5514__auto__66004 = Util.equiv(this.bound_tree, ((end-point)G__65897).bound_tree), and__5514__auto__66003 = Util.equiv(this.init_rev, ((end-point)G__65897).init_rev), and__5514__auto__66002 = Util.equiv(this.acked_rev, ((end-point)G__65897).acked_rev), and__5514__auto__66001 = Util.equiv(this.acked_state, ((end-point)G__65897).acked_state), and__5514__auto__66000 = Util.equiv(this.invalidate_ids, ((end-point)G__65897).invalidate_ids), and__5514__auto__65999 = Util.equiv(this.undo_history, ((end-point)G__65897).undo_history), and__5514__auto__65998 = Util.equiv(this.end_points, ((end-point)G__65897).end_points), and__5514__auto__65997 = Util.equiv(this.diff_trees, ((end-point)G__65897).diff_trees), and__5514__auto__65996 = Util.equiv(this.materialize, ((end-point)G__65897).materialize), and__5514__auto__65995 = Util.equiv(this.on_update, ((end-point)G__65897).on_update), and__5514__auto__65994 = Util.equiv(this.on_init, ((end-point)G__65897).on_init), and__5514__auto__65993 = Util.equiv(this.on_close, ((end-point)G__65897).on_close), and__5514__auto__65992 = Util.equiv(this.on_join, ((end-point)G__65897).on_join), and__5514__auto__65991 = Util.equiv(this.on_leave, ((end-point)G__65897).on_leave), and__5514__auto__65990 = Util.equiv(this.reentry_guard, ((end-point)G__65897).reentry_guard), and__5514__auto__65989 = Util.equiv(this.consistent_model_transition, ((end-point)G__65897).consistent_model_transition), and__5514__auto__65988 = Util.equiv(this.event_handlers, ((end-point)G__65897).event_handlers), and__5514__auto__65987 = Util.equiv(this.wait_QMARK_, ((end-point)G__65897).wait_QMARK_), and__5514__auto__65986 = Util.equiv(this.visited_fn, ((end-point)G__65897).visited_fn), and__5514__auto__65985 = Util.equiv(this.domModifiers, ((end-point)G__65897).domModifiers), and__5514__auto__65984 = Util.equiv(this.dom_poll_interval_ms, ((end-point)G__65897).dom_poll_interval_ms), and__5514__auto__65983 = Util.equiv(this.selection, ((end-point)G__65897).selection), and__5514__auto__65982 = Util.equiv(this.telepointer_ctx, ((end-point)G__65897).telepointer_ctx);
    G__65897 = null;
    return RT.booleanCast(or__5516__auto__66019 ? (or__5516__auto__66019 ? Boolean.TRUE : Boolean.FALSE) : (Util.identical(((IFn)const__56.getRawRoot()).invoke(this), ((IFn)const__56.getRawRoot()).invoke(G__65897)) ? (and__5514__auto__66018 ? (and__5514__auto__66017 ? (and__5514__auto__66016 ? (and__5514__auto__66015 ? (and__5514__auto__66014 ? (and__5514__auto__66013 ? (and__5514__auto__66012 ? (and__5514__auto__66011 ? (and__5514__auto__66010 ? (and__5514__auto__66009 ? (and__5514__auto__66008 ? (and__5514__auto__66007 ? (and__5514__auto__66006 ? (and__5514__auto__66005 ? (and__5514__auto__66004 ? (and__5514__auto__66003 ? (and__5514__auto__66002 ? (and__5514__auto__66001 ? (and__5514__auto__66000 ? (and__5514__auto__65999 ? (and__5514__auto__65998 ? (and__5514__auto__65997 ? (and__5514__auto__65996 ? (and__5514__auto__65995 ? (and__5514__auto__65994 ? (and__5514__auto__65993 ? (and__5514__auto__65992 ? (and__5514__auto__65991 ? (and__5514__auto__65990 ? (and__5514__auto__65989 ? (and__5514__auto__65988 ? (and__5514__auto__65987 ? (and__5514__auto__65986 ? (and__5514__auto__65985 ? (and__5514__auto__65984 ? (and__5514__auto__65983 ? (and__5514__auto__65982 ? (Util.equiv(this.__extmap, ((end-point)G__65897).__extmap) ? Boolean.TRUE : Boolean.FALSE) : (and__5514__auto__65982 ? Boolean.TRUE : Boolean.FALSE)) : (and__5514__auto__65983 ? Boolean.TRUE : Boolean.FALSE)) : (and__5514__auto__65984 ? Boolean.TRUE : Boolean.FALSE)) : (and__5514__auto__65985 ? Boolean.TRUE : Boolean.FALSE)) : (and__5514__auto__65986 ? Boolean.TRUE : Boolean.FALSE)) : (and__5514__auto__65987 ? Boolean.TRUE : Boolean.FALSE)) : (and__5514__auto__65988 ? Boolean.TRUE : Boolean.FALSE)) : (and__5514__auto__65989 ? Boolean.TRUE : Boolean.FALSE)) : (and__5514__auto__65990 ? Boolean.TRUE : Boolean.FALSE)) : (and__5514__auto__65991 ? Boolean.TRUE : Boolean.FALSE)) : (and__5514__auto__65992 ? Boolean.TRUE : Boolean.FALSE)) : (and__5514__auto__65993 ? Boolean.TRUE : Boolean.FALSE)) : (and__5514__auto__65994 ? Boolean.TRUE : Boolean.FALSE)) : (and__5514__auto__65995 ? Boolean.TRUE : Boolean.FALSE)) : (and__5514__auto__65996 ? Boolean.TRUE : Boolean.FALSE)) : (and__5514__auto__65997 ? Boolean.TRUE : Boolean.FALSE)) : (and__5514__auto__65998 ? Boolean.TRUE : Boolean.FALSE)) : (and__5514__auto__65999 ? Boolean.TRUE : Boolean.FALSE)) : (and__5514__auto__66000 ? Boolean.TRUE : Boolean.FALSE)) : (and__5514__auto__66001 ? Boolean.TRUE : Boolean.FALSE)) : (and__5514__auto__66002 ? Boolean.TRUE : Boolean.FALSE)) : (and__5514__auto__66003 ? Boolean.TRUE : Boolean.FALSE)) : (and__5514__auto__66004 ? Boolean.TRUE : Boolean.FALSE)) : (and__5514__auto__66005 ? Boolean.TRUE : Boolean.FALSE)) : (and__5514__auto__66006 ? Boolean.TRUE : Boolean.FALSE)) : (and__5514__auto__66007 ? Boolean.TRUE : Boolean.FALSE)) : (and__5514__auto__66008 ? Boolean.TRUE : Boolean.FALSE)) : (and__5514__auto__66009 ? Boolean.TRUE : Boolean.FALSE)) : (and__5514__auto__66010 ? Boolean.TRUE : Boolean.FALSE)) : (and__5514__auto__66011 ? Boolean.TRUE : Boolean.FALSE)) : (and__5514__auto__66012 ? Boolean.TRUE : Boolean.FALSE)) : (and__5514__auto__66013 ? Boolean.TRUE : Boolean.FALSE)) : (and__5514__auto__66014 ? Boolean.TRUE : Boolean.FALSE)) : (and__5514__auto__66015 ? Boolean.TRUE : Boolean.FALSE)) : (and__5514__auto__66016 ? Boolean.TRUE : Boolean.FALSE)) : (and__5514__auto__66017 ? Boolean.TRUE : Boolean.FALSE)) : (and__5514__auto__66018 ? Boolean.TRUE : Boolean.FALSE)) : null));
  }
  
  public boolean containsKey(Object k__7789__auto__) { k__7789__auto__ = null;
    this = null;
    return ((Boolean)((IFn)const__55.getRawRoot()).invoke(Util.identical(this, ((ILookup)this).valAt(k__7789__auto__, this)) ? Boolean.TRUE : Boolean.FALSE)).booleanValue(); }
  
  public IMapEntry entryAt(Object k__7791__auto__) {
    Object v__7792__auto__66020 = ((ILookup)this).valAt(k__7791__auto__, this);
    k__7791__auto__ = null;
    v__7792__auto__66020 = null;
    this = null;
    return (IMapEntry)(Util.identical(this, v__7792__auto__66020) ? null : MapEntry.create(k__7791__auto__, v__7792__auto__66020));
  }
  
  public ISeq seq() { this = null;
    return (ISeq)((IFn)const__53.getRawRoot()).invoke(((IFn)const__54.getRawRoot()).invoke(RT.vector(new Object[] { 
              MapEntry.create(const__29, this.id), MapEntry.create(const__9, this.events_in), MapEntry.create(const__12, this.tree), MapEntry.create(const__31, this.sequence), MapEntry.create(const__41, this.connection), MapEntry.create(const__33, this.tr_state), MapEntry.create(const__36, this.ping_interval_ms), MapEntry.create(const__35, this.pong_timeout_ms), MapEntry.create(const__18, this.request_timeout_ms), MapEntry.create(const__21, this.pong_timeout), 
              MapEntry.create(const__20, this.receive_buffer), MapEntry.create(const__15, this.receive_buffer_flush_promise), MapEntry.create(const__14, this.receive_buffer_flush_timeout_ms), MapEntry.create(const__38, this.init_done), MapEntry.create(const__44, this.bound_tree), MapEntry.create(const__27, this.init_rev), MapEntry.create(const__25, this.acked_rev), MapEntry.create(const__10, this.acked_state), MapEntry.create(const__13, this.invalidate_ids), MapEntry.create(const__17, this.undo_history), 
              MapEntry.create(const__34, this.end_points), MapEntry.create(const__30, this.diff_trees), MapEntry.create(const__28, this.materialize), MapEntry.create(const__24, this.on_update), MapEntry.create(const__39, this.on_init), MapEntry.create(const__16, this.on_close), MapEntry.create(const__37, this.on_join), MapEntry.create(const__23, this.on_leave), MapEntry.create(const__19, this.reentry_guard), MapEntry.create(const__26, this.consistent_model_transition), 
              MapEntry.create(const__8, this.event_handlers), MapEntry.create(const__42, this.wait_QMARK_), MapEntry.create(const__32, this.visited_fn), MapEntry.create(const__43, this.domModifiers), MapEntry.create(const__22, this.dom_poll_interval_ms), MapEntry.create(const__40, this.selection), MapEntry.create(const__11, this.telepointer_ctx) }), this.__extmap)); }
  
  public Iterator iterator() { return (Iterator)new RecordIterator((ILookup)this, (IPersistentVector)const__52, (Iterator)RT.iter(this.__extmap)); }
  
  public IPersistentMap assoc(Object k__7796__auto__, Object G__65897) {
    Object pred__65899 = const__50.getRawRoot(), expr__65900 = k__7796__auto__;
    if (((IFn)pred__65899).invoke(const__29, expr__65900) != null) {
      if (((IFn)pred__65899).invoke(const__29, expr__65900) != Boolean.FALSE)
        G__65897 = null; 
    } else {
      ((IFn)pred__65899).invoke(const__29, expr__65900);
    } 
    if (((IFn)pred__65899).invoke(const__9, expr__65900) != null) {
      if (((IFn)pred__65899).invoke(const__9, expr__65900) != Boolean.FALSE)
        G__65897 = null; 
    } else {
      ((IFn)pred__65899).invoke(const__9, expr__65900);
    } 
    if (((IFn)pred__65899).invoke(const__12, expr__65900) != null) {
      if (((IFn)pred__65899).invoke(const__12, expr__65900) != Boolean.FALSE)
        G__65897 = null; 
    } else {
      ((IFn)pred__65899).invoke(const__12, expr__65900);
    } 
    if (((IFn)pred__65899).invoke(const__31, expr__65900) != null) {
      if (((IFn)pred__65899).invoke(const__31, expr__65900) != Boolean.FALSE)
        G__65897 = null; 
    } else {
      ((IFn)pred__65899).invoke(const__31, expr__65900);
    } 
    if (((IFn)pred__65899).invoke(const__41, expr__65900) != null) {
      if (((IFn)pred__65899).invoke(const__41, expr__65900) != Boolean.FALSE)
        G__65897 = null; 
    } else {
      ((IFn)pred__65899).invoke(const__41, expr__65900);
    } 
    if (((IFn)pred__65899).invoke(const__33, expr__65900) != null) {
      if (((IFn)pred__65899).invoke(const__33, expr__65900) != Boolean.FALSE)
        G__65897 = null; 
    } else {
      ((IFn)pred__65899).invoke(const__33, expr__65900);
    } 
    if (((IFn)pred__65899).invoke(const__36, expr__65900) != null) {
      if (((IFn)pred__65899).invoke(const__36, expr__65900) != Boolean.FALSE)
        G__65897 = null; 
    } else {
      ((IFn)pred__65899).invoke(const__36, expr__65900);
    } 
    if (((IFn)pred__65899).invoke(const__35, expr__65900) != null) {
      if (((IFn)pred__65899).invoke(const__35, expr__65900) != Boolean.FALSE)
        G__65897 = null; 
    } else {
      ((IFn)pred__65899).invoke(const__35, expr__65900);
    } 
    if (((IFn)pred__65899).invoke(const__18, expr__65900) != null) {
      if (((IFn)pred__65899).invoke(const__18, expr__65900) != Boolean.FALSE)
        G__65897 = null; 
    } else {
      ((IFn)pred__65899).invoke(const__18, expr__65900);
    } 
    if (((IFn)pred__65899).invoke(const__21, expr__65900) != null) {
      if (((IFn)pred__65899).invoke(const__21, expr__65900) != Boolean.FALSE)
        G__65897 = null; 
    } else {
      ((IFn)pred__65899).invoke(const__21, expr__65900);
    } 
    if (((IFn)pred__65899).invoke(const__20, expr__65900) != null) {
      if (((IFn)pred__65899).invoke(const__20, expr__65900) != Boolean.FALSE)
        G__65897 = null; 
    } else {
      ((IFn)pred__65899).invoke(const__20, expr__65900);
    } 
    if (((IFn)pred__65899).invoke(const__15, expr__65900) != null) {
      if (((IFn)pred__65899).invoke(const__15, expr__65900) != Boolean.FALSE)
        G__65897 = null; 
    } else {
      ((IFn)pred__65899).invoke(const__15, expr__65900);
    } 
    if (((IFn)pred__65899).invoke(const__14, expr__65900) != null) {
      if (((IFn)pred__65899).invoke(const__14, expr__65900) != Boolean.FALSE)
        G__65897 = null; 
    } else {
      ((IFn)pred__65899).invoke(const__14, expr__65900);
    } 
    if (((IFn)pred__65899).invoke(const__38, expr__65900) != null) {
      if (((IFn)pred__65899).invoke(const__38, expr__65900) != Boolean.FALSE)
        G__65897 = null; 
    } else {
      ((IFn)pred__65899).invoke(const__38, expr__65900);
    } 
    if (((IFn)pred__65899).invoke(const__44, expr__65900) != null) {
      if (((IFn)pred__65899).invoke(const__44, expr__65900) != Boolean.FALSE)
        G__65897 = null; 
    } else {
      ((IFn)pred__65899).invoke(const__44, expr__65900);
    } 
    if (((IFn)pred__65899).invoke(const__27, expr__65900) != null) {
      if (((IFn)pred__65899).invoke(const__27, expr__65900) != Boolean.FALSE)
        G__65897 = null; 
    } else {
      ((IFn)pred__65899).invoke(const__27, expr__65900);
    } 
    if (((IFn)pred__65899).invoke(const__25, expr__65900) != null) {
      if (((IFn)pred__65899).invoke(const__25, expr__65900) != Boolean.FALSE)
        G__65897 = null; 
    } else {
      ((IFn)pred__65899).invoke(const__25, expr__65900);
    } 
    if (((IFn)pred__65899).invoke(const__10, expr__65900) != null) {
      if (((IFn)pred__65899).invoke(const__10, expr__65900) != Boolean.FALSE)
        G__65897 = null; 
    } else {
      ((IFn)pred__65899).invoke(const__10, expr__65900);
    } 
    if (((IFn)pred__65899).invoke(const__13, expr__65900) != null) {
      if (((IFn)pred__65899).invoke(const__13, expr__65900) != Boolean.FALSE)
        G__65897 = null; 
    } else {
      ((IFn)pred__65899).invoke(const__13, expr__65900);
    } 
    if (((IFn)pred__65899).invoke(const__17, expr__65900) != null) {
      if (((IFn)pred__65899).invoke(const__17, expr__65900) != Boolean.FALSE)
        G__65897 = null; 
    } else {
      ((IFn)pred__65899).invoke(const__17, expr__65900);
    } 
    if (((IFn)pred__65899).invoke(const__34, expr__65900) != null) {
      if (((IFn)pred__65899).invoke(const__34, expr__65900) != Boolean.FALSE)
        G__65897 = null; 
    } else {
      ((IFn)pred__65899).invoke(const__34, expr__65900);
    } 
    if (((IFn)pred__65899).invoke(const__30, expr__65900) != null) {
      if (((IFn)pred__65899).invoke(const__30, expr__65900) != Boolean.FALSE)
        G__65897 = null; 
    } else {
      ((IFn)pred__65899).invoke(const__30, expr__65900);
    } 
    if (((IFn)pred__65899).invoke(const__28, expr__65900) != null) {
      if (((IFn)pred__65899).invoke(const__28, expr__65900) != Boolean.FALSE)
        G__65897 = null; 
    } else {
      ((IFn)pred__65899).invoke(const__28, expr__65900);
    } 
    if (((IFn)pred__65899).invoke(const__24, expr__65900) != null) {
      if (((IFn)pred__65899).invoke(const__24, expr__65900) != Boolean.FALSE)
        G__65897 = null; 
    } else {
      ((IFn)pred__65899).invoke(const__24, expr__65900);
    } 
    if (((IFn)pred__65899).invoke(const__39, expr__65900) != null) {
      if (((IFn)pred__65899).invoke(const__39, expr__65900) != Boolean.FALSE)
        G__65897 = null; 
    } else {
      ((IFn)pred__65899).invoke(const__39, expr__65900);
    } 
    if (((IFn)pred__65899).invoke(const__16, expr__65900) != null) {
      if (((IFn)pred__65899).invoke(const__16, expr__65900) != Boolean.FALSE)
        G__65897 = null; 
    } else {
      ((IFn)pred__65899).invoke(const__16, expr__65900);
    } 
    if (((IFn)pred__65899).invoke(const__37, expr__65900) != null) {
      if (((IFn)pred__65899).invoke(const__37, expr__65900) != Boolean.FALSE)
        G__65897 = null; 
    } else {
      ((IFn)pred__65899).invoke(const__37, expr__65900);
    } 
    if (((IFn)pred__65899).invoke(const__23, expr__65900) != null) {
      if (((IFn)pred__65899).invoke(const__23, expr__65900) != Boolean.FALSE)
        G__65897 = null; 
    } else {
      ((IFn)pred__65899).invoke(const__23, expr__65900);
    } 
    if (((IFn)pred__65899).invoke(const__19, expr__65900) != null) {
      if (((IFn)pred__65899).invoke(const__19, expr__65900) != Boolean.FALSE)
        G__65897 = null; 
    } else {
      ((IFn)pred__65899).invoke(const__19, expr__65900);
    } 
    if (((IFn)pred__65899).invoke(const__26, expr__65900) != null) {
      if (((IFn)pred__65899).invoke(const__26, expr__65900) != Boolean.FALSE)
        G__65897 = null; 
    } else {
      ((IFn)pred__65899).invoke(const__26, expr__65900);
    } 
    if (((IFn)pred__65899).invoke(const__8, expr__65900) != null) {
      if (((IFn)pred__65899).invoke(const__8, expr__65900) != Boolean.FALSE)
        G__65897 = null; 
    } else {
      ((IFn)pred__65899).invoke(const__8, expr__65900);
    } 
    if (((IFn)pred__65899).invoke(const__42, expr__65900) != null) {
      if (((IFn)pred__65899).invoke(const__42, expr__65900) != Boolean.FALSE)
        G__65897 = null; 
    } else {
      ((IFn)pred__65899).invoke(const__42, expr__65900);
    } 
    if (((IFn)pred__65899).invoke(const__32, expr__65900) != null) {
      if (((IFn)pred__65899).invoke(const__32, expr__65900) != Boolean.FALSE)
        G__65897 = null; 
    } else {
      ((IFn)pred__65899).invoke(const__32, expr__65900);
    } 
    if (((IFn)pred__65899).invoke(const__43, expr__65900) != null) {
      if (((IFn)pred__65899).invoke(const__43, expr__65900) != Boolean.FALSE)
        G__65897 = null; 
    } else {
      ((IFn)pred__65899).invoke(const__43, expr__65900);
    } 
    if (((IFn)pred__65899).invoke(const__22, expr__65900) != null) {
      if (((IFn)pred__65899).invoke(const__22, expr__65900) != Boolean.FALSE)
        G__65897 = null; 
    } else {
      ((IFn)pred__65899).invoke(const__22, expr__65900);
    } 
    if (((IFn)pred__65899).invoke(const__40, expr__65900) != null) {
      if (((IFn)pred__65899).invoke(const__40, expr__65900) != Boolean.FALSE)
        G__65897 = null; 
    } else {
      ((IFn)pred__65899).invoke(const__40, expr__65900);
    } 
    pred__65899 = null;
    expr__65900 = null;
    if (((IFn)pred__65899).invoke(const__11, expr__65900) != null) {
      if (((IFn)pred__65899).invoke(const__11, expr__65900) != Boolean.FALSE)
        G__65897 = null; 
    } else {
      ((IFn)pred__65899).invoke(const__11, expr__65900);
    } 
    k__7796__auto__ = null;
    G__65897 = null;
    return (IPersistentMap)new end-point(this.id, this.events_in, this.tree, this.sequence, this.connection, this.tr_state, this.ping_interval_ms, this.pong_timeout_ms, this.request_timeout_ms, this.pong_timeout, this.receive_buffer, this.receive_buffer_flush_promise, this.receive_buffer_flush_timeout_ms, this.init_done, this.bound_tree, this.init_rev, this.acked_rev, this.acked_state, this.invalidate_ids, this.undo_history, this.end_points, this.diff_trees, this.materialize, this.on_update, this.on_init, this.on_close, this.on_join, this.on_leave, this.reentry_guard, this.consistent_model_transition, this.event_handlers, this.wait_QMARK_, this.visited_fn, this.domModifiers, this.dom_poll_interval_ms, this.selection, this.telepointer_ctx, this.__meta, ((IFn)const__51.getRawRoot()).invoke(this.__extmap, k__7796__auto__, G__65897));
  }
  
  public IPersistentMap without(Object k__7798__auto__) { if (((IFn)const__7.getRawRoot()).invoke(const__45, k__7798__auto__) != null) {
      if (((IFn)const__7.getRawRoot()).invoke(const__45, k__7798__auto__) != Boolean.FALSE) {
        k__7798__auto__ = null;
        this = null;
      } 
    } else {
      ((IFn)const__7.getRawRoot()).invoke(const__45, k__7798__auto__);
    } 
    k__7798__auto__ = null;
    return (IPersistentMap)new end-point(this.id, this.events_in, this.tree, this.sequence, this.connection, this.tr_state, this.ping_interval_ms, this.pong_timeout_ms, this.request_timeout_ms, this.pong_timeout, this.receive_buffer, this.receive_buffer_flush_promise, this.receive_buffer_flush_timeout_ms, this.init_done, this.bound_tree, this.init_rev, this.acked_rev, this.acked_state, this.invalidate_ids, this.undo_history, this.end_points, this.diff_trees, this.materialize, this.on_update, this.on_init, this.on_close, this.on_join, this.on_leave, this.reentry_guard, this.consistent_model_transition, this.event_handlers, this.wait_QMARK_, this.visited_fn, this.domModifiers, this.dom_poll_interval_ms, this.selection, this.telepointer_ctx, this.__meta, ((IFn)const__49.getRawRoot()).invoke(((IFn)const__46.getRawRoot()).invoke(this.__extmap, k__7798__auto__))); }
  
  public int size() { this = null;
    return ((Counted)this).count(); }
  
  public boolean isEmpty() { return Util.equiv(0L, ((Counted)this).count()); }
  
  public boolean containsValue(Object v__7802__auto__) { v__7802__auto__ = null;
    return RT.booleanCast(((IFn)const__4.getRawRoot()).invoke(RT.set(new Object[] { v__7802__auto__ }, ), ((IFn)const__1.getRawRoot()).invoke(this))); }
  
  public Object get(Object k__7804__auto__) { k__7804__auto__ = null;
    return ((ILookup)this).valAt(k__7804__auto__); }
  
  public Object put(Object k__7806__auto__, Object v__7807__auto__) { throw (Throwable)new UnsupportedOperationException(); }
  
  public Object remove(Object k__7809__auto__) { throw (Throwable)new UnsupportedOperationException(); }
  
  public void putAll(Map m__7811__auto__) { throw (Throwable)new UnsupportedOperationException(); }
  
  public void clear() { throw (Throwable)new UnsupportedOperationException(); }
  
  public Set keySet() { this = null;
    return (Set)((IFn)const__0.getRawRoot()).invoke(((IFn)const__2.getRawRoot()).invoke(this)); }
  
  public Collection values() { this = null;
    return (Collection)((IFn)const__1.getRawRoot()).invoke(this); }
  
  public Set entrySet() { this = null;
    return (Set)((IFn)const__0.getRawRoot()).invoke(this); }
}
