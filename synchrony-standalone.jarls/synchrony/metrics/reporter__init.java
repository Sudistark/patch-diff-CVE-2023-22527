package synchrony.metrics;

import clojure.lang.AFn;
import clojure.lang.Compiler;
import clojure.lang.IObj;
import clojure.lang.IPersistentMap;
import clojure.lang.LockingTransaction;
import clojure.lang.PersistentList;
import clojure.lang.RT;
import clojure.lang.Symbol;
import clojure.lang.Tuple;
import clojure.lang.Var;
import java.util.Arrays;
import java.util.concurrent.Callable;

public class reporter__init {
  public static final Var const__0;
  
  public static final AFn const__1;
  
  public static final AFn const__2;
  
  public static final Var const__3;
  
  public static final AFn const__11;
  
  public static final Var const__12;
  
  public static final AFn const__15;
  
  public static final Var const__16;
  
  public static final AFn const__19;
  
  public static final Var const__20;
  
  public static final AFn const__23;
  
  public static final Var const__24;
  
  public static final AFn const__27;
  
  public static final Var const__28;
  
  public static final AFn const__31;
  
  public static final Var const__32;
  
  public static final AFn const__35;
  
  public static final Var const__36;
  
  public static final AFn const__39;
  
  public static final Var const__40;
  
  public static final AFn const__43;
  
  public static final Var const__44;
  
  public static final AFn const__47;
  
  public static final Var const__48;
  
  public static final AFn const__51;
  
  public static final Var const__52;
  
  public static final AFn const__55;
  
  public static final Var const__56;
  
  public static final AFn const__59;
  
  public static final Var const__60;
  
  public static final AFn const__63;
  
  public static final Var const__64;
  
  public static final AFn const__67;
  
  public static final Var const__68;
  
  public static final AFn const__71;
  
  public static final Var const__72;
  
  public static final AFn const__75;
  
  public static final Var const__76;
  
  public static final AFn const__79;
  
  public static final Var const__80;
  
  public static final AFn const__83;
  
  public static final Var const__84;
  
  public static final AFn const__87;
  
  public static final Var const__88;
  
  public static final AFn const__91;
  
  public static void load() {
    LockingTransaction.runInTransaction((Callable)new reporter.fn__24173());
    const__3.setMeta((IPersistentMap)const__11);
    const__3.bindRoot(new reporter.jvm_used_memory_bytes());
    const__12.setMeta((IPersistentMap)const__15);
    const__12.bindRoot(new reporter.jvm_direct_memory_stats());
    const__16.setMeta((IPersistentMap)const__19);
    const__16.bindRoot(new reporter.jvm_gc_stats());
    const__20.setMeta((IPersistentMap)const__23);
    const__20.bindRoot(new reporter.jvm_memory_stats());
    const__24.setMeta((IPersistentMap)const__27);
    const__24.bindRoot(new reporter.send_gauge_map());
    const__28.setMeta((IPersistentMap)const__31);
    const__28.bindRoot(new reporter.send_memory_metrics());
    const__32.setMeta((IPersistentMap)const__35);
    const__32.bindRoot(new reporter.periodically_send_memory_metrics_process());
    const__36.setMeta((IPersistentMap)const__39);
    const__36.bindRoot(new reporter.compose_fn_from_metric());
    const__40.setMeta((IPersistentMap)const__43);
    const__40.bindRoot(new reporter.compose_metrics());
    const__44.setMeta((IPersistentMap)const__47);
    const__44.bindRoot(new reporter.run_metrics_process());
    const__48.setMeta((IPersistentMap)const__51);
    const__48.bindRoot(new reporter.init());
    const__52.setMeta((IPersistentMap)const__55);
    const__52.bindRoot(new reporter.maybe_put_metric_BANG_());
    const__56.setMeta((IPersistentMap)const__59);
    const__56.bindRoot(new reporter.track_counter());
    const__60.setMeta((IPersistentMap)const__63);
    const__60.bindRoot(new reporter.track_gauge_counter());
    const__64.setMeta((IPersistentMap)const__67);
    const__64.bindRoot(new reporter.track_gauge());
    const__68.setMeta((IPersistentMap)const__71);
    const__68.bindRoot(new reporter.track_timing());
    const__72.setMeta((IPersistentMap)const__75);
    const__72.bindRoot(new reporter.track_set());
    const__76.setMeta((IPersistentMap)const__79);
    const__76.bindRoot(new reporter.track_event());
    const__80.setMeta((IPersistentMap)const__83);
    const__80.bindRoot(new reporter.track_error());
    const__84.setMeta((IPersistentMap)const__87);
    const__84.bindRoot(new reporter.track_warn());
    const__88.setMeta((IPersistentMap)const__91);
    const__88.bindRoot(new reporter.process_log_data());
  }
  
  public static void __init0() {
    const__0 = (Var)RT.var("clojure.core", "in-ns");
    const__1 = (AFn)Symbol.intern(null, "synchrony.metrics.reporter");
    const__2 = (AFn)Symbol.intern(null, "clojure.core");
    const__3 = (Var)RT.var("synchrony.metrics.reporter", "jvm-used-memory-bytes");
    const__11 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create() })), RT.keyword(null, "line"), Integer.valueOf(14), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/metrics/reporter.clj" });
    const__12 = (Var)RT.var("synchrony.metrics.reporter", "jvm-direct-memory-stats");
    const__15 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create() })), RT.keyword(null, "line"), Integer.valueOf(20), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/metrics/reporter.clj" });
    const__16 = (Var)RT.var("synchrony.metrics.reporter", "jvm-gc-stats");
    const__19 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create() })), RT.keyword(null, "line"), Integer.valueOf(27), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/metrics/reporter.clj" });
    const__20 = (Var)RT.var("synchrony.metrics.reporter", "jvm-memory-stats");
    const__23 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create() })), RT.keyword(null, "line"), Integer.valueOf(35), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/metrics/reporter.clj" });
    const__24 = (Var)RT.var("synchrony.metrics.reporter", "send-gauge-map");
    const__27 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "resource-name"), Symbol.intern(null, "stats")) })), RT.keyword(null, "line"), Integer.valueOf(46), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/metrics/reporter.clj" });
    const__28 = (Var)RT.var("synchrony.metrics.reporter", "send-memory-metrics");
    const__31 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create() })), RT.keyword(null, "line"), Integer.valueOf(51), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/metrics/reporter.clj" });
    const__32 = (Var)RT.var("synchrony.metrics.reporter", "periodically-send-memory-metrics-process");
    const__35 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create() })), RT.keyword(null, "line"), Integer.valueOf(64), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/metrics/reporter.clj" });
    const__36 = (Var)RT.var("synchrony.metrics.reporter", "compose-fn-from-metric");
    const__39 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { ((IObj)Tuple.create(Symbol.intern(null, "metric-a"), Symbol.intern(null, "metric-b"))).withMeta((IPersistentMap)RT.map(new Object[] { RT.keyword(null, "pre"), Tuple.create(((IObj)PersistentList.create(Arrays.asList(new Object[] { Symbol.intern(null, "="), ((IObj)PersistentList.create(Arrays.asList(new Object[] { RT.keyword(null, "type"), Symbol.intern(null, "metric-a") }))).withMeta((IPersistentMap)RT.map(new Object[] { RT.keyword(null, "line"), Integer.valueOf(70), RT.keyword(null, "column"), Integer.valueOf(13) })), ((IObj)PersistentList.create(Arrays.asList(new Object[] { RT.keyword(null, "type"), Symbol.intern(null, "metric-b") }))).withMeta((IPersistentMap)RT.map(new Object[] { RT.keyword(null, "line"), Integer.valueOf(70), RT.keyword(null, "column"), Integer.valueOf(30) })) }))).withMeta((IPersistentMap)RT.map(new Object[] { RT.keyword(null, "line"), Integer.valueOf(70), RT.keyword(null, "column"), Integer.valueOf(10) }))) })) })), RT.keyword(null, "line"), Integer.valueOf(69), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/metrics/reporter.clj" });
    const__40 = (Var)RT.var("synchrony.metrics.reporter", "compose-metrics");
    const__43 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "max-entries"), Symbol.intern(null, "a"), Symbol.intern(null, "b")) })), RT.keyword(null, "line"), Integer.valueOf(79), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/metrics/reporter.clj" });
    const__44 = (Var)RT.var("synchrony.metrics.reporter", "run-metrics-process");
    const__47 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(RT.map(new Object[] { RT.keyword(null, "keys"), Tuple.create(Symbol.intern(null, "update-interval-ms"), Symbol.intern(null, "buffer-chan-size"), Symbol.intern(null, "buffer-map-size"), Symbol.intern(null, "max-gauges")) })) })), RT.keyword(null, "line"), Integer.valueOf(84), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/metrics/reporter.clj" });
    const__48 = (Var)RT.var("synchrony.metrics.reporter", "init");
    const__51 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create() })), RT.keyword(null, "line"), Integer.valueOf(110), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/metrics/reporter.clj" });
    const__52 = (Var)RT.var("synchrony.metrics.reporter", "maybe-put-metric!");
    const__55 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "v")) })), RT.keyword(null, "line"), Integer.valueOf(118), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/metrics/reporter.clj" });
    const__56 = (Var)RT.var("synchrony.metrics.reporter", "track-counter");
    const__59 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "id"), Symbol.intern(null, "delta")), Tuple.create(Symbol.intern(null, "id"), Symbol.intern(null, "delta"), Symbol.intern(null, "tags")) })), RT.keyword(null, "line"), Integer.valueOf(125), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/metrics/reporter.clj" });
    const__60 = (Var)RT.var("synchrony.metrics.reporter", "track-gauge-counter");
    const__63 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "id"), Symbol.intern(null, "delta")), Tuple.create(Symbol.intern(null, "id"), Symbol.intern(null, "delta"), Symbol.intern(null, "tags")) })), RT.keyword(null, "line"), Integer.valueOf(130), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/metrics/reporter.clj" });
    const__64 = (Var)RT.var("synchrony.metrics.reporter", "track-gauge");
    const__67 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "id"), Symbol.intern(null, "new-value")), Tuple.create(Symbol.intern(null, "id"), Symbol.intern(null, "new-value"), Symbol.intern(null, "tags")) })), RT.keyword(null, "line"), Integer.valueOf(135), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/metrics/reporter.clj" });
    const__68 = (Var)RT.var("synchrony.metrics.reporter", "track-timing");
    const__71 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "id"), Symbol.intern(null, "new-timings")), Tuple.create(Symbol.intern(null, "id"), Symbol.intern(null, "new-timing"), Symbol.intern(null, "tags")) })), RT.keyword(null, "line"), Integer.valueOf(140), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/metrics/reporter.clj" });
    const__72 = (Var)RT.var("synchrony.metrics.reporter", "track-set");
    const__75 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "id"), Symbol.intern(null, "value")), Tuple.create(Symbol.intern(null, "id"), Symbol.intern(null, "value"), Symbol.intern(null, "tags")) })), RT.keyword(null, "line"), Integer.valueOf(145), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/metrics/reporter.clj" });
    const__76 = (Var)RT.var("synchrony.metrics.reporter", "track-event");
    const__79 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "event")), Tuple.create(Symbol.intern(null, "event"), Symbol.intern(null, "tags")), Tuple.create(Symbol.intern(null, "event"), Symbol.intern(null, "value"), Symbol.intern(null, "tags")) })), RT.keyword(null, "line"), Integer.valueOf(150), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/metrics/reporter.clj" });
    const__80 = (Var)RT.var("synchrony.metrics.reporter", "track-error");
    const__83 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "source")) })), RT.keyword(null, "line"), Integer.valueOf(185), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/metrics/reporter.clj" });
    const__84 = (Var)RT.var("synchrony.metrics.reporter", "track-warn");
    const__87 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "source")) })), RT.keyword(null, "line"), Integer.valueOf(190), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/metrics/reporter.clj" });
    const__88 = (Var)RT.var("synchrony.metrics.reporter", "process-log-data");
    const__91 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(RT.map(new Object[] { RT.keyword(null, "keys"), Tuple.create(Symbol.intern(null, "is-metric"), Symbol.intern(null, "level"), Symbol.intern(null, "source"), Symbol.intern(null, "event"), Symbol.intern(null, "throwable")), RT.keyword(null, "as"), Symbol.intern(null, "log-data") })) })), RT.keyword(null, "line"), Integer.valueOf(195), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/metrics/reporter.clj" });
  }
  
  static  {
    __init0();
    Compiler.pushNSandLoader(RT.classForName("synchrony.metrics.reporter__init").getClassLoader());
    try {
      load();
    } finally {
      Var.popThreadBindings();
    } 
  }
}
