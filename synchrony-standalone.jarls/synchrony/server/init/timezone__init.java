package synchrony.server.init;

import clojure.lang.AFn;
import clojure.lang.Compiler;
import clojure.lang.LockingTransaction;
import clojure.lang.RT;
import clojure.lang.Symbol;
import clojure.lang.Var;
import java.util.TimeZone;
import java.util.concurrent.Callable;

public class timezone__init {
  public static final Var const__0;
  
  public static final AFn const__1;
  
  public static final AFn const__2;
  
  public static void load() { LockingTransaction.runInTransaction((Callable)new timezone.fn__57526());
    TimeZone.setDefault((TimeZone)TimeZone.getTimeZone((String)"UTC")); }
  
  public static void __init0() {
    const__0 = (Var)RT.var("clojure.core", "in-ns");
    const__1 = (AFn)Symbol.intern(null, "synchrony.server.init.timezone");
    const__2 = (AFn)Symbol.intern(null, "clojure.core");
  }
  
  static  {
    __init0();
    Compiler.pushNSandLoader(RT.classForName("synchrony.server.init.timezone__init").getClassLoader());
    try {
      load();
    } finally {
      Var.popThreadBindings();
    } 
  }
}
