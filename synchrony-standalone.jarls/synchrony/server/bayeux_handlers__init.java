package synchrony.server;

import clojure.lang.AFn;
import clojure.lang.Compiler;
import clojure.lang.IFn;
import clojure.lang.IPersistentMap;
import clojure.lang.Keyword;
import clojure.lang.LockingTransaction;
import clojure.lang.Numbers;
import clojure.lang.PersistentHashSet;
import clojure.lang.PersistentList;
import clojure.lang.RT;
import clojure.lang.Symbol;
import clojure.lang.Tuple;
import clojure.lang.Var;
import java.util.Arrays;
import java.util.concurrent.Callable;

public class bayeux_handlers__init {
  public static final Var const__0;
  
  public static final AFn const__1;
  
  public static final AFn const__2;
  
  public static final Var const__3;
  
  public static final AFn const__9;
  
  public static final Keyword const__10;
  
  public static final Keyword const__11;
  
  public static final Keyword const__12;
  
  public static final AFn const__13;
  
  public static final Keyword const__14;
  
  public static final AFn const__15;
  
  public static final Var const__16;
  
  public static final AFn const__18;
  
  public static final AFn const__19;
  
  public static final Var const__20;
  
  public static final Var const__21;
  
  public static final Var const__22;
  
  public static final Var const__23;
  
  public static final Var const__24;
  
  public static final Keyword const__25;
  
  public static final AFn const__26;
  
  public static final Var const__27;
  
  public static final AFn const__28;
  
  public static final Var const__29;
  
  public static final AFn const__33;
  
  public static final Var const__34;
  
  public static final AFn const__36;
  
  public static final Var const__38;
  
  public static final Var const__39;
  
  public static final Var const__40;
  
  public static final AFn const__43;
  
  public static final Var const__44;
  
  public static final AFn const__47;
  
  public static final Var const__48;
  
  public static final AFn const__51;
  
  public static final Var const__52;
  
  public static final AFn const__55;
  
  public static final Var const__56;
  
  public static final AFn const__59;
  
  public static void load() {
    LockingTransaction.runInTransaction((Callable)new bayeux_handlers.fn__57685());
    const__3.setMeta((IPersistentMap)const__9);
    const__3.bindRoot(RT.mapUniqueKeys(new Object[] { const__10, const__13, const__11, PersistentHashSet.EMPTY, const__14, const__15, const__12, PersistentHashSet.EMPTY }));
    const__16.setMeta((IPersistentMap)const__18);
    const__16












































      
      .bindRoot(RT.mapUniqueKeys(new Object[] { const__19, ((IFn)const__20.getRawRoot()).invoke(const__21.getRawRoot(), const__22.getRawRoot(), ((IFn)const__23.getRawRoot()).invoke(new bayeux_handlers.fn__57688()), ((IFn)const__24.getRawRoot()).invoke(const__25)), const__26, ((IFn)const__20.getRawRoot()).invoke(((IFn)const__24.getRawRoot()).invoke(new bayeux_handlers.fn__57690()), const__27.getRawRoot()), const__28, ((IFn)const__20.getRawRoot()).invoke(const__21.getRawRoot(), const__22.getRawRoot(), ((IFn)const__24.getRawRoot())
              
              .invoke(new bayeux_handlers.fn__57692()), const__27.getRawRoot()) }));
    const__29.setMeta((IPersistentMap)const__33);
    const__29.bindRoot(new bayeux_handlers.make_connect_timeout_ms());
    const__34.setMeta((IPersistentMap)const__36);
    const__34.bindRoot(Numbers.add(const__38.getRawRoot(), const__39.getRawRoot()));
    const__40.setMeta((IPersistentMap)const__43);
    const__40.bindRoot(new bayeux_handlers.make_rerouting_accept());
    const__44.setMeta((IPersistentMap)const__47);
    const__44.bindRoot(new bayeux_handlers.bayeux_sync1_accept_handler());
    const__48.setMeta((IPersistentMap)const__51);
    const__48.bindRoot(new bayeux_handlers.wrap_fallback());
    const__52.setMeta((IPersistentMap)const__55);
    const__52.bindRoot(new bayeux_handlers.wrap_connection_registration());
    const__56.setMeta((IPersistentMap)const__59);
    const__56.bindRoot(new bayeux_handlers.bayeux_accept_handler());
  }
  
  public static void __init0() {
    const__0 = (Var)RT.var("clojure.core", "in-ns");
    const__1 = (AFn)Symbol.intern(null, "synchrony.server.bayeux-handlers");
    const__2 = (AFn)Symbol.intern(null, "clojure.core");
    const__3 = (Var)RT.var("synchrony.server.bayeux-handlers", "connections-map");
    const__9 = (AFn)RT.map(new Object[] { RT.keyword(null, "line"), Integer.valueOf(26), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/server/bayeux_handlers.clj" });
    const__10 = (Keyword)RT.keyword(null, "bayeux-up");
    const__11 = (Keyword)RT.keyword(null, "bayeux-down");
    const__12 = (Keyword)RT.keyword(null, "sync1-from-client");
    const__13 = (AFn)PersistentHashSet.create(new Object[] { RT.keyword(null, "bayeux-down"), RT.keyword(null, "sync1-from-client") });
    const__14 = (Keyword)RT.keyword(null, "sync1-to-client");
    const__15 = (AFn)PersistentHashSet.create(new Object[] { RT.keyword(null, "bayeux-down") });
    const__16 = (Var)RT.var("synchrony.server.bayeux-handlers", "xforms-map");
    const__18 = (AFn)RT.map(new Object[] { RT.keyword(null, "line"), Integer.valueOf(33), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/server/bayeux_handlers.clj" });
    const__19 = (AFn)Tuple.create(RT.keyword(null, "bayeux-up"), RT.keyword(null, "sync1-from-client"));
    const__20 = (Var)RT.var("clojure.core", "comp");
    const__21 = (Var)RT.var("tilt.bayeux.server", "upstream-messages-xf");
    const__22 = (Var)RT.var("clojure.core", "cat");
    const__23 = (Var)RT.var("clojure.core", "filter");
    const__24 = (Var)RT.var("clojure.core", "map");
    const__25 = (Keyword)RT.keyword(null, "data");
    const__26 = (AFn)Tuple.create(RT.keyword(null, "sync1-to-client"), RT.keyword(null, "bayeux-down"));
    const__27 = (Var)RT.var("tilt.bayeux.server", "downstream-messages-xf");
    const__28 = (AFn)Tuple.create(RT.keyword(null, "bayeux-up"), RT.keyword(null, "bayeux-down"));
    const__29 = (Var)RT.var("synchrony.server.bayeux-handlers", "make-connect-timeout-ms");
    const__33 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create() })), RT.keyword(null, "line"), Integer.valueOf(54), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/server/bayeux_handlers.clj" });
    const__34 = (Var)RT.var("synchrony.server.bayeux-handlers", "max-connect-timeout-ms");
    const__36 = (AFn)RT.map(new Object[] { RT.keyword(null, "line"), Integer.valueOf(58), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/server/bayeux_handlers.clj" });
    const__38 = (Var)RT.var("tilt.bayeux.server", "default-connect-timeout-ms");
    const__39 = (Var)RT.var("tilt.bayeux.server", "default-connect-timeout-jitter-ms");
    const__40 = (Var)RT.var("synchrony.server.bayeux-handlers", "make-rerouting-accept");
    const__43 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "member-by-topic")) })), RT.keyword(null, "line"), Integer.valueOf(62), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/server/bayeux_handlers.clj" });
    const__44 = (Var)RT.var("synchrony.server.bayeux-handlers", "bayeux-sync1-accept-handler");
    const__47 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "handshake-message")) })), RT.keyword(null, "line"), Integer.valueOf(76), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/server/bayeux_handlers.clj" });
    const__48 = (Var)RT.var("synchrony.server.bayeux-handlers", "wrap-fallback");
    const__51 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "handler"), Symbol.intern(null, "pubsub"), Symbol.intern(null, "service-url")) })), RT.keyword(null, "line"), Integer.valueOf(105), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/server/bayeux_handlers.clj" });
    const__52 = (Var)RT.var("synchrony.server.bayeux-handlers", "wrap-connection-registration");
    const__55 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "handler"), Symbol.intern(null, "register")) })), RT.keyword(null, "line"), Integer.valueOf(114), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/server/bayeux_handlers.clj" });
    const__56 = (Var)RT.var("synchrony.server.bayeux-handlers", "bayeux-accept-handler");
    const__59 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "handshake-message")) })), RT.keyword(null, "line"), Integer.valueOf(144), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/server/bayeux_handlers.clj" });
  }
  
  static  {
    __init0();
    Compiler.pushNSandLoader(RT.classForName("synchrony.server.bayeux_handlers__init").getClassLoader());
    try {
      load();
    } finally {
      Var.popThreadBindings();
    } 
  }
}
