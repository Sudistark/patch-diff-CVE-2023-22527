package javax.validation.executable;

import java.lang.reflect.Constructor;
import java.lang.reflect.Method;
import java.util.Set;
import javax.validation.ConstraintViolation;

public interface ExecutableValidator {
  <T> Set<ConstraintViolation<T>> validateParameters(T paramT, Method paramMethod, Object[] paramArrayOfObject, Class<?>... paramVarArgs);
  
  <T> Set<ConstraintViolation<T>> validateReturnValue(T paramT, Method paramMethod, Object paramObject, Class<?>... paramVarArgs);
  
  <T> Set<ConstraintViolation<T>> validateConstructorParameters(Constructor<? extends T> paramConstructor, Object[] paramArrayOfObject, Class<?>... paramVarArgs);
  
  <T> Set<ConstraintViolation<T>> validateConstructorReturnValue(Constructor<? extends T> paramConstructor, T paramT, Class<?>... paramVarArgs);
}
