package clojure.lang;

import java.util.Iterator;
import java.util.NoSuchElementException;

public class SeqIterator implements Iterator {
  static final Object START = new Object();
  
  Object seq;
  
  Object next;
  
  public SeqIterator(Object o) {
    this.seq = START;
    this.next = o;
  }
  
  public SeqIterator(ISeq o) {
    this.seq = START;
    this.next = o;
  }
  
  public boolean hasNext() {
    if (this.seq == START) {
      this.seq = null;
      this.next = RT.seq(this.next);
    } else if (this.seq == this.next) {
      this.next = RT.next(this.seq);
    } 
    return (this.next != null);
  }
  
  public Object next() throws NoSuchElementException {
    if (!hasNext())
      throw new NoSuchElementException(); 
    this.seq = this.next;
    return RT.first(this.next);
  }
  
  public void remove() { throw new UnsupportedOperationException(); }
}
