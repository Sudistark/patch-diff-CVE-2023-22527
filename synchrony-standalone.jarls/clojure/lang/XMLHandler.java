package clojure.lang;

import org.xml.sax.Attributes;
import org.xml.sax.ContentHandler;
import org.xml.sax.Locator;
import org.xml.sax.SAXException;
import org.xml.sax.helpers.DefaultHandler;

public class XMLHandler extends DefaultHandler {
  ContentHandler h;
  
  public XMLHandler(ContentHandler h) { this.h = h; }
  
  public void setDocumentLocator(Locator locator) { this.h.setDocumentLocator(locator); }
  
  public void startDocument() throws SAXException { this.h.startDocument(); }
  
  public void endDocument() throws SAXException { this.h.endDocument(); }
  
  public void startPrefixMapping(String prefix, String uri) throws SAXException { this.h.startPrefixMapping(prefix, uri); }
  
  public void endPrefixMapping(String prefix) throws SAXException { this.h.endPrefixMapping(prefix); }
  
  public void startElement(String uri, String localName, String qName, Attributes atts) throws SAXException { this.h.startElement(uri, localName, qName, atts); }
  
  public void endElement(String uri, String localName, String qName) throws SAXException { this.h.endElement(uri, localName, qName); }
  
  public void characters(char[] ch, int start, int length) throws SAXException { this.h.characters(ch, start, length); }
  
  public void ignorableWhitespace(char[] ch, int start, int length) throws SAXException { this.h.ignorableWhitespace(ch, start, length); }
  
  public void processingInstruction(String target, String data) throws SAXException { this.h.processingInstruction(target, data); }
  
  public void skippedEntity(String name) throws SAXException { this.h.skippedEntity(name); }
}
