package clojure.lang;

public final class KeywordLookupSite implements ILookupSite, ILookupThunk {
  final Keyword k;
  
  public KeywordLookupSite(Keyword k) { this.k = k; }
  
  public ILookupThunk fault(Object target) {
    if (target instanceof IKeywordLookup)
      return install(target); 
    if (target instanceof ILookup)
      return ilookupThunk(target.getClass()); 
    return this;
  }
  
  public Object get(Object target) {
    if (target instanceof IKeywordLookup || target instanceof ILookup)
      return this; 
    return RT.get(target, this.k);
  }
  
  private ILookupThunk ilookupThunk(Class c) { return new Object(this, c); }
  
  private ILookupThunk install(Object target) {
    ILookupThunk t = ((IKeywordLookup)target).getLookupThunk(this.k);
    if (t != null)
      return t; 
    return ilookupThunk(target.getClass());
  }
}
