package clojure.reflect;

import clojure.core;
import clojure.lang.AFn;
import clojure.lang.APersistentMap;
import clojure.lang.ArraySeq;
import clojure.lang.Associative;
import clojure.lang.Counted;
import clojure.lang.IFn;
import clojure.lang.IHashEq;
import clojure.lang.IKeywordLookup;
import clojure.lang.ILookup;
import clojure.lang.ILookupThunk;
import clojure.lang.IMapEntry;
import clojure.lang.IObj;
import clojure.lang.IPersistentCollection;
import clojure.lang.IPersistentMap;
import clojure.lang.IPersistentVector;
import clojure.lang.IRecord;
import clojure.lang.ISeq;
import clojure.lang.Keyword;
import clojure.lang.MapEntry;
import clojure.lang.Numbers;
import clojure.lang.PersistentHashSet;
import clojure.lang.RT;
import clojure.lang.RecordIterator;
import clojure.lang.Symbol;
import clojure.lang.Tuple;
import clojure.lang.Util;
import clojure.lang.Var;
import java.io.Serializable;
import java.util.Collection;
import java.util.Iterator;
import java.util.Map;
import java.util.Set;

public final class Method implements IRecord, IHashEq, IObj, ILookup, IKeywordLookup, IPersistentMap, Map, Serializable {
  public final Object name;
  
  public final Object return_type;
  
  public final Object declaring_class;
  
  public final Object parameter_types;
  
  public final Object exception_types;
  
  public final Object flags;
  
  public final Object __meta;
  
  public final Object __extmap;
  
  int __hash;
  
  int __hasheq;
  
  public static final Keyword const__8 = (Keyword)RT.keyword(null, "return-type");
  
  public static final Keyword const__9 = (Keyword)RT.keyword(null, "name");
  
  public static final Keyword const__10 = (Keyword)RT.keyword(null, "declaring-class");
  
  public static final Keyword const__11 = (Keyword)RT.keyword(null, "parameter-types");
  
  public static final Keyword const__12 = (Keyword)RT.keyword(null, "exception-types");
  
  public static final Keyword const__13 = (Keyword)RT.keyword(null, "flags");
  
  public static final AFn const__14 = (AFn)PersistentHashSet.create(new Object[] { RT.keyword(null, "return-type"), RT.keyword(null, "name"), RT.keyword(null, "declaring-class"), RT.keyword(null, "parameter-types"), RT.keyword(null, "exception-types"), RT.keyword(null, "flags") });
  
  public static final Var const__19 = (Var)RT.var("clojure.core", "identical?");
  
  public static final AFn const__21 = (AFn)Tuple.create(RT.keyword(null, "name"), RT.keyword(null, "return-type"), RT.keyword(null, "declaring-class"), RT.keyword(null, "parameter-types"), RT.keyword(null, "exception-types"), RT.keyword(null, "flags"));
  
  public static final Var const__26 = (Var)RT.var("clojure.core", "imap-cons");
  
  public Method(Object paramObject1, Object paramObject2, Object paramObject3, Object paramObject4, Object paramObject5, Object paramObject6, Object paramObject7, Object paramObject8, int paramInt1, int paramInt2) { this.name = paramObject1;
    this.return_type = paramObject2;
    this.declaring_class = paramObject3;
    this.parameter_types = paramObject4;
    this.exception_types = paramObject5;
    this.flags = paramObject6;
    this.__meta = paramObject7;
    this.__extmap = paramObject8;
    this.__hash = paramInt1;
    this.__hasheq = paramInt2; }
  
  public Method(Object paramObject1, Object paramObject2, Object paramObject3, Object paramObject4, Object paramObject5, Object paramObject6) { this(paramObject1, paramObject2, paramObject3, paramObject4, paramObject5, paramObject6, null, null, 0, 0); }
  
  public Method(Object paramObject1, Object paramObject2, Object paramObject3, Object paramObject4, Object paramObject5, Object paramObject6, Object paramObject7, Object paramObject8) { this(paramObject1, paramObject2, paramObject3, paramObject4, paramObject5, paramObject6, paramObject7, paramObject8, 0, 0); }
  
  public static IPersistentVector getBasis() { return Tuple.create(Symbol.intern(null, "name"), Symbol.intern(null, "return-type"), Symbol.intern(null, "declaring-class"), Symbol.intern(null, "parameter-types"), Symbol.intern(null, "exception-types"), Symbol.intern(null, "flags")); }
  
  public static Method create(IPersistentMap paramIPersistentMap) {
    Object object1 = paramIPersistentMap.valAt(Keyword.intern("name"), null);
    paramIPersistentMap = paramIPersistentMap.without(Keyword.intern("name"));
    Object object2 = paramIPersistentMap.valAt(Keyword.intern("return-type"), null);
    paramIPersistentMap = paramIPersistentMap.without(Keyword.intern("return-type"));
    Object object3 = paramIPersistentMap.valAt(Keyword.intern("declaring-class"), null);
    paramIPersistentMap = paramIPersistentMap.without(Keyword.intern("declaring-class"));
    Object object4 = paramIPersistentMap.valAt(Keyword.intern("parameter-types"), null);
    paramIPersistentMap = paramIPersistentMap.without(Keyword.intern("parameter-types"));
    Object object5 = paramIPersistentMap.valAt(Keyword.intern("exception-types"), null);
    paramIPersistentMap = paramIPersistentMap.without(Keyword.intern("exception-types"));
    Object object6 = paramIPersistentMap.valAt(Keyword.intern("flags"), null);
    paramIPersistentMap = paramIPersistentMap.without(Keyword.intern("flags"));
    return new Method(object1, object2, object3, object4, object5, object6, null, RT.seqOrElse(paramIPersistentMap), 0, 0);
  }
  
  public int hasheq() {
    int hq__7768__auto__12012 = this.__hasheq, h__7769__auto__12011 = RT.intCast(0xFFFFFFFFE1D6579EL ^ APersistentMap.mapHasheq((IPersistentMap)this));
    this.__hasheq = h__7769__auto__12011;
    return (hq__7768__auto__12012 == 0L) ? h__7769__auto__12011 : hq__7768__auto__12012;
  }
  
  public int hashCode() {
    int hash__7771__auto__12014 = this.__hash, h__7772__auto__12013 = APersistentMap.mapHash((IPersistentMap)this);
    this.__hash = h__7772__auto__12013;
    return (hash__7771__auto__12014 == 0L) ? h__7772__auto__12013 : hash__7771__auto__12014;
  }
  
  public boolean equals(Object G__11992) { G__11992 = null;
    return APersistentMap.mapEquals((IPersistentMap)this, G__11992); }
  
  public IPersistentMap meta() { return (IPersistentMap)this.__meta; }
  
  public IObj withMeta(IPersistentMap G__11992) { G__11992 = null;
    return (IObj)new Method(this.name, this.return_type, this.declaring_class, this.parameter_types, this.exception_types, this.flags, G__11992, this.__extmap, this.__hash, this.__hasheq); }
  
  public Object valAt(Object k__7777__auto__) { k__7777__auto__ = null;
    return ((ILookup)this).valAt(k__7777__auto__, null); }
  
  public Object valAt(Object k__7779__auto__, Object else__7780__auto__) {
    Object G__12009 = k__7779__auto__;
    switch (Util.hash(G__12009) >> 0 & 0x7) {
      case 0:
        if (G__12009 == const__10);
        break;
      case 1:
        if (G__12009 == const__9);
        break;
      case 2:
        if (G__12009 == const__8);
        break;
      case 4:
        if (G__12009 == const__11);
        break;
      case 5:
        if (G__12009 == const__12);
        break;
      case 6:
        if (G__12009 == const__13);
        break;
    } 
    k__7779__auto__ = null;
    else__7780__auto__ = null;
    this = null;
    return RT.get(this.__extmap, k__7779__auto__, else__7780__auto__);
  }
  
  public ILookupThunk getLookupThunk(Keyword k__7782__auto__) {
    Object gclass = core.class.invokeStatic(this), G__11996 = k__7782__auto__ = null;
    switch (Util.hash(G__11996) >> 0 & 0x7) {
      case 0:
        if (G__11996 == const__10)
          gclass = null; 
        break;
      case 1:
        if (G__11996 == const__9)
          gclass = null; 
        break;
      case 2:
        if (G__11996 == const__8)
          gclass = null; 
        break;
      case 4:
        if (G__11996 == const__11)
          gclass = null; 
        break;
      case 5:
        if (G__11996 == const__12)
          gclass = null; 
        break;
      case 6:
        if (G__11996 == const__13)
          gclass = null; 
        break;
    } 
    return (ILookupThunk)null;
  }
  
  public int count() { return RT.intCast(Numbers.add(6L, RT.count(this.__extmap))); }
  
  public IPersistentCollection empty() { throw (Throwable)new UnsupportedOperationException((String)core.str.invokeStatic("Can't create empty: ", ArraySeq.create(new Object[] { "clojure.reflect.Method" }))); }
  
  public IPersistentCollection cons(Object e__7786__auto__) { e__7786__auto__ = null;
    this = null;
    return (IPersistentCollection)((IFn)const__26).invoke(this, e__7786__auto__); }
  
  public boolean equiv(Object G__11992) {
    boolean or__5516__auto__12021 = Util.identical(this, G__11992);
    Object G__11992 = G__11992 = null;
    boolean and__5514__auto__12020 = Util.equiv(this.name, ((Method)G__11992).name), and__5514__auto__12019 = Util.equiv(this.return_type, ((Method)G__11992).return_type), and__5514__auto__12018 = Util.equiv(this.declaring_class, ((Method)G__11992).declaring_class), and__5514__auto__12017 = Util.equiv(this.parameter_types, ((Method)G__11992).parameter_types), and__5514__auto__12016 = Util.equiv(this.exception_types, ((Method)G__11992).exception_types), and__5514__auto__12015 = Util.equiv(this.flags, ((Method)G__11992).flags);
    G__11992 = null;
    return RT.booleanCast(or__5516__auto__12021 ? (or__5516__auto__12021 ? Boolean.TRUE : Boolean.FALSE) : (Util.identical(core.class.invokeStatic(this), core.class.invokeStatic(G__11992)) ? (and__5514__auto__12020 ? (and__5514__auto__12019 ? (and__5514__auto__12018 ? (and__5514__auto__12017 ? (and__5514__auto__12016 ? (and__5514__auto__12015 ? (Util.equiv(this.__extmap, ((Method)G__11992).__extmap) ? Boolean.TRUE : Boolean.FALSE) : (and__5514__auto__12015 ? Boolean.TRUE : Boolean.FALSE)) : (and__5514__auto__12016 ? Boolean.TRUE : Boolean.FALSE)) : (and__5514__auto__12017 ? Boolean.TRUE : Boolean.FALSE)) : (and__5514__auto__12018 ? Boolean.TRUE : Boolean.FALSE)) : (and__5514__auto__12019 ? Boolean.TRUE : Boolean.FALSE)) : (and__5514__auto__12020 ? Boolean.TRUE : Boolean.FALSE)) : null));
  }
  
  public boolean containsKey(Object k__7789__auto__) { k__7789__auto__ = null;
    this = null;
    return ((Boolean)core.not.invokeStatic(Util.identical(this, ((ILookup)this).valAt(k__7789__auto__, this)) ? Boolean.TRUE : Boolean.FALSE)).booleanValue(); }
  
  public IMapEntry entryAt(Object k__7791__auto__) {
    Object v__7792__auto__12022 = ((ILookup)this).valAt(k__7791__auto__, this);
    k__7791__auto__ = null;
    v__7792__auto__12022 = null;
    this = null;
    return (IMapEntry)(Util.identical(this, v__7792__auto__12022) ? null : MapEntry.create(k__7791__auto__, v__7792__auto__12022));
  }
  
  public ISeq seq() { this = null;
    return (ISeq)core.seq__5402.invokeStatic(core.concat.invokeStatic(Tuple.create(MapEntry.create(const__9, this.name), MapEntry.create(const__8, this.return_type), MapEntry.create(const__10, this.declaring_class), MapEntry.create(const__11, this.parameter_types), MapEntry.create(const__12, this.exception_types), MapEntry.create(const__13, this.flags)), this.__extmap)); }
  
  public Iterator iterator() { return (Iterator)new RecordIterator((ILookup)this, (IPersistentVector)const__21, (Iterator)RT.iter(this.__extmap)); }
  
  public IPersistentMap assoc(Object k__7796__auto__, Object G__11992) {
    Object pred__11994 = const__19.getRawRoot(), expr__11995 = k__7796__auto__;
    if (((IFn)pred__11994).invoke(const__9, expr__11995) != null) {
      if (((IFn)pred__11994).invoke(const__9, expr__11995) != Boolean.FALSE)
        G__11992 = null; 
    } else {
      ((IFn)pred__11994).invoke(const__9, expr__11995);
    } 
    if (((IFn)pred__11994).invoke(const__8, expr__11995) != null) {
      if (((IFn)pred__11994).invoke(const__8, expr__11995) != Boolean.FALSE)
        G__11992 = null; 
    } else {
      ((IFn)pred__11994).invoke(const__8, expr__11995);
    } 
    if (((IFn)pred__11994).invoke(const__10, expr__11995) != null) {
      if (((IFn)pred__11994).invoke(const__10, expr__11995) != Boolean.FALSE)
        G__11992 = null; 
    } else {
      ((IFn)pred__11994).invoke(const__10, expr__11995);
    } 
    if (((IFn)pred__11994).invoke(const__11, expr__11995) != null) {
      if (((IFn)pred__11994).invoke(const__11, expr__11995) != Boolean.FALSE)
        G__11992 = null; 
    } else {
      ((IFn)pred__11994).invoke(const__11, expr__11995);
    } 
    if (((IFn)pred__11994).invoke(const__12, expr__11995) != null) {
      if (((IFn)pred__11994).invoke(const__12, expr__11995) != Boolean.FALSE)
        G__11992 = null; 
    } else {
      ((IFn)pred__11994).invoke(const__12, expr__11995);
    } 
    pred__11994 = null;
    expr__11995 = null;
    if (((IFn)pred__11994).invoke(const__13, expr__11995) != null) {
      if (((IFn)pred__11994).invoke(const__13, expr__11995) != Boolean.FALSE)
        G__11992 = null; 
    } else {
      ((IFn)pred__11994).invoke(const__13, expr__11995);
    } 
    k__7796__auto__ = null;
    G__11992 = null;
    return (IPersistentMap)new Method(this.name, this.return_type, this.declaring_class, this.parameter_types, this.exception_types, this.flags, this.__meta, core.assoc__5416.invokeStatic(this.__extmap, k__7796__auto__, G__11992));
  }
  
  public IPersistentMap without(Object k__7798__auto__) { if (core.contains_QMARK_.invokeStatic(const__14, k__7798__auto__) != null) {
      if (core.contains_QMARK_.invokeStatic(const__14, k__7798__auto__) != Boolean.FALSE) {
        k__7798__auto__ = null;
        this = null;
      } 
    } else {
      core.contains_QMARK_.invokeStatic(const__14, k__7798__auto__);
    } 
    k__7798__auto__ = null;
    return (IPersistentMap)new Method(this.name, this.return_type, this.declaring_class, this.parameter_types, this.exception_types, this.flags, this.__meta, core.not_empty.invokeStatic(core.dissoc.invokeStatic(this.__extmap, k__7798__auto__))); }
  
  public int size() { this = null;
    return ((Counted)this).count(); }
  
  public boolean isEmpty() { return Util.equiv(0L, ((Counted)this).count()); }
  
  public boolean containsValue(Object v__7802__auto__) { v__7802__auto__ = null;
    return RT.booleanCast(core.some.invokeStatic(RT.set(new Object[] { v__7802__auto__ }, ), core.vals.invokeStatic(this))); }
  
  public Object get(Object k__7804__auto__) { k__7804__auto__ = null;
    return ((ILookup)this).valAt(k__7804__auto__); }
  
  public Object put(Object k__7806__auto__, Object v__7807__auto__) { throw (Throwable)new UnsupportedOperationException(); }
  
  public Object remove(Object k__7809__auto__) { throw (Throwable)new UnsupportedOperationException(); }
  
  public void putAll(Map m__7811__auto__) { throw (Throwable)new UnsupportedOperationException(); }
  
  public void clear() { throw (Throwable)new UnsupportedOperationException(); }
  
  public Set keySet() { this = null;
    return (Set)core.set.invokeStatic(core.keys.invokeStatic(this)); }
  
  public Collection values() { this = null;
    return (Collection)core.vals.invokeStatic(this); }
  
  public Set entrySet() { this = null;
    return (Set)core.set.invokeStatic(this); }
}
