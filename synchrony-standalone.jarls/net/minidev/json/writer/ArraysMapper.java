package net.minidev.json.writer;

import java.util.ArrayList;
import java.util.List;

public class ArraysMapper<T> extends JsonReaderI<T> {
  public ArraysMapper(JsonReader base) { super(base); }
  
  public Object createArray() { return new ArrayList(); }
  
  public void addValue(Object current, Object value) { ((List)current).add(value); }
  
  public T convert(Object current) { return (T)current; }
  
  public static JsonReaderI<int[]> MAPPER_PRIM_INT = new Object(null);
  
  public static JsonReaderI<Integer[]> MAPPER_INT = new Object(null);
  
  public static JsonReaderI<short[]> MAPPER_PRIM_SHORT = new Object(null);
  
  public static JsonReaderI<Short[]> MAPPER_SHORT = new Object(null);
  
  public static JsonReaderI<byte[]> MAPPER_PRIM_BYTE = new Object(null);
  
  public static JsonReaderI<Byte[]> MAPPER_BYTE = new Object(null);
  
  public static JsonReaderI<char[]> MAPPER_PRIM_CHAR = new Object(null);
  
  public static JsonReaderI<Character[]> MAPPER_CHAR = new Object(null);
  
  public static JsonReaderI<long[]> MAPPER_PRIM_LONG = new Object(null);
  
  public static JsonReaderI<Long[]> MAPPER_LONG = new Object(null);
  
  public static JsonReaderI<float[]> MAPPER_PRIM_FLOAT = new Object(null);
  
  public static JsonReaderI<Float[]> MAPPER_FLOAT = new Object(null);
  
  public static JsonReaderI<double[]> MAPPER_PRIM_DOUBLE = new Object(null);
  
  public static JsonReaderI<Double[]> MAPPER_DOUBLE = new Object(null);
  
  public static JsonReaderI<boolean[]> MAPPER_PRIM_BOOL = new Object(null);
  
  public static JsonReaderI<Boolean[]> MAPPER_BOOL = new Object(null);
}
