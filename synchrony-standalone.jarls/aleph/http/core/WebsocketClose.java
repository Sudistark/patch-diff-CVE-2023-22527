package aleph.http.core;

import clojure.lang.IPersistentVector;
import clojure.lang.IType;
import clojure.lang.Symbol;
import clojure.lang.Tuple;

public final class WebsocketClose implements IType {
  public final Object deferred;
  
  public final Object status_code;
  
  public final Object reason_text;
  
  public WebsocketClose(Object paramObject1, Object paramObject2, Object paramObject3) { this.deferred = paramObject1;
    this.status_code = paramObject2;
    this.reason_text = paramObject3; }
  
  public static IPersistentVector getBasis() { return Tuple.create(Symbol.intern(null, "deferred"), Symbol.intern(null, "status-code"), Symbol.intern(null, "reason-text")); }
  
  static  {
  
  }
}
