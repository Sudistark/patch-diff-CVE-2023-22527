package clj_commons.byte_streams;

import clojure.lang.AFn;
import clojure.lang.Compiler;
import clojure.lang.IObj;
import clojure.lang.IPersistentMap;
import clojure.lang.Keyword;
import clojure.lang.LockingTransaction;
import clojure.lang.PersistentList;
import clojure.lang.RT;
import clojure.lang.Symbol;
import clojure.lang.Tuple;
import clojure.lang.Var;
import java.util.Arrays;
import java.util.concurrent.Callable;

public class pushback_stream__init {
  public static final Var const__0;
  
  public static final AFn const__1;
  
  public static final AFn const__2;
  
  public static final Var const__3;
  
  public static final Var const__4;
  
  public static final AFn const__12;
  
  public static final Var const__13;
  
  public static final AFn const__16;
  
  public static final Var const__17;
  
  public static final AFn const__21;
  
  public static final Var const__22;
  
  public static final AFn const__25;
  
  public static final Var const__26;
  
  public static final AFn const__29;
  
  public static final Var const__30;
  
  public static final AFn const__33;
  
  public static final Var const__34;
  
  public static final AFn const__37;
  
  public static final Var const__38;
  
  public static final AFn const__41;
  
  public static final Var const__42;
  
  public static final AFn const__44;
  
  public static final Var const__45;
  
  public static final AFn const__48;
  
  public static final Var const__49;
  
  public static final Var const__50;
  
  public static final Keyword const__51;
  
  public static final Var const__52;
  
  public static final AFn const__55;
  
  public static final Var const__56;
  
  public static final AFn const__59;
  
  public static final Var const__60;
  
  public static final AFn const__63;
  
  public static final Var const__64;
  
  public static final AFn const__67;
  
  public static final Var const__68;
  
  public static final AFn const__71;
  
  public static final Var const__72;
  
  public static final AFn const__75;
  
  public static final Var const__76;
  
  public static final AFn const__79;
  
  public static void load() {
    LockingTransaction.runInTransaction((Callable)new pushback_stream.fn__27013());
    const__4.setMeta((IPersistentMap)const__12);
    const__4.bindRoot(new pushback_stream.trigger());
    const__13.setMeta((IPersistentMap)const__16);
    const__13.bindRoot(new pushback_stream.put());
    const__17.setMeta((IPersistentMap)const__21);
    const__17.bindRoot(new pushback_stream.expand_either());
    const__22.setMeta((IPersistentMap)const__25);
    const__22.bindRoot(new pushback_stream.walk());
    const__26.setMeta((IPersistentMap)const__29);
    const__26.bindRoot(new pushback_stream.prewalk());
    const__30.setMeta((IPersistentMap)const__33);
    const__30.bindRoot(new pushback_stream.both());
    ((Var)const__30)









































      
      .setMacro();
    const__34.setMeta((IPersistentMap)const__37);
    const__34.bindRoot(new pushback_stream.pushback_stream());
    const__38.setMeta((IPersistentMap)const__41);
    const__38.bindRoot(new pushback_stream.unsafe_pushback_stream());
    const__42.setMeta((IPersistentMap)const__44);
    const__42.bindRoot("clj_commons.byte_streams.pushback_stream.PushbackStream");
    const__45.setMeta((IPersistentMap)const__48);
    const__45.bindRoot(new pushback_stream.put_array());
    const__52.setMeta((IPersistentMap)const__55);
    const__52.bindRoot(new pushback_stream.put_buffer());
    const__56.setMeta((IPersistentMap)const__59);
    const__56.bindRoot(new pushback_stream.close());
    const__60.setMeta((IPersistentMap)const__63);
    const__60.bindRoot(new pushback_stream.eager_take());
    const__64.setMeta((IPersistentMap)const__67);
    const__64.bindRoot(new pushback_stream.take());
    const__68.setMeta((IPersistentMap)const__71);
    const__68.bindRoot(new pushback_stream.pushback_array());
    const__72.setMeta((IPersistentMap)const__75);
    const__72.bindRoot(new pushback_stream.pushback_buffer());
    const__76.setMeta((IPersistentMap)const__79);
    const__76.bindRoot(new pushback_stream.__GT_input_stream());
  }
  
  public static void __init0() {
    const__0 = (Var)RT.var("clojure.core", "in-ns");
    const__1 = (AFn)Symbol.intern(null, "clj-commons.byte-streams.pushback-stream");
    const__2 = (AFn)Symbol.intern(null, "clojure.core");
    const__3 = (Var)RT.var("clojure.core", "*unchecked-math*");
    const__4 = (Var)RT.var("clj-commons.byte-streams.pushback-stream", "trigger");
    const__12 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(((IObj)Symbol.intern(null, "c")).withMeta((IPersistentMap)RT.map(new Object[] { RT.keyword(null, "tag"), Symbol.intern(null, "Consumption") }))) })), RT.keyword(null, "line"), Integer.valueOf(36), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "clj_commons/byte_streams/pushback_stream.clj" });
    const__13 = (Var)RT.var("clj-commons.byte-streams.pushback-stream", "put");
    const__16 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(((IObj)Symbol.intern(null, "src")).withMeta((IPersistentMap)RT.map(new Object[] { RT.keyword(null, "tag"), Symbol.intern(null, "ByteBuffer") })), ((IObj)Symbol.intern(null, "dst")).withMeta((IPersistentMap)RT.map(new Object[] { RT.keyword(null, "tag"), Symbol.intern(null, "ByteBuffer") }))) })), RT.keyword(null, "line"), Integer.valueOf(40), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "clj_commons/byte_streams/pushback_stream.clj" });
    const__17 = (Var)RT.var("clj-commons.byte-streams.pushback-stream", "expand-either");
    const__21 = (AFn)RT.map(new Object[] { RT.keyword(null, "private"), Boolean.TRUE, RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "first?"), Symbol.intern(null, "form")) })), RT.keyword(null, "line"), Integer.valueOf(46), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "clj_commons/byte_streams/pushback_stream.clj" });
    const__22 = (Var)RT.var("clj-commons.byte-streams.pushback-stream", "walk");
    const__25 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "inner"), Symbol.intern(null, "outer"), Symbol.intern(null, "form")) })), RT.keyword(null, "line"), Integer.valueOf(59), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "clj_commons/byte_streams/pushback_stream.clj" });
    const__26 = (Var)RT.var("clj-commons.byte-streams.pushback-stream", "prewalk");
    const__29 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "f"), Symbol.intern(null, "form")) })), RT.keyword(null, "line"), Integer.valueOf(70), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "clj_commons/byte_streams/pushback_stream.clj" });
    const__30 = (Var)RT.var("clj-commons.byte-streams.pushback-stream", "both");
    const__33 = (AFn)RT.map(new Object[] { RT.keyword(null, "private"), Boolean.TRUE, RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "body")) })), RT.keyword(null, "line"), Integer.valueOf(74), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "clj_commons/byte_streams/pushback_stream.clj" });
    const__34 = (Var)RT.var("clj-commons.byte-streams.pushback-stream", "pushback-stream");
    const__37 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "capacity")) })), RT.keyword(null, "line"), Integer.valueOf(256), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "clj_commons/byte_streams/pushback_stream.clj" });
    const__38 = (Var)RT.var("clj-commons.byte-streams.pushback-stream", "unsafe-pushback-stream");
    const__41 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "capacity")) })), RT.keyword(null, "line"), Integer.valueOf(266), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "clj_commons/byte_streams/pushback_stream.clj" });
    const__42 = (Var)RT.var("clj-commons.byte-streams.pushback-stream", "classname");
    const__44 = (AFn)RT.map(new Object[] { RT.keyword(null, "line"), Integer.valueOf(276), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "clj_commons/byte_streams/pushback_stream.clj" });
    const__45 = (Var)RT.var("clj-commons.byte-streams.pushback-stream", "put-array");
    const__48 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "p"), Symbol.intern(null, "ary"), Symbol.intern(null, "offset"), Symbol.intern(null, "length")) })), RT.keyword(null, "line"), Integer.valueOf(278), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "clj_commons/byte_streams/pushback_stream.clj" });
    const__49 = (Var)RT.var("clojure.core", "alter-meta!");
    const__50 = (Var)RT.var("clojure.core", "assoc");
    const__51 = (Keyword)RT.keyword(null, "inline");
    const__52 = (Var)RT.var("clj-commons.byte-streams.pushback-stream", "put-buffer");
    const__55 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "p"), Symbol.intern(null, "buf")) })), RT.keyword(null, "line"), Integer.valueOf(282), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "clj_commons/byte_streams/pushback_stream.clj" });
    const__56 = (Var)RT.var("clj-commons.byte-streams.pushback-stream", "close");
    const__59 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "p")) })), RT.keyword(null, "line"), Integer.valueOf(286), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "clj_commons/byte_streams/pushback_stream.clj" });
    const__60 = (Var)RT.var("clj-commons.byte-streams.pushback-stream", "eager-take");
    const__63 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "p"), Symbol.intern(null, "ary"), Symbol.intern(null, "offset"), Symbol.intern(null, "length")) })), RT.keyword(null, "line"), Integer.valueOf(289), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "clj_commons/byte_streams/pushback_stream.clj" });
    const__64 = (Var)RT.var("clj-commons.byte-streams.pushback-stream", "take");
    const__67 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "p"), Symbol.intern(null, "ary"), Symbol.intern(null, "offset"), Symbol.intern(null, "length")) })), RT.keyword(null, "line"), Integer.valueOf(293), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "clj_commons/byte_streams/pushback_stream.clj" });
    const__68 = (Var)RT.var("clj-commons.byte-streams.pushback-stream", "pushback-array");
    const__71 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "p"), Symbol.intern(null, "ary"), Symbol.intern(null, "offset"), Symbol.intern(null, "length")) })), RT.keyword(null, "line"), Integer.valueOf(297), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "clj_commons/byte_streams/pushback_stream.clj" });
    const__72 = (Var)RT.var("clj-commons.byte-streams.pushback-stream", "pushback-buffer");
    const__75 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "p"), Symbol.intern(null, "buf")) })), RT.keyword(null, "line"), Integer.valueOf(301), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "clj_commons/byte_streams/pushback_stream.clj" });
    const__76 = (Var)RT.var("clj-commons.byte-streams.pushback-stream", "->input-stream");
    const__79 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "pushback-stream")) })), RT.keyword(null, "line"), Integer.valueOf(305), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "clj_commons/byte_streams/pushback_stream.clj" });
  }
  
  static  {
    __init0();
    Compiler.pushNSandLoader(RT.classForName("clj_commons.byte_streams.pushback_stream__init").getClassLoader());
    try {
      load();
    } finally {
      Var.popThreadBindings();
    } 
  }
}
