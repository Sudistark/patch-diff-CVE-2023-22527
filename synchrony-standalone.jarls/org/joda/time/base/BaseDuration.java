package org.joda.time.base;

import java.io.Serializable;
import org.joda.time.Chronology;
import org.joda.time.DateTimeUtils;
import org.joda.time.Interval;
import org.joda.time.Period;
import org.joda.time.PeriodType;
import org.joda.time.ReadableDuration;
import org.joda.time.ReadableInstant;
import org.joda.time.convert.ConverterManager;
import org.joda.time.convert.DurationConverter;
import org.joda.time.field.FieldUtils;

public abstract class BaseDuration extends AbstractDuration implements ReadableDuration, Serializable {
  private static final long serialVersionUID = 2581698638990L;
  
  protected BaseDuration(long paramLong) { this.iMillis = paramLong; }
  
  protected BaseDuration(long paramLong1, long paramLong2) { this.iMillis = FieldUtils.safeSubtract(paramLong2, paramLong1); }
  
  protected BaseDuration(ReadableInstant paramReadableInstant1, ReadableInstant paramReadableInstant2) {
    if (paramReadableInstant1 == paramReadableInstant2) {
      this.iMillis = 0L;
    } else {
      long l1 = DateTimeUtils.getInstantMillis(paramReadableInstant1);
      long l2 = DateTimeUtils.getInstantMillis(paramReadableInstant2);
      this.iMillis = FieldUtils.safeSubtract(l2, l1);
    } 
  }
  
  protected BaseDuration(Object paramObject) {
    DurationConverter durationConverter = ConverterManager.getInstance().getDurationConverter(paramObject);
    this.iMillis = durationConverter.getDurationMillis(paramObject);
  }
  
  public long getMillis() { return this.iMillis; }
  
  protected void setMillis(long paramLong) { this.iMillis = paramLong; }
  
  public Period toPeriod(PeriodType paramPeriodType) { return new Period(getMillis(), paramPeriodType); }
  
  public Period toPeriod(Chronology paramChronology) { return new Period(getMillis(), paramChronology); }
  
  public Period toPeriod(PeriodType paramPeriodType, Chronology paramChronology) { return new Period(getMillis(), paramPeriodType, paramChronology); }
  
  public Period toPeriodFrom(ReadableInstant paramReadableInstant) { return new Period(paramReadableInstant, this); }
  
  public Period toPeriodFrom(ReadableInstant paramReadableInstant, PeriodType paramPeriodType) { return new Period(paramReadableInstant, this, paramPeriodType); }
  
  public Period toPeriodTo(ReadableInstant paramReadableInstant) { return new Period(this, paramReadableInstant); }
  
  public Period toPeriodTo(ReadableInstant paramReadableInstant, PeriodType paramPeriodType) { return new Period(this, paramReadableInstant, paramPeriodType); }
  
  public Interval toIntervalFrom(ReadableInstant paramReadableInstant) { return new Interval(paramReadableInstant, this); }
  
  public Interval toIntervalTo(ReadableInstant paramReadableInstant) { return new Interval(this, paramReadableInstant); }
}
