package org.joda.time.field;

import java.io.Serializable;
import java.util.HashMap;
import org.joda.time.DurationField;
import org.joda.time.DurationFieldType;

public final class UnsupportedDurationField extends DurationField implements Serializable {
  private static final long serialVersionUID = -6390301302770925357L;
  
  private static HashMap<DurationFieldType, UnsupportedDurationField> cCache;
  
  private final DurationFieldType iType;
  
  public static UnsupportedDurationField getInstance(DurationFieldType paramDurationFieldType) {
    UnsupportedDurationField unsupportedDurationField;
    if (cCache == null) {
      cCache = new HashMap(7);
      unsupportedDurationField = null;
    } else {
      unsupportedDurationField = (UnsupportedDurationField)cCache.get(paramDurationFieldType);
    } 
    if (unsupportedDurationField == null) {
      unsupportedDurationField = new UnsupportedDurationField(paramDurationFieldType);
      cCache.put(paramDurationFieldType, unsupportedDurationField);
    } 
    return unsupportedDurationField;
  }
  
  private UnsupportedDurationField(DurationFieldType paramDurationFieldType) { this.iType = paramDurationFieldType; }
  
  public final DurationFieldType getType() { return this.iType; }
  
  public String getName() { return this.iType.getName(); }
  
  public boolean isSupported() { return false; }
  
  public boolean isPrecise() { return true; }
  
  public int getValue(long paramLong) { throw unsupported(); }
  
  public long getValueAsLong(long paramLong) { throw unsupported(); }
  
  public int getValue(long paramLong1, long paramLong2) { throw unsupported(); }
  
  public long getValueAsLong(long paramLong1, long paramLong2) { throw unsupported(); }
  
  public long getMillis(int paramInt) { throw unsupported(); }
  
  public long getMillis(long paramLong) { throw unsupported(); }
  
  public long getMillis(int paramInt, long paramLong) { throw unsupported(); }
  
  public long getMillis(long paramLong1, long paramLong2) { throw unsupported(); }
  
  public long add(long paramLong, int paramInt) { throw unsupported(); }
  
  public long add(long paramLong1, long paramLong2) { throw unsupported(); }
  
  public int getDifference(long paramLong1, long paramLong2) { throw unsupported(); }
  
  public long getDifferenceAsLong(long paramLong1, long paramLong2) { throw unsupported(); }
  
  public long getUnitMillis() { return 0L; }
  
  public int compareTo(DurationField paramDurationField) { return 0; }
  
  public boolean equals(Object paramObject) {
    if (this == paramObject)
      return true; 
    if (paramObject instanceof UnsupportedDurationField) {
      UnsupportedDurationField unsupportedDurationField = (UnsupportedDurationField)paramObject;
      if (unsupportedDurationField.getName() == null)
        return (getName() == null); 
      return unsupportedDurationField.getName().equals(getName());
    } 
    return false;
  }
  
  public int hashCode() { return getName().hashCode(); }
  
  public String toString() { return "UnsupportedDurationField[" + getName() + ']'; }
  
  private Object readResolve() { return getInstance(this.iType); }
  
  private UnsupportedOperationException unsupported() { return new UnsupportedOperationException(this.iType + " field is unsupported"); }
}
