package org.apache.log4j.net;

import java.io.IOException;
import java.io.InterruptedIOException;
import org.apache.log4j.AppenderSkeleton;
import org.apache.log4j.spi.LoggingEvent;

public class TelnetAppender extends AppenderSkeleton {
  private SocketHandler sh;
  
  private int port = 23;
  
  public boolean requiresLayout() { return true; }
  
  public void activateOptions() {
    try {
      this.sh = new SocketHandler(this, this.port);
      this.sh.start();
    } catch (InterruptedIOException e) {
      Thread.currentThread().interrupt();
      e.printStackTrace();
    } catch (IOException e) {
      e.printStackTrace();
    } catch (RuntimeException e) {
      e.printStackTrace();
    } 
    super.activateOptions();
  }
  
  public int getPort() { return this.port; }
  
  public void setPort(int port) { this.port = port; }
  
  public void close() {
    if (this.sh != null) {
      this.sh.close();
      try {
        this.sh.join();
      } catch (InterruptedException ex) {
        Thread.currentThread().interrupt();
      } 
    } 
  }
  
  protected void append(LoggingEvent event) {
    if (this.sh != null) {
      this.sh.send(this.layout.format(event));
      if (this.layout.ignoresThrowable()) {
        String[] s = event.getThrowableStrRep();
        if (s != null) {
          StringBuilder buf = new StringBuilder();
          for (int i = 0; i < s.length; i++) {
            buf.append(s[i]);
            buf.append("\r\n");
          } 
          this.sh.send(buf.toString());
        } 
      } 
    } 
  }
}
