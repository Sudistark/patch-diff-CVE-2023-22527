package org.apache.log4j.spi;

import java.io.Serializable;
import org.apache.log4j.helpers.LogLog;

public class LocationInfo implements Serializable {
  String lineNumber;
  
  String fileName;
  
  String className;
  
  String methodName;
  
  public String fullInfo;
  
  public static final String NA = "?";
  
  static final long serialVersionUID = -1325822038990805636L;
  
  public static final LocationInfo NA_LOCATION_INFO = new LocationInfo("?", "?", "?", "?");
  
  public LocationInfo(Throwable t, String fqnOfCallingClass) {
    if (t == null || fqnOfCallingClass == null)
      return; 
    try {
      StackTraceElement[] elements = t.getStackTrace();
      String prevClass = "?";
      for (int i = elements.length - 1; i >= 0; i--) {
        String thisClass = elements[i].getClassName();
        if (fqnOfCallingClass.equals(thisClass)) {
          int caller = i + 1;
          if (caller < elements.length) {
            this.className = prevClass;
            this.methodName = elements[caller].getMethodName();
            this.fileName = elements[caller].getFileName();
            if (this.fileName == null)
              this.fileName = "?"; 
            int line = elements[caller].getLineNumber();
            if (line < 0) {
              this.lineNumber = "?";
            } else {
              this.lineNumber = Integer.toString(line);
            } 
            StringBuilder buf = new StringBuilder();
            buf.append(this.className);
            buf.append(".");
            buf.append(this.methodName);
            buf.append("(");
            buf.append(this.fileName);
            buf.append(":");
            buf.append(this.lineNumber);
            buf.append(")");
            this.fullInfo = buf.toString();
          } 
          return;
        } 
        prevClass = thisClass;
      } 
      return;
    } catch (RuntimeException ex) {
      LogLog.debug("LocationInfo construction failed", ex);
      return;
    } 
  }
  
  private static final void appendFragment(StringBuilder buf, String fragment) {
    if (fragment == null) {
      buf.append("?");
    } else {
      buf.append(fragment);
    } 
  }
  
  public LocationInfo(String file, String classname, String method, String line) {
    this.fileName = file;
    this.className = classname;
    this.methodName = method;
    this.lineNumber = line;
    StringBuilder buf = new StringBuilder();
    appendFragment(buf, classname);
    buf.append(".");
    appendFragment(buf, method);
    buf.append("(");
    appendFragment(buf, file);
    buf.append(":");
    appendFragment(buf, line);
    buf.append(")");
    this.fullInfo = buf.toString();
  }
  
  public String getClassName() {
    if (this.fullInfo == null)
      return "?"; 
    if (this.className != null)
      return this.className; 
    int iend = this.fullInfo.lastIndexOf('(');
    if (iend == -1) {
      this.className = "?";
    } else {
      iend = this.fullInfo.lastIndexOf('.', iend);
      int ibegin = 0;
      if (iend == -1) {
        this.className = "?";
      } else {
        this.className = this.fullInfo.substring(ibegin, iend);
      } 
    } 
    return this.className;
  }
  
  public String getFileName() {
    if (this.fullInfo == null)
      return "?"; 
    if (this.fileName == null) {
      int iend = this.fullInfo.lastIndexOf(':');
      if (iend == -1) {
        this.fileName = "?";
      } else {
        int ibegin = this.fullInfo.lastIndexOf('(', iend - 1);
        this.fileName = this.fullInfo.substring(ibegin + 1, iend);
      } 
    } 
    return this.fileName;
  }
  
  public String getLineNumber() {
    if (this.fullInfo == null)
      return "?"; 
    if (this.lineNumber == null) {
      int iend = this.fullInfo.lastIndexOf(')');
      int ibegin = this.fullInfo.lastIndexOf(':', iend - 1);
      if (ibegin == -1) {
        this.lineNumber = "?";
      } else {
        this.lineNumber = this.fullInfo.substring(ibegin + 1, iend);
      } 
    } 
    return this.lineNumber;
  }
  
  public String getMethodName() {
    if (this.fullInfo == null)
      return "?"; 
    if (this.methodName == null) {
      int iend = this.fullInfo.lastIndexOf('(');
      int ibegin = this.fullInfo.lastIndexOf('.', iend);
      if (ibegin == -1) {
        this.methodName = "?";
      } else {
        this.methodName = this.fullInfo.substring(ibegin + 1, iend);
      } 
    } 
    return this.methodName;
  }
}
