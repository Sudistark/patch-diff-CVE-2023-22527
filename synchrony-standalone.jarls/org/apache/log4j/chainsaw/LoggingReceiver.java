package org.apache.log4j.chainsaw;

import java.io.IOException;
import java.net.ServerSocket;
import java.net.Socket;
import org.apache.log4j.Logger;

class LoggingReceiver extends Thread {
  private static final Logger LOG = Logger.getLogger(LoggingReceiver.class);
  
  private MyTableModel mModel;
  
  private ServerSocket mSvrSock;
  
  LoggingReceiver(MyTableModel aModel, int aPort) throws IOException {
    setDaemon(true);
    this.mModel = aModel;
    this.mSvrSock = new ServerSocket(aPort);
  }
  
  public void run() {
    LOG.info("Thread started");
    try {
      while (true) {
        LOG.debug("Waiting for a connection");
        Socket client = this.mSvrSock.accept();
        LOG.debug("Got a connection from " + client.getInetAddress().getHostName());
        Thread t = new Thread(new Slurper(this, client));
        t.setDaemon(true);
        t.start();
      } 
    } catch (IOException e) {
      LOG.error("Error in accepting connections, stopping.", e);
      return;
    } 
  }
}
