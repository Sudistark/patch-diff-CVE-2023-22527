package org.apache.commons.codec.language.bm;

import java.util.Collections;
import java.util.EnumMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Scanner;
import java.util.Set;
import org.apache.commons.codec.Resources;

public class Languages {
  public static final String ANY = "any";
  
  private static final Map<NameType, Languages> LANGUAGES = new EnumMap(NameType.class);
  
  public static final LanguageSet NO_LANGUAGES = new Object();
  
  public static final LanguageSet ANY_LANGUAGE = new Object();
  
  private final Set<String> languages;
  
  static  {
    for (NameType s : NameType.values())
      LANGUAGES.put(s, getInstance(langResourceName(s))); 
  }
  
  public static Languages getInstance(NameType nameType) { return (Languages)LANGUAGES.get(nameType); }
  
  public static Languages getInstance(String languagesResourceName) {
    Set<String> ls = new HashSet<String>();
    try (Scanner lsScanner = new Scanner(Resources.getInputStream(languagesResourceName), "UTF-8")) {
      boolean inExtendedComment = false;
      while (lsScanner.hasNextLine()) {
        String line = lsScanner.nextLine().trim();
        if (inExtendedComment) {
          if (line.endsWith("*/"))
            inExtendedComment = false; 
          continue;
        } 
        if (line.startsWith("/*")) {
          inExtendedComment = true;
          continue;
        } 
        if (!line.isEmpty())
          ls.add(line); 
      } 
      return new Languages(Collections.unmodifiableSet(ls));
    } 
  }
  
  private static String langResourceName(NameType nameType) { return String.format("org/apache/commons/codec/language/bm/%s_languages.txt", new Object[] { nameType.getName() }); }
  
  private Languages(Set<String> languages) { this.languages = languages; }
  
  public Set<String> getLanguages() { return this.languages; }
}
