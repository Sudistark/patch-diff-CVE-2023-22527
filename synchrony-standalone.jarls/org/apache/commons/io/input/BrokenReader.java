package org.apache.commons.io.input;

import java.io.IOException;
import java.io.Reader;
import java.util.function.Supplier;

public class BrokenReader extends Reader {
  public static final BrokenReader INSTANCE = new BrokenReader();
  
  private final Supplier<IOException> exceptionSupplier;
  
  public BrokenReader() { this(() -> new IOException("Broken reader")); }
  
  public BrokenReader(IOException exception) { this(() -> exception); }
  
  public BrokenReader(Supplier<IOException> exceptionSupplier) { this.exceptionSupplier = exceptionSupplier; }
  
  public void close() { throw (IOException)this.exceptionSupplier.get(); }
  
  public void mark(int readAheadLimit) throws IOException { throw (IOException)this.exceptionSupplier.get(); }
  
  public int read(char[] cbuf, int off, int len) throws IOException { throw (IOException)this.exceptionSupplier.get(); }
  
  public boolean ready() throws IOException { throw (IOException)this.exceptionSupplier.get(); }
  
  public void reset() { throw (IOException)this.exceptionSupplier.get(); }
  
  public long skip(long n) throws IOException { throw (IOException)this.exceptionSupplier.get(); }
}
