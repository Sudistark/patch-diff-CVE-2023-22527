package org.apache.commons.io.input;

import java.io.IOException;
import java.io.InputStream;

public class WindowsLineEndingInputStream extends InputStream {
  private boolean atEos;
  
  private boolean atSlashCr;
  
  private boolean atSlashLf;
  
  private final InputStream in;
  
  private boolean injectSlashLf;
  
  private final boolean lineFeedAtEndOfFile;
  
  public WindowsLineEndingInputStream(InputStream in, boolean ensureLineFeedAtEndOfFile) {
    this.in = in;
    this.lineFeedAtEndOfFile = ensureLineFeedAtEndOfFile;
  }
  
  public void close() throws IOException {
    super.close();
    this.in.close();
  }
  
  private int handleEos() {
    if (!this.lineFeedAtEndOfFile)
      return -1; 
    if (!this.atSlashLf && !this.atSlashCr) {
      this.atSlashCr = true;
      return 13;
    } 
    if (!this.atSlashLf) {
      this.atSlashCr = false;
      this.atSlashLf = true;
      return 10;
    } 
    return -1;
  }
  
  public void mark(int readlimit) { throw UnsupportedOperationExceptions.mark(); }
  
  public int read() {
    if (this.atEos)
      return handleEos(); 
    if (this.injectSlashLf) {
      this.injectSlashLf = false;
      return 10;
    } 
    boolean prevWasSlashR = this.atSlashCr;
    int target = readWithUpdate();
    if (this.atEos)
      return handleEos(); 
    if (target == 10 && !prevWasSlashR) {
      this.injectSlashLf = true;
      return 13;
    } 
    return target;
  }
  
  private int readWithUpdate() {
    int target = this.in.read();
    this.atEos = (target == -1);
    if (this.atEos)
      return target; 
    this.atSlashCr = (target == 13);
    this.atSlashLf = (target == 10);
    return target;
  }
}
