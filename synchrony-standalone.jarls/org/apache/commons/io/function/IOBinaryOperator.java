package org.apache.commons.io.function;

import java.io.IOException;
import java.util.Objects;
import java.util.function.BinaryOperator;

@FunctionalInterface
public interface IOBinaryOperator<T> extends IOBiFunction<T, T, T> {
  static <T> IOBinaryOperator<T> maxBy(IOComparator<? super T> comparator) {
    Objects.requireNonNull(comparator);
    return (a, b) -> (comparator.compare(a, b) >= 0) ? a : b;
  }
  
  static <T> IOBinaryOperator<T> minBy(IOComparator<? super T> comparator) {
    Objects.requireNonNull(comparator);
    return (a, b) -> (comparator.compare(a, b) <= 0) ? a : b;
  }
  
  default BinaryOperator<T> asBinaryOperator() { return (t, u) -> Uncheck.apply(this, t, u); }
}
