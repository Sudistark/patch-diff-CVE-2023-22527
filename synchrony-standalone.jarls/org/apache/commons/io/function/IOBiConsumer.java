package org.apache.commons.io.function;

import java.io.IOException;
import java.util.Objects;
import java.util.function.BiConsumer;

@FunctionalInterface
public interface IOBiConsumer<T, U> {
  static <T, U> IOBiConsumer<T, U> noop() { return Constants.IO_BI_CONSUMER; }
  
  default IOBiConsumer<T, U> andThen(IOBiConsumer<? super T, ? super U> after) {
    Objects.requireNonNull(after);
    return (t, u) -> {
        accept(t, u);
        after.accept(t, u);
      };
  }
  
  default BiConsumer<T, U> asBiConsumer() { return (t, u) -> Uncheck.accept(this, t, u); }
  
  void accept(T paramT, U paramU) throws IOException;
}
