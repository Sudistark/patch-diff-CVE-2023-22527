package org.apache.commons.compress.harmony.unpack200.bytecode;

public class CPInterfaceMethodRef extends CPRef {
  private boolean hashCodeComputed;
  
  private int cachedHashCode;
  
  public CPInterfaceMethodRef(CPClass className, CPNameAndType descriptor, int globalIndex) { super((byte)11, className, descriptor, globalIndex); }
  
  private void generateHashCode() {
    this.hashCodeComputed = true;
    int PRIME = 31;
    int result = 1;
    result = 31 * result + this.className.hashCode();
    result = 31 * result + this.nameAndType.hashCode();
    this.cachedHashCode = result;
  }
  
  public int hashCode() {
    if (!this.hashCodeComputed)
      generateHashCode(); 
    return this.cachedHashCode;
  }
  
  public int invokeInterfaceCount() { return this.nameAndType.invokeInterfaceCount(); }
}
