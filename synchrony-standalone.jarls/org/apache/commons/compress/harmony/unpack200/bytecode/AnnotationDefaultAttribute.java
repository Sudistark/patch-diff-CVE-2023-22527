package org.apache.commons.compress.harmony.unpack200.bytecode;

import java.io.DataOutputStream;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

public class AnnotationDefaultAttribute extends AnnotationsAttribute {
  private static CPUTF8 attributeName;
  
  private final AnnotationsAttribute.ElementValue elementValue;
  
  public static void setAttributeName(CPUTF8 cpUTF8Value) { attributeName = cpUTF8Value; }
  
  public AnnotationDefaultAttribute(AnnotationsAttribute.ElementValue elementValue) {
    super(attributeName);
    this.elementValue = elementValue;
  }
  
  public boolean equals(Object obj) { return (this == obj); }
  
  protected int getLength() { return this.elementValue.getLength(); }
  
  protected ClassFileEntry[] getNestedClassFileEntries() {
    List<Object> nested = new ArrayList<Object>();
    nested.add(attributeName);
    nested.addAll(this.elementValue.getClassFileEntries());
    ClassFileEntry[] nestedEntries = new ClassFileEntry[nested.size()];
    for (int i = 0; i < nestedEntries.length; i++)
      nestedEntries[i] = (ClassFileEntry)nested.get(i); 
    return nestedEntries;
  }
  
  protected void resolve(ClassConstantPool pool) {
    super.resolve(pool);
    this.elementValue.resolve(pool);
  }
  
  public String toString() { return "AnnotationDefault: " + this.elementValue; }
  
  protected void writeBody(DataOutputStream dos) throws IOException { this.elementValue.writeBody(dos); }
}
