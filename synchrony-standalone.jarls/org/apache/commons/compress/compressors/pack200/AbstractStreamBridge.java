package org.apache.commons.compress.compressors.pack200;

import java.io.FilterOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;

abstract class AbstractStreamBridge extends FilterOutputStream {
  private InputStream input;
  
  private final Object inputLock = new Object();
  
  protected AbstractStreamBridge() { this(null); }
  
  protected AbstractStreamBridge(OutputStream out) { super(out); }
  
  InputStream getInput() throws IOException {
    synchronized (this.inputLock) {
      if (this.input == null)
        this.input = getInputView(); 
    } 
    return this.input;
  }
  
  abstract InputStream getInputView() throws IOException;
  
  void stop() {
    close();
    synchronized (this.inputLock) {
      if (this.input != null) {
        this.input.close();
        this.input = null;
      } 
    } 
  }
}
