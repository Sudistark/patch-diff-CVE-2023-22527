package org.bouncycastle.asn1.cmp;

import org.bouncycastle.asn1.ASN1Object;
import org.bouncycastle.asn1.ASN1Primitive;
import org.bouncycastle.asn1.ASN1Sequence;
import org.bouncycastle.asn1.DERSequence;

public class GenRepContent extends ASN1Object {
  private ASN1Sequence content;
  
  private GenRepContent(ASN1Sequence paramASN1Sequence) { this.content = paramASN1Sequence; }
  
  public static GenRepContent getInstance(Object paramObject) { return (paramObject instanceof GenRepContent) ? (GenRepContent)paramObject : ((paramObject != null) ? new GenRepContent(ASN1Sequence.getInstance(paramObject)) : null); }
  
  public GenRepContent(InfoTypeAndValue paramInfoTypeAndValue) { this.content = new DERSequence(paramInfoTypeAndValue); }
  
  public GenRepContent(InfoTypeAndValue[] paramArrayOfInfoTypeAndValue) { this.content = new DERSequence(paramArrayOfInfoTypeAndValue); }
  
  public InfoTypeAndValue[] toInfoTypeAndValueArray() {
    InfoTypeAndValue[] arrayOfInfoTypeAndValue = new InfoTypeAndValue[this.content.size()];
    for (byte b = 0; b != arrayOfInfoTypeAndValue.length; b++)
      arrayOfInfoTypeAndValue[b] = InfoTypeAndValue.getInstance(this.content.getObjectAt(b)); 
    return arrayOfInfoTypeAndValue;
  }
  
  public ASN1Primitive toASN1Primitive() { return this.content; }
}
