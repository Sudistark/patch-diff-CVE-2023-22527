package org.bouncycastle.asn1.its;

import java.math.BigInteger;
import org.bouncycastle.asn1.ASN1Integer;
import org.bouncycastle.asn1.ASN1Object;
import org.bouncycastle.asn1.ASN1Primitive;
import org.bouncycastle.util.BigIntegers;

public class IValue extends ASN1Object {
  private final BigInteger value;
  
  private IValue(ASN1Integer paramASN1Integer) {
    int i = BigIntegers.intValueExact(paramASN1Integer.getValue());
    if (i < 0 || i > 65535)
      throw new IllegalArgumentException("value out of range"); 
    this.value = paramASN1Integer.getValue();
  }
  
  public static IValue getInstance(Object paramObject) { return (paramObject instanceof IValue) ? (IValue)paramObject : ((paramObject != null) ? new IValue(ASN1Integer.getInstance(paramObject)) : null); }
  
  public ASN1Primitive toASN1Primitive() { return new ASN1Integer(this.value); }
}
