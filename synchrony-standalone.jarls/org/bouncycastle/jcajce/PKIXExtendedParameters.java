package org.bouncycastle.jcajce;

import java.security.cert.CertPathParameters;
import java.security.cert.CertStore;
import java.security.cert.PKIXParameters;
import java.security.cert.TrustAnchor;
import java.util.Collections;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Set;
import org.bouncycastle.asn1.x509.GeneralName;

public class PKIXExtendedParameters implements CertPathParameters {
  public static final int PKIX_VALIDITY_MODEL = 0;
  
  public static final int CHAIN_VALIDITY_MODEL = 1;
  
  private final PKIXParameters baseParameters;
  
  private final PKIXCertStoreSelector targetConstraints;
  
  private final Date validityDate;
  
  private final Date date;
  
  private final List<PKIXCertStore> extraCertStores;
  
  private final Map<GeneralName, PKIXCertStore> namedCertificateStoreMap;
  
  private final List<PKIXCRLStore> extraCRLStores;
  
  private final Map<GeneralName, PKIXCRLStore> namedCRLStoreMap;
  
  private final boolean revocationEnabled;
  
  private final boolean useDeltas;
  
  private final int validityModel;
  
  private final Set<TrustAnchor> trustAnchors;
  
  private PKIXExtendedParameters(Builder paramBuilder) {
    this.baseParameters = Builder.access$1100(paramBuilder);
    this.validityDate = Builder.access$1200(paramBuilder);
    this.date = Builder.access$1300(paramBuilder);
    this.extraCertStores = Collections.unmodifiableList(Builder.access$1400(paramBuilder));
    this.namedCertificateStoreMap = Collections.unmodifiableMap(new HashMap(Builder.access$1500(paramBuilder)));
    this.extraCRLStores = Collections.unmodifiableList(Builder.access$1600(paramBuilder));
    this.namedCRLStoreMap = Collections.unmodifiableMap(new HashMap(Builder.access$1700(paramBuilder)));
    this.targetConstraints = Builder.access$1800(paramBuilder);
    this.revocationEnabled = Builder.access$1900(paramBuilder);
    this.useDeltas = Builder.access$2000(paramBuilder);
    this.validityModel = Builder.access$2100(paramBuilder);
    this.trustAnchors = Collections.unmodifiableSet(Builder.access$2200(paramBuilder));
  }
  
  public List<PKIXCertStore> getCertificateStores() { return this.extraCertStores; }
  
  public Map<GeneralName, PKIXCertStore> getNamedCertificateStoreMap() { return this.namedCertificateStoreMap; }
  
  public List<PKIXCRLStore> getCRLStores() { return this.extraCRLStores; }
  
  public Map<GeneralName, PKIXCRLStore> getNamedCRLStoreMap() { return this.namedCRLStoreMap; }
  
  public Date getValidityDate() { return (null == this.validityDate) ? null : new Date(this.validityDate.getTime()); }
  
  public Date getDate() { return new Date(this.date.getTime()); }
  
  public boolean isUseDeltasEnabled() { return this.useDeltas; }
  
  public int getValidityModel() { return this.validityModel; }
  
  public Object clone() { return this; }
  
  public PKIXCertStoreSelector getTargetConstraints() { return this.targetConstraints; }
  
  public Set getTrustAnchors() { return this.trustAnchors; }
  
  public Set getInitialPolicies() { return this.baseParameters.getInitialPolicies(); }
  
  public String getSigProvider() { return this.baseParameters.getSigProvider(); }
  
  public boolean isExplicitPolicyRequired() { return this.baseParameters.isExplicitPolicyRequired(); }
  
  public boolean isAnyPolicyInhibited() { return this.baseParameters.isAnyPolicyInhibited(); }
  
  public boolean isPolicyMappingInhibited() { return this.baseParameters.isPolicyMappingInhibited(); }
  
  public List getCertPathCheckers() { return this.baseParameters.getCertPathCheckers(); }
  
  public List<CertStore> getCertStores() { return this.baseParameters.getCertStores(); }
  
  public boolean isRevocationEnabled() { return this.revocationEnabled; }
  
  public boolean getPolicyQualifiersRejected() { return this.baseParameters.getPolicyQualifiersRejected(); }
}
