package org.bouncycastle.mail.smime;

import java.io.BufferedInputStream;
import java.io.IOException;
import java.io.InputStream;
import javax.mail.MessagingException;
import javax.mail.Part;
import javax.mail.internet.MimeBodyPart;
import javax.mail.internet.MimeMessage;
import javax.mail.internet.MimePart;
import org.bouncycastle.cms.CMSCompressedDataParser;
import org.bouncycastle.cms.CMSException;

public class SMIMECompressedParser extends CMSCompressedDataParser {
  private final MimePart message;
  
  private static InputStream getInputStream(Part paramPart, int paramInt) throws MessagingException {
    try {
      InputStream inputStream = paramPart.getInputStream();
      return (paramInt == 0) ? new BufferedInputStream(inputStream) : new BufferedInputStream(inputStream, paramInt);
    } catch (IOException iOException) {
      throw new MessagingException("can't extract input stream: " + iOException);
    } 
  }
  
  public SMIMECompressedParser(MimeBodyPart paramMimeBodyPart) throws MessagingException, CMSException { this(paramMimeBodyPart, 0); }
  
  public SMIMECompressedParser(MimeMessage paramMimeMessage) throws MessagingException, CMSException { this(paramMimeMessage, 0); }
  
  public SMIMECompressedParser(MimeBodyPart paramMimeBodyPart, int paramInt) throws MessagingException, CMSException {
    super(getInputStream(paramMimeBodyPart, paramInt));
    this.message = paramMimeBodyPart;
  }
  
  public SMIMECompressedParser(MimeMessage paramMimeMessage, int paramInt) throws MessagingException, CMSException {
    super(getInputStream(paramMimeMessage, paramInt));
    this.message = paramMimeMessage;
  }
  
  public MimePart getCompressedContent() { return this.message; }
}
