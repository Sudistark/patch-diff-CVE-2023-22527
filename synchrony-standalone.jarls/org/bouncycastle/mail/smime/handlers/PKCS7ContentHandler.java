package org.bouncycastle.mail.smime.handlers;

import java.awt.datatransfer.DataFlavor;
import java.io.BufferedInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import javax.activation.ActivationDataFlavor;
import javax.activation.DataContentHandler;
import javax.activation.DataSource;
import javax.mail.MessagingException;
import javax.mail.internet.MimeBodyPart;
import org.bouncycastle.mail.smime.SMIMEStreamingProcessor;

public class PKCS7ContentHandler implements DataContentHandler {
  private final ActivationDataFlavor _adf;
  
  private final DataFlavor[] _dfs;
  
  PKCS7ContentHandler(ActivationDataFlavor paramActivationDataFlavor, DataFlavor[] paramArrayOfDataFlavor) {
    this._adf = paramActivationDataFlavor;
    this._dfs = paramArrayOfDataFlavor;
  }
  
  public Object getContent(DataSource paramDataSource) throws IOException { return paramDataSource.getInputStream(); }
  
  public Object getTransferData(DataFlavor paramDataFlavor, DataSource paramDataSource) throws IOException { return this._adf.equals(paramDataFlavor) ? getContent(paramDataSource) : null; }
  
  public DataFlavor[] getTransferDataFlavors() { return this._dfs; }
  
  public void writeTo(Object paramObject, String paramString, OutputStream paramOutputStream) throws IOException {
    if (paramObject instanceof MimeBodyPart) {
      try {
        ((MimeBodyPart)paramObject).writeTo(paramOutputStream);
      } catch (MessagingException messagingException) {
        throw new IOException(messagingException.getMessage());
      } 
    } else if (paramObject instanceof byte[]) {
      paramOutputStream.write((byte[])paramObject);
    } else if (paramObject instanceof InputStream) {
      InputStream inputStream = (InputStream)paramObject;
      if (!(inputStream instanceof BufferedInputStream))
        inputStream = new BufferedInputStream(inputStream); 
      int i;
      while ((i = inputStream.read()) >= 0)
        paramOutputStream.write(i); 
      inputStream.close();
    } else if (paramObject instanceof SMIMEStreamingProcessor) {
      SMIMEStreamingProcessor sMIMEStreamingProcessor = (SMIMEStreamingProcessor)paramObject;
      sMIMEStreamingProcessor.write(paramOutputStream);
    } else {
      throw new IOException("unknown object in writeTo " + paramObject);
    } 
  }
}
