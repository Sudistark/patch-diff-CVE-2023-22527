package org.bouncycastle.mail.smime.handlers;

import java.awt.datatransfer.DataFlavor;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import javax.activation.ActivationDataFlavor;
import javax.activation.DataContentHandler;
import javax.activation.DataSource;
import javax.mail.MessagingException;
import javax.mail.internet.MimeBodyPart;

public class x_pkcs7_signature implements DataContentHandler {
  private static final ActivationDataFlavor ADF = new ActivationDataFlavor(MimeBodyPart.class, "application/x-pkcs7-signature", "Signature");
  
  private static final DataFlavor[] ADFs = { ADF };
  
  public Object getContent(DataSource paramDataSource) throws IOException { return paramDataSource.getInputStream(); }
  
  public Object getTransferData(DataFlavor paramDataFlavor, DataSource paramDataSource) throws IOException { return ADF.equals(paramDataFlavor) ? getContent(paramDataSource) : null; }
  
  public DataFlavor[] getTransferDataFlavors() { return ADFs; }
  
  public void writeTo(Object paramObject, String paramString, OutputStream paramOutputStream) throws IOException {
    if (paramObject instanceof MimeBodyPart) {
      try {
        ((MimeBodyPart)paramObject).writeTo(paramOutputStream);
      } catch (MessagingException messagingException) {
        throw new IOException(messagingException.getMessage());
      } 
    } else if (paramObject instanceof byte[]) {
      paramOutputStream.write((byte[])paramObject);
    } else if (paramObject instanceof InputStream) {
      InputStream inputStream = (InputStream)paramObject;
      int i;
      while ((i = inputStream.read()) >= 0)
        paramOutputStream.write(i); 
    } else {
      throw new IOException("unknown object in writeTo " + paramObject);
    } 
  }
}
