package org.bouncycastle.mail.smime.examples;

import java.io.FileInputStream;
import java.security.KeyStore;
import java.security.PrivateKey;
import java.security.cert.X509Certificate;
import java.util.Enumeration;
import java.util.Properties;
import javax.mail.Session;
import javax.mail.internet.MimeBodyPart;
import javax.mail.internet.MimeMessage;
import org.bouncycastle.cms.RecipientInformation;
import org.bouncycastle.cms.RecipientInformationStore;
import org.bouncycastle.cms.jcajce.JceKeyTransEnvelopedRecipient;
import org.bouncycastle.cms.jcajce.JceKeyTransRecipientId;
import org.bouncycastle.mail.smime.SMIMEEnveloped;
import org.bouncycastle.mail.smime.SMIMEUtil;

public class ReadEncryptedMail {
  public static void main(String[] paramArrayOfString) throws Exception {
    if (paramArrayOfString.length != 2) {
      System.err.println("usage: ReadEncryptedMail pkcs12Keystore password");
      System.exit(0);
    } 
    KeyStore keyStore = KeyStore.getInstance("PKCS12", "BC");
    keyStore.load(new FileInputStream(paramArrayOfString[0]), paramArrayOfString[1].toCharArray());
    Enumeration enumeration = keyStore.aliases();
    String str = null;
    while (enumeration.hasMoreElements()) {
      String str1 = (String)enumeration.nextElement();
      if (keyStore.isKeyEntry(str1))
        str = str1; 
    } 
    if (str == null) {
      System.err.println("can't find a private key!");
      System.exit(0);
    } 
    X509Certificate x509Certificate = (X509Certificate)keyStore.getCertificate(str);
    JceKeyTransRecipientId jceKeyTransRecipientId = new JceKeyTransRecipientId(x509Certificate);
    Properties properties = System.getProperties();
    Session session = Session.getDefaultInstance(properties, null);
    MimeMessage mimeMessage = new MimeMessage(session, new FileInputStream("encrypted.message"));
    SMIMEEnveloped sMIMEEnveloped = new SMIMEEnveloped(mimeMessage);
    RecipientInformationStore recipientInformationStore = sMIMEEnveloped.getRecipientInfos();
    RecipientInformation recipientInformation = recipientInformationStore.get(jceKeyTransRecipientId);
    MimeBodyPart mimeBodyPart = SMIMEUtil.toMimeBodyPart(recipientInformation.getContent((new JceKeyTransEnvelopedRecipient((PrivateKey)keyStore.getKey(str, null))).setProvider("BC")));
    System.out.println("Message Contents");
    System.out.println("----------------");
    System.out.println(mimeBodyPart.getContent());
  }
}
