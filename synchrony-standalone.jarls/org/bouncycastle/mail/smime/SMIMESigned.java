package org.bouncycastle.mail.smime;

import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.security.AccessController;
import javax.activation.CommandMap;
import javax.activation.MailcapCommandMap;
import javax.mail.MessagingException;
import javax.mail.Part;
import javax.mail.Session;
import javax.mail.internet.MimeBodyPart;
import javax.mail.internet.MimeMessage;
import javax.mail.internet.MimeMultipart;
import javax.mail.internet.MimePart;
import org.bouncycastle.cms.CMSException;
import org.bouncycastle.cms.CMSSignedData;
import org.bouncycastle.cms.CMSTypedData;

public class SMIMESigned extends CMSSignedData {
  Object message;
  
  MimeBodyPart content;
  
  private static InputStream getInputStream(Part paramPart) throws MessagingException {
    try {
      if (paramPart.isMimeType("multipart/signed"))
        throw new MessagingException("attempt to create signed data object from multipart content - use MimeMultipart constructor."); 
      return paramPart.getInputStream();
    } catch (IOException iOException) {
      throw new MessagingException("can't extract input stream: " + iOException);
    } 
  }
  
  public SMIMESigned(MimeMultipart paramMimeMultipart) throws MessagingException, CMSException {
    super(new CMSProcessableBodyPartInbound(paramMimeMultipart.getBodyPart(0)), getInputStream(paramMimeMultipart.getBodyPart(1)));
    this.message = paramMimeMultipart;
    this.content = (MimeBodyPart)paramMimeMultipart.getBodyPart(0);
  }
  
  public SMIMESigned(MimeMultipart paramMimeMultipart, String paramString) throws MessagingException, CMSException {
    super(new CMSProcessableBodyPartInbound(paramMimeMultipart.getBodyPart(0), paramString), getInputStream(paramMimeMultipart.getBodyPart(1)));
    this.message = paramMimeMultipart;
    this.content = (MimeBodyPart)paramMimeMultipart.getBodyPart(0);
  }
  
  public SMIMESigned(Part paramPart) throws MessagingException, CMSException, SMIMEException {
    super(getInputStream(paramPart));
    this.message = paramPart;
    CMSTypedData cMSTypedData = getSignedContent();
    if (cMSTypedData != null) {
      byte[] arrayOfByte = (byte[])cMSTypedData.getContent();
      this.content = SMIMEUtil.toMimeBodyPart(arrayOfByte);
    } 
  }
  
  public MimeBodyPart getContent() { return this.content; }
  
  public MimeMessage getContentAsMimeMessage(Session paramSession) throws MessagingException, IOException {
    Object object = getSignedContent().getContent();
    byte[] arrayOfByte = null;
    if (object instanceof byte[]) {
      arrayOfByte = (byte[])object;
    } else if (object instanceof MimePart) {
      ByteArrayOutputStream byteArrayOutputStream;
      MimePart mimePart = (MimePart)object;
      if (mimePart.getSize() > 0) {
        byteArrayOutputStream = new ByteArrayOutputStream(mimePart.getSize());
      } else {
        byteArrayOutputStream = new ByteArrayOutputStream();
      } 
      mimePart.writeTo(byteArrayOutputStream);
      arrayOfByte = byteArrayOutputStream.toByteArray();
    } else {
      String str = "<null>";
      if (object != null)
        str = object.getClass().getName(); 
      throw new MessagingException("Could not transfrom content of type " + str + " into MimeMessage.");
    } 
    if (arrayOfByte != null) {
      ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(arrayOfByte);
      return new MimeMessage(paramSession, byteArrayInputStream);
    } 
    return null;
  }
  
  public Object getContentWithSignature() { return this.message; }
  
  static  {
    MailcapCommandMap mailcapCommandMap = (MailcapCommandMap)CommandMap.getDefaultCommandMap();
    mailcapCommandMap.addMailcap("application/pkcs7-signature;; x-java-content-handler=org.bouncycastle.mail.smime.handlers.pkcs7_signature");
    mailcapCommandMap.addMailcap("application/pkcs7-mime;; x-java-content-handler=org.bouncycastle.mail.smime.handlers.pkcs7_mime");
    mailcapCommandMap.addMailcap("application/x-pkcs7-signature;; x-java-content-handler=org.bouncycastle.mail.smime.handlers.x_pkcs7_signature");
    mailcapCommandMap.addMailcap("application/x-pkcs7-mime;; x-java-content-handler=org.bouncycastle.mail.smime.handlers.x_pkcs7_mime");
    mailcapCommandMap.addMailcap("multipart/signed;; x-java-content-handler=org.bouncycastle.mail.smime.handlers.multipart_signed");
    AccessController.doPrivileged(new Object(mailcapCommandMap));
  }
}
