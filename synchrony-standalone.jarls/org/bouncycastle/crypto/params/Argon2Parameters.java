package org.bouncycastle.crypto.params;

import org.bouncycastle.crypto.CharToByteConverter;
import org.bouncycastle.util.Arrays;

public class Argon2Parameters {
  public static final int ARGON2_d = 0;
  
  public static final int ARGON2_i = 1;
  
  public static final int ARGON2_id = 2;
  
  public static final int ARGON2_VERSION_10 = 16;
  
  public static final int ARGON2_VERSION_13 = 19;
  
  private static final int DEFAULT_ITERATIONS = 3;
  
  private static final int DEFAULT_MEMORY_COST = 12;
  
  private static final int DEFAULT_LANES = 1;
  
  private static final int DEFAULT_TYPE = 1;
  
  private static final int DEFAULT_VERSION = 19;
  
  private final byte[] salt;
  
  private final byte[] secret;
  
  private final byte[] additional;
  
  private final int iterations;
  
  private final int memory;
  
  private final int lanes;
  
  private final int version;
  
  private final int type;
  
  private final CharToByteConverter converter;
  
  private Argon2Parameters(int paramInt1, byte[] paramArrayOfByte1, byte[] paramArrayOfByte2, byte[] paramArrayOfByte3, int paramInt2, int paramInt3, int paramInt4, int paramInt5, CharToByteConverter paramCharToByteConverter) {
    this.salt = Arrays.clone(paramArrayOfByte1);
    this.secret = Arrays.clone(paramArrayOfByte2);
    this.additional = Arrays.clone(paramArrayOfByte3);
    this.iterations = paramInt2;
    this.memory = paramInt3;
    this.lanes = paramInt4;
    this.version = paramInt5;
    this.type = paramInt1;
    this.converter = paramCharToByteConverter;
  }
  
  public byte[] getSalt() { return Arrays.clone(this.salt); }
  
  public byte[] getSecret() { return Arrays.clone(this.secret); }
  
  public byte[] getAdditional() { return Arrays.clone(this.additional); }
  
  public int getIterations() { return this.iterations; }
  
  public int getMemory() { return this.memory; }
  
  public int getLanes() { return this.lanes; }
  
  public int getVersion() { return this.version; }
  
  public int getType() { return this.type; }
  
  public CharToByteConverter getCharToByteConverter() { return this.converter; }
  
  public void clear() {
    Arrays.clear(this.salt);
    Arrays.clear(this.secret);
    Arrays.clear(this.additional);
  }
}
