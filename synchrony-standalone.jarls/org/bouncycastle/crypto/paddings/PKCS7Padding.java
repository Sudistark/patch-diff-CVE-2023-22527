package org.bouncycastle.crypto.paddings;

import java.security.SecureRandom;
import org.bouncycastle.crypto.InvalidCipherTextException;

public class PKCS7Padding implements BlockCipherPadding {
  public void init(SecureRandom paramSecureRandom) throws IllegalArgumentException {}
  
  public String getPaddingName() { return "PKCS7"; }
  
  public int addPadding(byte[] paramArrayOfByte, int paramInt) {
    byte b = (byte)(paramArrayOfByte.length - paramInt);
    while (paramInt < paramArrayOfByte.length) {
      paramArrayOfByte[paramInt] = b;
      paramInt++;
    } 
    return b;
  }
  
  public int padCount(byte[] paramArrayOfByte) throws InvalidCipherTextException {
    byte b1 = paramArrayOfByte[paramArrayOfByte.length - 1] & 0xFF;
    byte b2 = (byte)b1;
    boolean bool = ((b1 > paramArrayOfByte.length) ? 1 : 0) | ((b1 == 0) ? 1 : 0);
    for (int i = 0; i < paramArrayOfByte.length; i++)
      bool |= ((paramArrayOfByte.length - i <= b1) ? 1 : 0) & ((paramArrayOfByte[i] != b2) ? 1 : 0); 
    if (bool)
      throw new InvalidCipherTextException("pad block corrupted"); 
    return b1;
  }
}
