package org.bouncycastle.cert.jcajce;

import java.io.IOException;
import java.security.cert.CertificateEncodingException;
import java.security.cert.X509Certificate;
import java.util.ArrayList;
import java.util.Collection;
import org.bouncycastle.cert.X509CertificateHolder;
import org.bouncycastle.util.CollectionStore;

public class JcaCertStore extends CollectionStore {
  public JcaCertStore(Collection paramCollection) throws CertificateEncodingException { super(convertCerts(paramCollection)); }
  
  private static Collection convertCerts(Collection paramCollection) throws CertificateEncodingException {
    ArrayList arrayList = new ArrayList(paramCollection.size());
    for (Object object : paramCollection) {
      if (object instanceof X509Certificate) {
        X509Certificate x509Certificate = (X509Certificate)object;
        try {
          arrayList.add(new X509CertificateHolder(x509Certificate.getEncoded()));
          continue;
        } catch (IOException iOException) {
          throw new CertificateEncodingException("unable to read encoding: " + iOException.getMessage());
        } 
      } 
      arrayList.add((X509CertificateHolder)object);
    } 
    return arrayList;
  }
}
