package org.msgpack.core;

import java.io.InputStream;
import java.io.OutputStream;
import java.nio.ByteBuffer;
import java.nio.channels.ReadableByteChannel;
import java.nio.channels.WritableByteChannel;
import java.nio.charset.Charset;
import org.msgpack.core.buffer.MessageBufferInput;
import org.msgpack.core.buffer.MessageBufferOutput;

public class MessagePack {
  public static final Charset UTF8 = Charset.forName("UTF-8");
  
  public static final PackerConfig DEFAULT_PACKER_CONFIG = new PackerConfig();
  
  public static final UnpackerConfig DEFAULT_UNPACKER_CONFIG = new UnpackerConfig();
  
  public static MessagePacker newDefaultPacker(MessageBufferOutput paramMessageBufferOutput) { return DEFAULT_PACKER_CONFIG.newPacker(paramMessageBufferOutput); }
  
  public static MessagePacker newDefaultPacker(OutputStream paramOutputStream) { return DEFAULT_PACKER_CONFIG.newPacker(paramOutputStream); }
  
  public static MessagePacker newDefaultPacker(WritableByteChannel paramWritableByteChannel) { return DEFAULT_PACKER_CONFIG.newPacker(paramWritableByteChannel); }
  
  public static MessageBufferPacker newDefaultBufferPacker() { return DEFAULT_PACKER_CONFIG.newBufferPacker(); }
  
  public static MessageUnpacker newDefaultUnpacker(MessageBufferInput paramMessageBufferInput) { return DEFAULT_UNPACKER_CONFIG.newUnpacker(paramMessageBufferInput); }
  
  public static MessageUnpacker newDefaultUnpacker(InputStream paramInputStream) { return DEFAULT_UNPACKER_CONFIG.newUnpacker(paramInputStream); }
  
  public static MessageUnpacker newDefaultUnpacker(ReadableByteChannel paramReadableByteChannel) { return DEFAULT_UNPACKER_CONFIG.newUnpacker(paramReadableByteChannel); }
  
  public static MessageUnpacker newDefaultUnpacker(byte[] paramArrayOfByte) { return DEFAULT_UNPACKER_CONFIG.newUnpacker(paramArrayOfByte); }
  
  public static MessageUnpacker newDefaultUnpacker(byte[] paramArrayOfByte, int paramInt1, int paramInt2) { return DEFAULT_UNPACKER_CONFIG.newUnpacker(paramArrayOfByte, paramInt1, paramInt2); }
  
  public static MessageUnpacker newDefaultUnpacker(ByteBuffer paramByteBuffer) { return DEFAULT_UNPACKER_CONFIG.newUnpacker(paramByteBuffer); }
}
