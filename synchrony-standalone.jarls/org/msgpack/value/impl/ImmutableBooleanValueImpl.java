package org.msgpack.value.impl;

import java.io.IOException;
import org.msgpack.core.MessagePacker;
import org.msgpack.value.BooleanValue;
import org.msgpack.value.ImmutableArrayValue;
import org.msgpack.value.ImmutableBinaryValue;
import org.msgpack.value.ImmutableBooleanValue;
import org.msgpack.value.ImmutableExtensionValue;
import org.msgpack.value.ImmutableFloatValue;
import org.msgpack.value.ImmutableIntegerValue;
import org.msgpack.value.ImmutableMapValue;
import org.msgpack.value.ImmutableNilValue;
import org.msgpack.value.ImmutableNumberValue;
import org.msgpack.value.ImmutableRawValue;
import org.msgpack.value.ImmutableStringValue;
import org.msgpack.value.ImmutableTimestampValue;
import org.msgpack.value.ImmutableValue;
import org.msgpack.value.Value;
import org.msgpack.value.ValueType;

public class ImmutableBooleanValueImpl extends AbstractImmutableValue implements ImmutableBooleanValue {
  public static final ImmutableBooleanValue TRUE = new ImmutableBooleanValueImpl(true);
  
  public static final ImmutableBooleanValue FALSE = new ImmutableBooleanValueImpl(false);
  
  private final boolean value;
  
  private ImmutableBooleanValueImpl(boolean paramBoolean) { this.value = paramBoolean; }
  
  public ValueType getValueType() { return ValueType.BOOLEAN; }
  
  public ImmutableBooleanValue asBooleanValue() { return this; }
  
  public ImmutableBooleanValue immutableValue() { return this; }
  
  public boolean getBoolean() { return this.value; }
  
  public void writeTo(MessagePacker paramMessagePacker) throws IOException { paramMessagePacker.packBoolean(this.value); }
  
  public boolean equals(Object paramObject) {
    if (paramObject == this)
      return true; 
    if (!(paramObject instanceof Value))
      return false; 
    Value value1 = (Value)paramObject;
    if (!value1.isBooleanValue())
      return false; 
    return (this.value == value1.asBooleanValue().getBoolean());
  }
  
  public int hashCode() {
    if (this.value)
      return 1231; 
    return 1237;
  }
  
  public String toJson() { return Boolean.toString(this.value); }
  
  public String toString() { return toJson(); }
}
