package org.jsoup.nodes;

import org.jsoup.helper.Validate;

public class Range {
  private final Position start;
  
  private final Position end;
  
  private static final String RangeKey = Attributes.internalKey("jsoup.sourceRange");
  
  private static final String EndRangeKey = Attributes.internalKey("jsoup.endSourceRange");
  
  private static final Position UntrackedPos = new Position(-1, -1, -1);
  
  private static final Range Untracked = new Range(UntrackedPos, UntrackedPos);
  
  public Range(Position start, Position end) {
    this.start = start;
    this.end = end;
  }
  
  public Position start() { return this.start; }
  
  public Position end() { return this.end; }
  
  public boolean isTracked() { return (this != Untracked); }
  
  static Range of(Node node, boolean start) {
    String key = start ? RangeKey : EndRangeKey;
    if (!node.hasAttr(key))
      return Untracked; 
    return (Range)Validate.ensureNotNull(node.attributes().getUserData(key));
  }
  
  public void track(Node node, boolean start) { node.attributes().putUserData(start ? RangeKey : EndRangeKey, this); }
  
  public boolean equals(Object o) {
    if (this == o)
      return true; 
    if (o == null || getClass() != o.getClass())
      return false; 
    Range range = (Range)o;
    if (!this.start.equals(range.start))
      return false; 
    return this.end.equals(range.end);
  }
  
  public int hashCode() {
    result = this.start.hashCode();
    return 31 * result + this.end.hashCode();
  }
  
  public String toString() { return this.start + "-" + this.end; }
}
