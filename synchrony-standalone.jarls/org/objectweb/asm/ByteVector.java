package org.objectweb.asm;

public class ByteVector {
  byte[] a = new byte[64];
  
  int b;
  
  public ByteVector() {}
  
  public ByteVector(int paramInt) {}
  
  public ByteVector putByte(int paramInt) {
    int i = this.b;
    if (i + 1 > this.a.length)
      a(1); 
    this.a[i++] = (byte)paramInt;
    this.b = i;
    return this;
  }
  
  ByteVector a(int paramInt1, int paramInt2) {
    int i = this.b;
    if (i + 2 > this.a.length)
      a(2); 
    byte[] arrayOfByte = this.a;
    arrayOfByte[i++] = (byte)paramInt1;
    arrayOfByte[i++] = (byte)paramInt2;
    this.b = i;
    return this;
  }
  
  public ByteVector putShort(int paramInt) {
    int i = this.b;
    if (i + 2 > this.a.length)
      a(2); 
    byte[] arrayOfByte = this.a;
    arrayOfByte[i++] = (byte)(paramInt >>> 8);
    arrayOfByte[i++] = (byte)paramInt;
    this.b = i;
    return this;
  }
  
  ByteVector b(int paramInt1, int paramInt2) {
    int i = this.b;
    if (i + 3 > this.a.length)
      a(3); 
    byte[] arrayOfByte = this.a;
    arrayOfByte[i++] = (byte)paramInt1;
    arrayOfByte[i++] = (byte)(paramInt2 >>> 8);
    arrayOfByte[i++] = (byte)paramInt2;
    this.b = i;
    return this;
  }
  
  public ByteVector putInt(int paramInt) {
    int i = this.b;
    if (i + 4 > this.a.length)
      a(4); 
    byte[] arrayOfByte = this.a;
    arrayOfByte[i++] = (byte)(paramInt >>> 24);
    arrayOfByte[i++] = (byte)(paramInt >>> 16);
    arrayOfByte[i++] = (byte)(paramInt >>> 8);
    arrayOfByte[i++] = (byte)paramInt;
    this.b = i;
    return this;
  }
  
  public ByteVector putLong(long paramLong) {
    int i = this.b;
    if (i + 8 > this.a.length)
      a(8); 
    byte[] arrayOfByte = this.a;
    int j = (int)(paramLong >>> 32);
    arrayOfByte[i++] = (byte)(j >>> 24);
    arrayOfByte[i++] = (byte)(j >>> 16);
    arrayOfByte[i++] = (byte)(j >>> 8);
    arrayOfByte[i++] = (byte)j;
    j = (int)paramLong;
    arrayOfByte[i++] = (byte)(j >>> 24);
    arrayOfByte[i++] = (byte)(j >>> 16);
    arrayOfByte[i++] = (byte)(j >>> 8);
    arrayOfByte[i++] = (byte)j;
    this.b = i;
    return this;
  }
  
  public ByteVector putUTF8(String paramString) {
    int i = paramString.length();
    if (i > 65535)
      throw new IllegalArgumentException(); 
    int j = this.b;
    if (j + 2 + i > this.a.length)
      a(2 + i); 
    byte[] arrayOfByte = this.a;
    arrayOfByte[j++] = (byte)(i >>> 8);
    arrayOfByte[j++] = (byte)i;
    for (byte b1 = 0; b1 < i; b1++) {
      char c = paramString.charAt(b1);
      if (c >= '\001' && c <= '') {
        arrayOfByte[j++] = (byte)c;
      } else {
        int k = b1;
        byte b2;
        for (b2 = b1; b2 < i; b2++) {
          c = paramString.charAt(b2);
          if (c >= '\001' && c <= '') {
            k++;
          } else if (c > '߿') {
            k += 3;
          } else {
            k += 2;
          } 
        } 
        if (k > 65535)
          throw new IllegalArgumentException(); 
        arrayOfByte[this.b] = (byte)(k >>> 8);
        arrayOfByte[this.b + 1] = (byte)k;
        if (this.b + 2 + k > arrayOfByte.length) {
          this.b = j;
          a(2 + k);
          arrayOfByte = this.a;
        } 
        for (b2 = b1; b2 < i; b2++) {
          c = paramString.charAt(b2);
          if (c >= '\001' && c <= '') {
            arrayOfByte[j++] = (byte)c;
          } else if (c > '߿') {
            arrayOfByte[j++] = (byte)(0xE0 | c >> '\f' & 0xF);
            arrayOfByte[j++] = (byte)(0x80 | c >> '\006' & 0x3F);
            arrayOfByte[j++] = (byte)(0x80 | c & 0x3F);
          } else {
            arrayOfByte[j++] = (byte)(0xC0 | c >> '\006' & 0x1F);
            arrayOfByte[j++] = (byte)(0x80 | c & 0x3F);
          } 
        } 
        break;
      } 
    } 
    this.b = j;
    return this;
  }
  
  public ByteVector putByteArray(byte[] paramArrayOfByte, int paramInt1, int paramInt2) {
    if (this.b + paramInt2 > this.a.length)
      a(paramInt2); 
    if (paramArrayOfByte != null)
      System.arraycopy(paramArrayOfByte, paramInt1, this.a, this.b, paramInt2); 
    this.b += paramInt2;
    return this;
  }
  
  private void a(int paramInt) {
    int i = 2 * this.a.length;
    int j = this.b + paramInt;
    byte[] arrayOfByte = new byte[(i > j) ? i : j];
    System.arraycopy(this.a, 0, arrayOfByte, 0, this.b);
    this.a = arrayOfByte;
  }
}
