#* @vtlvariable name="action" type="com.atlassian.confluence.impl.logging.admin.ConfigureLoggingAction" *#
<html>
	<head>
		<title>$action.getText('loglevel.linktitle')</title>
		<meta name="help-path" content="/admin/help/configurelog4j.vm"/>
	</head>

    <content tag="selectedWebItem">loglevel</content>
    #parse ( "/template/includes/actionerrors.vm" )

    #if (!$otherNodes.isEmpty())
    <form class="aui">
        <div id="select-node">
            <label>
                <p>$action.getText('loglevel.selectnode'):</p>
                <button href="#nodes-dropdown" aria-owns="nodes-dropdown" aria-haspopup="true" class="cluster-node labels-settings-trigger aui-button aui-dropdown2-trigger aui-style-default">
                    <div class="node-header">
                        #if ($currentNode.humanReadableNodeName.isDefined())
                            $currentNode.humanReadableNodeName.get():&nbsp;
                        #end
                        $currentNode.anonymizedNodeIdentifier
                    </div>
                    <div class="node-address">$currentNode.localSocketAddress</div>
                </button>
            </label>
            <div id="nodes-dropdown" class="aui-dropdown2">
                <ul class="aui-style-default" aria-hidden="true">
                    #foreach($node in $otherNodes)
                        <li>
                            <a href="$action.nodeUri('', $node.anonymizedNodeIdentifier)" class="cluster-node">
                                <div class="node-header">
                                    #if ($node.humanReadableNodeName.isDefined())
                                        $node.humanReadableNodeName.get():&nbsp;
                                    #end
                                    $node.anonymizedNodeIdentifier
                                </div>
                                <div class="node-address">$node.localSocketAddress</div>
                            </a>
                        </li>
                    #end
                </ul>
            </div>
        </div>
    </form>
    <hr>
    #end

    <h2 id="logsMarkTitle" class="steptitle">$action.getText('loglevel.mark.logs.title')</h2>
    <p id="logsMarkDescription">
        $action.getText('loglevel.mark.logs.desc')
    </p>
    <form id="logsMarkForm" class="aui">
        #form_xsrfToken()
        <div class="field-group">
            <label for="logsMarkMessage">$action.getText('loglevel.mark.logs.form.message.title')</label>
            <input class="text medium-field" type="text" id="logsMarkMessage" name="logsMarkMessage">
            <div class="description">$action.getText('loglevel.mark.logs.form.message.desc')</div>
        </div>
        <div class="field-group">
            <label for="logsMarkRollover">$action.getText('loglevel.mark.logs.form.rollover.title')</label>
            <div class="checkbox">
                <input class="checkbox" type="checkbox" name="logsMarkRollover" id="logsMarkRollover">
                <div class="description">$action.getText('loglevel.mark.logs.form.rollover.desc')</div>
            </div>
        </div>

        <div class="buttons-container">
            <div class="buttons">
                <input class="button submit" type="submit" value="$action.getText('loglevel.mark.logs.form.submit.title')" id="mark-save-button">
            </div>
        </div>
    </form>

    <script>
        document.getElementById('logsMarkForm').onsubmit = function (e) {
            e.preventDefault();
            document.getElementById('logsMarkMessage').setAttribute('disabled','disabled');
            document.getElementById('logsMarkRollover').setAttribute('disabled','disabled');
            document.getElementById('mark-save-button').setAttribute('disabled','disabled');

            const headers = new Headers();
            headers.append('pragma', 'no-cache');
            headers.append('cache-control', 'no-cache, no-store, must-revalidate');
            headers.append('expires', 0);

            const formData = new FormData();
            formData.append('logsMarkMessage', document.getElementById('logsMarkMessage').value);
            formData.append('logsMarkRollover', document.getElementById('logsMarkRollover').checked);

            AJS.safe.post('$action.nodeUri("$req.contextPath/ajax/marklogsaction.action")', {
                credentials: 'same-origin',
                cache: 'no-store',
                headers: headers,
                method: 'POST',
                body: formData,
                success: function() {
                    document.getElementById('logsMarkMessage').removeAttribute('disabled');
                    document.getElementById('logsMarkRollover').removeAttribute('disabled');
                    document.getElementById('mark-save-button').removeAttribute('disabled');
                }
            });
        }
    </script>
    <br/>

    <hr/>
    <h2 class="steptitle">$action.getText('loglevel.mark.logs.next.title')</h2>
   <div class="steptitle">$action.getText('loglevel.profiling')</div>
   $action.getText('loglevel.precursor') #if ($profilingEnabled) $action.getText("common.words.on"). #else $action.getText("common.words.off"). #end
   <form method="POST" action="$action.nodeUri('changeprofiling.action')">
       #form_xsrfToken()
       #if ($profilingEnabled)
           #set($buttonValue = $action.getText("loglevel.profilingOff"))
           <input type="hidden" value="false" name="profilingOn">
       #else
           #set($buttonValue = $action.getText("loglevel.profilingOn"))
           <input type="hidden" value="true" name="profilingOn">
       #end
       <input id="profiling" type="submit" value="$buttonValue">
   </form>
    <hr>
    <div class="steptitle">$action.getText('loglevel.hibernate.heading')</div>

    <table>
    <tr>
    #if($hibernateLoggingEnabled)
        <td>
        <form name="hibernate" method="POST" action="$action.nodeUri('turnoffhibernatelogging.action')">
            #form_xsrfToken()
            <input type="submit" value="$action.getText('loglevel.hibernate.off')">
        </form>
        </td>
    #else
        <td>
        <form name="hibernate" method="POST" action="turnonhibernatelogging.action">
            #form_xsrfToken()
            #if ($nodeId) <input type="hidden" name="nodeId" value="$nodeId"> #end
            <input type="submit" value="$action.getText('loglevel.hibernate.on')">
        </form>
        </td>
    #end
    </tr>
    </table>
    <hr>
    <style type="text/css">
        .loggingsetting {
            padding-left: 15px;
        }

        #select-node {
            margin-bottom: 20px;
        }

        #select-node .cluster-node {
            height: auto;
            min-width: 400px;
            text-align: left;
            padding: 10px;
            box-sizing: border-box;
        }

        #select-node .node-header {
            font-size: 16px;
            margin-bottom: 5px;
        }

        #select-node .node-address {
            font-size: 12px;
            color: #6b778c;
        }

        #select-node .aui-dropdown2 {
            max-width: initial;
        }

    </style>
    <div class="steptitle">$action.getText('loglevel.profiles.heading')</div>
    <p>$action.getText('loglevel.profileDesc') #if ($diagnosticEnabled) $action.getText("loglevel.diagnostic"). #else $action.getText("loglevel.production"). #end</p>

    <div class="loggingsetting">
        <form name="profiles" method="POST" action="$action.nodeUri('changeloggingprofile.action')">
                #form_xsrfToken()
                 #set($val = $action.getText("loglevel.production"))
                 <input id="Production" type="submit" name="profileName" value="$val">
                 #set($val = $action.getText("loglevel.diagnostic"))
                 <input id="Diagnostic" type="submit" name="profileName" value="$val">
        </form>
    </div>
    <p><strong>$action.getText("common.words.or"):</strong></p>

    <p>$action.getText('loglevel.customHeading')</p>

    <div class="loggingsetting">
        <div style="font-size: 16px; font-weight: bold; padding: 4px 0 2px 0;">$action.getText('loglevel.addNewEntry')</div>
        <!--<div class="steptitle">$action.getText('loglevel.addNewEntry')</div>-->

        <form name ="addEntry" method="POST" action="$action.nodeUri('addlog4jentry.action')">
                #form_xsrfToken()
                #set ($submitButtonName = 'Add')
                <table class="aui grid">
                <tr>
                    <th>$action.getText('loglevel.packageHeading')</th>
                    <th>$action.getText('loglevel.newLevelHeading')</th>
                    <th>&nbsp;</th>
                    </tr>
                    <tr>
                    <td>
                        <input type="text" size="58" name="extraClassName">
                    </td>
                    <td>
                    #sselect("label=$theLabel" "name='extraLevelName'" "list=levelTypes" "theme='notable'"
                             "selectedValue=INFO")
                    </td>
                     <td>
                      <input id="addEntryButton" type="submit" name="Add" value="$action.getText('loglevel.addbutton')">
                    </td>
                    </tr>
                </table>
        </form>

        <div style="font-size: 16px; font-weight: bold; padding: 4px 0 2px 0;">$action.getText('loglevel.existingLevelsHeading')</div>
        #set($theLabel = $action.getText('loglevel.levellabel'))

        <form method="POST" action="$action.nodeUri('savelog4j.action')">
                #form_xsrfToken()
                <table class="aui grid">
                <tr>
                <th>$action.getText('loglevel.packageHeading')</th>
                <th>$action.getText('loglevel.currentLevelHeading')</th>
                <th>$action.getText('loglevel.newLevelHeading')</th>
                <th>&nbsp;</th>
                </tr>
                #foreach($entry in $entries)
                    <tr id="$entry.clazz">
                    <td>$entry.clazz</td>
                    <input type="hidden" name="classNames" value="$entry.clazz">
                    <td>$entry.level</td>
                    <td>
                        #sselect("label=$theLabel" "name='levelNames'" "list=levelTypes" "theme='notable'"
                                 "selectedValue=$entry.level")
                    </td>
                    <td>
                    <a href="$action.nodeUri("deleteLogEntry.action?toDeleteName=$entry.clazz&#url_xsrfToken()")">Remove</a>
                    </td>
                    </tr>
                #end
                </table>
                <input type="submit" name="Save" value="$action.getText('loglevel.savebutton')">
        </form>
    </div>
    #parse("/breadcrumbs.vm")
</html>
