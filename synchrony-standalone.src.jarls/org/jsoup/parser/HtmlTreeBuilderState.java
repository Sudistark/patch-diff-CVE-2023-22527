package org.jsoup.parser;

import org.jsoup.internal.StringUtil;

static final abstract enum HtmlTreeBuilderState {
  Initial, BeforeHtml, BeforeHead, InHead, InHeadNoscript, AfterHead, InBody, Text, InTable, InTableText, InCaption, InColumnGroup, InTableBody, InRow, InCell, InSelect, InSelectInTable, InTemplate, AfterBody, InFrameset, AfterFrameset, AfterAfterBody, AfterAfterFrameset, ForeignContent;
  
  private static final String nullString;
  
  static  {
    nullString = String.valueOf(false);
  }
  
  private static boolean isWhitespace(Token t) {
    if (t.isCharacter()) {
      String data = t.asCharacter().getData();
      return StringUtil.isBlank(data);
    } 
    return false;
  }
  
  private static void handleRcData(Token.StartTag startTag, HtmlTreeBuilder tb) {
    tb.tokeniser.transition(TokeniserState.Rcdata);
    tb.markInsertionMode();
    tb.transition(Text);
    tb.insert(startTag);
  }
  
  private static void handleRawtext(Token.StartTag startTag, HtmlTreeBuilder tb) {
    tb.tokeniser.transition(TokeniserState.Rawtext);
    tb.markInsertionMode();
    tb.transition(Text);
    tb.insert(startTag);
  }
  
  abstract boolean process(Token paramToken, HtmlTreeBuilder paramHtmlTreeBuilder);
}
