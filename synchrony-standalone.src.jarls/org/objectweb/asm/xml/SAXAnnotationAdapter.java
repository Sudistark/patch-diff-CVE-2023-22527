package org.objectweb.asm.xml;

import org.objectweb.asm.AnnotationVisitor;
import org.objectweb.asm.Type;
import org.xml.sax.helpers.AttributesImpl;

public final class SAXAnnotationAdapter extends AnnotationVisitor {
  SAXAdapter sa;
  
  private final String elementName;
  
  public SAXAnnotationAdapter(SAXAdapter paramSAXAdapter, String paramString1, int paramInt, String paramString2, String paramString3) { this(262144, paramSAXAdapter, paramString1, paramInt, paramString3, paramString2, -1); }
  
  public SAXAnnotationAdapter(SAXAdapter paramSAXAdapter, String paramString1, int paramInt1, int paramInt2, String paramString2) { this(262144, paramSAXAdapter, paramString1, paramInt1, paramString2, null, paramInt2); }
  
  protected SAXAnnotationAdapter(int paramInt1, SAXAdapter paramSAXAdapter, String paramString1, int paramInt2, String paramString2, String paramString3, int paramInt3) {
    super(paramInt1);
    this.sa = paramSAXAdapter;
    this.elementName = paramString1;
    AttributesImpl attributesImpl = new AttributesImpl();
    if (paramString3 != null)
      attributesImpl.addAttribute("", "name", "name", "", paramString3); 
    if (paramInt2 != 0)
      attributesImpl.addAttribute("", "visible", "visible", "", (paramInt2 > 0) ? "true" : "false"); 
    if (paramInt3 != -1)
      attributesImpl.addAttribute("", "parameter", "parameter", "", Integer.toString(paramInt3)); 
    if (paramString2 != null)
      attributesImpl.addAttribute("", "desc", "desc", "", paramString2); 
    paramSAXAdapter.addStart(paramString1, attributesImpl);
  }
  
  public void visit(String paramString, Object paramObject) {
    Class clazz = paramObject.getClass();
    if (clazz.isArray()) {
      AnnotationVisitor annotationVisitor = visitArray(paramString);
      if (paramObject instanceof byte[]) {
        byte[] arrayOfByte = (byte[])paramObject;
        for (byte b = 0; b < arrayOfByte.length; b++)
          annotationVisitor.visit(null, new Byte(arrayOfByte[b])); 
      } else if (paramObject instanceof char[]) {
        char[] arrayOfChar = (char[])paramObject;
        for (byte b = 0; b < arrayOfChar.length; b++)
          annotationVisitor.visit(null, new Character(arrayOfChar[b])); 
      } else if (paramObject instanceof short[]) {
        short[] arrayOfShort = (short[])paramObject;
        for (byte b = 0; b < arrayOfShort.length; b++)
          annotationVisitor.visit(null, new Short(arrayOfShort[b])); 
      } else if (paramObject instanceof boolean[]) {
        boolean[] arrayOfBoolean = (boolean[])paramObject;
        for (byte b = 0; b < arrayOfBoolean.length; b++)
          annotationVisitor.visit(null, Boolean.valueOf(arrayOfBoolean[b])); 
      } else if (paramObject instanceof int[]) {
        int[] arrayOfInt = (int[])paramObject;
        for (byte b = 0; b < arrayOfInt.length; b++)
          annotationVisitor.visit(null, new Integer(arrayOfInt[b])); 
      } else if (paramObject instanceof long[]) {
        long[] arrayOfLong = (long[])paramObject;
        for (byte b = 0; b < arrayOfLong.length; b++)
          annotationVisitor.visit(null, new Long(arrayOfLong[b])); 
      } else if (paramObject instanceof float[]) {
        float[] arrayOfFloat = (float[])paramObject;
        for (byte b = 0; b < arrayOfFloat.length; b++)
          annotationVisitor.visit(null, new Float(arrayOfFloat[b])); 
      } else if (paramObject instanceof double[]) {
        double[] arrayOfDouble = (double[])paramObject;
        for (byte b = 0; b < arrayOfDouble.length; b++)
          annotationVisitor.visit(null, new Double(arrayOfDouble[b])); 
      } 
      annotationVisitor.visitEnd();
    } else {
      addValueElement("annotationValue", paramString, Type.getDescriptor(clazz), paramObject.toString());
    } 
  }
  
  public void visitEnum(String paramString1, String paramString2, String paramString3) { addValueElement("annotationValueEnum", paramString1, paramString2, paramString3); }
  
  public AnnotationVisitor visitAnnotation(String paramString1, String paramString2) { return new SAXAnnotationAdapter(this.sa, "annotationValueAnnotation", 0, paramString1, paramString2); }
  
  public AnnotationVisitor visitArray(String paramString) { return new SAXAnnotationAdapter(this.sa, "annotationValueArray", 0, paramString, null); }
  
  public void visitEnd() { this.sa.addEnd(this.elementName); }
  
  private void addValueElement(String paramString1, String paramString2, String paramString3, String paramString4) {
    AttributesImpl attributesImpl = new AttributesImpl();
    if (paramString2 != null)
      attributesImpl.addAttribute("", "name", "name", "", paramString2); 
    if (paramString3 != null)
      attributesImpl.addAttribute("", "desc", "desc", "", paramString3); 
    if (paramString4 != null)
      attributesImpl.addAttribute("", "value", "value", "", SAXClassAdapter.encode(paramString4)); 
    this.sa.addElement(paramString1, attributesImpl);
  }
}
