package org.objectweb.asm.util;

import org.objectweb.asm.AnnotationVisitor;
import org.objectweb.asm.Attribute;
import org.objectweb.asm.FieldVisitor;

public class CheckFieldAdapter extends FieldVisitor {
  private boolean end;
  
  public CheckFieldAdapter(FieldVisitor paramFieldVisitor) { this(262144, paramFieldVisitor); }
  
  protected CheckFieldAdapter(int paramInt, FieldVisitor paramFieldVisitor) { super(paramInt, paramFieldVisitor); }
  
  public AnnotationVisitor visitAnnotation(String paramString, boolean paramBoolean) {
    checkEnd();
    CheckMethodAdapter.checkDesc(paramString, false);
    return new CheckAnnotationAdapter(super.visitAnnotation(paramString, paramBoolean));
  }
  
  public void visitAttribute(Attribute paramAttribute) {
    checkEnd();
    if (paramAttribute == null)
      throw new IllegalArgumentException("Invalid attribute (must not be null)"); 
    super.visitAttribute(paramAttribute);
  }
  
  public void visitEnd() {
    checkEnd();
    this.end = true;
    super.visitEnd();
  }
  
  private void checkEnd() {
    if (this.end)
      throw new IllegalStateException("Cannot call a visit method after visitEnd has been called"); 
  }
}
