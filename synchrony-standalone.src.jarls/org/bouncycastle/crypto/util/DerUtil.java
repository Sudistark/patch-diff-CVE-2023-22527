package org.bouncycastle.crypto.util;

import java.io.IOException;
import org.bouncycastle.asn1.ASN1OctetString;
import org.bouncycastle.asn1.ASN1Primitive;
import org.bouncycastle.asn1.DEROctetString;
import org.bouncycastle.util.Arrays;

class DerUtil {
  static ASN1OctetString getOctetString(byte[] paramArrayOfByte) { return (paramArrayOfByte == null) ? new DEROctetString(new byte[0]) : new DEROctetString(Arrays.clone(paramArrayOfByte)); }
  
  static byte[] toByteArray(ASN1Primitive paramASN1Primitive) {
    try {
      return paramASN1Primitive.getEncoded();
    } catch (IOException iOException) {
      throw new Object("Cannot get encoding: " + iOException.getMessage(), iOException);
    } 
  }
}
