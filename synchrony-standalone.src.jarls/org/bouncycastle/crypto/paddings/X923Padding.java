package org.bouncycastle.crypto.paddings;

import java.security.SecureRandom;
import org.bouncycastle.crypto.InvalidCipherTextException;

public class X923Padding implements BlockCipherPadding {
  SecureRandom random = null;
  
  public void init(SecureRandom paramSecureRandom) throws IllegalArgumentException { this.random = paramSecureRandom; }
  
  public String getPaddingName() { return "X9.23"; }
  
  public int addPadding(byte[] paramArrayOfByte, int paramInt) {
    byte b = (byte)(paramArrayOfByte.length - paramInt);
    while (paramInt < paramArrayOfByte.length - 1) {
      if (this.random == null) {
        paramArrayOfByte[paramInt] = 0;
      } else {
        paramArrayOfByte[paramInt] = (byte)this.random.nextInt();
      } 
      paramInt++;
    } 
    paramArrayOfByte[paramInt] = b;
    return b;
  }
  
  public int padCount(byte[] paramArrayOfByte) throws InvalidCipherTextException {
    byte b = paramArrayOfByte[paramArrayOfByte.length - 1] & 0xFF;
    if (b > paramArrayOfByte.length)
      throw new InvalidCipherTextException("pad block corrupted"); 
    return b;
  }
}
