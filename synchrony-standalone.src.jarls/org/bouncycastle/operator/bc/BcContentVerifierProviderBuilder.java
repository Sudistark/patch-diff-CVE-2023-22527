package org.bouncycastle.operator.bc;

import java.io.IOException;
import org.bouncycastle.asn1.x509.AlgorithmIdentifier;
import org.bouncycastle.asn1.x509.SubjectPublicKeyInfo;
import org.bouncycastle.cert.X509CertificateHolder;
import org.bouncycastle.crypto.Signer;
import org.bouncycastle.crypto.params.AsymmetricKeyParameter;
import org.bouncycastle.operator.ContentVerifierProvider;
import org.bouncycastle.operator.OperatorCreationException;

public abstract class BcContentVerifierProviderBuilder {
  protected BcDigestProvider digestProvider = BcDefaultDigestProvider.INSTANCE;
  
  public ContentVerifierProvider build(X509CertificateHolder paramX509CertificateHolder) throws OperatorCreationException { return new Object(this, paramX509CertificateHolder); }
  
  public ContentVerifierProvider build(AsymmetricKeyParameter paramAsymmetricKeyParameter) throws OperatorCreationException { return new Object(this, paramAsymmetricKeyParameter); }
  
  private BcSignerOutputStream createSignatureStream(AlgorithmIdentifier paramAlgorithmIdentifier, AsymmetricKeyParameter paramAsymmetricKeyParameter) throws OperatorCreationException {
    Signer signer = createSigner(paramAlgorithmIdentifier);
    signer.init(false, paramAsymmetricKeyParameter);
    return new BcSignerOutputStream(signer);
  }
  
  protected abstract AsymmetricKeyParameter extractKeyParameters(SubjectPublicKeyInfo paramSubjectPublicKeyInfo) throws IOException;
  
  protected abstract Signer createSigner(AlgorithmIdentifier paramAlgorithmIdentifier) throws OperatorCreationException;
}
