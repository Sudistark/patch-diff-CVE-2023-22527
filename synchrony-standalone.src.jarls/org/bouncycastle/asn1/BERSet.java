package org.bouncycastle.asn1;

import java.io.IOException;

public class BERSet extends ASN1Set {
  public BERSet() {}
  
  public BERSet(ASN1Encodable paramASN1Encodable) { super(paramASN1Encodable); }
  
  public BERSet(ASN1EncodableVector paramASN1EncodableVector) { super(paramASN1EncodableVector, false); }
  
  public BERSet(ASN1Encodable[] paramArrayOfASN1Encodable) { super(paramArrayOfASN1Encodable, false); }
  
  BERSet(boolean paramBoolean, ASN1Encodable[] paramArrayOfASN1Encodable) { super(paramBoolean, paramArrayOfASN1Encodable); }
  
  int encodedLength() throws IOException {
    int i = this.elements.length;
    int j = 0;
    for (byte b = 0; b < i; b++) {
      ASN1Primitive aSN1Primitive = this.elements[b].toASN1Primitive();
      j += aSN1Primitive.encodedLength();
    } 
    return 2 + j + 2;
  }
  
  void encode(ASN1OutputStream paramASN1OutputStream, boolean paramBoolean) throws IOException { paramASN1OutputStream.writeEncodedIndef(paramBoolean, 49, this.elements); }
}
