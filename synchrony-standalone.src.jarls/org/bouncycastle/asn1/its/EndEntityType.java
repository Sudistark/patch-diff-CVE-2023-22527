package org.bouncycastle.asn1.its;

import org.bouncycastle.asn1.ASN1BitString;
import org.bouncycastle.asn1.ASN1Object;
import org.bouncycastle.asn1.ASN1Primitive;
import org.bouncycastle.asn1.DERBitString;

public class EndEntityType extends ASN1Object {
  public static final int app = 128;
  
  public static final int enrol = 64;
  
  private final ASN1BitString type;
  
  public EndEntityType(int paramInt) {
    if (paramInt != 128 && paramInt != 64)
      throw new IllegalArgumentException("value out of range"); 
    this.type = new DERBitString(paramInt);
  }
  
  private EndEntityType(DERBitString paramDERBitString) { this.type = paramDERBitString; }
  
  public static EndEntityType getInstance(Object paramObject) { return (paramObject instanceof EndEntityType) ? (EndEntityType)paramObject : ((paramObject != null) ? new EndEntityType(DERBitString.getInstance(paramObject)) : null); }
  
  public ASN1Primitive toASN1Primitive() { return this.type; }
}
