package org.bouncycastle.cms.jcajce;

import java.security.Provider;
import java.security.PublicKey;
import java.security.cert.CertificateException;
import java.security.cert.X509Certificate;
import org.bouncycastle.cert.X509CertificateHolder;
import org.bouncycastle.cms.DefaultCMSSignatureAlgorithmNameGenerator;
import org.bouncycastle.cms.SignerInformationVerifier;
import org.bouncycastle.operator.DefaultSignatureAlgorithmIdentifierFinder;
import org.bouncycastle.operator.OperatorCreationException;

public class JcaSimpleSignerInfoVerifierBuilder {
  private Helper helper = new Helper(this, null);
  
  public JcaSimpleSignerInfoVerifierBuilder setProvider(Provider paramProvider) {
    this.helper = new ProviderHelper(this, paramProvider);
    return this;
  }
  
  public JcaSimpleSignerInfoVerifierBuilder setProvider(String paramString) {
    this.helper = new NamedHelper(this, paramString);
    return this;
  }
  
  public SignerInformationVerifier build(X509CertificateHolder paramX509CertificateHolder) throws OperatorCreationException, CertificateException { return new SignerInformationVerifier(new DefaultCMSSignatureAlgorithmNameGenerator(), new DefaultSignatureAlgorithmIdentifierFinder(), this.helper.createContentVerifierProvider(paramX509CertificateHolder), this.helper.createDigestCalculatorProvider()); }
  
  public SignerInformationVerifier build(X509Certificate paramX509Certificate) throws OperatorCreationException { return new SignerInformationVerifier(new DefaultCMSSignatureAlgorithmNameGenerator(), new DefaultSignatureAlgorithmIdentifierFinder(), this.helper.createContentVerifierProvider(paramX509Certificate), this.helper.createDigestCalculatorProvider()); }
  
  public SignerInformationVerifier build(PublicKey paramPublicKey) throws OperatorCreationException { return new SignerInformationVerifier(new DefaultCMSSignatureAlgorithmNameGenerator(), new DefaultSignatureAlgorithmIdentifierFinder(), this.helper.createContentVerifierProvider(paramPublicKey), this.helper.createDigestCalculatorProvider()); }
}
