package org.bouncycastle.jcajce.provider.symmetric.util;

import java.lang.reflect.Constructor;
import java.lang.reflect.Method;
import java.security.AccessController;
import java.security.InvalidAlgorithmParameterException;
import java.security.PrivilegedActionException;
import java.security.spec.AlgorithmParameterSpec;
import java.security.spec.InvalidParameterSpecException;
import org.bouncycastle.asn1.ASN1Primitive;
import org.bouncycastle.crypto.params.AEADParameters;
import org.bouncycastle.crypto.params.KeyParameter;
import org.bouncycastle.internal.asn1.cms.GCMParameters;
import org.bouncycastle.util.Integers;

public class GcmSpecUtil {
  static final Class gcmSpecClass = ClassUtil.loadClass(GcmSpecUtil.class, "javax.crypto.spec.GCMParameterSpec");
  
  static final Method tLen;
  
  static final Method iv;
  
  private static Method extractMethod(String paramString) {
    try {
      return (Method)AccessController.doPrivileged(new Object(paramString));
    } catch (PrivilegedActionException privilegedActionException) {
      return null;
    } 
  }
  
  public static boolean gcmSpecExists() { return (gcmSpecClass != null); }
  
  public static boolean isGcmSpec(AlgorithmParameterSpec paramAlgorithmParameterSpec) { return (gcmSpecClass != null && gcmSpecClass.isInstance(paramAlgorithmParameterSpec)); }
  
  public static boolean isGcmSpec(Class paramClass) { return (gcmSpecClass == paramClass); }
  
  public static AlgorithmParameterSpec extractGcmSpec(ASN1Primitive paramASN1Primitive) throws InvalidParameterSpecException {
    try {
      GCMParameters gCMParameters = GCMParameters.getInstance(paramASN1Primitive);
      Constructor constructor = gcmSpecClass.getConstructor(new Class[] { int.class, byte[].class });
      return (AlgorithmParameterSpec)constructor.newInstance(new Object[] { Integers.valueOf(gCMParameters.getIcvLen() * 8), gCMParameters.getNonce() });
    } catch (NoSuchMethodException noSuchMethodException) {
      throw new InvalidParameterSpecException("No constructor found!");
    } catch (Exception exception) {
      throw new InvalidParameterSpecException("Construction failed: " + exception.getMessage());
    } 
  }
  
  static AEADParameters extractAeadParameters(KeyParameter paramKeyParameter, AlgorithmParameterSpec paramAlgorithmParameterSpec) throws InvalidAlgorithmParameterException {
    try {
      return (AEADParameters)AccessController.doPrivileged(new Object(paramKeyParameter, paramAlgorithmParameterSpec));
    } catch (Exception exception) {
      throw new InvalidAlgorithmParameterException("Cannot process GCMParameterSpec.");
    } 
  }
  
  public static GCMParameters extractGcmParameters(AlgorithmParameterSpec paramAlgorithmParameterSpec) throws InvalidParameterSpecException {
    try {
      return (GCMParameters)AccessController.doPrivileged(new Object(paramAlgorithmParameterSpec));
    } catch (Exception exception) {
      throw new InvalidParameterSpecException("Cannot process GCMParameterSpec");
    } 
  }
  
  static  {
    if (gcmSpecClass != null) {
      tLen = extractMethod("getTLen");
      iv = extractMethod("getIV");
    } else {
      tLen = null;
      iv = null;
    } 
  }
}
