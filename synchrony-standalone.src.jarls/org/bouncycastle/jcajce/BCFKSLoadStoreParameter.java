package org.bouncycastle.jcajce;

import java.security.Key;
import java.security.cert.X509Certificate;
import org.bouncycastle.crypto.util.PBKDFConfig;

public class BCFKSLoadStoreParameter extends BCLoadStoreParameter {
  private final PBKDFConfig storeConfig;
  
  private final EncryptionAlgorithm encAlg;
  
  private final MacAlgorithm macAlg;
  
  private final SignatureAlgorithm sigAlg;
  
  private final Key sigKey;
  
  private final X509Certificate[] certificates;
  
  private final CertChainValidator validator;
  
  private BCFKSLoadStoreParameter(Builder paramBuilder) {
    super(Builder.access$100(paramBuilder), Builder.access$200(paramBuilder), Builder.access$300(paramBuilder));
    this.storeConfig = Builder.access$400(paramBuilder);
    this.encAlg = Builder.access$500(paramBuilder);
    this.macAlg = Builder.access$600(paramBuilder);
    this.sigAlg = Builder.access$700(paramBuilder);
    this.sigKey = Builder.access$800(paramBuilder);
    this.certificates = Builder.access$900(paramBuilder);
    this.validator = Builder.access$1000(paramBuilder);
  }
  
  public PBKDFConfig getStorePBKDFConfig() { return this.storeConfig; }
  
  public EncryptionAlgorithm getStoreEncryptionAlgorithm() { return this.encAlg; }
  
  public MacAlgorithm getStoreMacAlgorithm() { return this.macAlg; }
  
  public SignatureAlgorithm getStoreSignatureAlgorithm() { return this.sigAlg; }
  
  public Key getStoreSignatureKey() { return this.sigKey; }
  
  public X509Certificate[] getStoreCertificates() { return this.certificates; }
  
  public CertChainValidator getCertChainValidator() { return this.validator; }
}
