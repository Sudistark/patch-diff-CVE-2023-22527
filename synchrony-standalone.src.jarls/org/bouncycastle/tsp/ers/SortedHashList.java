package org.bouncycastle.tsp.ers;

import java.util.ArrayList;
import java.util.Comparator;
import java.util.LinkedList;
import java.util.List;

public class SortedHashList {
  private static final Comparator<byte[]> hashComp = new ByteArrayComparator();
  
  private final LinkedList<byte[]> baseList = new LinkedList();
  
  public void add(byte[] paramArrayOfByte) {
    if (this.baseList.size() == 0) {
      this.baseList.addFirst(paramArrayOfByte);
    } else if (hashComp.compare(paramArrayOfByte, this.baseList.get(0)) < 0) {
      this.baseList.addFirst(paramArrayOfByte);
    } else {
      byte b;
      for (b = 1; b < this.baseList.size() && hashComp.compare(this.baseList.get(b), paramArrayOfByte) <= 0; b++);
      if (b == this.baseList.size()) {
        this.baseList.add(paramArrayOfByte);
      } else {
        this.baseList.add(b, paramArrayOfByte);
      } 
    } 
  }
  
  public List<byte[]> toList() { return new ArrayList(this.baseList); }
}
