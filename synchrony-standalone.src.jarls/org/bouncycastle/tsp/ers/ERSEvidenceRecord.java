package org.bouncycastle.tsp.ers;

import java.io.IOException;
import java.util.Date;
import org.bouncycastle.asn1.tsp.ArchiveTimeStamp;
import org.bouncycastle.asn1.tsp.ArchiveTimeStampChain;
import org.bouncycastle.asn1.tsp.ArchiveTimeStampSequence;
import org.bouncycastle.asn1.tsp.EvidenceRecord;
import org.bouncycastle.cert.X509CertificateHolder;
import org.bouncycastle.cms.SignerInformationVerifier;
import org.bouncycastle.operator.DigestCalculatorProvider;
import org.bouncycastle.operator.OperatorCreationException;
import org.bouncycastle.tsp.TSPException;

public class ERSEvidenceRecord {
  private final EvidenceRecord evidenceRecord;
  
  private final DigestCalculatorProvider digestCalculatorProvider;
  
  private final ERSArchiveTimeStamp lastArchiveTimeStamp;
  
  public ERSEvidenceRecord(byte[] paramArrayOfByte, DigestCalculatorProvider paramDigestCalculatorProvider) throws TSPException, ERSException { this(EvidenceRecord.getInstance(paramArrayOfByte), paramDigestCalculatorProvider); }
  
  public ERSEvidenceRecord(EvidenceRecord paramEvidenceRecord, DigestCalculatorProvider paramDigestCalculatorProvider) throws TSPException, ERSException {
    this.evidenceRecord = paramEvidenceRecord;
    this.digestCalculatorProvider = paramDigestCalculatorProvider;
    ArchiveTimeStampSequence archiveTimeStampSequence = paramEvidenceRecord.getArchiveTimeStampSequence();
    ArchiveTimeStampChain[] arrayOfArchiveTimeStampChain = archiveTimeStampSequence.getArchiveTimeStampChains();
    ArchiveTimeStampChain archiveTimeStampChain = arrayOfArchiveTimeStampChain[arrayOfArchiveTimeStampChain.length - 1];
    ArchiveTimeStamp[] arrayOfArchiveTimeStamp = archiveTimeStampChain.getArchiveTimestamps();
    this.lastArchiveTimeStamp = new ERSArchiveTimeStamp(arrayOfArchiveTimeStamp[arrayOfArchiveTimeStamp.length - 1], paramDigestCalculatorProvider);
  }
  
  public ERSArchiveTimeStamp getLastArchiveTimeStamp() { return this.lastArchiveTimeStamp; }
  
  public void validatePresent(ERSData paramERSData, Date paramDate) throws ERSException, OperatorCreationException { this.lastArchiveTimeStamp.validatePresent(paramERSData, paramDate); }
  
  public void validatePresent(byte[] paramArrayOfByte, Date paramDate) throws ERSException, OperatorCreationException { this.lastArchiveTimeStamp.validatePresent(paramArrayOfByte, paramDate); }
  
  public X509CertificateHolder getSigningCertificate() { return this.lastArchiveTimeStamp.getSigningCertificate(); }
  
  public void validate(SignerInformationVerifier paramSignerInformationVerifier) throws TSPException { this.lastArchiveTimeStamp.validate(paramSignerInformationVerifier); }
  
  public byte[] getEncoded() throws IOException { return this.evidenceRecord.getEncoded(); }
}
