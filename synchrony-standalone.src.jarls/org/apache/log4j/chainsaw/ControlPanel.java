package org.apache.log4j.chainsaw;

import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import javax.swing.BorderFactory;
import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JTextField;
import org.apache.log4j.Level;
import org.apache.log4j.Logger;

class ControlPanel extends JPanel {
  private static final Logger LOG = Logger.getLogger(ControlPanel.class);
  
  ControlPanel(MyTableModel aModel) {
    setBorder(BorderFactory.createTitledBorder("Controls: "));
    GridBagLayout gridbag = new GridBagLayout();
    GridBagConstraints c = new GridBagConstraints();
    setLayout(gridbag);
    c.ipadx = 5;
    c.ipady = 5;
    c.gridx = 0;
    c.anchor = 13;
    c.gridy = 0;
    JLabel label = new JLabel("Filter Level:");
    gridbag.setConstraints(label, c);
    add(label);
    c.gridy++;
    label = new JLabel("Filter Thread:");
    gridbag.setConstraints(label, c);
    add(label);
    c.gridy++;
    label = new JLabel("Filter Logger:");
    gridbag.setConstraints(label, c);
    add(label);
    c.gridy++;
    label = new JLabel("Filter NDC:");
    gridbag.setConstraints(label, c);
    add(label);
    c.gridy++;
    label = new JLabel("Filter Message:");
    gridbag.setConstraints(label, c);
    add(label);
    c.weightx = 1.0D;
    c.gridx = 1;
    c.anchor = 17;
    c.gridy = 0;
    Level[] allPriorities = { Level.FATAL, Level.ERROR, Level.WARN, Level.INFO, Level.DEBUG, Level.TRACE };
    JComboBox priorities = new JComboBox(allPriorities);
    Level lowest = allPriorities[allPriorities.length - 1];
    priorities.setSelectedItem(lowest);
    aModel.setPriorityFilter(lowest);
    gridbag.setConstraints(priorities, c);
    add(priorities);
    priorities.setEditable(false);
    priorities.addActionListener(new Object(this, aModel, priorities));
    c.fill = 2;
    c.gridy++;
    JTextField threadField = new JTextField("");
    threadField.getDocument().addDocumentListener(new Object(this, aModel, threadField));
    gridbag.setConstraints(threadField, c);
    add(threadField);
    c.gridy++;
    JTextField catField = new JTextField("");
    catField.getDocument().addDocumentListener(new Object(this, aModel, catField));
    gridbag.setConstraints(catField, c);
    add(catField);
    c.gridy++;
    JTextField ndcField = new JTextField("");
    ndcField.getDocument().addDocumentListener(new Object(this, aModel, ndcField));
    gridbag.setConstraints(ndcField, c);
    add(ndcField);
    c.gridy++;
    JTextField msgField = new JTextField("");
    msgField.getDocument().addDocumentListener(new Object(this, aModel, msgField));
    gridbag.setConstraints(msgField, c);
    add(msgField);
    c.weightx = 0.0D;
    c.fill = 2;
    c.anchor = 13;
    c.gridx = 2;
    c.gridy = 0;
    JButton exitButton = new JButton("Exit");
    exitButton.setMnemonic('x');
    exitButton.addActionListener(ExitAction.INSTANCE);
    gridbag.setConstraints(exitButton, c);
    add(exitButton);
    c.gridy++;
    JButton clearButton = new JButton("Clear");
    clearButton.setMnemonic('c');
    clearButton.addActionListener(new Object(this, aModel));
    gridbag.setConstraints(clearButton, c);
    add(clearButton);
    c.gridy++;
    JButton toggleButton = new JButton("Pause");
    toggleButton.setMnemonic('p');
    toggleButton.addActionListener(new Object(this, aModel, toggleButton));
    gridbag.setConstraints(toggleButton, c);
    add(toggleButton);
  }
}
