package org.apache.commons.io.function;

import java.io.IOException;
import java.util.Objects;

@FunctionalInterface
public interface IOTriConsumer<T, U, V> {
  static <T, U, V> IOTriConsumer<T, U, V> noop() { return Constants.IO_TRI_CONSUMER; }
  
  void accept(T paramT, U paramU, V paramV) throws IOException;
  
  default IOTriConsumer<T, U, V> andThen(IOTriConsumer<? super T, ? super U, ? super V> after) {
    Objects.requireNonNull(after);
    return (t, u, v) -> {
        accept(t, u, v);
        after.accept(t, u, v);
      };
  }
}
