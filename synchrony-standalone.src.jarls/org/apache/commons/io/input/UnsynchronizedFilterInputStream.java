package org.apache.commons.io.input;

import java.io.IOException;
import java.io.InputStream;

public class UnsynchronizedFilterInputStream extends InputStream {
  public static Builder builder() { return new Builder(); }
  
  UnsynchronizedFilterInputStream(InputStream inputStream) { this.inputStream = inputStream; }
  
  public int available() throws IOException { return this.inputStream.available(); }
  
  public void close() throws IOException { this.inputStream.close(); }
  
  public void mark(int readlimit) { this.inputStream.mark(readlimit); }
  
  public boolean markSupported() { return this.inputStream.markSupported(); }
  
  public int read() throws IOException { return this.inputStream.read(); }
  
  public int read(byte[] buffer) throws IOException { return read(buffer, 0, buffer.length); }
  
  public int read(byte[] buffer, int offset, int count) throws IOException { return this.inputStream.read(buffer, offset, count); }
  
  public void reset() throws IOException { this.inputStream.reset(); }
  
  public long skip(long count) throws IOException { return this.inputStream.skip(count); }
}
