package org.apache.commons.compress.harmony.unpack200.bytecode;

import java.io.DataOutputStream;
import java.io.IOException;

public class LineNumberTableAttribute extends BCIRenumberedAttribute {
  private static CPUTF8 attributeName;
  
  private final int lineNumberTableLength;
  
  private final int[] startPcs;
  
  private final int[] lineNumbers;
  
  public static void setAttributeName(CPUTF8 cpUTF8Value) { attributeName = cpUTF8Value; }
  
  public LineNumberTableAttribute(int lineNumberTableLength, int[] startPcs, int[] lineNumbers) {
    super(attributeName);
    this.lineNumberTableLength = lineNumberTableLength;
    this.startPcs = startPcs;
    this.lineNumbers = lineNumbers;
  }
  
  public boolean equals(Object obj) { return (this == obj); }
  
  protected int getLength() { return 2 + 4 * this.lineNumberTableLength; }
  
  protected ClassFileEntry[] getNestedClassFileEntries() { return new ClassFileEntry[] { getAttributeName() }; }
  
  protected int[] getStartPCs() { return this.startPcs; }
  
  protected void resolve(ClassConstantPool pool) { super.resolve(pool); }
  
  public String toString() { return "LineNumberTable: " + this.lineNumberTableLength + " lines"; }
  
  protected void writeBody(DataOutputStream dos) throws IOException {
    dos.writeShort(this.lineNumberTableLength);
    for (int i = 0; i < this.lineNumberTableLength; i++) {
      dos.writeShort(this.startPcs[i]);
      dos.writeShort(this.lineNumbers[i]);
    } 
  }
}
