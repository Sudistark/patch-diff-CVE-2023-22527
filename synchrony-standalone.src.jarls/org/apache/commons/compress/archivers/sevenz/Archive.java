package org.apache.commons.compress.archivers.sevenz;

import java.util.BitSet;

class Archive {
  long packPos;
  
  private static String lengthOf(long[] a) { return (a == null) ? "(null)" : String.valueOf(a.length); }
  
  private static String lengthOf(Object[] a) { return (a == null) ? "(null)" : String.valueOf(a.length); }
  
  long[] packSizes = new long[0];
  
  BitSet packCrcsDefined;
  
  long[] packCrcs;
  
  Folder[] folders = Folder.EMPTY_FOLDER_ARRAY;
  
  SubStreamsInfo subStreamsInfo;
  
  SevenZArchiveEntry[] files = SevenZArchiveEntry.EMPTY_SEVEN_Z_ARCHIVE_ENTRY_ARRAY;
  
  StreamMap streamMap;
  
  public String toString() {
    return "Archive with packed streams starting at offset " + this.packPos + ", " + 
      lengthOf(this.packSizes) + " pack sizes, " + lengthOf(this.packCrcs) + " CRCs, " + 
      lengthOf(this.folders) + " folders, " + lengthOf(this.files) + " files and " + this.streamMap;
  }
}
