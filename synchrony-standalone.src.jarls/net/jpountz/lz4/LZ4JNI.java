package net.jpountz.lz4;

import java.nio.ByteBuffer;
import net.jpountz.util.Native;

static enum LZ4JNI {
  static native void init();
  
  static native int LZ4_compress_limitedOutput(byte[] paramArrayOfByte1, ByteBuffer paramByteBuffer1, int paramInt1, int paramInt2, byte[] paramArrayOfByte2, ByteBuffer paramByteBuffer2, int paramInt3, int paramInt4);
  
  static native int LZ4_compressHC(byte[] paramArrayOfByte1, ByteBuffer paramByteBuffer1, int paramInt1, int paramInt2, byte[] paramArrayOfByte2, ByteBuffer paramByteBuffer2, int paramInt3, int paramInt4, int paramInt5);
  
  static native int LZ4_decompress_fast(byte[] paramArrayOfByte1, ByteBuffer paramByteBuffer1, int paramInt1, byte[] paramArrayOfByte2, ByteBuffer paramByteBuffer2, int paramInt2, int paramInt3);
  
  static native int LZ4_decompress_safe(byte[] paramArrayOfByte1, ByteBuffer paramByteBuffer1, int paramInt1, int paramInt2, byte[] paramArrayOfByte2, ByteBuffer paramByteBuffer2, int paramInt3, int paramInt4);
  
  static native int LZ4_compressBound(int paramInt);
  
  static  {
    Native.load();
    init();
  }
}
