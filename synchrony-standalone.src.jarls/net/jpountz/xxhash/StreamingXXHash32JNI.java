package net.jpountz.xxhash;

final class StreamingXXHash32JNI extends StreamingXXHash32 {
  private long state;
  
  StreamingXXHash32JNI(int seed) {
    super(seed);
    this.state = XXHashJNI.XXH32_init(seed);
  }
  
  private void checkState() {
    if (this.state == 0L)
      throw new AssertionError("Already finalized"); 
  }
  
  public void reset() {
    checkState();
    XXHashJNI.XXH32_free(this.state);
    this.state = XXHashJNI.XXH32_init(this.seed);
  }
  
  public int getValue() {
    checkState();
    return XXHashJNI.XXH32_digest(this.state);
  }
  
  public void update(byte[] bytes, int off, int len) {
    checkState();
    XXHashJNI.XXH32_update(this.state, bytes, off, len);
  }
  
  protected void finalize() {
    super.finalize();
    XXHashJNI.XXH32_free(this.state);
    this.state = 0L;
  }
}
