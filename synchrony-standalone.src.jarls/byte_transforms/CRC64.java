package byte_transforms;

public class CRC64 {
  private static final long poly = -3932672073523589310L;
  
  private static final long[] crcTable = new long[256];
  
  private long crc = -1L;
  
  static  {
    for (byte b = 0; b < crcTable.length; b++) {
      long l = b;
      for (byte b1 = 0; b1 < 8; b1++) {
        if ((l & 0x1L) == 1L) {
          l = l >>> true ^ 0xC96C5795D7870F42L;
        } else {
          l >>>= true;
        } 
      } 
      crcTable[b] = l;
    } 
  }
  
  public void update(byte paramByte) { this.crc = crcTable[(paramByte ^ (int)this.crc) & 0xFF] ^ this.crc >>> 8; }
  
  public void update(byte[] paramArrayOfByte) { update(paramArrayOfByte, 0, paramArrayOfByte.length); }
  
  public void update(byte[] paramArrayOfByte, int paramInt1, int paramInt2) {
    int i = paramInt1 + paramInt2;
    while (paramInt1 < i)
      this.crc = crcTable[(paramArrayOfByte[paramInt1++] ^ (int)this.crc) & 0xFF] ^ this.crc >>> 8; 
  }
  
  public long getValue() { return this.crc ^ 0xFFFFFFFFFFFFFFFFL; }
}
