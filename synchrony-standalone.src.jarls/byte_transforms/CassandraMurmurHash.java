package byte_transforms;

import java.nio.ByteBuffer;

public class CassandraMurmurHash {
  public static int hash32(ByteBuffer paramByteBuffer, int paramInt1, int paramInt2, int paramInt3) {
    int i = 1540483477;
    byte b = 24;
    null = paramInt3 ^ paramInt2;
    int j = paramInt2 >> 2;
    int k;
    for (k = 0; k < j; k++) {
      int n = k << 2;
      byte b1 = paramByteBuffer.get(paramInt1 + n + 3);
      b1 <<= 8;
      b1 |= paramByteBuffer.get(paramInt1 + n + 2) & 0xFF;
      b1 <<= 8;
      b1 |= paramByteBuffer.get(paramInt1 + n + 1) & 0xFF;
      b1 <<= 8;
      b1 |= paramByteBuffer.get(paramInt1 + n + 0) & 0xFF;
      b1 *= i;
      b1 ^= b1 >>> b;
      b1 *= i;
      null *= i;
      null ^= b1;
    } 
    k = j << 2;
    int m = paramInt2 - k;
    if (m != 0) {
      if (m >= 3)
        null ^= paramByteBuffer.get(paramInt1 + paramInt2 - 3) << 16; 
      if (m >= 2)
        null ^= paramByteBuffer.get(paramInt1 + paramInt2 - 2) << 8; 
      if (m >= 1)
        null ^= paramByteBuffer.get(paramInt1 + paramInt2 - 1); 
      null *= i;
    } 
    null ^= null >>> 13;
    null *= i;
    return null >>> 15;
  }
  
  public static long hash2_64(ByteBuffer paramByteBuffer, int paramInt1, int paramInt2, long paramLong) {
    long l = -4132994306676758123L;
    byte b = 47;
    null = paramLong & 0xFFFFFFFFL ^ l * paramInt2;
    int i = paramInt2 >> 3;
    int j;
    for (j = 0; j < i; j++) {
      int k = j << 3;
      long l1 = (paramByteBuffer.get(paramInt1 + k + 0) & 0xFFL) + ((paramByteBuffer.get(paramInt1 + k + 1) & 0xFFL) << 8) + ((paramByteBuffer.get(paramInt1 + k + 2) & 0xFFL) << 16) + ((paramByteBuffer.get(paramInt1 + k + 3) & 0xFFL) << 24) + ((paramByteBuffer.get(paramInt1 + k + 4) & 0xFFL) << 32) + ((paramByteBuffer.get(paramInt1 + k + 5) & 0xFFL) << 40) + ((paramByteBuffer.get(paramInt1 + k + 6) & 0xFFL) << 48) + ((paramByteBuffer.get(paramInt1 + k + 7) & 0xFFL) << 56);
      l1 *= l;
      l1 ^= l1 >>> b;
      l1 *= l;
      null ^= l1;
      null *= l;
    } 
    j = paramInt2 & 0x7;
    switch (j) {
      case 7:
        null ^= paramByteBuffer.get(paramInt1 + paramInt2 - j + 6) << 48;
      case 6:
        null ^= paramByteBuffer.get(paramInt1 + paramInt2 - j + 5) << 40;
      case 5:
        null ^= paramByteBuffer.get(paramInt1 + paramInt2 - j + 4) << 32;
      case 4:
        null ^= paramByteBuffer.get(paramInt1 + paramInt2 - j + 3) << 24;
      case 3:
        null ^= paramByteBuffer.get(paramInt1 + paramInt2 - j + 2) << 16;
      case 2:
        null ^= paramByteBuffer.get(paramInt1 + paramInt2 - j + 1) << 8;
      case 1:
        null ^= paramByteBuffer.get(paramInt1 + paramInt2 - j);
        null *= l;
        break;
    } 
    null ^= null >>> b;
    null *= l;
    return null >>> b;
  }
  
  protected static long getblock(ByteBuffer paramByteBuffer, int paramInt1, int paramInt2) {
    int i = paramInt2 << 3;
    int j = paramInt1 + i;
    return (paramByteBuffer.get(j + 0) & 0xFFL) + ((paramByteBuffer.get(j + 1) & 0xFFL) << 8) + ((paramByteBuffer
      .get(j + 2) & 0xFFL) << 16) + ((paramByteBuffer.get(j + 3) & 0xFFL) << 24) + ((paramByteBuffer
      .get(j + 4) & 0xFFL) << 32) + ((paramByteBuffer.get(j + 5) & 0xFFL) << 40) + ((paramByteBuffer
      .get(j + 6) & 0xFFL) << 48) + ((paramByteBuffer.get(j + 7) & 0xFFL) << 56);
  }
  
  protected static long rotl64(long paramLong, int paramInt) { return paramLong << paramInt | paramLong >>> 64 - paramInt; }
  
  protected static long fmix(long paramLong) {
    paramLong ^= paramLong >>> 33;
    paramLong *= -49064778989728563L;
    paramLong ^= paramLong >>> 33;
    paramLong *= -4265267296055464877L;
    return paramLong >>> 33;
  }
  
  public static long[] hash3_x64_128(ByteBuffer paramByteBuffer, int paramInt1, int paramInt2, long paramLong) {
    int i = paramInt2 >> 4;
    long l1 = paramLong;
    long l2 = paramLong;
    long l3 = -8663945395140668459L;
    long l4 = 5545529020109919103L;
    for (byte b = 0; b < i; b++) {
      long l7 = getblock(paramByteBuffer, paramInt1, b * 2 + 0);
      long l8 = getblock(paramByteBuffer, paramInt1, b * 2 + 1);
      l7 *= l3;
      l7 = rotl64(l7, 31);
      l7 *= l4;
      l1 ^= l7;
      l1 = rotl64(l1, 27);
      l1 += l2;
      l1 = l1 * 5L + 1390208809L;
      l8 *= l4;
      l8 = rotl64(l8, 33);
      l8 *= l3;
      l2 ^= l8;
      l2 = rotl64(l2, 31);
      l2 += l1;
      l2 = l2 * 5L + 944331445L;
    } 
    paramInt1 += i * 16;
    long l5 = 0L;
    long l6 = 0L;
    switch (paramInt2 & 0xF) {
      case 15:
        l6 ^= paramByteBuffer.get(paramInt1 + 14) << 48;
      case 14:
        l6 ^= paramByteBuffer.get(paramInt1 + 13) << 40;
      case 13:
        l6 ^= paramByteBuffer.get(paramInt1 + 12) << 32;
      case 12:
        l6 ^= paramByteBuffer.get(paramInt1 + 11) << 24;
      case 11:
        l6 ^= paramByteBuffer.get(paramInt1 + 10) << 16;
      case 10:
        l6 ^= paramByteBuffer.get(paramInt1 + 9) << 8;
      case 9:
        l6 ^= paramByteBuffer.get(paramInt1 + 8) << false;
        l6 *= l4;
        l6 = rotl64(l6, 33);
        l6 *= l3;
        l2 ^= l6;
      case 8:
        l5 ^= paramByteBuffer.get(paramInt1 + 7) << 56;
      case 7:
        l5 ^= paramByteBuffer.get(paramInt1 + 6) << 48;
      case 6:
        l5 ^= paramByteBuffer.get(paramInt1 + 5) << 40;
      case 5:
        l5 ^= paramByteBuffer.get(paramInt1 + 4) << 32;
      case 4:
        l5 ^= paramByteBuffer.get(paramInt1 + 3) << 24;
      case 3:
        l5 ^= paramByteBuffer.get(paramInt1 + 2) << 16;
      case 2:
        l5 ^= paramByteBuffer.get(paramInt1 + 1) << 8;
      case 1:
        l5 ^= paramByteBuffer.get(paramInt1);
        l5 *= l3;
        l5 = rotl64(l5, 31);
        l5 *= l4;
        l1 ^= l5;
        break;
    } 
    l1 ^= paramInt2;
    l2 ^= paramInt2;
    l1 += l2;
    l2 += l1;
    l1 = fmix(l1);
    l2 = fmix(l2);
    l1 += l2;
    l2 += l1;
    return new long[] { l1, l2 };
  }
}
