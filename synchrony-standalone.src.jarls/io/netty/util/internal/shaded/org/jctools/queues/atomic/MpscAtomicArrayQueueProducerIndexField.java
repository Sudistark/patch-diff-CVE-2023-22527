package io.netty.util.internal.shaded.org.jctools.queues.atomic;

import java.util.concurrent.atomic.AtomicLongFieldUpdater;

abstract class MpscAtomicArrayQueueProducerIndexField<E> extends MpscAtomicArrayQueueL1Pad<E> {
  private static final AtomicLongFieldUpdater<MpscAtomicArrayQueueProducerIndexField> P_INDEX_UPDATER = AtomicLongFieldUpdater.newUpdater(MpscAtomicArrayQueueProducerIndexField.class, "producerIndex");
  
  MpscAtomicArrayQueueProducerIndexField(int capacity) { super(capacity); }
  
  public final long lvProducerIndex() { return this.producerIndex; }
  
  final boolean casProducerIndex(long expect, long newValue) { return P_INDEX_UPDATER.compareAndSet(this, expect, newValue); }
}
