package io.netty.buffer.search;

public class KmpSearchProcessorFactory extends AbstractSearchProcessorFactory {
  private final int[] jumpTable;
  
  private final byte[] needle;
  
  KmpSearchProcessorFactory(byte[] needle) {
    this.needle = (byte[])needle.clone();
    this.jumpTable = new int[needle.length + 1];
    int j = 0;
    for (int i = 1; i < needle.length; i++) {
      while (j > 0 && needle[j] != needle[i])
        j = this.jumpTable[j]; 
      if (needle[j] == needle[i])
        j++; 
      this.jumpTable[i + 1] = j;
    } 
  }
  
  public Processor newSearchProcessor() { return new Processor(this.needle, this.jumpTable); }
}
