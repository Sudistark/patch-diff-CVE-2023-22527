package io.netty.handler.ssl;

import io.netty.util.internal.ObjectUtil;
import javax.net.ssl.KeyManagerFactory;
import javax.net.ssl.X509KeyManager;

public final class OpenSslCachingX509KeyManagerFactory extends KeyManagerFactory {
  private final int maxCachedEntries;
  
  public OpenSslCachingX509KeyManagerFactory(KeyManagerFactory factory) { this(factory, 1024); }
  
  public OpenSslCachingX509KeyManagerFactory(KeyManagerFactory factory, int maxCachedEntries) {
    super(new Object(factory), factory















        
        .getProvider(), factory.getAlgorithm());
    this.maxCachedEntries = ObjectUtil.checkPositive(maxCachedEntries, "maxCachedEntries");
  }
  
  OpenSslKeyMaterialProvider newProvider(String password) {
    X509KeyManager keyManager = ReferenceCountedOpenSslContext.chooseX509KeyManager(getKeyManagers());
    if ("sun.security.ssl.X509KeyManagerImpl".equals(keyManager.getClass().getName()))
      return new OpenSslKeyMaterialProvider(keyManager, password); 
    return new OpenSslCachingKeyMaterialProvider(
        ReferenceCountedOpenSslContext.chooseX509KeyManager(getKeyManagers()), password, this.maxCachedEntries);
  }
}
