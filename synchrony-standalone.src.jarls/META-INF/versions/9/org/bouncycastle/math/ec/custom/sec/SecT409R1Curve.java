package META-INF.versions.9.org.bouncycastle.math.ec.custom.sec;

import java.math.BigInteger;
import org.bouncycastle.math.ec.ECConstants;
import org.bouncycastle.math.ec.ECCurve;
import org.bouncycastle.math.ec.ECFieldElement;
import org.bouncycastle.math.ec.ECLookupTable;
import org.bouncycastle.math.ec.ECPoint;
import org.bouncycastle.math.ec.custom.sec.SecT409FieldElement;
import org.bouncycastle.math.ec.custom.sec.SecT409R1Curve;
import org.bouncycastle.math.ec.custom.sec.SecT409R1Point;
import org.bouncycastle.math.raw.Nat448;
import org.bouncycastle.util.encoders.Hex;

public class SecT409R1Curve extends ECCurve.AbstractF2m {
  private static final int SECT409R1_DEFAULT_COORDS = 6;
  
  private static final ECFieldElement[] SECT409R1_AFFINE_ZS = { new SecT409FieldElement(ECConstants.ONE) };
  
  protected SecT409R1Point infinity;
  
  public SecT409R1Curve() {
    super(409, 87, 0, 0);
    this.infinity = new SecT409R1Point(this, null, null);
    this.a = fromBigInteger(BigInteger.valueOf(1L));
    this.b = fromBigInteger(new BigInteger(1, Hex.decodeStrict("0021A5C2C8EE9FEB5C4B9A753B7B476B7FD6422EF1F3DD674761FA99D6AC27C8A9A197B272822F6CD57A55AA4F50AE317B13545F")));
    this.order = new BigInteger(1, Hex.decodeStrict("010000000000000000000000000000000000000000000000000001E2AAD6A612F33307BE5FA47C3C9E052F838164CD37D9A21173"));
    this.cofactor = BigInteger.valueOf(2L);
    this.coord = 6;
  }
  
  protected ECCurve cloneCurve() { return new SecT409R1Curve(); }
  
  public boolean supportsCoordinateSystem(int paramInt) {
    switch (paramInt) {
      case 6:
        return true;
    } 
    return false;
  }
  
  public int getFieldSize() { return 409; }
  
  public ECFieldElement fromBigInteger(BigInteger paramBigInteger) { return new SecT409FieldElement(paramBigInteger); }
  
  protected ECPoint createRawPoint(ECFieldElement paramECFieldElement1, ECFieldElement paramECFieldElement2) { return new SecT409R1Point(this, paramECFieldElement1, paramECFieldElement2); }
  
  protected ECPoint createRawPoint(ECFieldElement paramECFieldElement1, ECFieldElement paramECFieldElement2, ECFieldElement[] paramArrayOfECFieldElement) { return new SecT409R1Point(this, paramECFieldElement1, paramECFieldElement2, paramArrayOfECFieldElement); }
  
  public ECPoint getInfinity() { return this.infinity; }
  
  public boolean isKoblitz() { return false; }
  
  public int getM() { return 409; }
  
  public boolean isTrinomial() { return true; }
  
  public int getK1() { return 87; }
  
  public int getK2() { return 0; }
  
  public int getK3() { return 0; }
  
  public ECLookupTable createCacheSafeLookupTable(ECPoint[] paramArrayOfECPoint, int paramInt1, int paramInt2) {
    long[] arrayOfLong = new long[paramInt2 * 7 * 2];
    byte b = 0;
    for (int i = 0; i < paramInt2; i++) {
      ECPoint eCPoint = paramArrayOfECPoint[paramInt1 + i];
      Nat448.copy64(((SecT409FieldElement)eCPoint.getRawXCoord()).x, 0, arrayOfLong, b);
      b += 7;
      Nat448.copy64(((SecT409FieldElement)eCPoint.getRawYCoord()).x, 0, arrayOfLong, b);
      b += 7;
    } 
    return new Object(this, paramInt2, arrayOfLong);
  }
}
