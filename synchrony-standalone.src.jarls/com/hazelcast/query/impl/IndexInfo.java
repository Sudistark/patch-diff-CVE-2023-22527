package com.hazelcast.query.impl;

import com.hazelcast.map.impl.MapDataSerializerHook;
import com.hazelcast.nio.ObjectDataInput;
import com.hazelcast.nio.ObjectDataOutput;
import com.hazelcast.nio.serialization.IdentifiedDataSerializable;
import java.io.IOException;

public class IndexInfo extends Object implements IdentifiedDataSerializable, Comparable<IndexInfo> {
  private String name;
  
  private boolean ordered;
  
  public IndexInfo() {}
  
  public IndexInfo(String name, boolean ordered) {
    this.name = name;
    this.ordered = ordered;
  }
  
  public void writeData(ObjectDataOutput out) throws IOException {
    out.writeUTF(this.name);
    out.writeBoolean(this.ordered);
  }
  
  public void readData(ObjectDataInput in) throws IOException {
    this.name = in.readUTF();
    this.ordered = in.readBoolean();
  }
  
  public String getName() { return this.name; }
  
  public boolean isOrdered() { return this.ordered; }
  
  public int getFactoryId() { return MapDataSerializerHook.F_ID; }
  
  public int getId() { return 98; }
  
  public boolean equals(Object o) {
    if (this == o)
      return true; 
    if (o == null || getClass() != o.getClass())
      return false; 
    IndexInfo indexInfo = (IndexInfo)o;
    if (this.ordered != indexInfo.ordered)
      return false; 
    return (this.name != null) ? this.name.equals(indexInfo.name) : ((indexInfo.name == null) ? 1 : 0);
  }
  
  public int hashCode() {
    result = (this.name != null) ? this.name.hashCode() : 0;
    return 31 * result + (this.ordered ? 1 : 0);
  }
  
  public int compareTo(IndexInfo other) {
    int attributeNameCompareResult = this.name.compareTo(other.name);
    if (attributeNameCompareResult == 0)
      return Boolean.valueOf(this.ordered).compareTo(Boolean.valueOf(other.ordered)); 
    return attributeNameCompareResult;
  }
}
