package com.hazelcast.query.impl;

import com.hazelcast.nio.ObjectDataInput;
import com.hazelcast.nio.ObjectDataOutput;
import com.hazelcast.nio.serialization.BinaryInterface;
import com.hazelcast.nio.serialization.IdentifiedDataSerializable;
import com.hazelcast.query.IndexAwarePredicate;
import com.hazelcast.query.Predicate;
import java.io.IOException;
import java.util.Collections;
import java.util.Map;
import java.util.Set;

@BinaryInterface
public class FalsePredicate<K, V> extends Object implements IdentifiedDataSerializable, Predicate<K, V>, IndexAwarePredicate<K, V> {
  public static final FalsePredicate INSTANCE = new FalsePredicate();
  
  private static final long serialVersionUID = 1L;
  
  public boolean apply(Map.Entry<K, V> mapEntry) { return false; }
  
  public String toString() { return "FalsePredicate{}"; }
  
  public Set<QueryableEntry<K, V>> filter(QueryContext queryContext) { return Collections.emptySet(); }
  
  public boolean isIndexed(QueryContext queryContext) { return true; }
  
  public void writeData(ObjectDataOutput out) throws IOException {}
  
  public void readData(ObjectDataInput in) throws IOException {}
  
  public int getFactoryId() { return -32; }
  
  public int getId() { return 13; }
  
  public boolean equals(Object o) { return o instanceof FalsePredicate; }
  
  public int hashCode() { return getClass().hashCode(); }
}
