package com.hazelcast.query.impl;

import com.hazelcast.internal.serialization.InternalSerializationService;
import com.hazelcast.nio.serialization.Data;
import com.hazelcast.query.impl.getters.Extractors;

public class QueryEntry extends QueryableEntry {
  private Data key;
  
  private Object value;
  
  public QueryEntry() {}
  
  public QueryEntry(InternalSerializationService serializationService, Data key, Object value, Extractors extractors) { init(serializationService, key, value, extractors); }
  
  public void init(InternalSerializationService serializationService, Data key, Object value, Extractors extractors) {
    if (key == null)
      throw new IllegalArgumentException("keyData cannot be null"); 
    this.serializationService = serializationService;
    this.key = key;
    this.value = value;
    this.extractors = extractors;
  }
  
  public Object getKey() { return this.serializationService.toObject(this.key); }
  
  public Object getValue() { return this.serializationService.toObject(this.value); }
  
  public Data getKeyData() { return this.key; }
  
  public Data getValueData() { return this.serializationService.toData(this.value); }
  
  protected Object getTargetObject(boolean key) { return key ? this.key : this.value; }
  
  public Object setValue(Object value) { throw new UnsupportedOperationException(); }
  
  public boolean equals(Object o) {
    if (this == o)
      return true; 
    if (o == null || getClass() != o.getClass())
      return false; 
    QueryEntry that = (QueryEntry)o;
    if (!this.key.equals(that.key))
      return false; 
    return true;
  }
  
  public int hashCode() { return this.key.hashCode(); }
}
