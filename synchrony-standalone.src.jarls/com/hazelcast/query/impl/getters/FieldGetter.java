package com.hazelcast.query.impl.getters;

import java.lang.reflect.Field;

public class FieldGetter extends AbstractMultiValueGetter {
  private final Field field;
  
  public FieldGetter(Getter parent, Field field, String modifierSuffix, Class resultType) {
    super(parent, modifierSuffix, field.getType(), resultType);
    this.field = field;
  }
  
  protected Object extractFrom(Object object) throws IllegalAccessException {
    try {
      return this.field.get(object);
    } catch (IllegalArgumentException e) {
      throw new IllegalArgumentException(composeAttributeValueExtractionFailedMessage(this.field), e);
    } 
  }
  
  boolean isCacheable() { return true; }
  
  public String toString() { return "FieldGetter [parent=" + this.parent + ", field=" + this.field + ", modifier = " + getModifier() + "]"; }
}
