package com.hazelcast.scheduledexecutor.impl.operations;

import com.hazelcast.nio.ObjectDataInput;
import com.hazelcast.nio.ObjectDataOutput;
import com.hazelcast.scheduledexecutor.impl.ScheduledExecutorContainer;
import com.hazelcast.scheduledexecutor.impl.ScheduledTaskDescriptor;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

public class MergeBackupOperation extends AbstractSchedulerOperation {
  private List<ScheduledTaskDescriptor> descriptors;
  
  public MergeBackupOperation() {}
  
  MergeBackupOperation(String name, List<ScheduledTaskDescriptor> descriptors) {
    super(name);
    this.descriptors = descriptors;
  }
  
  public void run() {
    ScheduledExecutorContainer container = getContainer();
    for (ScheduledTaskDescriptor descriptor : this.descriptors)
      container.enqueueSuspended(descriptor, true); 
  }
  
  public int getId() { return 28; }
  
  protected void writeInternal(ObjectDataOutput out) throws IOException {
    super.writeInternal(out);
    out.writeInt(this.descriptors.size());
    for (ScheduledTaskDescriptor descriptor : this.descriptors)
      out.writeObject(descriptor); 
  }
  
  protected void readInternal(ObjectDataInput in) throws IOException {
    super.readInternal(in);
    int size = in.readInt();
    this.descriptors = new ArrayList(size);
    for (int i = 0; i < size; i++) {
      ScheduledTaskDescriptor descriptor = (ScheduledTaskDescriptor)in.readObject();
      this.descriptors.add(descriptor);
    } 
  }
}
