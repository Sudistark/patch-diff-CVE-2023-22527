package com.hazelcast.scheduledexecutor.impl.operations;

import com.hazelcast.nio.ObjectDataInput;
import com.hazelcast.nio.ObjectDataOutput;
import com.hazelcast.scheduledexecutor.ScheduledTaskHandler;
import com.hazelcast.spi.Operation;
import com.hazelcast.spi.impl.MutatingOperation;
import java.io.IOException;

public class CancelTaskOperation extends AbstractBackupAwareSchedulerOperation implements MutatingOperation {
  private String taskName;
  
  private boolean mayInterruptIfRunning;
  
  private boolean response;
  
  public CancelTaskOperation() {}
  
  public CancelTaskOperation(ScheduledTaskHandler descriptor, boolean mayInterruptIfRunning) {
    super(descriptor.getSchedulerName());
    this.taskName = descriptor.getTaskName();
    this.mayInterruptIfRunning = mayInterruptIfRunning;
    setPartitionId(descriptor.getPartitionId());
  }
  
  public void run() { this.response = getContainer().cancel(this.taskName); }
  
  public Boolean getResponse() { return Boolean.valueOf(this.response); }
  
  public int getId() { return 8; }
  
  public Operation getBackupOperation() { return new CancelTaskBackupOperation(this.schedulerName, this.taskName); }
  
  protected void writeInternal(ObjectDataOutput out) throws IOException {
    super.writeInternal(out);
    out.writeUTF(this.taskName);
    out.writeBoolean(this.mayInterruptIfRunning);
  }
  
  protected void readInternal(ObjectDataInput in) throws IOException {
    super.readInternal(in);
    this.taskName = in.readUTF();
    this.mayInterruptIfRunning = in.readBoolean();
  }
}
