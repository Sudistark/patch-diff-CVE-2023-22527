package com.hazelcast.scheduledexecutor.impl;

import com.hazelcast.nio.ObjectDataInput;
import com.hazelcast.nio.ObjectDataOutput;
import com.hazelcast.nio.serialization.IdentifiedDataSerializable;
import java.io.IOException;
import java.util.concurrent.CancellationException;
import java.util.concurrent.ExecutionException;

public class ScheduledTaskResult implements IdentifiedDataSerializable {
  private boolean done;
  
  private Object result;
  
  private Throwable exception;
  
  private boolean cancelled;
  
  ScheduledTaskResult() {}
  
  ScheduledTaskResult(boolean cancelled) { this.cancelled = cancelled; }
  
  ScheduledTaskResult(Throwable exception) { this.exception = exception; }
  
  ScheduledTaskResult(Object result) {
    this.result = result;
    this.done = true;
  }
  
  public Object getReturnValue() { return this.result; }
  
  public Throwable getException() { return this.exception; }
  
  boolean wasCancelled() { return this.cancelled; }
  
  void checkErroneousState() {
    if (wasCancelled())
      throw new CancellationException(); 
    if (this.exception != null)
      throw new ExecutionExceptionDecorator(new ExecutionException(this.exception)); 
  }
  
  public int getFactoryId() { return ScheduledExecutorDataSerializerHook.F_ID; }
  
  public int getId() { return 24; }
  
  public void writeData(ObjectDataOutput out) throws IOException {
    out.writeObject(this.result);
    out.writeBoolean(this.done);
    out.writeBoolean(this.cancelled);
    out.writeObject(this.exception);
  }
  
  public void readData(ObjectDataInput in) throws IOException {
    this.result = in.readObject();
    this.done = in.readBoolean();
    this.cancelled = in.readBoolean();
    this.exception = (Throwable)in.readObject();
  }
  
  public String toString() { return "ScheduledTaskResult{result=" + this.result + ", exception=" + this.exception + ", cancelled=" + this.cancelled + '}'; }
}
