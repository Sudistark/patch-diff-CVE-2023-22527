package com.hazelcast.mapreduce.impl.operation;

import com.hazelcast.mapreduce.impl.AbstractJobTracker;
import com.hazelcast.mapreduce.impl.MapReduceDataSerializerHook;
import com.hazelcast.mapreduce.impl.MapReduceService;
import com.hazelcast.mapreduce.impl.task.JobSupervisor;
import java.util.Map;

public class GetResultOperation extends ProcessingOperation {
  public GetResultOperation() {}
  
  public GetResultOperation(String name, String jobId) { super(name, jobId); }
  
  public Map getResult() { return this.result; }
  
  public void run() {
    MapReduceService mapReduceService = (MapReduceService)getService();
    JobSupervisor supervisor = mapReduceService.getJobSupervisor(getName(), getJobId());
    if (supervisor != null) {
      this.result = supervisor.getJobResults();
      if (!supervisor.isOwnerNode()) {
        mapReduceService.destroyJobSupervisor(supervisor);
        AbstractJobTracker jobTracker = (AbstractJobTracker)mapReduceService.getJobTracker(getName());
        jobTracker.unregisterTrackableJob(getJobId());
        jobTracker.unregisterMapCombineTask(getJobId());
        jobTracker.unregisterReducerTask(getJobId());
      } 
    } 
  }
  
  public Object getResponse() { return this.result; }
  
  public int getFactoryId() { return MapReduceDataSerializerHook.F_ID; }
  
  public int getId() { return 8; }
}
