package com.hazelcast.mapreduce.impl;

import com.hazelcast.internal.serialization.DataSerializerHook;
import com.hazelcast.internal.serialization.impl.ArrayDataSerializableFactory;
import com.hazelcast.internal.serialization.impl.FactoryIdHelper;
import com.hazelcast.nio.serialization.DataSerializableFactory;
import com.hazelcast.util.ConstructorFunction;

public class MapReduceDataSerializerHook implements DataSerializerHook {
  public static final int F_ID = FactoryIdHelper.getFactoryId("hazelcast.serialization.ds.map_reduce", -23);
  
  public static final int KEY_VALUE_SOURCE_MAP = 0;
  
  public static final int KEY_VALUE_SOURCE_MULTIMAP = 1;
  
  public static final int REDUCER_CHUNK_MESSAGE = 2;
  
  public static final int REDUCER_LAST_CHUNK_MESSAGE = 3;
  
  public static final int TRACKED_JOB_OPERATION = 4;
  
  public static final int REQUEST_PARTITION_MAPPING = 5;
  
  public static final int REQUEST_PARTITION_REDUCING = 6;
  
  public static final int REQUEST_PARTITION_PROCESSED = 7;
  
  public static final int GET_RESULT_OPERATION = 8;
  
  public static final int START_PROCESSING_OPERATION = 9;
  
  public static final int REQUEST_PARTITION_RESULT = 10;
  
  public static final int REDUCING_FINISHED_MESSAGE = 11;
  
  public static final int FIRE_NOTIFICATION_OPERATION = 12;
  
  public static final int REQUEST_MEMBERID_ASSIGNMENT = 13;
  
  public static final int PROCESS_STATS_UPDATE_OPERATION = 14;
  
  public static final int NOTIFY_REMOTE_EXCEPTION_OPERATION = 15;
  
  public static final int CANCEL_JOB_SUPERVISOR_OPERATION = 16;
  
  public static final int POSTPONE_PARTITION_PROCESSING_OPERATION = 17;
  
  public static final int KEY_VALUE_SOURCE_LIST = 18;
  
  public static final int KEY_VALUE_SOURCE_SET = 19;
  
  public static final int KEYS_ASSIGNMENT_RESULT = 20;
  
  public static final int KEYS_ASSIGNMENT_OPERATION = 21;
  
  public static final int HASH_MAP_ADAPTER = 22;
  
  public static final int COMBINER_RESULT_LIST = 23;
  
  private static final int LEN = 24;
  
  public int getFactoryId() { return F_ID; }
  
  public DataSerializableFactory createFactory() {
    ConstructorFunction[] constructors = new ConstructorFunction[24];
    constructors[0] = new Object(this);
    constructors[1] = new Object(this);
    constructors[2] = new Object(this);
    constructors[3] = new Object(this);
    constructors[4] = new Object(this);
    constructors[5] = new Object(this);
    constructors[6] = new Object(this);
    constructors[7] = new Object(this);
    constructors[8] = new Object(this);
    constructors[9] = new Object(this);
    constructors[10] = new Object(this);
    constructors[11] = new Object(this);
    constructors[12] = new Object(this);
    constructors[13] = new Object(this);
    constructors[14] = new Object(this);
    constructors[15] = new Object(this);
    constructors[16] = new Object(this);
    constructors[18] = new Object(this);
    constructors[19] = new Object(this);
    constructors[20] = new Object(this);
    constructors[21] = new Object(this);
    constructors[17] = new Object(this);
    constructors[22] = new Object(this);
    constructors[23] = new Object(this);
    return new ArrayDataSerializableFactory(constructors);
  }
}
