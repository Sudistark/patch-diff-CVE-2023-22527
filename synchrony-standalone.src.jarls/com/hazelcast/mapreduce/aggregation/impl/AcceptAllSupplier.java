package com.hazelcast.mapreduce.aggregation.impl;

import com.hazelcast.mapreduce.aggregation.PropertyExtractor;
import com.hazelcast.mapreduce.aggregation.Supplier;
import com.hazelcast.nio.ObjectDataInput;
import com.hazelcast.nio.ObjectDataOutput;
import com.hazelcast.nio.serialization.IdentifiedDataSerializable;
import java.io.IOException;
import java.util.Map;

public class AcceptAllSupplier<KeyIn, ValueIn, ValueOut> extends Supplier<KeyIn, ValueIn, ValueOut> implements IdentifiedDataSerializable {
  private PropertyExtractor<ValueIn, ValueOut> propertyExtractor;
  
  AcceptAllSupplier() {}
  
  public AcceptAllSupplier(PropertyExtractor<ValueIn, ValueOut> propertyExtractor) { this.propertyExtractor = propertyExtractor; }
  
  public ValueOut apply(Map.Entry<KeyIn, ValueIn> entry) {
    ValueIn value = (ValueIn)entry.getValue();
    return (ValueOut)((this.propertyExtractor != null) ? this.propertyExtractor.extract(value) : value);
  }
  
  public int getFactoryId() { return AggregationsDataSerializerHook.F_ID; }
  
  public int getId() { return 1; }
  
  public void writeData(ObjectDataOutput out) throws IOException { out.writeObject(this.propertyExtractor); }
  
  public void readData(ObjectDataInput in) throws IOException { this.propertyExtractor = (PropertyExtractor)in.readObject(); }
}
