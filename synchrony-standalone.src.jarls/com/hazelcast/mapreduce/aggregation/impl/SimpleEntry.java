package com.hazelcast.mapreduce.aggregation.impl;

import com.hazelcast.internal.serialization.InternalSerializationService;
import com.hazelcast.nio.serialization.Data;
import com.hazelcast.query.impl.QueryableEntry;
import com.hazelcast.query.impl.getters.Extractors;

final class SimpleEntry<K, V> extends QueryableEntry<K, V> {
  private K key;
  
  private V value;
  
  public K getKey() { return (K)this.key; }
  
  public Data getKeyData() { throw new UnsupportedOperationException(); }
  
  public Data getValueData() { throw new UnsupportedOperationException(); }
  
  protected Object getTargetObject(boolean key) { return key ? this.key : this.value; }
  
  public V getValue() { return (V)this.value; }
  
  public V setValue(V newValue) {
    V oldValue = (V)this.value;
    this.value = newValue;
    return oldValue;
  }
  
  void setKey(K key) { this.key = key; }
  
  void setSerializationService(InternalSerializationService serializationService) { this.serializationService = serializationService; }
  
  void setExtractors(Extractors extractors) { this.extractors = extractors; }
}
