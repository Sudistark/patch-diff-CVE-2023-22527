package com.hazelcast.mapreduce.aggregation.impl;

import com.hazelcast.mapreduce.Collator;
import com.hazelcast.mapreduce.CombinerFactory;
import com.hazelcast.mapreduce.Mapper;
import com.hazelcast.mapreduce.ReducerFactory;
import com.hazelcast.mapreduce.aggregation.Supplier;
import java.util.Map;
import java.util.Set;

public class DistinctValuesAggregation<Key, Value, DistinctType> extends Object implements AggType<Key, Value, Integer, DistinctType, Set<DistinctType>, Set<DistinctType>, Set<DistinctType>> {
  private static final int DEFAULT_DISTRIBUTION_FACTOR = 20;
  
  public Collator<Map.Entry<Integer, Set<DistinctType>>, Set<DistinctType>> getCollator() { return new Object(this); }
  
  public Mapper<Key, Value, Integer, DistinctType> getMapper(Supplier<Key, Value, DistinctType> supplier) { return new DistinctValueMapper(supplier); }
  
  public CombinerFactory<Integer, DistinctType, Set<DistinctType>> getCombinerFactory() { return new DistinctValuesCombinerFactory(); }
  
  public ReducerFactory<Integer, Set<DistinctType>, Set<DistinctType>> getReducerFactory() { return new DistinctValuesReducerFactory(); }
}
