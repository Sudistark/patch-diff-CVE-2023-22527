package com.hazelcast.mapreduce.aggregation;

import com.hazelcast.mapreduce.aggregation.impl.BigDecimalAvgAggregation;
import com.hazelcast.mapreduce.aggregation.impl.BigDecimalMaxAggregation;
import com.hazelcast.mapreduce.aggregation.impl.BigDecimalMinAggregation;
import com.hazelcast.mapreduce.aggregation.impl.BigDecimalSumAggregation;
import com.hazelcast.mapreduce.aggregation.impl.BigIntegerAvgAggregation;
import com.hazelcast.mapreduce.aggregation.impl.BigIntegerMaxAggregation;
import com.hazelcast.mapreduce.aggregation.impl.BigIntegerMinAggregation;
import com.hazelcast.mapreduce.aggregation.impl.BigIntegerSumAggregation;
import com.hazelcast.mapreduce.aggregation.impl.ComparableMaxAggregation;
import com.hazelcast.mapreduce.aggregation.impl.ComparableMinAggregation;
import com.hazelcast.mapreduce.aggregation.impl.CountAggregation;
import com.hazelcast.mapreduce.aggregation.impl.DistinctValuesAggregation;
import com.hazelcast.mapreduce.aggregation.impl.DoubleAvgAggregation;
import com.hazelcast.mapreduce.aggregation.impl.DoubleMaxAggregation;
import com.hazelcast.mapreduce.aggregation.impl.DoubleMinAggregation;
import com.hazelcast.mapreduce.aggregation.impl.DoubleSumAggregation;
import com.hazelcast.mapreduce.aggregation.impl.IntegerAvgAggregation;
import com.hazelcast.mapreduce.aggregation.impl.IntegerMaxAggregation;
import com.hazelcast.mapreduce.aggregation.impl.IntegerMinAggregation;
import com.hazelcast.mapreduce.aggregation.impl.IntegerSumAggregation;
import com.hazelcast.mapreduce.aggregation.impl.LongAvgAggregation;
import com.hazelcast.mapreduce.aggregation.impl.LongMaxAggregation;
import com.hazelcast.mapreduce.aggregation.impl.LongMinAggregation;
import com.hazelcast.mapreduce.aggregation.impl.LongSumAggregation;
import java.math.BigDecimal;
import java.math.BigInteger;
import java.util.Set;

@Deprecated
public final class Aggregations {
  public static <Key, Value> Aggregation<Key, Value, Long> count() { return new AggregationAdapter(new CountAggregation(), null); }
  
  public static <Key, Value, DistinctType> Aggregation<Key, Value, Set<DistinctType>> distinctValues() {
    DistinctValuesAggregation distinctValuesAggregation = new DistinctValuesAggregation();
    return new AggregationAdapter(distinctValuesAggregation, null);
  }
  
  public static <Key, Value> Aggregation<Key, Value, Integer> integerAvg() { return new AggregationAdapter(new IntegerAvgAggregation(), null); }
  
  public static <Key, Value> Aggregation<Key, Integer, Integer> integerSum() { return new AggregationAdapter(new IntegerSumAggregation(), null); }
  
  public static <Key, Value> Aggregation<Key, Integer, Integer> integerMin() { return new AggregationAdapter(new IntegerMinAggregation(), null); }
  
  public static <Key, Value> Aggregation<Key, Integer, Integer> integerMax() { return new AggregationAdapter(new IntegerMaxAggregation(), null); }
  
  public static <Key, Value> Aggregation<Key, Long, Long> longAvg() { return new AggregationAdapter(new LongAvgAggregation(), null); }
  
  public static <Key, Value> Aggregation<Key, Long, Long> longSum() { return new AggregationAdapter(new LongSumAggregation(), null); }
  
  public static <Key, Value> Aggregation<Key, Long, Long> longMin() { return new AggregationAdapter(new LongMinAggregation(), null); }
  
  public static <Key, Value> Aggregation<Key, Long, Long> longMax() { return new AggregationAdapter(new LongMaxAggregation(), null); }
  
  public static <Key, Value> Aggregation<Key, Double, Double> doubleAvg() { return new AggregationAdapter(new DoubleAvgAggregation(), null); }
  
  public static <Key, Value> Aggregation<Key, Double, Double> doubleSum() { return new AggregationAdapter(new DoubleSumAggregation(), null); }
  
  public static <Key, Value> Aggregation<Key, Double, Double> doubleMin() { return new AggregationAdapter(new DoubleMinAggregation(), null); }
  
  public static <Key, Value> Aggregation<Key, Double, Double> doubleMax() { return new AggregationAdapter(new DoubleMaxAggregation(), null); }
  
  public static <Key, Value> Aggregation<Key, BigDecimal, BigDecimal> bigDecimalAvg() { return new AggregationAdapter(new BigDecimalAvgAggregation(), null); }
  
  public static <Key, Value> Aggregation<Key, BigDecimal, BigDecimal> bigDecimalSum() { return new AggregationAdapter(new BigDecimalSumAggregation(), null); }
  
  public static <Key, Value> Aggregation<Key, BigDecimal, BigDecimal> bigDecimalMin() { return new AggregationAdapter(new BigDecimalMinAggregation(), null); }
  
  public static <Key, Value> Aggregation<Key, BigDecimal, BigDecimal> bigDecimalMax() { return new AggregationAdapter(new BigDecimalMaxAggregation(), null); }
  
  public static <Key, Value> Aggregation<Key, BigInteger, BigInteger> bigIntegerAvg() { return new AggregationAdapter(new BigIntegerAvgAggregation(), null); }
  
  public static <Key, Value> Aggregation<Key, BigInteger, BigInteger> bigIntegerSum() { return new AggregationAdapter(new BigIntegerSumAggregation(), null); }
  
  public static <Key, Value> Aggregation<Key, BigInteger, BigInteger> bigIntegerMin() { return new AggregationAdapter(new BigIntegerMinAggregation(), null); }
  
  public static <Key, Value> Aggregation<Key, BigInteger, BigInteger> bigIntegerMax() { return new AggregationAdapter(new BigIntegerMaxAggregation(), null); }
  
  public static <Key, Value> Aggregation<Key, Comparable, Comparable> comparableMin() { return new AggregationAdapter(new ComparableMinAggregation(), null); }
  
  public static <Key, Value> Aggregation<Key, Comparable, Comparable> comparableMax() { return new AggregationAdapter(new ComparableMaxAggregation(), null); }
}
