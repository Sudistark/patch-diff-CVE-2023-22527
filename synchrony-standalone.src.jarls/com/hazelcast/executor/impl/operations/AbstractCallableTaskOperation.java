package com.hazelcast.executor.impl.operations;

import com.hazelcast.executor.impl.ExecutorDataSerializerHook;
import com.hazelcast.nio.ObjectDataInput;
import com.hazelcast.nio.ObjectDataOutput;
import com.hazelcast.nio.serialization.Data;
import com.hazelcast.nio.serialization.IdentifiedDataSerializable;
import com.hazelcast.spi.CallStatus;
import com.hazelcast.spi.NamedOperation;
import com.hazelcast.spi.Operation;
import java.io.IOException;

abstract class AbstractCallableTaskOperation extends Operation implements NamedOperation, IdentifiedDataSerializable {
  protected String name;
  
  protected String uuid;
  
  private Data callableData;
  
  public AbstractCallableTaskOperation() {}
  
  public AbstractCallableTaskOperation(String name, String uuid, Data callableData) {
    this.name = name;
    this.uuid = uuid;
    this.callableData = callableData;
  }
  
  public final CallStatus call() { return new OffloadImpl(this); }
  
  public String getName() { return this.name; }
  
  public String getServiceName() { return "hz:impl:executorService"; }
  
  protected void writeInternal(ObjectDataOutput out) throws IOException {
    out.writeUTF(this.name);
    out.writeUTF(this.uuid);
    out.writeData(this.callableData);
  }
  
  protected void readInternal(ObjectDataInput in) throws IOException {
    this.name = in.readUTF();
    this.uuid = in.readUTF();
    this.callableData = in.readData();
  }
  
  protected void toString(StringBuilder sb) {
    super.toString(sb);
    sb.append(", name=").append(this.name);
  }
  
  public int getFactoryId() { return ExecutorDataSerializerHook.F_ID; }
}
