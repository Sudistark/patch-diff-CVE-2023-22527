package com.hazelcast.cache.impl.record;

import com.hazelcast.nio.ObjectDataInput;
import com.hazelcast.nio.ObjectDataOutput;
import com.hazelcast.nio.serialization.Data;
import java.io.IOException;

public class CacheDataRecord extends AbstractCacheRecord<Data, Data> {
  private Data value;
  
  private Data expiryPolicy;
  
  public CacheDataRecord() {}
  
  public CacheDataRecord(Data value, long creationTime, long expiryTime) {
    super(creationTime, expiryTime);
    this.value = value;
  }
  
  public Data getValue() { return this.value; }
  
  public void setValue(Data value) { this.value = value; }
  
  public void setExpiryPolicy(Data expiryPolicy) { this.expiryPolicy = expiryPolicy; }
  
  public Data getExpiryPolicy() { return this.expiryPolicy; }
  
  public void writeData(ObjectDataOutput out) throws IOException {
    super.writeData(out);
    out.writeData(this.value);
    if (out.getVersion().isGreaterOrEqual(EXPIRY_POLICY_VERSION))
      out.writeData(this.expiryPolicy); 
  }
  
  public void readData(ObjectDataInput in) throws IOException {
    super.readData(in);
    this.value = in.readData();
    if (in.getVersion().isGreaterOrEqual(EXPIRY_POLICY_VERSION))
      this.expiryPolicy = in.readData(); 
  }
  
  public int getId() { return 47; }
}
