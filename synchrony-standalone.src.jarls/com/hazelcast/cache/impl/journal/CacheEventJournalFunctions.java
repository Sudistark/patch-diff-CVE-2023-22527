package com.hazelcast.cache.impl.journal;

import com.hazelcast.cache.journal.EventJournalCacheEvent;
import com.hazelcast.util.function.Function;
import com.hazelcast.util.function.Predicate;
import java.util.Map;

public final class CacheEventJournalFunctions {
  public static <K, V> Predicate<EventJournalCacheEvent<K, V>> cachePutEvents() { return new CachePutEventsPredicate(null); }
  
  public static <K, V> Function<EventJournalCacheEvent<K, V>, Map.Entry<K, V>> cacheEventToEntry() { return new CacheEventToEntryProjection(null); }
  
  public static <K, V> Function<EventJournalCacheEvent<K, V>, V> cacheEventNewValue() { return new CacheEventNewValueProjection(null); }
}
