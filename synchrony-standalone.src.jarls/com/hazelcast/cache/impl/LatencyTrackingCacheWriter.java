package com.hazelcast.cache.impl;

import com.hazelcast.internal.diagnostics.StoreLatencyPlugin;
import java.util.Collection;
import javax.cache.Cache;
import javax.cache.integration.CacheWriter;
import javax.cache.integration.CacheWriterException;

public class LatencyTrackingCacheWriter<K, V> extends Object implements CacheWriter<K, V> {
  static final String KEY = "CacheStoreLatency";
  
  private final CacheWriter<K, V> delegate;
  
  private final StoreLatencyPlugin.LatencyProbe writeProbe;
  
  private final StoreLatencyPlugin.LatencyProbe writeAllProbe;
  
  private final StoreLatencyPlugin.LatencyProbe deleteProbe;
  
  private final StoreLatencyPlugin.LatencyProbe deleteAllProbe;
  
  public LatencyTrackingCacheWriter(CacheWriter<K, V> delegate, StoreLatencyPlugin plugin, String cacheName) {
    this.delegate = delegate;
    this.writeProbe = plugin.newProbe("CacheStoreLatency", cacheName, "write");
    this.writeAllProbe = plugin.newProbe("CacheStoreLatency", cacheName, "writeAll");
    this.deleteProbe = plugin.newProbe("CacheStoreLatency", cacheName, "delete");
    this.deleteAllProbe = plugin.newProbe("CacheStoreLatency", cacheName, "deleteAll");
  }
  
  public void write(Cache.Entry<? extends K, ? extends V> entry) throws CacheWriterException {
    startNanos = System.nanoTime();
    try {
      this.delegate.write(entry);
    } finally {
      this.writeProbe.recordValue(System.nanoTime() - startNanos);
    } 
  }
  
  public void writeAll(Collection<Cache.Entry<? extends K, ? extends V>> collection) throws CacheWriterException {
    startNanos = System.nanoTime();
    try {
      this.delegate.writeAll(collection);
    } finally {
      this.writeAllProbe.recordValue(System.nanoTime() - startNanos);
    } 
  }
  
  public void delete(Object o) throws CacheWriterException {
    startNanos = System.nanoTime();
    try {
      this.delegate.delete(o);
    } finally {
      this.deleteProbe.recordValue(System.nanoTime() - startNanos);
    } 
  }
  
  public void deleteAll(Collection<?> collection) throws CacheWriterException {
    startNanos = System.nanoTime();
    try {
      this.delegate.deleteAll(collection);
    } finally {
      this.deleteAllProbe.recordValue(System.nanoTime() - startNanos);
    } 
  }
}
