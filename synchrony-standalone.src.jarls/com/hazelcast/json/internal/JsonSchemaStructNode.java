package com.hazelcast.json.internal;

import java.util.ArrayList;
import java.util.List;

public class JsonSchemaStructNode extends JsonSchemaNode {
  private final List<JsonSchemaNameValue> inners = new ArrayList();
  
  public JsonSchemaStructNode(JsonSchemaStructNode parent) { super(parent); }
  
  public void addChild(JsonSchemaNameValue description) { this.inners.add(description); }
  
  public JsonSchemaNameValue getChild(int i) { return (JsonSchemaNameValue)this.inners.get(i); }
  
  public int getChildCount() { return this.inners.size(); }
  
  public boolean equals(Object o) {
    if (this == o)
      return true; 
    if (o == null || getClass() != o.getClass())
      return false; 
    if (!super.equals(o))
      return false; 
    JsonSchemaStructNode that = (JsonSchemaStructNode)o;
    return (this.inners != null) ? this.inners.equals(that.inners) : ((that.inners == null) ? 1 : 0);
  }
  
  public int hashCode() {
    result = super.hashCode();
    return 31 * result + ((this.inners != null) ? this.inners.hashCode() : 0);
  }
  
  public String toString() { return "JsonSchemaStructNode{inners=" + this.inners + '}'; }
}
