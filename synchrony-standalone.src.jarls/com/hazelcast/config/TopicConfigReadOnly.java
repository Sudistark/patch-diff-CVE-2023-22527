package com.hazelcast.config;

import java.util.ArrayList;
import java.util.Collections;
import java.util.List;

public class TopicConfigReadOnly extends TopicConfig {
  public TopicConfigReadOnly(TopicConfig config) { super(config); }
  
  public List<ListenerConfig> getMessageListenerConfigs() {
    List<ListenerConfig> messageListenerConfigs = super.getMessageListenerConfigs();
    List<ListenerConfig> readOnlyMessageListenerConfigs = new ArrayList<ListenerConfig>(messageListenerConfigs.size());
    for (ListenerConfig messageListenerConfig : messageListenerConfigs)
      readOnlyMessageListenerConfigs.add(messageListenerConfig.getAsReadOnly()); 
    return Collections.unmodifiableList(readOnlyMessageListenerConfigs);
  }
  
  public TopicConfig setName(String name) { throw new UnsupportedOperationException("This config is read-only topic: " + getName()); }
  
  public TopicConfig setGlobalOrderingEnabled(boolean globalOrderingEnabled) { throw new UnsupportedOperationException("This config is read-only topic: " + getName()); }
  
  public TopicConfig setMultiThreadingEnabled(boolean multiThreadingEnabled) { throw new UnsupportedOperationException("This config is read-only topic: " + getName()); }
  
  public TopicConfig addMessageListenerConfig(ListenerConfig listenerConfig) { throw new UnsupportedOperationException("This config is read-only topic: " + getName()); }
  
  public TopicConfig setMessageListenerConfigs(List<ListenerConfig> listenerConfigs) { throw new UnsupportedOperationException("This config is read-only topic: " + getName()); }
  
  public TopicConfig setStatisticsEnabled(boolean statisticsEnabled) { throw new UnsupportedOperationException("This config is read-only topic: " + getName()); }
}
