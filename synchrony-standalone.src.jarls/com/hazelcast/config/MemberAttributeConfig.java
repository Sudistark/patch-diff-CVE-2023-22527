package com.hazelcast.config;

import java.util.HashMap;
import java.util.Map;

public class MemberAttributeConfig {
  private final Map<String, Object> attributes = new HashMap();
  
  public MemberAttributeConfig() {}
  
  public MemberAttributeConfig(MemberAttributeConfig source) { this.attributes.putAll(source.attributes); }
  
  public Map<String, Object> getAttributes() { return this.attributes; }
  
  public void setAttributes(Map<String, Object> attributes) {
    this.attributes.clear();
    if (attributes != null)
      this.attributes.putAll(attributes); 
  }
  
  public String getStringAttribute(String key) { return (String)getAttribute(key); }
  
  public void setStringAttribute(String key, String value) { setAttribute(key, value); }
  
  public Boolean getBooleanAttribute(String key) { return (Boolean)getAttribute(key); }
  
  public void setBooleanAttribute(String key, boolean value) { setAttribute(key, Boolean.valueOf(value)); }
  
  public Byte getByteAttribute(String key) { return (Byte)getAttribute(key); }
  
  public void setByteAttribute(String key, byte value) { setAttribute(key, Byte.valueOf(value)); }
  
  public Short getShortAttribute(String key) { return (Short)getAttribute(key); }
  
  public void setShortAttribute(String key, short value) { setAttribute(key, Short.valueOf(value)); }
  
  public Integer getIntAttribute(String key) { return (Integer)getAttribute(key); }
  
  public void setIntAttribute(String key, int value) { setAttribute(key, Integer.valueOf(value)); }
  
  public Long getLongAttribute(String key) { return (Long)getAttribute(key); }
  
  public void setLongAttribute(String key, long value) { setAttribute(key, Long.valueOf(value)); }
  
  public Float getFloatAttribute(String key) { return (Float)getAttribute(key); }
  
  public void setFloatAttribute(String key, float value) { setAttribute(key, Float.valueOf(value)); }
  
  public Double getDoubleAttribute(String key) { return (Double)getAttribute(key); }
  
  public void setDoubleAttribute(String key, double value) { setAttribute(key, Double.valueOf(value)); }
  
  public void removeAttribute(String key) { this.attributes.remove(key); }
  
  public MemberAttributeConfig asReadOnly() { return new MemberAttributeConfigReadOnly(this); }
  
  private Object getAttribute(String key) { return this.attributes.get(key); }
  
  private void setAttribute(String key, Object value) { this.attributes.put(key, value); }
}
