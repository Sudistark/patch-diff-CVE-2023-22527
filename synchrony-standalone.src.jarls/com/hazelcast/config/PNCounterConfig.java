package com.hazelcast.config;

import com.hazelcast.nio.ObjectDataInput;
import com.hazelcast.nio.ObjectDataOutput;
import com.hazelcast.nio.serialization.IdentifiedDataSerializable;
import com.hazelcast.util.Preconditions;
import java.io.IOException;

public class PNCounterConfig implements IdentifiedDataSerializable, NamedConfig {
  public static final int DEFAULT_REPLICA_COUNT = 2147483647;
  
  public static final boolean DEFAULT_STATISTICS_ENABLED = true;
  
  private String name = "default";
  
  private int replicaCount = Integer.MAX_VALUE;
  
  private String quorumName;
  
  private boolean statisticsEnabled = true;
  
  private PNCounterConfigReadOnly readOnly;
  
  public PNCounterConfig(String name, int replicaCount, String quorumName, boolean statisticsEnabled) {
    this.name = name;
    this.replicaCount = replicaCount;
    this.quorumName = quorumName;
    this.statisticsEnabled = statisticsEnabled;
  }
  
  public PNCounterConfig(String name) { this.name = name; }
  
  public PNCounterConfig(PNCounterConfig config) { this(config.getName(), config.getReplicaCount(), config.getQuorumName(), config.isStatisticsEnabled()); }
  
  public String getName() { return this.name; }
  
  public PNCounterConfig setName(String name) {
    Preconditions.checkNotNull(name);
    this.name = name;
    return this;
  }
  
  public boolean isStatisticsEnabled() { return this.statisticsEnabled; }
  
  public PNCounterConfig setStatisticsEnabled(boolean statisticsEnabled) {
    this.statisticsEnabled = statisticsEnabled;
    return this;
  }
  
  public int getReplicaCount() { return this.replicaCount; }
  
  public PNCounterConfig setReplicaCount(int replicaCount) {
    if (replicaCount < 1)
      throw new ConfigurationException("Replica count must be greater or equal to 1"); 
    this.replicaCount = replicaCount;
    return this;
  }
  
  public String getQuorumName() { return this.quorumName; }
  
  public PNCounterConfig setQuorumName(String quorumName) {
    this.quorumName = quorumName;
    return this;
  }
  
  PNCounterConfig getAsReadOnly() {
    if (this.readOnly == null)
      this.readOnly = new PNCounterConfigReadOnly(this); 
    return this.readOnly;
  }
  
  public int getFactoryId() { return ConfigDataSerializerHook.F_ID; }
  
  public int getId() { return 53; }
  
  public void writeData(ObjectDataOutput out) throws IOException {
    out.writeUTF(this.name);
    out.writeInt(this.replicaCount);
    out.writeBoolean(this.statisticsEnabled);
    out.writeUTF(this.quorumName);
  }
  
  public void readData(ObjectDataInput in) throws IOException {
    this.name = in.readUTF();
    this.replicaCount = in.readInt();
    this.statisticsEnabled = in.readBoolean();
    this.quorumName = in.readUTF();
  }
  
  public boolean equals(Object o) {
    if (this == o)
      return true; 
    if (o == null || getClass() != o.getClass())
      return false; 
    PNCounterConfig that = (PNCounterConfig)o;
    if (this.replicaCount != that.replicaCount)
      return false; 
    if (this.statisticsEnabled != that.statisticsEnabled)
      return false; 
    if (!this.name.equals(that.name))
      return false; 
    return (this.quorumName != null) ? this.quorumName.equals(that.quorumName) : ((that.quorumName == null) ? 1 : 0);
  }
  
  public int hashCode() {
    result = this.name.hashCode();
    result = 31 * result + this.replicaCount;
    result = 31 * result + ((this.quorumName != null) ? this.quorumName.hashCode() : 0);
    return 31 * result + (this.statisticsEnabled ? 1 : 0);
  }
  
  public PNCounterConfig() {}
}
