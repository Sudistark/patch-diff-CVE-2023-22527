package com.hazelcast.config;

import com.hazelcast.map.listener.MapPartitionLostListener;
import java.util.EventListener;

public class MapPartitionLostListenerConfig extends ListenerConfig {
  private MapPartitionLostListenerConfigReadOnly readOnly;
  
  public MapPartitionLostListenerConfig() {}
  
  public MapPartitionLostListenerConfig(String className) { super(className); }
  
  public MapPartitionLostListenerConfig(MapPartitionLostListener implementation) { super(implementation); }
  
  public MapPartitionLostListenerConfig(MapPartitionLostListenerConfig config) {
    this.implementation = config.getImplementation();
    this.className = config.getClassName();
  }
  
  public MapPartitionLostListenerConfigReadOnly getAsReadOnly() {
    if (this.readOnly == null)
      this.readOnly = new MapPartitionLostListenerConfigReadOnly(this); 
    return this.readOnly;
  }
  
  public MapPartitionLostListener getImplementation() { return (MapPartitionLostListener)this.implementation; }
  
  public MapPartitionLostListenerConfig setImplementation(MapPartitionLostListener implementation) {
    setImplementation(implementation);
    return this;
  }
  
  public boolean equals(Object o) {
    if (this == o)
      return true; 
    if (o == null || getClass() != o.getClass())
      return false; 
    if (!super.equals(o))
      return false; 
    MapPartitionLostListenerConfig that = (MapPartitionLostListenerConfig)o;
    if ((this.className != null) ? !this.className.equals(that.className) : (that.className != null))
      return false; 
    if ((this.implementation != null) ? !this.implementation.equals(that.implementation) : (that.implementation != null))
      return false; 
  }
  
  public int hashCode() {
    result = super.hashCode();
    result = 31 * result + ((this.className != null) ? this.className.hashCode() : 0);
    return 31 * result + ((this.implementation != null) ? this.implementation.hashCode() : 0);
  }
  
  public int getId() { return 15; }
}
