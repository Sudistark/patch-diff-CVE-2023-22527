package com.hazelcast.config;

import java.util.ArrayList;
import java.util.Collections;
import java.util.List;

class QueryCacheConfigReadOnly extends QueryCacheConfig {
  public QueryCacheConfigReadOnly(QueryCacheConfig other) { super(other); }
  
  public List<MapIndexConfig> getIndexConfigs() {
    List<MapIndexConfig> mapIndexConfigs = super.getIndexConfigs();
    List<MapIndexConfig> readOnlyMapIndexConfigs = new ArrayList<MapIndexConfig>(mapIndexConfigs.size());
    for (MapIndexConfig mapIndexConfig : mapIndexConfigs)
      readOnlyMapIndexConfigs.add(mapIndexConfig.getAsReadOnly()); 
    return Collections.unmodifiableList(readOnlyMapIndexConfigs);
  }
  
  public List<EntryListenerConfig> getEntryListenerConfigs() {
    List<EntryListenerConfig> listenerConfigs = super.getEntryListenerConfigs();
    List<EntryListenerConfig> readOnlyListenerConfigs = new ArrayList<EntryListenerConfig>(listenerConfigs.size());
    for (EntryListenerConfig listenerConfig : listenerConfigs)
      readOnlyListenerConfigs.add(listenerConfig.getAsReadOnly()); 
    return Collections.unmodifiableList(readOnlyListenerConfigs);
  }
  
  public EvictionConfig getEvictionConfig() { return super.getEvictionConfig().getAsReadOnly(); }
  
  public PredicateConfig getPredicateConfig() { return super.getPredicateConfig().getAsReadOnly(); }
  
  public QueryCacheConfig setBatchSize(int batchSize) { throw new UnsupportedOperationException("This config is read-only query cache: " + getName()); }
  
  public QueryCacheConfig setBufferSize(int bufferSize) { throw new UnsupportedOperationException("This config is read-only query cache: " + getName()); }
  
  public QueryCacheConfig setDelaySeconds(int delaySeconds) { throw new UnsupportedOperationException("This config is read-only query cache: " + getName()); }
  
  public QueryCacheConfig setEntryListenerConfigs(List<EntryListenerConfig> listenerConfigs) { throw new UnsupportedOperationException("This config is read-only query cache: " + getName()); }
  
  public QueryCacheConfig setEvictionConfig(EvictionConfig evictionConfig) { throw new UnsupportedOperationException("This config is read-only query cache: " + getName()); }
  
  public QueryCacheConfig setIncludeValue(boolean includeValue) { throw new UnsupportedOperationException("This config is read-only query cache: " + getName()); }
  
  public QueryCacheConfig setIndexConfigs(List<MapIndexConfig> indexConfigs) { throw new UnsupportedOperationException("This config is read-only query cache: " + getName()); }
  
  public QueryCacheConfig setInMemoryFormat(InMemoryFormat inMemoryFormat) { throw new UnsupportedOperationException("This config is read-only query cache: " + getName()); }
  
  public QueryCacheConfig setName(String name) { throw new UnsupportedOperationException("This config is read-only query cache: " + getName()); }
  
  public QueryCacheConfig setPredicateConfig(PredicateConfig predicateConfig) { throw new UnsupportedOperationException("This config is read-only query cache: " + getName()); }
  
  public QueryCacheConfig setPopulate(boolean populate) { throw new UnsupportedOperationException("This config is read-only query cache: " + getName()); }
  
  public QueryCacheConfig setCoalesce(boolean coalesce) { throw new UnsupportedOperationException("This config is read-only query cache: " + getName()); }
}
