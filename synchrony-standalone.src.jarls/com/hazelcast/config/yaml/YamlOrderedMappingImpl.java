package com.hazelcast.config.yaml;

import com.hazelcast.internal.yaml.YamlMapping;
import com.hazelcast.internal.yaml.YamlNameNodePair;
import com.hazelcast.internal.yaml.YamlNode;
import com.hazelcast.internal.yaml.YamlScalar;
import com.hazelcast.internal.yaml.YamlSequence;
import java.util.ArrayList;
import java.util.List;

final class YamlOrderedMappingImpl implements YamlOrderedMapping {
  private final YamlMapping wrappedMapping;
  
  private final List<YamlNode> randomAccessChildren;
  
  private YamlOrderedMappingImpl(YamlMapping wrappedMapping) {
    this.wrappedMapping = wrappedMapping;
    this.randomAccessChildren = new ArrayList(wrappedMapping.childCount());
    copyChildren();
  }
  
  public YamlNode child(String name) { return this.wrappedMapping.child(name); }
  
  public YamlMapping childAsMapping(String name) { return this.wrappedMapping.childAsMapping(name); }
  
  public YamlSequence childAsSequence(String name) { return this.wrappedMapping.childAsSequence(name); }
  
  public YamlScalar childAsScalar(String name) { return this.wrappedMapping.childAsScalar(name); }
  
  public <T> T childAsScalarValue(String name) { return (T)this.wrappedMapping.childAsScalarValue(name); }
  
  public <T> T childAsScalarValue(String name, Class<T> type) { return (T)this.wrappedMapping.childAsScalarValue(name, type); }
  
  public Iterable<YamlNode> children() { return this.wrappedMapping.children(); }
  
  public Iterable<YamlNameNodePair> childrenPairs() { return this.wrappedMapping.childrenPairs(); }
  
  public int childCount() { return this.wrappedMapping.childCount(); }
  
  public YamlNode parent() { return this.wrappedMapping.parent(); }
  
  public String nodeName() { return this.wrappedMapping.nodeName(); }
  
  public String path() { return this.wrappedMapping.path(); }
  
  public YamlNode child(int index) {
    if (index >= this.randomAccessChildren.size())
      return null; 
    return (YamlNode)this.randomAccessChildren.get(index);
  }
  
  static YamlOrderedMappingImpl asOrderedMapping(YamlMapping yamlMapping) { return new YamlOrderedMappingImpl(yamlMapping); }
  
  private void copyChildren() {
    for (YamlNode child : this.wrappedMapping.children())
      this.randomAccessChildren.add(child); 
  }
}
