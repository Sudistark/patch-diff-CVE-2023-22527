package com.hazelcast.transaction.impl.operations;

import com.hazelcast.nio.ObjectDataInput;
import com.hazelcast.nio.ObjectDataOutput;
import com.hazelcast.spi.ExceptionAction;
import com.hazelcast.transaction.impl.TransactionManagerServiceImpl;
import java.io.IOException;

public class PurgeTxBackupLogOperation extends AbstractTxOperation {
  private String txnId;
  
  public PurgeTxBackupLogOperation() {}
  
  public PurgeTxBackupLogOperation(String txnId) { this.txnId = txnId; }
  
  public void run() {
    TransactionManagerServiceImpl txManagerService = (TransactionManagerServiceImpl)getService();
    txManagerService.purgeBackupLog(this.txnId);
  }
  
  public ExceptionAction onInvocationException(Throwable throwable) {
    if (throwable instanceof com.hazelcast.core.MemberLeftException || throwable instanceof com.hazelcast.spi.exception.TargetNotMemberException)
      return ExceptionAction.THROW_EXCEPTION; 
    return super.onInvocationException(throwable);
  }
  
  public int getId() { return 2; }
  
  protected void writeInternal(ObjectDataOutput out) throws IOException { out.writeUTF(this.txnId); }
  
  protected void readInternal(ObjectDataInput in) throws IOException { this.txnId = in.readUTF(); }
}
