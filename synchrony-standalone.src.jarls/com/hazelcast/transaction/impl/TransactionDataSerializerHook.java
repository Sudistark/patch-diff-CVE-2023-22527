package com.hazelcast.transaction.impl;

import com.hazelcast.internal.serialization.DataSerializerHook;
import com.hazelcast.internal.serialization.impl.FactoryIdHelper;
import com.hazelcast.nio.serialization.DataSerializableFactory;

public final class TransactionDataSerializerHook implements DataSerializerHook {
  public static final int F_ID = FactoryIdHelper.getFactoryId("hazelcast.serialization.ds.transaction", -19);
  
  public static final int CREATE_TX_BACKUP_LOG = 0;
  
  public static final int BROADCAST_TX_ROLLBACK = 1;
  
  public static final int PURGE_TX_BACKUP_LOG = 2;
  
  public static final int REPLICATE_TX_BACKUP_LOG = 3;
  
  public static final int ROLLBACK_TX_BACKUP_LOG = 4;
  
  public static final int CREATE_ALLOWED_DURING_PASSIVE_STATE_TX_BACKUP_LOG = 5;
  
  public static final int PURGE_ALLOWED_DURING_PASSIVE_STATE_TX_BACKUP_LOG = 6;
  
  public static final int REPLICATE_ALLOWED_DURING_PASSIVE_STATE_TX_BACKUP_LOG = 7;
  
  public static final int ROLLBACK_ALLOWED_DURING_PASSIVE_STATE_TX_BACKUP_LOG = 8;
  
  public static final int CLEAR_REMOTE_TX_BACKUP = 9;
  
  public static final int CLEAR_REMOTE_TX = 10;
  
  public static final int COLLECT_REMOTE_TX = 11;
  
  public static final int COLLECT_REMOTE_TX_FACTORY = 12;
  
  public static final int FINALIZE_REMOTE_TX_BACKUP = 13;
  
  public static final int FINALIZE_REMOTE_TX = 14;
  
  public static final int PUT_REMOTE_TX_BACKUP = 15;
  
  public static final int PUT_REMOTE_TX = 16;
  
  public static final int XA_REPLICATION = 17;
  
  public static final int XA_TRANSACTION_DTO = 18;
  
  public int getFactoryId() { return F_ID; }
  
  public DataSerializableFactory createFactory() { return new Object(this); }
}
