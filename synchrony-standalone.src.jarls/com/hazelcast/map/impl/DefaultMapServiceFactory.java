package com.hazelcast.map.impl;

import com.hazelcast.map.impl.event.MapEventPublishingService;
import com.hazelcast.spi.ClientAwareService;
import com.hazelcast.spi.EventPublishingService;
import com.hazelcast.spi.ManagedService;
import com.hazelcast.spi.NodeEngine;
import com.hazelcast.spi.PartitionAwareService;
import com.hazelcast.spi.PostJoinAwareService;
import com.hazelcast.spi.RemoteService;
import com.hazelcast.spi.ReplicationSupportingService;
import com.hazelcast.spi.SplitBrainHandlerService;
import com.hazelcast.spi.StatisticsAwareService;
import com.hazelcast.spi.TransactionalService;
import com.hazelcast.spi.impl.CountingMigrationAwareService;
import com.hazelcast.util.Preconditions;

class DefaultMapServiceFactory extends AbstractMapServiceFactory {
  private final NodeEngine nodeEngine;
  
  private final MapServiceContext mapServiceContext;
  
  public DefaultMapServiceFactory(NodeEngine nodeEngine, MapServiceContext mapServiceContext) {
    this.nodeEngine = (NodeEngine)Preconditions.checkNotNull(nodeEngine, "nodeEngine should not be null");
    this.mapServiceContext = (MapServiceContext)Preconditions.checkNotNull(mapServiceContext, "mapServiceContext should not be null");
  }
  
  public NodeEngine getNodeEngine() { return this.nodeEngine; }
  
  public MapServiceContext getMapServiceContext() { return this.mapServiceContext; }
  
  ManagedService createManagedService() { return new MapManagedService(this.mapServiceContext); }
  
  CountingMigrationAwareService createMigrationAwareService() { return new CountingMigrationAwareService(new MapMigrationAwareService(this.mapServiceContext)); }
  
  TransactionalService createTransactionalService() { return new MapTransactionalService(this.mapServiceContext); }
  
  RemoteService createRemoteService() { return new MapRemoteService(this.mapServiceContext); }
  
  EventPublishingService createEventPublishingService() { return new MapEventPublishingService(this.mapServiceContext); }
  
  PostJoinAwareService createPostJoinAwareService() { return new MapPostJoinAwareService(this.mapServiceContext); }
  
  SplitBrainHandlerService createSplitBrainHandlerService() { return new MapSplitBrainHandlerService(this.mapServiceContext); }
  
  ReplicationSupportingService createReplicationSupportingService() { return new MapReplicationSupportingService(this.mapServiceContext); }
  
  StatisticsAwareService createStatisticsAwareService() { return new MapStatisticsAwareService(this.mapServiceContext); }
  
  MapPartitionAwareService createPartitionAwareService() { return new MapPartitionAwareService(this.mapServiceContext); }
  
  MapQuorumAwareService createQuorumAwareService() { return new MapQuorumAwareService(getMapServiceContext()); }
  
  ClientAwareService createClientAwareService() { return new MapClientAwareService(getMapServiceContext()); }
}
