package com.hazelcast.map.impl.querycache.publisher;

import com.hazelcast.map.impl.query.QueryEventFilter;
import com.hazelcast.map.impl.querycache.Registry;
import com.hazelcast.map.impl.querycache.accumulator.Accumulator;
import com.hazelcast.map.impl.querycache.accumulator.AccumulatorInfo;
import com.hazelcast.query.Predicate;
import com.hazelcast.spi.EventFilter;
import com.hazelcast.util.ConcurrencyUtil;
import com.hazelcast.util.ConstructorFunction;
import java.util.Collections;
import java.util.Map;
import java.util.concurrent.ConcurrentHashMap;
import java.util.concurrent.ConcurrentMap;

public class PartitionAccumulatorRegistry extends Object implements Registry<Integer, Accumulator> {
  private final EventFilter eventFilter;
  
  private final AccumulatorInfo info;
  
  private final ConcurrentMap<Integer, Accumulator> accumulators;
  
  private final ConstructorFunction<Integer, Accumulator> accumulatorConstructor;
  
  public PartitionAccumulatorRegistry(AccumulatorInfo info, ConstructorFunction<Integer, Accumulator> accumulatorConstructor) {
    this.info = info;
    this.eventFilter = createEventFilter();
    this.accumulatorConstructor = accumulatorConstructor;
    this.accumulators = new ConcurrentHashMap();
  }
  
  private EventFilter createEventFilter() {
    boolean includeValue = this.info.isIncludeValue();
    Predicate predicate = this.info.getPredicate();
    return new QueryEventFilter(includeValue, null, predicate);
  }
  
  public Accumulator getOrCreate(Integer partitionId) { return (Accumulator)ConcurrencyUtil.getOrPutIfAbsent(this.accumulators, partitionId, this.accumulatorConstructor); }
  
  public Accumulator getOrNull(Integer partitionId) { return (Accumulator)this.accumulators.get(partitionId); }
  
  public Map<Integer, Accumulator> getAll() { return Collections.unmodifiableMap(this.accumulators); }
  
  public Accumulator remove(Integer id) { return (Accumulator)this.accumulators.remove(id); }
  
  public EventFilter getEventFilter() { return this.eventFilter; }
  
  public AccumulatorInfo getInfo() { return this.info; }
  
  public String getUuid() { return this.uuid; }
  
  public void setUuid(String uuid) { this.uuid = uuid; }
}
