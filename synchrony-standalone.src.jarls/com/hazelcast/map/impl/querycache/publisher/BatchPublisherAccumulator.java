package com.hazelcast.map.impl.querycache.publisher;

import com.hazelcast.map.impl.querycache.QueryCacheContext;
import com.hazelcast.map.impl.querycache.accumulator.AccumulatorInfo;
import com.hazelcast.map.impl.querycache.accumulator.BasicAccumulator;
import com.hazelcast.map.impl.querycache.event.sequence.Sequenced;
import java.util.concurrent.TimeUnit;

class BatchPublisherAccumulator extends BasicAccumulator<Sequenced> {
  BatchPublisherAccumulator(QueryCacheContext context, AccumulatorInfo info) { super(context, info); }
  
  public void accumulate(Sequenced sequenced) {
    super.accumulate(sequenced);
    AccumulatorInfo info = getInfo();
    if (!info.isPublishable())
      return; 
    poll(this.handler, info.getBatchSize());
    poll(this.handler, info.getDelaySeconds(), TimeUnit.SECONDS);
  }
}
