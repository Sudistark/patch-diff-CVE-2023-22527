package com.hazelcast.map.impl.querycache;

import com.hazelcast.core.Member;
import com.hazelcast.internal.serialization.InternalSerializationService;
import com.hazelcast.map.impl.querycache.publisher.PublisherContext;
import com.hazelcast.map.impl.querycache.subscriber.SubscriberContext;
import com.hazelcast.nio.Address;
import com.hazelcast.util.ContextMutexFactory;
import java.util.Collection;

public interface QueryCacheContext {
  PublisherContext getPublisherContext();
  
  SubscriberContext getSubscriberContext();
  
  InternalSerializationService getSerializationService();
  
  QueryCacheEventService getQueryCacheEventService();
  
  QueryCacheConfigurator getQueryCacheConfigurator();
  
  QueryCacheScheduler getQueryCacheScheduler();
  
  Collection<Member> getMemberList();
  
  InvokerWrapper getInvokerWrapper();
  
  Object toObject(Object paramObject);
  
  Address getThisNodesAddress();
  
  int getPartitionId(Object paramObject);
  
  int getPartitionCount();
  
  ContextMutexFactory getLifecycleMutexFactory();
  
  void destroy();
  
  void setSubscriberContext(SubscriberContext paramSubscriberContext);
}
