package com.hazelcast.map.impl.query;

import com.hazelcast.map.impl.operation.MapOperation;
import com.hazelcast.nio.ObjectDataInput;
import com.hazelcast.nio.ObjectDataOutput;
import com.hazelcast.spi.ExceptionAction;
import com.hazelcast.spi.ReadonlyOperation;
import java.io.IOException;

public class QueryOperation extends MapOperation implements ReadonlyOperation {
  private Query query;
  
  private Result result;
  
  public QueryOperation() {}
  
  public QueryOperation(Query query) {
    super(query.getMapName());
    this.query = query;
  }
  
  public void run() {
    QueryRunner queryRunner = this.mapServiceContext.getMapQueryRunner(getName());
    this.result = queryRunner.runIndexOrPartitionScanQueryOnOwnedPartitions(this.query);
  }
  
  public ExceptionAction onInvocationException(Throwable throwable) {
    if (throwable instanceof com.hazelcast.core.MemberLeftException || throwable instanceof com.hazelcast.spi.exception.TargetNotMemberException)
      return ExceptionAction.THROW_EXCEPTION; 
    return super.onInvocationException(throwable);
  }
  
  public Object getResponse() { return this.result; }
  
  public int getId() { return 60; }
  
  protected void writeInternal(ObjectDataOutput out) throws IOException {
    super.writeInternal(out);
    out.writeObject(this.query);
  }
  
  protected void readInternal(ObjectDataInput in) throws IOException {
    super.readInternal(in);
    this.query = (Query)in.readObject();
  }
}
