package com.hazelcast.map.impl.operation;

import com.hazelcast.nio.ObjectDataInput;
import com.hazelcast.nio.ObjectDataOutput;
import com.hazelcast.nio.serialization.Data;
import java.io.IOException;

public class TryRemoveOperation extends BaseRemoveOperation {
  private boolean successful;
  
  public TryRemoveOperation() {}
  
  public TryRemoveOperation(String name, Data dataKey, long timeout) {
    super(name, dataKey);
    setWaitTimeout(timeout);
  }
  
  public void run() {
    this.dataOldValue = this.mapServiceContext.toData(this.recordStore.remove(this.dataKey, getCallerProvenance()));
    this.successful = (this.dataOldValue != null);
  }
  
  public void afterRun() {
    if (this.successful)
      super.afterRun(); 
  }
  
  public Object getResponse() { return Boolean.valueOf(this.successful); }
  
  public boolean shouldBackup() { return this.successful; }
  
  public void onWaitExpire() { sendResponse(Boolean.valueOf(false)); }
  
  protected void writeInternal(ObjectDataOutput out) throws IOException { super.writeInternal(out); }
  
  protected void readInternal(ObjectDataInput in) throws IOException { super.readInternal(in); }
  
  public int getId() { return 64; }
}
