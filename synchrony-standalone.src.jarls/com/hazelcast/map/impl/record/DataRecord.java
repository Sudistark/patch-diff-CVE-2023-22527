package com.hazelcast.map.impl.record;

import com.hazelcast.nio.serialization.Data;
import com.hazelcast.util.JVMUtil;

class DataRecord extends AbstractRecord<Data> {
  DataRecord(Data value) { this.value = value; }
  
  DataRecord() {}
  
  public long getCost() { return super.getCost() + JVMUtil.REFERENCE_COST_IN_BYTES + ((this.value == null) ? false : this.value.getHeapCost()); }
  
  public Data getValue() { return this.value; }
  
  public void setValue(Data o) { this.value = o; }
  
  public boolean equals(Object o) {
    if (this == o)
      return true; 
    if (o == null || getClass() != o.getClass())
      return false; 
    if (!super.equals(o))
      return false; 
    DataRecord that = (DataRecord)o;
    return this.value.equals(that.value);
  }
  
  public int hashCode() {
    result = super.hashCode();
    return 31 * result + this.value.hashCode();
  }
}
