package com.hazelcast.map.impl.record;

import com.hazelcast.nio.serialization.Data;
import com.hazelcast.query.Metadata;

public interface Record<V> {
  public static final Object NOT_CACHED = new Object();
  
  public static final int NOT_AVAILABLE = -1;
  
  Data getKey();
  
  void setKey(Data paramData);
  
  V getValue();
  
  void setValue(V paramV);
  
  void onAccess(long paramLong);
  
  void onUpdate(long paramLong);
  
  void onStore();
  
  long getCost();
  
  long getVersion();
  
  void setVersion(long paramLong);
  
  Object getCachedValueUnsafe();
  
  boolean casCachedValue(Object paramObject1, Object paramObject2);
  
  long getTtl();
  
  void setTtl(long paramLong);
  
  long getMaxIdle();
  
  void setMaxIdle(long paramLong);
  
  long getLastAccessTime();
  
  void setLastAccessTime(long paramLong);
  
  long getLastUpdateTime();
  
  void setLastUpdateTime(long paramLong);
  
  long getCreationTime();
  
  void setCreationTime(long paramLong);
  
  long getHits();
  
  void setHits(long paramLong);
  
  long getExpirationTime();
  
  void setExpirationTime(long paramLong);
  
  long getLastStoredTime();
  
  void setLastStoredTime(long paramLong);
  
  long getSequence();
  
  void setSequence(long paramLong);
  
  void setMetadata(Metadata paramMetadata);
  
  Metadata getMetadata();
}
