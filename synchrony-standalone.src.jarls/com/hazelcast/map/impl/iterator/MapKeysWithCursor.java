package com.hazelcast.map.impl.iterator;

import com.hazelcast.nio.ObjectDataInput;
import com.hazelcast.nio.ObjectDataOutput;
import com.hazelcast.nio.serialization.Data;
import java.io.IOException;
import java.util.List;

public class MapKeysWithCursor extends AbstractCursor<Data> {
  public MapKeysWithCursor() {}
  
  public MapKeysWithCursor(List<Data> keys, int nextTableIndexToReadFrom) { super(keys, nextTableIndexToReadFrom); }
  
  public int getCount() { return (getBatch() != null) ? getBatch().size() : 0; }
  
  void writeElement(ObjectDataOutput out, Data element) throws IOException { out.writeData(element); }
  
  Data readElement(ObjectDataInput in) throws IOException { return in.readData(); }
  
  public int getId() { return 13; }
}
