package com.hazelcast.map.impl.mapstore.writebehind;

import com.hazelcast.map.impl.mapstore.MapDataStore;
import com.hazelcast.map.impl.mapstore.MapDataStores;
import com.hazelcast.map.impl.mapstore.MapStoreContext;
import com.hazelcast.map.impl.mapstore.MapStoreManager;

public class WriteBehindManager implements MapStoreManager {
  private final WriteBehindProcessor writeBehindProcessor;
  
  private final StoreWorker storeWorker;
  
  private final MapStoreContext mapStoreContext;
  
  public WriteBehindManager(MapStoreContext mapStoreContext) {
    this.mapStoreContext = mapStoreContext;
    this.writeBehindProcessor = newWriteBehindProcessor(mapStoreContext);
    this.storeWorker = new StoreWorker(mapStoreContext, this.writeBehindProcessor);
  }
  
  public void start() { this.storeWorker.start(); }
  
  public void stop() { this.storeWorker.stop(); }
  
  public MapDataStore getMapDataStore(String mapName, int partitionId) { return MapDataStores.createWriteBehindStore(this.mapStoreContext, partitionId, this.writeBehindProcessor); }
  
  private WriteBehindProcessor newWriteBehindProcessor(MapStoreContext mapStoreContext) {
    WriteBehindProcessor writeBehindProcessor = WriteBehindProcessors.createWriteBehindProcessor(mapStoreContext);
    InternalStoreListener internalStoreListener = new InternalStoreListener(mapStoreContext);
    writeBehindProcessor.addStoreListener(internalStoreListener);
    return writeBehindProcessor;
  }
}
