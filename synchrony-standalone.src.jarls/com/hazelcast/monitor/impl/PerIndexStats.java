package com.hazelcast.monitor.impl;

import com.hazelcast.internal.memory.MemoryAllocator;
import com.hazelcast.query.impl.Index;

public interface PerIndexStats {
  public static final PerIndexStats EMPTY = new Object();
  
  long makeTimestamp();
  
  long getCreationTime();
  
  long getQueryCount();
  
  void incrementQueryCount();
  
  long getHitCount();
  
  long getTotalHitLatency();
  
  double getTotalNormalizedHitCardinality();
  
  long getInsertCount();
  
  long getTotalInsertLatency();
  
  long getUpdateCount();
  
  long getTotalUpdateLatency();
  
  long getRemoveCount();
  
  long getTotalRemoveLatency();
  
  long getMemoryCost();
  
  void onInsert(long paramLong, IndexOperationStats paramIndexOperationStats, Index.OperationSource paramOperationSource);
  
  void onUpdate(long paramLong, IndexOperationStats paramIndexOperationStats, Index.OperationSource paramOperationSource);
  
  void onRemove(long paramLong, IndexOperationStats paramIndexOperationStats, Index.OperationSource paramOperationSource);
  
  void onClear();
  
  void onIndexHit(long paramLong1, long paramLong2);
  
  void resetPerQueryStats();
  
  MemoryAllocator wrapMemoryAllocator(MemoryAllocator paramMemoryAllocator);
  
  IndexOperationStats createOperationStats();
}
