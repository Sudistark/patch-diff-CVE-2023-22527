package com.hazelcast.monitor.impl;

import java.util.concurrent.atomic.AtomicLongFieldUpdater;

public class PartitionIndexesStats implements IndexesStats {
  private static final AtomicLongFieldUpdater<PartitionIndexesStats> QUERY_COUNT = AtomicLongFieldUpdater.newUpdater(PartitionIndexesStats.class, "queryCount");
  
  private static final AtomicLongFieldUpdater<PartitionIndexesStats> INDEXED_QUERY_COUNT = AtomicLongFieldUpdater.newUpdater(PartitionIndexesStats.class, "indexedQueryCount");
  
  public long getQueryCount() { return this.queryCount; }
  
  public void incrementQueryCount() { QUERY_COUNT.lazySet(this, this.queryCount + 1L); }
  
  public long getIndexedQueryCount() { return this.indexedQueryCount; }
  
  public void incrementIndexedQueryCount() { INDEXED_QUERY_COUNT.lazySet(this, this.indexedQueryCount + 1L); }
  
  public PerIndexStats createPerIndexStats(boolean ordered, boolean queryableEntriesAreCached) { return new PartitionPerIndexStats(); }
}
