package com.hazelcast.internal.util.concurrent;

public final class ConcurrentConveyorSingleQueue<E> extends ConcurrentConveyor<E> {
  private final QueuedPipe<E> queue;
  
  private ConcurrentConveyorSingleQueue(E submitterGoneItem, QueuedPipe<E> queue) {
    super(submitterGoneItem, new QueuedPipe[] { queue });
    this.queue = queue;
  }
  
  public static <E1> ConcurrentConveyorSingleQueue<E1> concurrentConveyorSingleQueue(E1 submitterGoneItem, QueuedPipe<E1> queue) { return new ConcurrentConveyorSingleQueue(submitterGoneItem, queue); }
  
  public boolean offer(E item) throws ConcurrentConveyorException { return offer(this.queue, item); }
  
  public void submit(E item) throws ConcurrentConveyorException { submit(this.queue, item); }
}
