package com.hazelcast.internal.yaml;

public class YamlScalarImpl extends AbstractYamlNode implements MutableYamlScalar {
  private Object value;
  
  public YamlScalarImpl(YamlNode parent, String nodeName, Object value) {
    super(parent, nodeName);
    this.value = value;
  }
  
  public <T> boolean isA(Class<T> type) { return (this.value != null && this.value.getClass().isAssignableFrom(type)); }
  
  public <T> T nodeValue() { return (T)this.value; }
  
  public <T> T nodeValue(Class<T> type) {
    if (!isA(type))
      throw new YamlException("The scalar's type " + this.value.getClass() + " is not the expected " + type); 
    return (T)this.value;
  }
  
  public void setValue(Object newValue) { this.value = newValue; }
  
  public String toString() {
    return "YamlScalarImpl{nodeName=" + 
      nodeName() + ", value=" + this.value + '}';
  }
}
