package com.hazelcast.internal.partition.operation;

import com.hazelcast.internal.partition.impl.InternalPartitionServiceImpl;
import com.hazelcast.spi.ExceptionAction;
import com.hazelcast.spi.impl.AllowedDuringPassiveState;

public final class HasOngoingMigration extends AbstractPartitionOperation implements AllowedDuringPassiveState {
  private Object response;
  
  public void run() {
    InternalPartitionServiceImpl service = (InternalPartitionServiceImpl)getService();
    this.response = Boolean.valueOf(service.hasOnGoingMigrationLocal());
  }
  
  public ExceptionAction onInvocationException(Throwable throwable) {
    if (throwable instanceof com.hazelcast.core.MemberLeftException)
      return ExceptionAction.THROW_EXCEPTION; 
    if (throwable instanceof com.hazelcast.spi.exception.TargetNotMemberException)
      return ExceptionAction.THROW_EXCEPTION; 
    return super.onInvocationException(throwable);
  }
  
  public Object getResponse() { return this.response; }
  
  public String getServiceName() { return "hz:core:partitionService"; }
  
  public int getId() { return 5; }
}
