package com.hazelcast.internal.partition.operation;

import com.hazelcast.internal.partition.MigrationCycleOperation;
import com.hazelcast.internal.partition.PartitionRuntimeState;
import com.hazelcast.internal.partition.impl.InternalPartitionServiceImpl;
import com.hazelcast.spi.ExceptionAction;

public class AssignPartitions extends AbstractPartitionOperation implements MigrationCycleOperation {
  private PartitionRuntimeState partitionState;
  
  public void run() {
    InternalPartitionServiceImpl service = (InternalPartitionServiceImpl)getService();
    this.partitionState = service.firstArrangement();
  }
  
  public Object getResponse() { return this.partitionState; }
  
  public int getId() { return 2; }
  
  public ExceptionAction onInvocationException(Throwable throwable) {
    if (throwable instanceof com.hazelcast.core.MemberLeftException || throwable instanceof com.hazelcast.spi.exception.TargetNotMemberException)
      return ExceptionAction.THROW_EXCEPTION; 
    return super.onInvocationException(throwable);
  }
}
