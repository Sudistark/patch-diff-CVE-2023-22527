package com.hazelcast.internal.partition.impl;

import com.hazelcast.internal.serialization.DataSerializerHook;
import com.hazelcast.internal.serialization.impl.ArrayDataSerializableFactory;
import com.hazelcast.internal.serialization.impl.FactoryIdHelper;
import com.hazelcast.nio.serialization.DataSerializableFactory;
import com.hazelcast.util.ConstructorFunction;

public final class PartitionDataSerializerHook implements DataSerializerHook {
  public static final int F_ID = FactoryIdHelper.getFactoryId("hazelcast.serialization.ds.partition", -2);
  
  public static final int PARTITION_RUNTIME_STATE = 1;
  
  public static final int ASSIGN_PARTITIONS = 2;
  
  public static final int PARTITION_BACKUP_REPLICA_ANTI_ENTROPY = 3;
  
  public static final int FETCH_PARTITION_STATE = 4;
  
  public static final int HAS_ONGOING_MIGRATION = 5;
  
  public static final int MIGRATION_COMMIT = 6;
  
  public static final int PARTITION_STATE_OP = 9;
  
  public static final int PROMOTION_COMMIT = 10;
  
  public static final int REPLICA_SYNC_REQUEST = 11;
  
  public static final int REPLICA_SYNC_RESPONSE = 12;
  
  public static final int REPLICA_SYNC_RETRY_RESPONSE = 13;
  
  public static final int SAFE_STATE_CHECK = 14;
  
  public static final int SHUTDOWN_REQUEST = 15;
  
  public static final int SHUTDOWN_RESPONSE = 16;
  
  public static final int REPLICA_FRAGMENT_MIGRATION_STATE = 17;
  
  public static final int MIGRATION = 18;
  
  public static final int MIGRATION_REQUEST = 19;
  
  public static final int NON_FRAGMENTED_SERVICE_NAMESPACE = 20;
  
  public static final int PARTITION_REPLICA = 21;
  
  public static final int PUBLISH_COMPLETED_MIGRATIONS = 22;
  
  public static final int PARTITION_STATE_VERSION_CHECK_OP = 23;
  
  private static final int LEN = 24;
  
  public int getFactoryId() { return F_ID; }
  
  public DataSerializableFactory createFactory() {
    ConstructorFunction[] constructors = new ConstructorFunction[24];
    constructors[1] = new Object(this);
    constructors[2] = new Object(this);
    constructors[3] = new Object(this);
    constructors[4] = new Object(this);
    constructors[5] = new Object(this);
    constructors[6] = new Object(this);
    constructors[9] = new Object(this);
    constructors[10] = new Object(this);
    constructors[11] = new Object(this);
    constructors[12] = new Object(this);
    constructors[13] = new Object(this);
    constructors[14] = new Object(this);
    constructors[15] = new Object(this);
    constructors[16] = new Object(this);
    constructors[17] = new Object(this);
    constructors[18] = new Object(this);
    constructors[19] = new Object(this);
    constructors[20] = new Object(this);
    constructors[21] = new Object(this);
    constructors[22] = new Object(this);
    constructors[23] = new Object(this);
    return new ArrayDataSerializableFactory(constructors);
  }
}
