package com.hazelcast.internal.dynamicconfig;

import com.hazelcast.config.AtomicLongConfig;
import com.hazelcast.config.AtomicReferenceConfig;
import com.hazelcast.config.CacheSimpleConfig;
import com.hazelcast.config.CardinalityEstimatorConfig;
import com.hazelcast.config.CountDownLatchConfig;
import com.hazelcast.config.DurableExecutorConfig;
import com.hazelcast.config.EventJournalConfig;
import com.hazelcast.config.ExecutorConfig;
import com.hazelcast.config.FlakeIdGeneratorConfig;
import com.hazelcast.config.ListConfig;
import com.hazelcast.config.LockConfig;
import com.hazelcast.config.MapConfig;
import com.hazelcast.config.MerkleTreeConfig;
import com.hazelcast.config.MultiMapConfig;
import com.hazelcast.config.PNCounterConfig;
import com.hazelcast.config.QueueConfig;
import com.hazelcast.config.ReliableTopicConfig;
import com.hazelcast.config.ReplicatedMapConfig;
import com.hazelcast.config.RingbufferConfig;
import com.hazelcast.config.ScheduledExecutorConfig;
import com.hazelcast.config.SemaphoreConfig;
import com.hazelcast.config.SetConfig;
import com.hazelcast.config.TopicConfig;
import com.hazelcast.nio.serialization.IdentifiedDataSerializable;
import java.util.Collections;
import java.util.Map;

class EmptyConfigurationService implements ConfigurationService {
  public MultiMapConfig findMultiMapConfig(String name) { return null; }
  
  public MapConfig findMapConfig(String name) { return null; }
  
  public TopicConfig findTopicConfig(String name) { return null; }
  
  public CardinalityEstimatorConfig findCardinalityEstimatorConfig(String name) { return null; }
  
  public PNCounterConfig findPNCounterConfig(String name) { return null; }
  
  public ExecutorConfig findExecutorConfig(String name) { return null; }
  
  public ScheduledExecutorConfig findScheduledExecutorConfig(String name) { return null; }
  
  public DurableExecutorConfig findDurableExecutorConfig(String name) { return null; }
  
  public SemaphoreConfig findSemaphoreConfig(String name) { return null; }
  
  public RingbufferConfig findRingbufferConfig(String name) { return null; }
  
  public AtomicLongConfig findAtomicLongConfig(String name) { return null; }
  
  public AtomicReferenceConfig findAtomicReferenceConfig(String name) { return null; }
  
  public CountDownLatchConfig findCountDownLatchConfig(String name) { return null; }
  
  public LockConfig findLockConfig(String name) { return null; }
  
  public ListConfig findListConfig(String name) { return null; }
  
  public QueueConfig findQueueConfig(String name) { return null; }
  
  public SetConfig findSetConfig(String name) { return null; }
  
  public ReplicatedMapConfig findReplicatedMapConfig(String name) { return null; }
  
  public ReliableTopicConfig findReliableTopicConfig(String name) { return null; }
  
  public CacheSimpleConfig findCacheSimpleConfig(String name) { return null; }
  
  public Map<String, CacheSimpleConfig> getCacheSimpleConfigs() { return Collections.emptyMap(); }
  
  public EventJournalConfig findCacheEventJournalConfig(String baseName) { return null; }
  
  public Map<String, EventJournalConfig> getCacheEventJournalConfigs() { return Collections.emptyMap(); }
  
  public EventJournalConfig findMapEventJournalConfig(String baseName) { return null; }
  
  public MerkleTreeConfig findMapMerkleTreeConfig(String baseName) { return null; }
  
  public Map<String, EventJournalConfig> getMapEventJournalConfigs() { return Collections.emptyMap(); }
  
  public Map<String, MerkleTreeConfig> getMapMerkleTreeConfigs() { return Collections.emptyMap(); }
  
  public Map<String, LockConfig> getLockConfigs() { return Collections.emptyMap(); }
  
  public Map<String, MapConfig> getMapConfigs() { return Collections.emptyMap(); }
  
  public Map<String, QueueConfig> getQueueConfigs() { return Collections.emptyMap(); }
  
  public Map<String, ListConfig> getListConfigs() { return Collections.emptyMap(); }
  
  public Map<String, SetConfig> getSetConfigs() { return Collections.emptyMap(); }
  
  public Map<String, MultiMapConfig> getMultiMapConfigs() { return Collections.emptyMap(); }
  
  public Map<String, ReplicatedMapConfig> getReplicatedMapConfigs() { return Collections.emptyMap(); }
  
  public Map<String, RingbufferConfig> getRingbufferConfigs() { return Collections.emptyMap(); }
  
  public Map<String, AtomicLongConfig> getAtomicLongConfigs() { return Collections.emptyMap(); }
  
  public Map<String, AtomicReferenceConfig> getAtomicReferenceConfigs() { return Collections.emptyMap(); }
  
  public Map<String, CountDownLatchConfig> getCountDownLatchConfigs() { return Collections.emptyMap(); }
  
  public Map<String, TopicConfig> getTopicConfigs() { return Collections.emptyMap(); }
  
  public Map<String, ReliableTopicConfig> getReliableTopicConfigs() { return Collections.emptyMap(); }
  
  public Map<String, ExecutorConfig> getExecutorConfigs() { return Collections.emptyMap(); }
  
  public Map<String, DurableExecutorConfig> getDurableExecutorConfigs() { return Collections.emptyMap(); }
  
  public Map<String, ScheduledExecutorConfig> getScheduledExecutorConfigs() { return Collections.emptyMap(); }
  
  public Map<String, CardinalityEstimatorConfig> getCardinalityEstimatorConfigs() { return Collections.emptyMap(); }
  
  public Map<String, PNCounterConfig> getPNCounterConfigs() { return Collections.emptyMap(); }
  
  public Map<String, SemaphoreConfig> getSemaphoreConfigs() { return Collections.emptyMap(); }
  
  public FlakeIdGeneratorConfig findFlakeIdGeneratorConfig(String baseName) { return null; }
  
  public Map<String, FlakeIdGeneratorConfig> getFlakeIdGeneratorConfigs() { return Collections.emptyMap(); }
  
  public void broadcastConfig(IdentifiedDataSerializable config) { throw new IllegalStateException("Cannot add a new config while Hazelcast is starting."); }
}
