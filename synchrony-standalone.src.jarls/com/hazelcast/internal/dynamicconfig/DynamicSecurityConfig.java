package com.hazelcast.internal.dynamicconfig;

import com.hazelcast.config.CredentialsFactoryConfig;
import com.hazelcast.config.LoginModuleConfig;
import com.hazelcast.config.OnJoinPermissionOperationName;
import com.hazelcast.config.PermissionConfig;
import com.hazelcast.config.PermissionPolicyConfig;
import com.hazelcast.config.SecurityConfig;
import com.hazelcast.config.SecurityInterceptorConfig;
import com.hazelcast.security.SecurityService;
import java.util.Collections;
import java.util.List;
import java.util.Set;

public class DynamicSecurityConfig extends SecurityConfig {
  private final SecurityConfig staticSecurityConfig;
  
  private final SecurityService securityService;
  
  public DynamicSecurityConfig(SecurityConfig staticSecurityConfig, SecurityService securityService) {
    this.staticSecurityConfig = staticSecurityConfig;
    this.securityService = securityService;
  }
  
  public SecurityConfig addSecurityInterceptorConfig(SecurityInterceptorConfig interceptorConfig) { throw new UnsupportedOperationException("Unsupported operation"); }
  
  public List<SecurityInterceptorConfig> getSecurityInterceptorConfigs() { return this.staticSecurityConfig.getSecurityInterceptorConfigs(); }
  
  public void setSecurityInterceptorConfigs(List<SecurityInterceptorConfig> securityInterceptorConfigs) { throw new UnsupportedOperationException("Unsupported operation"); }
  
  public boolean isEnabled() { return this.staticSecurityConfig.isEnabled(); }
  
  public SecurityConfig setEnabled(boolean enabled) { throw new UnsupportedOperationException("Unsupported operation"); }
  
  public SecurityConfig addMemberLoginModuleConfig(LoginModuleConfig loginModuleConfig) { throw new UnsupportedOperationException("Unsupported operation"); }
  
  public SecurityConfig addClientLoginModuleConfig(LoginModuleConfig loginModuleConfig) { throw new UnsupportedOperationException("Unsupported operation"); }
  
  public SecurityConfig addClientPermissionConfig(PermissionConfig permissionConfig) { throw new UnsupportedOperationException("Unsupported operation"); }
  
  public List<LoginModuleConfig> getClientLoginModuleConfigs() { return this.staticSecurityConfig.getClientLoginModuleConfigs(); }
  
  public SecurityConfig setClientLoginModuleConfigs(List<LoginModuleConfig> loginModuleConfigs) { throw new UnsupportedOperationException("Unsupported operation"); }
  
  public List<LoginModuleConfig> getMemberLoginModuleConfigs() { return this.staticSecurityConfig.getMemberLoginModuleConfigs(); }
  
  public SecurityConfig setMemberLoginModuleConfigs(List<LoginModuleConfig> memberLoginModuleConfigs) { throw new UnsupportedOperationException("Unsupported operation"); }
  
  public PermissionPolicyConfig getClientPolicyConfig() { return this.staticSecurityConfig.getClientPolicyConfig(); }
  
  public SecurityConfig setClientPolicyConfig(PermissionPolicyConfig policyConfig) { throw new UnsupportedOperationException("Unsupported operation"); }
  
  public SecurityConfig setClientBlockUnmappedActions(boolean clientBlockUnmappedActions) { throw new UnsupportedOperationException("Unsupported operation"); }
  
  public Set<PermissionConfig> getClientPermissionConfigs() {
    Set<PermissionConfig> permissionConfigs = (this.securityService != null) ? this.securityService.getClientPermissionConfigs() : this.staticSecurityConfig.getClientPermissionConfigs();
    return Collections.unmodifiableSet(permissionConfigs);
  }
  
  public boolean getClientBlockUnmappedActions() { return this.staticSecurityConfig.getClientBlockUnmappedActions(); }
  
  public SecurityConfig setClientPermissionConfigs(Set<PermissionConfig> permissions) {
    if (this.securityService == null)
      throw new UnsupportedOperationException("Unsupported operation"); 
    this.securityService.refreshClientPermissions(permissions);
    return this;
  }
  
  public CredentialsFactoryConfig getMemberCredentialsConfig() { return this.staticSecurityConfig.getMemberCredentialsConfig(); }
  
  public SecurityConfig setMemberCredentialsConfig(CredentialsFactoryConfig credentialsFactoryConfig) { throw new UnsupportedOperationException("Unsupported operation"); }
  
  public OnJoinPermissionOperationName getOnJoinPermissionOperation() { return this.staticSecurityConfig.getOnJoinPermissionOperation(); }
  
  public SecurityConfig setOnJoinPermissionOperation(OnJoinPermissionOperationName onJoinPermissionOperation) { throw new UnsupportedOperationException("Unsupported operation"); }
  
  public boolean equals(Object o) {
    if (this == o)
      return true; 
    if (o == null || getClass() != o.getClass())
      return false; 
    if (!super.equals(o))
      return false; 
    DynamicSecurityConfig that = (DynamicSecurityConfig)o;
    return (this.staticSecurityConfig != null) ? this.staticSecurityConfig
      .equals(that.staticSecurityConfig) : ((that.staticSecurityConfig == null) ? 1 : 0);
  }
  
  public int hashCode() {
    result = super.hashCode();
    return 31 * result + ((this.staticSecurityConfig != null) ? this.staticSecurityConfig.hashCode() : 0);
  }
}
