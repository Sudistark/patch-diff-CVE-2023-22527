package com.hazelcast.internal.dynamicconfig;

import com.hazelcast.config.cp.CPSemaphoreConfig;
import com.hazelcast.config.cp.CPSubsystemConfig;
import com.hazelcast.config.cp.FencedLockConfig;
import com.hazelcast.config.cp.RaftAlgorithmConfig;
import java.util.Map;

class DynamicCPSubsystemConfig extends CPSubsystemConfig {
  DynamicCPSubsystemConfig(CPSubsystemConfig config) { super(config); }
  
  public CPSubsystemConfig setCPMemberCount(int cpMemberCount) { throw new UnsupportedOperationException(); }
  
  public CPSubsystemConfig setGroupSize(int groupSize) { throw new UnsupportedOperationException(); }
  
  public CPSubsystemConfig setSessionTimeToLiveSeconds(int sessionTimeToLiveSeconds) { throw new UnsupportedOperationException(); }
  
  public CPSubsystemConfig setSessionHeartbeatIntervalSeconds(int sessionHeartbeatIntervalSeconds) { throw new UnsupportedOperationException(); }
  
  public CPSubsystemConfig setMissingCPMemberAutoRemovalSeconds(int missingCPMemberAutoRemovalSeconds) { throw new UnsupportedOperationException(); }
  
  public RaftAlgorithmConfig getRaftAlgorithmConfig() { return new DynamicRaftAlgorithmConfig(super.getRaftAlgorithmConfig()); }
  
  public CPSubsystemConfig setRaftAlgorithmConfig(RaftAlgorithmConfig raftAlgorithmConfig) { throw new UnsupportedOperationException(); }
  
  public CPSubsystemConfig addSemaphoreConfig(CPSemaphoreConfig cpSemaphoreConfig) { throw new UnsupportedOperationException(); }
  
  public CPSubsystemConfig setSemaphoreConfigs(Map<String, CPSemaphoreConfig> cpSemaphoreConfigs) { throw new UnsupportedOperationException(); }
  
  public CPSubsystemConfig addLockConfig(FencedLockConfig lockConfig) { throw new UnsupportedOperationException(); }
  
  public CPSubsystemConfig setLockConfigs(Map<String, FencedLockConfig> lockConfigs) { throw new UnsupportedOperationException(); }
}
