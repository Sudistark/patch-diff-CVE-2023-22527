package com.hazelcast.internal.metrics;

import com.hazelcast.internal.metrics.renderers.ProbeRenderer;
import java.util.Set;
import java.util.concurrent.TimeUnit;

public interface MetricsRegistry {
  ProbeLevel minimumLevel();
  
  LongGauge newLongGauge(String paramString);
  
  DoubleGauge newDoubleGauge(String paramString);
  
  Set<String> getNames();
  
  <S> void scanAndRegister(S paramS, String paramString);
  
  <S> void register(S paramS, String paramString, ProbeLevel paramProbeLevel, LongProbeFunction<S> paramLongProbeFunction);
  
  <S> void register(S paramS, String paramString, ProbeLevel paramProbeLevel, DoubleProbeFunction<S> paramDoubleProbeFunction);
  
  <S> void deregister(S paramS);
  
  void scheduleAtFixedRate(Runnable paramRunnable, long paramLong, TimeUnit paramTimeUnit, ProbeLevel paramProbeLevel);
  
  void render(ProbeRenderer paramProbeRenderer);
  
  void collectMetrics(Object... paramVarArgs);
  
  void discardMetrics(Object... paramVarArgs);
  
  ProbeBuilder newProbeBuilder();
}
