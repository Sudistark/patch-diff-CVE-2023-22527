package com.hazelcast.internal.metrics.metricsets;

import com.hazelcast.internal.metrics.MetricsRegistry;
import com.hazelcast.internal.metrics.ProbeLevel;
import com.hazelcast.util.Preconditions;
import java.lang.management.ManagementFactory;
import java.lang.management.RuntimeMXBean;

public final class RuntimeMetricSet {
  public static void register(MetricsRegistry metricsRegistry) {
    Preconditions.checkNotNull(metricsRegistry, "metricsRegistry");
    Runtime runtime = Runtime.getRuntime();
    RuntimeMXBean mxBean = ManagementFactory.getRuntimeMXBean();
    metricsRegistry.register(runtime, "runtime.freeMemory", ProbeLevel.MANDATORY, new Object());
    metricsRegistry.register(runtime, "runtime.totalMemory", ProbeLevel.MANDATORY, new Object());
    metricsRegistry.register(runtime, "runtime.maxMemory", ProbeLevel.MANDATORY, new Object());
    metricsRegistry.register(runtime, "runtime.usedMemory", ProbeLevel.MANDATORY, new Object());
    metricsRegistry.register(runtime, "runtime.availableProcessors", ProbeLevel.MANDATORY, new Object());
    metricsRegistry.register(mxBean, "runtime.uptime", ProbeLevel.MANDATORY, new Object());
  }
}
