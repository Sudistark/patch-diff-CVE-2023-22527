package com.hazelcast.internal.jmx;

import com.hazelcast.core.ILock;

@ManagedDescription("ILock")
public class LockMBean extends HazelcastMBean<ILock> {
  protected LockMBean(ILock managedObject, ManagementService service) {
    super(managedObject, service);
    this.objectName = service.createObjectName("ILock", managedObject.getName());
  }
  
  @ManagedAnnotation("name")
  @ManagedDescription("Name of the DistributedObject")
  public String getName() { return ((ILock)this.managedObject).getName(); }
  
  @ManagedAnnotation("lockObject")
  @ManagedDescription("Lock Object as String")
  public String getLockObject() {
    Object lockObject = ((ILock)this.managedObject).getName();
    if (lockObject == null)
      return null; 
    return lockObject.toString();
  }
  
  @ManagedAnnotation("remainingLeaseTime")
  @ManagedDescription("remaining time in milliseconds or -1 if not locked")
  public long getRemainingLeaseTime() { return ((ILock)this.managedObject).getRemainingLeaseTime(); }
  
  @ManagedAnnotation("lockCount")
  @ManagedDescription("re-entrant lock hold count, regardless of lock ownership")
  public int getLockCount() { return ((ILock)this.managedObject).getLockCount(); }
  
  @ManagedAnnotation(value = "forceUnlock", operation = true)
  @ManagedDescription("force unlock of this lock")
  public void clear() { ((ILock)this.managedObject).forceUnlock(); }
  
  @ManagedAnnotation("partitionKey")
  @ManagedDescription("the partitionKey")
  public String getPartitionKey() { return ((ILock)this.managedObject).getPartitionKey(); }
}
