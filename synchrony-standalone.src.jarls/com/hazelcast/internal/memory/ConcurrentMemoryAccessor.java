package com.hazelcast.internal.memory;

public interface ConcurrentMemoryAccessor extends MemoryAccessor {
  boolean getBooleanVolatile(long paramLong);
  
  void putBooleanVolatile(long paramLong, boolean paramBoolean);
  
  byte getByteVolatile(long paramLong);
  
  void putByteVolatile(long paramLong, byte paramByte);
  
  char getCharVolatile(long paramLong);
  
  void putCharVolatile(long paramLong, char paramChar);
  
  short getShortVolatile(long paramLong);
  
  void putShortVolatile(long paramLong, short paramShort);
  
  int getIntVolatile(long paramLong);
  
  void putIntVolatile(long paramLong, int paramInt);
  
  float getFloatVolatile(long paramLong);
  
  void putFloatVolatile(long paramLong, float paramFloat);
  
  long getLongVolatile(long paramLong);
  
  void putLongVolatile(long paramLong1, long paramLong2);
  
  double getDoubleVolatile(long paramLong);
  
  void putDoubleVolatile(long paramLong, double paramDouble);
  
  boolean compareAndSwapInt(long paramLong, int paramInt1, int paramInt2);
  
  boolean compareAndSwapLong(long paramLong1, long paramLong2, long paramLong3);
  
  boolean compareAndSwapObject(long paramLong, Object paramObject1, Object paramObject2);
  
  void putOrderedInt(long paramLong, int paramInt);
  
  void putOrderedLong(long paramLong1, long paramLong2);
  
  void putOrderedObject(long paramLong, Object paramObject);
}
