package com.hazelcast.spi;

import com.hazelcast.spi.impl.NodeEngineImpl;
import com.hazelcast.spi.impl.operationservice.InternalOperationService;
import com.hazelcast.spi.serialization.SerializationService;
import java.util.Set;

public abstract class Offload extends CallStatus {
  protected InternalOperationService operationService;
  
  protected NodeEngine nodeEngine;
  
  protected ExecutionService executionService;
  
  protected SerializationService serializationService;
  
  private final Operation offloadedOperation;
  
  private Set<Operation> asyncOperations;
  
  public Offload(Operation offloadedOperation) {
    super(3);
    this.offloadedOperation = offloadedOperation;
  }
  
  public final Operation offloadedOperation() { return this.offloadedOperation; }
  
  public final void init(NodeEngineImpl nodeEngine, Set<Operation> asyncOperations) {
    this.nodeEngine = nodeEngine;
    this.operationService = nodeEngine.getOperationService();
    this.serializationService = nodeEngine.getSerializationService();
    this.asyncOperations = asyncOperations;
    this.executionService = nodeEngine.getExecutionService();
    asyncOperations.add(this.offloadedOperation);
    this.offloadedOperation.setOperationResponseHandler(newOperationResponseHandler());
  }
  
  private OperationResponseHandler newOperationResponseHandler() {
    OperationResponseHandler delegate = this.offloadedOperation.getOperationResponseHandler();
    if (delegate instanceof OffloadedOperationResponseHandler)
      delegate = OffloadedOperationResponseHandler.access$000((OffloadedOperationResponseHandler)delegate); 
    return new OffloadedOperationResponseHandler(this, delegate);
  }
  
  public abstract void start() throws Exception;
}
