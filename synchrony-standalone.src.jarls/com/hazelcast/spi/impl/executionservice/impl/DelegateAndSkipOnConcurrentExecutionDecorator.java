package com.hazelcast.spi.impl.executionservice.impl;

import com.hazelcast.util.ExceptionUtil;
import java.util.concurrent.Executor;
import java.util.concurrent.atomic.AtomicBoolean;

public class DelegateAndSkipOnConcurrentExecutionDecorator implements Runnable {
  private final AtomicBoolean isAlreadyRunning;
  
  private final Runnable runnable;
  
  private final Executor executor;
  
  public DelegateAndSkipOnConcurrentExecutionDecorator(Runnable runnable, Executor executor) {
    this.isAlreadyRunning = new AtomicBoolean();
    this.runnable = new DelegateDecorator(this, runnable);
    this.executor = executor;
  }
  
  public void run() {
    if (this.isAlreadyRunning.compareAndSet(false, true)) {
      if (this.throwable != null) {
        ExceptionUtil.rethrow(this.throwable);
        return;
      } 
      this.executor.execute(this.runnable);
    } 
  }
  
  public String toString() { return "DelegateAndSkipOnConcurrentExecutionDecorator{isAlreadyRunning=" + this.isAlreadyRunning + ", runnable=" + this.runnable + ", executor=" + this.executor + ", throwable=" + this.throwable + '}'; }
}
