package com.hazelcast.spi.impl.merge;

import com.hazelcast.partition.strategy.StringPartitioningStrategy;
import com.hazelcast.spi.NodeEngine;
import com.hazelcast.spi.partition.IPartitionService;
import java.util.Iterator;
import java.util.concurrent.ConcurrentMap;

public abstract class AbstractNamedContainerCollector<C> extends AbstractContainerCollector<C> {
  protected final ConcurrentMap<String, C> containers;
  
  private final IPartitionService partitionService;
  
  protected AbstractNamedContainerCollector(NodeEngine nodeEngine, ConcurrentMap<String, C> containers) {
    super(nodeEngine);
    this.containers = containers;
    this.partitionService = nodeEngine.getPartitionService();
  }
  
  protected final Iterator<C> containerIterator(int partitionId) { return new ContainerIterator(this, partitionId); }
  
  protected void onIteration(String containerName, C container) {}
  
  int getContainerPartitionId(String containerName) {
    String partitionKey = StringPartitioningStrategy.getPartitionKey(containerName);
    return this.partitionService.getPartitionId(partitionKey);
  }
}
