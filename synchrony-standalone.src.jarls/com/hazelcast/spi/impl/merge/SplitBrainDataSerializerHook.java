package com.hazelcast.spi.impl.merge;

import com.hazelcast.internal.serialization.DataSerializerHook;
import com.hazelcast.internal.serialization.impl.ArrayDataSerializableFactory;
import com.hazelcast.internal.serialization.impl.FactoryIdHelper;
import com.hazelcast.nio.serialization.DataSerializableFactory;
import com.hazelcast.util.ConstructorFunction;

public final class SplitBrainDataSerializerHook implements DataSerializerHook {
  public static final int F_ID = FactoryIdHelper.getFactoryId("hazelcast.serialization.ds.split_brain", -47);
  
  public static final int COLLECTION_MERGING_VALUE = 0;
  
  public static final int QUEUE_MERGING_VALUE = 1;
  
  public static final int ATOMIC_LONG_MERGING_VALUE = 2;
  
  public static final int ATOMIC_REFERENCE_MERGING_VALUE = 3;
  
  public static final int MAP_MERGING_ENTRY = 4;
  
  public static final int CACHE_MERGING_ENTRY = 5;
  
  public static final int MULTI_MAP_MERGING_ENTRY = 6;
  
  public static final int REPLICATED_MAP_MERGING_ENTRY = 7;
  
  public static final int RINGBUFFER_MERGING_ENTRY = 8;
  
  public static final int CARDINALITY_ESTIMATOR_MERGING_ENTRY = 9;
  
  public static final int SCHEDULED_EXECUTOR_MERGING_ENTRY = 10;
  
  public static final int DISCARD = 11;
  
  public static final int EXPIRATION_TIME = 12;
  
  public static final int HIGHER_HITS = 13;
  
  public static final int HYPER_LOG_LOG = 14;
  
  public static final int LATEST_ACCESS = 15;
  
  public static final int LATEST_UPDATE = 16;
  
  public static final int PASS_THROUGH = 17;
  
  public static final int PUT_IF_ABSENT = 18;
  
  private static final int LEN = 19;
  
  public int getFactoryId() { return F_ID; }
  
  public DataSerializableFactory createFactory() {
    ConstructorFunction[] constructors = new ConstructorFunction[19];
    constructors[0] = new Object(this);
    constructors[1] = new Object(this);
    constructors[2] = new Object(this);
    constructors[3] = new Object(this);
    constructors[4] = new Object(this);
    constructors[5] = new Object(this);
    constructors[6] = new Object(this);
    constructors[7] = new Object(this);
    constructors[8] = new Object(this);
    constructors[9] = new Object(this);
    constructors[10] = new Object(this);
    constructors[11] = new Object(this);
    constructors[12] = new Object(this);
    constructors[13] = new Object(this);
    constructors[14] = new Object(this);
    constructors[15] = new Object(this);
    constructors[16] = new Object(this);
    constructors[17] = new Object(this);
    constructors[18] = new Object(this);
    return new ArrayDataSerializableFactory(constructors);
  }
}
