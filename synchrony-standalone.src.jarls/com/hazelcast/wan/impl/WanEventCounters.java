package com.hazelcast.wan.impl;

import com.hazelcast.util.ConcurrencyUtil;
import com.hazelcast.util.ConstructorFunction;
import java.util.concurrent.ConcurrentHashMap;

public class WanEventCounters {
  private static final ConstructorFunction<String, WanPublisherEventCounters> WAN_EVENT_COUNTER_CONSTRUCTOR_FN = new Object();
  
  private final ConcurrentHashMap<String, WanPublisherEventCounters> eventCounterMap = new ConcurrentHashMap();
  
  public DistributedServiceWanEventCounters getWanEventCounter(String wanReplicationName, String targetGroupName, String serviceName) {
    String wanPublisherId = wanReplicationName + ":" + targetGroupName;
    WanPublisherEventCounters serviceWanEventCounters = (WanPublisherEventCounters)ConcurrencyUtil.getOrPutIfAbsent(this.eventCounterMap, wanPublisherId, WAN_EVENT_COUNTER_CONSTRUCTOR_FN);
    return serviceWanEventCounters.getWanEventCounter(serviceName);
  }
  
  public void removeCounter(String serviceName, String dataStructureName) {
    for (WanPublisherEventCounters publisherWanCounterContainer : this.eventCounterMap.values())
      publisherWanCounterContainer.removeCounter(serviceName, dataStructureName); 
  }
}
