package com.hazelcast.util.executor;

import java.util.concurrent.BlockingQueue;
import java.util.concurrent.ThreadFactory;
import java.util.concurrent.ThreadPoolExecutor;
import java.util.concurrent.TimeUnit;

public class NamedThreadPoolExecutor extends ThreadPoolExecutor implements ManagedExecutorService {
  private final String name;
  
  public NamedThreadPoolExecutor(String name, int corePoolSize, int maximumPoolSize, long keepAliveTime, TimeUnit unit, BlockingQueue<Runnable> workQueue, ThreadFactory threadFactory) {
    super(corePoolSize, maximumPoolSize, keepAliveTime, unit, workQueue, threadFactory);
    this.name = name;
  }
  
  public String getName() { return this.name; }
  
  public int getQueueSize() { return getQueue().size(); }
  
  public int getRemainingQueueCapacity() { return getQueue().remainingCapacity(); }
  
  public String toString() { return "ThreadPoolExecutor{name='" + this.name + '\'' + '}'; }
}
