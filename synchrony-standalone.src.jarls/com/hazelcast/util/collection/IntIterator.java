package com.hazelcast.util.collection;

import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;
import java.util.Iterator;
import java.util.NoSuchElementException;

public class IntIterator extends Object implements Iterator<Integer> {
  private final int missingValue;
  
  private final int[] values;
  
  private int position;
  
  @SuppressFBWarnings(value = {"EI2"}, justification = "This is flyweight over caller's array, so no copying")
  public IntIterator(int missingValue, int[] values) {
    this.missingValue = missingValue;
    this.values = values;
    this.position = -1;
  }
  
  public boolean hasNext() {
    int[] values = this.values;
    while (this.position < values.length) {
      if (this.position >= 0 && values[this.position] != this.missingValue)
        return true; 
      this.position++;
    } 
    return false;
  }
  
  public Integer next() { return Integer.valueOf(nextValue()); }
  
  public void remove() { throw new UnsupportedOperationException("remove"); }
  
  public int nextValue() {
    if (!hasNext())
      throw new NoSuchElementException(); 
    int value = this.values[this.position];
    this.position++;
    return value;
  }
  
  void reset() { this.position = 0; }
}
