package com.hazelcast.multimap.impl.operations;

import com.hazelcast.multimap.impl.MultiMapContainer;
import com.hazelcast.nio.serialization.Data;
import com.hazelcast.spi.Operation;

public class DeleteOperation extends AbstractBackupAwareMultiMapOperation {
  private boolean shouldBackup;
  
  public DeleteOperation() {}
  
  public DeleteOperation(String name, Data dataKey, long threadId) { super(name, dataKey, threadId); }
  
  public void run() {
    MultiMapContainer container = getOrCreateContainer();
    if (container.delete(this.dataKey))
      container.update(); 
    this.shouldBackup = true;
  }
  
  public Operation getBackupOperation() { return new DeleteBackupOperation(this.name, this.dataKey); }
  
  public boolean shouldWait() {
    MultiMapContainer container = getOrCreateContainer();
    if (container.isTransactionallyLocked(this.dataKey))
      return !container.canAcquireLock(this.dataKey, getCallerUuid(), this.threadId); 
    return false;
  }
  
  public boolean shouldBackup() { return this.shouldBackup; }
  
  public void onWaitExpire() { sendResponse(Boolean.valueOf(false)); }
  
  public int getId() { return 51; }
}
