package com.hazelcast.crdt.pncounter.operations;

import com.hazelcast.cluster.impl.VectorClock;
import com.hazelcast.nio.ObjectDataInput;
import com.hazelcast.nio.ObjectDataOutput;
import com.hazelcast.spi.ReadonlyOperation;
import java.io.IOException;

public class GetOperation extends AbstractPNCounterOperation implements ReadonlyOperation {
  private VectorClock observedTimestamps;
  
  private CRDTTimestampedLong response;
  
  public GetOperation(String name, VectorClock observedClock) {
    super(name);
    this.observedTimestamps = observedClock;
  }
  
  public GetOperation() {}
  
  public void run() { this.response = getPNCounter(this.observedTimestamps).get(this.observedTimestamps); }
  
  public CRDTTimestampedLong getResponse() { return this.response; }
  
  protected void writeInternal(ObjectDataOutput out) throws IOException {
    super.writeInternal(out);
    out.writeObject(this.observedTimestamps);
  }
  
  protected void readInternal(ObjectDataInput in) throws IOException {
    super.readInternal(in);
    this.observedTimestamps = (VectorClock)in.readObject();
  }
  
  public int getId() { return 4; }
}
