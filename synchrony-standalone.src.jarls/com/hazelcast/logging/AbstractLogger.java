package com.hazelcast.logging;

import java.util.logging.Level;

public abstract class AbstractLogger implements ILogger {
  public void finest(String message) { log(Level.FINEST, message); }
  
  public void finest(String message, Throwable thrown) { log(Level.FINEST, message, thrown); }
  
  public void finest(Throwable thrown) { log(Level.FINEST, thrown.getMessage(), thrown); }
  
  public boolean isFinestEnabled() { return isLoggable(Level.FINEST); }
  
  public void fine(String message) { log(Level.FINE, message); }
  
  public void fine(String message, Throwable thrown) { log(Level.FINE, message, thrown); }
  
  public void fine(Throwable thrown) { log(Level.FINE, thrown.getMessage(), thrown); }
  
  public boolean isFineEnabled() { return isLoggable(Level.FINE); }
  
  public void info(String message) { log(Level.INFO, message); }
  
  public void info(String message, Throwable thrown) { log(Level.INFO, message, thrown); }
  
  public void info(Throwable thrown) { log(Level.INFO, thrown.getMessage()); }
  
  public boolean isInfoEnabled() { return isLoggable(Level.INFO); }
  
  public void warning(String message) { log(Level.WARNING, message); }
  
  public void warning(Throwable thrown) { log(Level.WARNING, thrown.getMessage(), thrown); }
  
  public void warning(String message, Throwable thrown) { log(Level.WARNING, message, thrown); }
  
  public boolean isWarningEnabled() { return isLoggable(Level.WARNING); }
  
  public void severe(String message) { log(Level.SEVERE, message); }
  
  public void severe(Throwable thrown) { log(Level.SEVERE, thrown.getMessage(), thrown); }
  
  public void severe(String message, Throwable thrown) { log(Level.SEVERE, message, thrown); }
  
  public boolean isSevereEnabled() { return isLoggable(Level.SEVERE); }
}
