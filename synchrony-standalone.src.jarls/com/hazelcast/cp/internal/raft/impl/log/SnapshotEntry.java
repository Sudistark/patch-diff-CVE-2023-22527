package com.hazelcast.cp.internal.raft.impl.log;

import com.hazelcast.core.Endpoint;
import com.hazelcast.nio.ObjectDataInput;
import com.hazelcast.nio.ObjectDataOutput;
import com.hazelcast.nio.serialization.IdentifiedDataSerializable;
import java.io.IOException;
import java.util.Collection;
import java.util.HashSet;

public class SnapshotEntry extends LogEntry implements IdentifiedDataSerializable {
  private long groupMembersLogIndex;
  
  private Collection<Endpoint> groupMembers;
  
  public SnapshotEntry() {}
  
  public SnapshotEntry(int term, long index, Object operation, long groupMembersLogIndex, Collection<Endpoint> groupMembers) {
    super(term, index, operation);
    this.groupMembersLogIndex = groupMembersLogIndex;
    this.groupMembers = groupMembers;
  }
  
  public long groupMembersLogIndex() { return this.groupMembersLogIndex; }
  
  public Collection<Endpoint> groupMembers() { return this.groupMembers; }
  
  public void writeData(ObjectDataOutput out) throws IOException {
    super.writeData(out);
    out.writeLong(this.groupMembersLogIndex);
    out.writeInt(this.groupMembers.size());
    for (Endpoint endpoint : this.groupMembers)
      out.writeObject(endpoint); 
  }
  
  public void readData(ObjectDataInput in) throws IOException {
    super.readData(in);
    this.groupMembersLogIndex = in.readLong();
    int count = in.readInt();
    this.groupMembers = new HashSet(count);
    for (int i = 0; i < count; i++) {
      Endpoint endpoint = (Endpoint)in.readObject();
      this.groupMembers.add(endpoint);
    } 
  }
  
  public int getId() { return 9; }
  
  public String toString(boolean detailed) {
    return "SnapshotEntry{term=" + term() + ", index=" + index() + (detailed ? (", operation=" + 
      operation()) : "") + ", groupMembersLogIndex=" + this.groupMembersLogIndex + ", groupMembers=" + this.groupMembers + '}';
  }
  
  public String toString() { return toString(false); }
}
