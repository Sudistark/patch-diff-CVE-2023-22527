package com.hazelcast.cp.internal.datastructures.semaphore.client;

import com.hazelcast.client.impl.protocol.ClientMessage;
import com.hazelcast.client.impl.protocol.codec.CPSemaphoreReleaseCodec;
import com.hazelcast.cp.internal.client.AbstractCPMessageTask;
import com.hazelcast.cp.internal.datastructures.semaphore.operation.ReleasePermitsOp;
import com.hazelcast.instance.Node;
import com.hazelcast.nio.Connection;
import com.hazelcast.security.permission.SemaphorePermission;
import java.security.Permission;

public class ReleasePermitsMessageTask extends AbstractCPMessageTask<CPSemaphoreReleaseCodec.RequestParameters> {
  public ReleasePermitsMessageTask(ClientMessage clientMessage, Node node, Connection connection) { super(clientMessage, node, connection); }
  
  protected void processMessage() {
    ReleasePermitsOp releasePermitsOp = new ReleasePermitsOp(((CPSemaphoreReleaseCodec.RequestParameters)this.parameters).name, ((CPSemaphoreReleaseCodec.RequestParameters)this.parameters).sessionId, ((CPSemaphoreReleaseCodec.RequestParameters)this.parameters).threadId, ((CPSemaphoreReleaseCodec.RequestParameters)this.parameters).invocationUid, ((CPSemaphoreReleaseCodec.RequestParameters)this.parameters).permits);
    invoke(((CPSemaphoreReleaseCodec.RequestParameters)this.parameters).groupId, releasePermitsOp);
  }
  
  protected CPSemaphoreReleaseCodec.RequestParameters decodeClientMessage(ClientMessage clientMessage) { return CPSemaphoreReleaseCodec.decodeRequest(clientMessage); }
  
  protected ClientMessage encodeResponse(Object response) { return CPSemaphoreReleaseCodec.encodeResponse(((Boolean)response).booleanValue()); }
  
  public String getServiceName() { return "hz:raft:semaphoreService"; }
  
  public Permission getRequiredPermission() { return new SemaphorePermission(((CPSemaphoreReleaseCodec.RequestParameters)this.parameters).name, new String[] { "release" }); }
  
  public String getDistributedObjectName() { return ((CPSemaphoreReleaseCodec.RequestParameters)this.parameters).name; }
  
  public String getMethodName() { return "release"; }
  
  public Object[] getParameters() { return new Object[] { Integer.valueOf(((CPSemaphoreReleaseCodec.RequestParameters)this.parameters).permits) }; }
}
