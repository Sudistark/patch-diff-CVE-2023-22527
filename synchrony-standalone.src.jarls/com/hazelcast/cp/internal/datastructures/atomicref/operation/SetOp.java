package com.hazelcast.cp.internal.datastructures.atomicref.operation;

import com.hazelcast.cp.CPGroupId;
import com.hazelcast.cp.internal.datastructures.atomicref.RaftAtomicRef;
import com.hazelcast.nio.ObjectDataInput;
import com.hazelcast.nio.ObjectDataOutput;
import com.hazelcast.nio.serialization.Data;
import com.hazelcast.nio.serialization.IdentifiedDataSerializable;
import java.io.IOException;

public class SetOp extends AbstractAtomicRefOp implements IdentifiedDataSerializable {
  private Data newValue;
  
  private boolean returnOldValue;
  
  public SetOp() {}
  
  public SetOp(String name, Data newValue, boolean returnOldValue) {
    super(name);
    this.newValue = newValue;
    this.returnOldValue = returnOldValue;
  }
  
  public Object run(CPGroupId groupId, long commitIndex) {
    RaftAtomicRef ref = getAtomicRef(groupId);
    Data oldValue = ref.get();
    ref.set(this.newValue);
    return this.returnOldValue ? oldValue : null;
  }
  
  public int getId() { return 6; }
  
  public void writeData(ObjectDataOutput out) throws IOException {
    super.writeData(out);
    out.writeData(this.newValue);
    out.writeBoolean(this.returnOldValue);
  }
  
  public void readData(ObjectDataInput in) throws IOException {
    super.readData(in);
    this.newValue = in.readData();
    this.returnOldValue = in.readBoolean();
  }
}
