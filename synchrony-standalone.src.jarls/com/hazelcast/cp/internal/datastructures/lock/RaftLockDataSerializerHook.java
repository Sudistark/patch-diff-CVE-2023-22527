package com.hazelcast.cp.internal.datastructures.lock;

import com.hazelcast.internal.serialization.DataSerializerHook;
import com.hazelcast.internal.serialization.impl.FactoryIdHelper;
import com.hazelcast.nio.serialization.DataSerializableFactory;

public class RaftLockDataSerializerHook implements DataSerializerHook {
  private static final int RAFT_LOCK_DS_FACTORY_ID = -1012;
  
  private static final String RAFT_LOCK_DS_FACTORY = "hazelcast.serialization.ds.raft.lock";
  
  public static final int F_ID = FactoryIdHelper.getFactoryId("hazelcast.serialization.ds.raft.lock", -1012);
  
  public static final int RAFT_LOCK_REGISTRY = 1;
  
  public static final int RAFT_LOCK = 2;
  
  public static final int LOCK_ENDPOINT = 3;
  
  public static final int LOCK_INVOCATION_KEY = 4;
  
  public static final int RAFT_LOCK_OWNERSHIP_STATE = 5;
  
  public static final int LOCK_OP = 6;
  
  public static final int TRY_LOCK_OP = 7;
  
  public static final int UNLOCK_OP = 8;
  
  public static final int GET_RAFT_LOCK_OWNERSHIP_STATE_OP = 9;
  
  public int getFactoryId() { return F_ID; }
  
  public DataSerializableFactory createFactory() { return new Object(this); }
}
