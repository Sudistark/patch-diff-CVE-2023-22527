package com.hazelcast.cp.internal.raftop.metadata;

import com.hazelcast.cp.internal.MetadataRaftGroupManager;
import com.hazelcast.cp.internal.RaftGroupId;
import com.hazelcast.cp.internal.RaftService;
import com.hazelcast.cp.internal.RaftServiceDataSerializerHook;
import com.hazelcast.nio.ObjectDataInput;
import com.hazelcast.nio.ObjectDataOutput;
import com.hazelcast.nio.serialization.IdentifiedDataSerializable;
import com.hazelcast.nio.serialization.impl.Versioned;
import com.hazelcast.spi.Operation;
import java.io.IOException;

public class RaftServicePreJoinOp extends Operation implements IdentifiedDataSerializable, Versioned {
  private boolean discoveryCompleted;
  
  private RaftGroupId metadataGroupId;
  
  public RaftServicePreJoinOp() {}
  
  public RaftServicePreJoinOp(boolean discoveryCompleted, RaftGroupId metadataGroupId) {
    this.discoveryCompleted = discoveryCompleted;
    this.metadataGroupId = metadataGroupId;
  }
  
  public void run() {
    RaftService service = (RaftService)getService();
    MetadataRaftGroupManager metadataGroupManager = service.getMetadataGroupManager();
    metadataGroupManager.handleMetadataGroupId(this.metadataGroupId);
    if (this.discoveryCompleted)
      metadataGroupManager.disableDiscovery(); 
  }
  
  public boolean returnsResponse() { return false; }
  
  public String getServiceName() { return "hz:core:raft"; }
  
  public int getFactoryId() { return RaftServiceDataSerializerHook.F_ID; }
  
  public int getId() { return 39; }
  
  protected void writeInternal(ObjectDataOutput out) throws IOException {
    super.writeInternal(out);
    out.writeBoolean(this.discoveryCompleted);
    out.writeObject(this.metadataGroupId);
  }
  
  protected void readInternal(ObjectDataInput in) throws IOException {
    super.readInternal(in);
    this.discoveryCompleted = in.readBoolean();
    this.metadataGroupId = (RaftGroupId)in.readObject();
  }
  
  protected void toString(StringBuilder sb) { sb.append(", discoveryCompleted=").append(this.discoveryCompleted).append(", metadataGroupId=").append(this.metadataGroupId); }
}
