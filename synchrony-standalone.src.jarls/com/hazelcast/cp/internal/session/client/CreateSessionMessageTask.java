package com.hazelcast.cp.internal.session.client;

import com.hazelcast.client.impl.protocol.ClientMessage;
import com.hazelcast.client.impl.protocol.codec.CPSessionCreateSessionCodec;
import com.hazelcast.cp.internal.client.AbstractCPMessageTask;
import com.hazelcast.cp.internal.session.SessionResponse;
import com.hazelcast.cp.internal.session.operation.CreateSessionOp;
import com.hazelcast.cp.session.CPSession;
import com.hazelcast.instance.Node;
import com.hazelcast.nio.Connection;
import java.security.Permission;

public class CreateSessionMessageTask extends AbstractCPMessageTask<CPSessionCreateSessionCodec.RequestParameters> {
  public CreateSessionMessageTask(ClientMessage clientMessage, Node node, Connection connection) { super(clientMessage, node, connection); }
  
  protected void processMessage() {
    CreateSessionOp createSessionOp = new CreateSessionOp(this.connection.getEndPoint(), ((CPSessionCreateSessionCodec.RequestParameters)this.parameters).endpointName, CPSession.CPSessionOwnerType.CLIENT);
    invoke(((CPSessionCreateSessionCodec.RequestParameters)this.parameters).groupId, createSessionOp);
  }
  
  protected CPSessionCreateSessionCodec.RequestParameters decodeClientMessage(ClientMessage clientMessage) { return CPSessionCreateSessionCodec.decodeRequest(clientMessage); }
  
  protected ClientMessage encodeResponse(Object response) {
    SessionResponse session = (SessionResponse)response;
    return CPSessionCreateSessionCodec.encodeResponse(session.getSessionId(), session.getTtlMillis(), session
        .getHeartbeatMillis());
  }
  
  public String getServiceName() { return "hz:core:raft"; }
  
  public String getDistributedObjectName() { return null; }
  
  public Permission getRequiredPermission() { return null; }
  
  public String getMethodName() { return "create"; }
  
  public Object[] getParameters() { return new Object[0]; }
}
