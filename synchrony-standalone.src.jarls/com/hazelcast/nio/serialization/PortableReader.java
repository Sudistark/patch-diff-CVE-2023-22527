package com.hazelcast.nio.serialization;

import com.hazelcast.nio.ObjectDataInput;
import java.io.IOException;
import java.util.Set;

public interface PortableReader {
  int getVersion();
  
  boolean hasField(String paramString);
  
  Set<String> getFieldNames();
  
  FieldType getFieldType(String paramString);
  
  int getFieldClassId(String paramString);
  
  int readInt(String paramString);
  
  long readLong(String paramString) throws IOException;
  
  String readUTF(String paramString) throws IOException;
  
  boolean readBoolean(String paramString);
  
  byte readByte(String paramString) throws IOException;
  
  char readChar(String paramString) throws IOException;
  
  double readDouble(String paramString) throws IOException;
  
  float readFloat(String paramString) throws IOException;
  
  short readShort(String paramString) throws IOException;
  
  <P extends Portable> P readPortable(String paramString) throws IOException;
  
  byte[] readByteArray(String paramString) throws IOException;
  
  boolean[] readBooleanArray(String paramString) throws IOException;
  
  char[] readCharArray(String paramString) throws IOException;
  
  int[] readIntArray(String paramString) throws IOException;
  
  long[] readLongArray(String paramString) throws IOException;
  
  double[] readDoubleArray(String paramString) throws IOException;
  
  float[] readFloatArray(String paramString) throws IOException;
  
  short[] readShortArray(String paramString) throws IOException;
  
  String[] readUTFArray(String paramString) throws IOException;
  
  Portable[] readPortableArray(String paramString) throws IOException;
  
  ObjectDataInput getRawDataInput() throws IOException;
}
