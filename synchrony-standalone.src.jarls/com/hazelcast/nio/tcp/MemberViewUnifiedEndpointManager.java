package com.hazelcast.nio.tcp;

import com.hazelcast.nio.Address;
import com.hazelcast.nio.Connection;
import com.hazelcast.nio.ConnectionListener;
import com.hazelcast.nio.EndpointManager;
import com.hazelcast.nio.Packet;
import java.util.Collection;

class MemberViewUnifiedEndpointManager extends Object implements EndpointManager<TcpIpConnection> {
  private final TcpIpUnifiedEndpointManager unifiedEndpointManager;
  
  MemberViewUnifiedEndpointManager(TcpIpUnifiedEndpointManager unifiedEndpointManager) { this.unifiedEndpointManager = unifiedEndpointManager; }
  
  public Collection<TcpIpConnection> getActiveConnections() { return this.unifiedEndpointManager.getActiveConnections(); }
  
  public Collection<TcpIpConnection> getConnections() { return this.unifiedEndpointManager.getConnections(); }
  
  public void addConnectionListener(ConnectionListener listener) { this.unifiedEndpointManager.addConnectionListener(listener); }
  
  public void accept(Packet packet) { this.unifiedEndpointManager.accept(packet); }
  
  public TcpIpConnection getConnection(Address address) { return this.unifiedEndpointManager.getConnection(address); }
  
  public TcpIpConnection getOrConnect(Address address) { return this.unifiedEndpointManager.getOrConnect(address); }
  
  public TcpIpConnection getOrConnect(Address address, boolean silent) { return this.unifiedEndpointManager.getOrConnect(address, silent); }
  
  public boolean registerConnection(Address address, TcpIpConnection connection) { return this.unifiedEndpointManager.registerConnection(address, connection); }
  
  public boolean transmit(Packet packet, TcpIpConnection connection) { return this.unifiedEndpointManager.transmit(packet, connection); }
  
  public boolean transmit(Packet packet, Address target) { return this.unifiedEndpointManager.transmit(packet, target); }
  
  public String toString() { return this.unifiedEndpointManager.toString(); }
  
  int getAcceptedChannelsSize() { return this.unifiedEndpointManager.getAcceptedChannelsSize(); }
  
  int getConnectionListenersCount() { return this.unifiedEndpointManager.getConnectionListenersCount(); }
}
