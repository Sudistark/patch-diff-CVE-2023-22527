package com.hazelcast.nio.tcp;

import com.hazelcast.nio.Address;
import com.hazelcast.nio.Connection;
import com.hazelcast.nio.ConnectionListener;
import com.hazelcast.nio.EndpointManager;
import com.hazelcast.nio.Packet;
import java.util.Collection;
import java.util.Set;

class TextViewUnifiedEndpointManager extends Object implements EndpointManager<TcpIpConnection> {
  private final TcpIpUnifiedEndpointManager unifiedEndpointManager;
  
  private final boolean rest;
  
  TextViewUnifiedEndpointManager(TcpIpUnifiedEndpointManager unifiedEndpointManager, boolean rest) {
    this.unifiedEndpointManager = unifiedEndpointManager;
    this.rest = rest;
  }
  
  public Set<TcpIpConnection> getActiveConnections() { return this.rest ? this.unifiedEndpointManager.getRestConnections() : this.unifiedEndpointManager.getMemachedConnections(); }
  
  public Collection<TcpIpConnection> getConnections() { throw new UnsupportedOperationException(); }
  
  public void addConnectionListener(ConnectionListener listener) { this.unifiedEndpointManager.addConnectionListener(listener); }
  
  public void accept(Packet packet) { this.unifiedEndpointManager.accept(packet); }
  
  public boolean registerConnection(Address remoteEndPoint, TcpIpConnection connection) { return this.unifiedEndpointManager.registerConnection(remoteEndPoint, connection); }
  
  public TcpIpConnection getConnection(Address address) { return this.unifiedEndpointManager.getConnection(address); }
  
  public TcpIpConnection getOrConnect(Address address) { return this.unifiedEndpointManager.getOrConnect(address); }
  
  public TcpIpConnection getOrConnect(Address address, boolean silent) { return this.unifiedEndpointManager.getOrConnect(address, silent); }
  
  public boolean transmit(Packet packet, TcpIpConnection connection) { return this.unifiedEndpointManager.transmit(packet, connection); }
  
  public boolean transmit(Packet packet, Address target) { return this.unifiedEndpointManager.transmit(packet, target); }
  
  public String toString() { return this.unifiedEndpointManager.toString(); }
}
