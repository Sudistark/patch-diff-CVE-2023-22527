package com.hazelcast.client.impl.protocol.task.ringbuffer;

import com.hazelcast.client.impl.protocol.ClientMessage;
import com.hazelcast.client.impl.protocol.codec.RingbufferAddAllCodec;
import com.hazelcast.client.impl.protocol.task.AbstractPartitionMessageTask;
import com.hazelcast.instance.Node;
import com.hazelcast.nio.Connection;
import com.hazelcast.nio.serialization.Data;
import com.hazelcast.ringbuffer.OverflowPolicy;
import com.hazelcast.ringbuffer.impl.operations.AddAllOperation;
import com.hazelcast.security.permission.RingBufferPermission;
import com.hazelcast.spi.Operation;
import java.security.Permission;
import java.util.List;

public class RingbufferAddAllMessageTask extends AbstractPartitionMessageTask<RingbufferAddAllCodec.RequestParameters> {
  public RingbufferAddAllMessageTask(ClientMessage clientMessage, Node node, Connection connection) { super(clientMessage, node, connection); }
  
  protected Operation prepareOperation() { return new AddAllOperation(((RingbufferAddAllCodec.RequestParameters)this.parameters).name, items(), OverflowPolicy.getById(((RingbufferAddAllCodec.RequestParameters)this.parameters).overflowPolicy)); }
  
  private Data[] items() {
    List<Data> valueList = ((RingbufferAddAllCodec.RequestParameters)this.parameters).valueList;
    Data[] array = new Data[valueList.size()];
    return (Data[])valueList.toArray(array);
  }
  
  protected ClientMessage encodeResponse(Object response) { return RingbufferAddAllCodec.encodeResponse(((Long)response).longValue()); }
  
  protected RingbufferAddAllCodec.RequestParameters decodeClientMessage(ClientMessage clientMessage) { return RingbufferAddAllCodec.decodeRequest(clientMessage); }
  
  public Object[] getParameters() { return new Object[] { ((RingbufferAddAllCodec.RequestParameters)this.parameters).valueList, OverflowPolicy.getById(((RingbufferAddAllCodec.RequestParameters)this.parameters).overflowPolicy) }; }
  
  public Permission getRequiredPermission() { return new RingBufferPermission(((RingbufferAddAllCodec.RequestParameters)this.parameters).name, new String[] { "put" }); }
  
  public String getMethodName() { return "addAll"; }
  
  public String getServiceName() { return "hz:impl:ringbufferService"; }
  
  public String getDistributedObjectName() { return ((RingbufferAddAllCodec.RequestParameters)this.parameters).name; }
}
