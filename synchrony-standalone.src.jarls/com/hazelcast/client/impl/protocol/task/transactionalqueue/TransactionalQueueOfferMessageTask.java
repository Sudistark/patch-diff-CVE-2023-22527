package com.hazelcast.client.impl.protocol.task.transactionalqueue;

import com.hazelcast.client.impl.protocol.ClientMessage;
import com.hazelcast.client.impl.protocol.codec.TransactionalQueueOfferCodec;
import com.hazelcast.client.impl.protocol.task.AbstractTransactionalMessageTask;
import com.hazelcast.core.TransactionalQueue;
import com.hazelcast.instance.Node;
import com.hazelcast.nio.Connection;
import com.hazelcast.security.permission.QueuePermission;
import com.hazelcast.transaction.TransactionContext;
import java.security.Permission;
import java.util.concurrent.TimeUnit;

public class TransactionalQueueOfferMessageTask extends AbstractTransactionalMessageTask<TransactionalQueueOfferCodec.RequestParameters> {
  public TransactionalQueueOfferMessageTask(ClientMessage clientMessage, Node node, Connection connection) { super(clientMessage, node, connection); }
  
  protected Object innerCall() throws Exception {
    TransactionContext context = this.endpoint.getTransactionContext(((TransactionalQueueOfferCodec.RequestParameters)this.parameters).txnId);
    TransactionalQueue queue = context.getQueue(((TransactionalQueueOfferCodec.RequestParameters)this.parameters).name);
    return Boolean.valueOf(queue.offer(((TransactionalQueueOfferCodec.RequestParameters)this.parameters).item, ((TransactionalQueueOfferCodec.RequestParameters)this.parameters).timeout, TimeUnit.MILLISECONDS));
  }
  
  protected long getClientThreadId() { return ((TransactionalQueueOfferCodec.RequestParameters)this.parameters).threadId; }
  
  protected TransactionalQueueOfferCodec.RequestParameters decodeClientMessage(ClientMessage clientMessage) { return TransactionalQueueOfferCodec.decodeRequest(clientMessage); }
  
  protected ClientMessage encodeResponse(Object response) { return TransactionalQueueOfferCodec.encodeResponse(((Boolean)response).booleanValue()); }
  
  public String getServiceName() { return "hz:impl:queueService"; }
  
  public Permission getRequiredPermission() { return new QueuePermission(((TransactionalQueueOfferCodec.RequestParameters)this.parameters).name, new String[] { "add" }); }
  
  public String getDistributedObjectName() { return ((TransactionalQueueOfferCodec.RequestParameters)this.parameters).name; }
  
  public String getMethodName() { return "offer"; }
  
  public Object[] getParameters() { return new Object[] { ((TransactionalQueueOfferCodec.RequestParameters)this.parameters).item, Long.valueOf(((TransactionalQueueOfferCodec.RequestParameters)this.parameters).timeout), TimeUnit.MILLISECONDS }; }
}
