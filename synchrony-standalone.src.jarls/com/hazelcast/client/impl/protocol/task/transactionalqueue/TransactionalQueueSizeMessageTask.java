package com.hazelcast.client.impl.protocol.task.transactionalqueue;

import com.hazelcast.client.impl.protocol.ClientMessage;
import com.hazelcast.client.impl.protocol.codec.TransactionalQueueSizeCodec;
import com.hazelcast.client.impl.protocol.task.AbstractTransactionalMessageTask;
import com.hazelcast.core.TransactionalQueue;
import com.hazelcast.instance.Node;
import com.hazelcast.nio.Connection;
import com.hazelcast.security.permission.QueuePermission;
import com.hazelcast.transaction.TransactionContext;
import java.security.Permission;

public class TransactionalQueueSizeMessageTask extends AbstractTransactionalMessageTask<TransactionalQueueSizeCodec.RequestParameters> {
  public TransactionalQueueSizeMessageTask(ClientMessage clientMessage, Node node, Connection connection) { super(clientMessage, node, connection); }
  
  protected Object innerCall() throws Exception {
    TransactionContext context = this.endpoint.getTransactionContext(((TransactionalQueueSizeCodec.RequestParameters)this.parameters).txnId);
    TransactionalQueue queue = context.getQueue(((TransactionalQueueSizeCodec.RequestParameters)this.parameters).name);
    return Integer.valueOf(queue.size());
  }
  
  protected long getClientThreadId() { return ((TransactionalQueueSizeCodec.RequestParameters)this.parameters).threadId; }
  
  protected TransactionalQueueSizeCodec.RequestParameters decodeClientMessage(ClientMessage clientMessage) { return TransactionalQueueSizeCodec.decodeRequest(clientMessage); }
  
  protected ClientMessage encodeResponse(Object response) { return TransactionalQueueSizeCodec.encodeResponse(((Integer)response).intValue()); }
  
  public String getServiceName() { return "hz:impl:queueService"; }
  
  public Permission getRequiredPermission() { return new QueuePermission(((TransactionalQueueSizeCodec.RequestParameters)this.parameters).name, new String[] { "add" }); }
  
  public String getDistributedObjectName() { return ((TransactionalQueueSizeCodec.RequestParameters)this.parameters).name; }
  
  public String getMethodName() { return "size"; }
  
  public Object[] getParameters() { return null; }
}
