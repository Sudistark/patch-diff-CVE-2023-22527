package com.hazelcast.client.impl.protocol.task.list;

import com.hazelcast.client.impl.protocol.ClientMessage;
import com.hazelcast.client.impl.protocol.codec.ListRemoveWithIndexCodec;
import com.hazelcast.client.impl.protocol.task.AbstractPartitionMessageTask;
import com.hazelcast.collection.impl.list.operations.ListRemoveOperation;
import com.hazelcast.instance.Node;
import com.hazelcast.nio.Connection;
import com.hazelcast.nio.serialization.Data;
import com.hazelcast.security.permission.ListPermission;
import com.hazelcast.spi.Operation;
import java.security.Permission;

public class ListRemoveWithIndexMessageTask extends AbstractPartitionMessageTask<ListRemoveWithIndexCodec.RequestParameters> {
  public ListRemoveWithIndexMessageTask(ClientMessage clientMessage, Node node, Connection connection) { super(clientMessage, node, connection); }
  
  protected Operation prepareOperation() { return new ListRemoveOperation(((ListRemoveWithIndexCodec.RequestParameters)this.parameters).name, ((ListRemoveWithIndexCodec.RequestParameters)this.parameters).index); }
  
  protected ListRemoveWithIndexCodec.RequestParameters decodeClientMessage(ClientMessage clientMessage) { return ListRemoveWithIndexCodec.decodeRequest(clientMessage); }
  
  protected ClientMessage encodeResponse(Object response) { return ListRemoveWithIndexCodec.encodeResponse((Data)response); }
  
  public String getServiceName() { return "hz:impl:listService"; }
  
  public Object[] getParameters() { return new Object[] { Integer.valueOf(((ListRemoveWithIndexCodec.RequestParameters)this.parameters).index) }; }
  
  public Permission getRequiredPermission() { return new ListPermission(((ListRemoveWithIndexCodec.RequestParameters)this.parameters).name, new String[] { "remove" }); }
  
  public String getMethodName() { return "remove"; }
  
  public String getDistributedObjectName() { return ((ListRemoveWithIndexCodec.RequestParameters)this.parameters).name; }
}
