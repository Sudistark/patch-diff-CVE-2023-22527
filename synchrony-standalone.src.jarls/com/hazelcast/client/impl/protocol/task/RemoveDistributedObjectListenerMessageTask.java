package com.hazelcast.client.impl.protocol.task;

import com.hazelcast.client.impl.protocol.ClientMessage;
import com.hazelcast.client.impl.protocol.codec.ClientRemoveDistributedObjectListenerCodec;
import com.hazelcast.instance.Node;
import com.hazelcast.nio.Connection;
import java.security.Permission;

public class RemoveDistributedObjectListenerMessageTask extends AbstractRemoveListenerMessageTask<ClientRemoveDistributedObjectListenerCodec.RequestParameters> {
  public RemoveDistributedObjectListenerMessageTask(ClientMessage clientMessage, Node node, Connection connection) { super(clientMessage, node, connection); }
  
  protected boolean deRegisterListener() { return this.clientEngine.getProxyService().removeProxyListener(((ClientRemoveDistributedObjectListenerCodec.RequestParameters)this.parameters).registrationId); }
  
  protected String getRegistrationId() { return ((ClientRemoveDistributedObjectListenerCodec.RequestParameters)this.parameters).registrationId; }
  
  protected ClientRemoveDistributedObjectListenerCodec.RequestParameters decodeClientMessage(ClientMessage clientMessage) { return ClientRemoveDistributedObjectListenerCodec.decodeRequest(clientMessage); }
  
  protected ClientMessage encodeResponse(Object response) { return ClientRemoveDistributedObjectListenerCodec.encodeResponse(((Boolean)response).booleanValue()); }
  
  public String getServiceName() { return "hz:core:proxyService"; }
  
  public Permission getRequiredPermission() { return null; }
  
  public String getDistributedObjectName() { return null; }
  
  public String getMethodName() { return "removeDistributedObjectListener"; }
}
