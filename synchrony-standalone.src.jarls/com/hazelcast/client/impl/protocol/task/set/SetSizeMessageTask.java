package com.hazelcast.client.impl.protocol.task.set;

import com.hazelcast.client.impl.protocol.ClientMessage;
import com.hazelcast.client.impl.protocol.codec.SetSizeCodec;
import com.hazelcast.client.impl.protocol.task.AbstractPartitionMessageTask;
import com.hazelcast.collection.impl.collection.operations.CollectionSizeOperation;
import com.hazelcast.instance.Node;
import com.hazelcast.nio.Connection;
import com.hazelcast.security.permission.SetPermission;
import com.hazelcast.spi.Operation;
import java.security.Permission;

public class SetSizeMessageTask extends AbstractPartitionMessageTask<SetSizeCodec.RequestParameters> {
  public SetSizeMessageTask(ClientMessage clientMessage, Node node, Connection connection) { super(clientMessage, node, connection); }
  
  protected Operation prepareOperation() { return new CollectionSizeOperation(((SetSizeCodec.RequestParameters)this.parameters).name); }
  
  protected SetSizeCodec.RequestParameters decodeClientMessage(ClientMessage clientMessage) { return SetSizeCodec.decodeRequest(clientMessage); }
  
  protected ClientMessage encodeResponse(Object response) { return SetSizeCodec.encodeResponse(((Integer)response).intValue()); }
  
  public String getServiceName() { return "hz:impl:setService"; }
  
  public Object[] getParameters() { return null; }
  
  public Permission getRequiredPermission() { return new SetPermission(((SetSizeCodec.RequestParameters)this.parameters).name, new String[] { "read" }); }
  
  public String getMethodName() { return "size"; }
  
  public String getDistributedObjectName() { return ((SetSizeCodec.RequestParameters)this.parameters).name; }
}
