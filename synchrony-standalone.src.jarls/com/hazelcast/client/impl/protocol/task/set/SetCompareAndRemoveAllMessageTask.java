package com.hazelcast.client.impl.protocol.task.set;

import com.hazelcast.client.impl.protocol.ClientMessage;
import com.hazelcast.client.impl.protocol.codec.SetCompareAndRemoveAllCodec;
import com.hazelcast.client.impl.protocol.task.AbstractPartitionMessageTask;
import com.hazelcast.collection.impl.collection.operations.CollectionCompareAndRemoveOperation;
import com.hazelcast.instance.Node;
import com.hazelcast.nio.Connection;
import com.hazelcast.nio.serialization.Data;
import com.hazelcast.security.permission.SetPermission;
import com.hazelcast.spi.Operation;
import java.security.Permission;
import java.util.HashSet;
import java.util.Set;

public class SetCompareAndRemoveAllMessageTask extends AbstractPartitionMessageTask<SetCompareAndRemoveAllCodec.RequestParameters> {
  public SetCompareAndRemoveAllMessageTask(ClientMessage clientMessage, Node node, Connection connection) { super(clientMessage, node, connection); }
  
  protected Operation prepareOperation() {
    Set<Data> values = new HashSet<Data>(((SetCompareAndRemoveAllCodec.RequestParameters)this.parameters).values);
    return new CollectionCompareAndRemoveOperation(((SetCompareAndRemoveAllCodec.RequestParameters)this.parameters).name, false, values);
  }
  
  protected SetCompareAndRemoveAllCodec.RequestParameters decodeClientMessage(ClientMessage clientMessage) { return SetCompareAndRemoveAllCodec.decodeRequest(clientMessage); }
  
  protected ClientMessage encodeResponse(Object response) { return SetCompareAndRemoveAllCodec.encodeResponse(((Boolean)response).booleanValue()); }
  
  public String getServiceName() { return "hz:impl:setService"; }
  
  public Object[] getParameters() { return new Object[] { ((SetCompareAndRemoveAllCodec.RequestParameters)this.parameters).values }; }
  
  public Permission getRequiredPermission() { return new SetPermission(((SetCompareAndRemoveAllCodec.RequestParameters)this.parameters).name, new String[] { "remove" }); }
  
  public String getMethodName() { return "removeAll"; }
  
  public String getDistributedObjectName() { return ((SetCompareAndRemoveAllCodec.RequestParameters)this.parameters).name; }
}
