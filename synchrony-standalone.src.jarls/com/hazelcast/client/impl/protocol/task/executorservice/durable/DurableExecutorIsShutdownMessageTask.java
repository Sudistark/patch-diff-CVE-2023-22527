package com.hazelcast.client.impl.protocol.task.executorservice.durable;

import com.hazelcast.client.impl.protocol.ClientMessage;
import com.hazelcast.client.impl.protocol.codec.DurableExecutorIsShutdownCodec;
import com.hazelcast.client.impl.protocol.task.AbstractCallableMessageTask;
import com.hazelcast.durableexecutor.impl.DistributedDurableExecutorService;
import com.hazelcast.instance.Node;
import com.hazelcast.nio.Connection;
import java.security.Permission;

public class DurableExecutorIsShutdownMessageTask extends AbstractCallableMessageTask<DurableExecutorIsShutdownCodec.RequestParameters> {
  public DurableExecutorIsShutdownMessageTask(ClientMessage clientMessage, Node node, Connection connection) { super(clientMessage, node, connection); }
  
  protected Object call() throws Exception {
    DistributedDurableExecutorService service = (DistributedDurableExecutorService)getService("hz:impl:durableExecutorService");
    return Boolean.valueOf(service.isShutdown(((DurableExecutorIsShutdownCodec.RequestParameters)this.parameters).name));
  }
  
  protected DurableExecutorIsShutdownCodec.RequestParameters decodeClientMessage(ClientMessage clientMessage) { return DurableExecutorIsShutdownCodec.decodeRequest(clientMessage); }
  
  protected ClientMessage encodeResponse(Object response) { return DurableExecutorIsShutdownCodec.encodeResponse(((Boolean)response).booleanValue()); }
  
  public String getServiceName() { return "hz:impl:durableExecutorService"; }
  
  public Permission getRequiredPermission() { return null; }
  
  public String getDistributedObjectName() { return ((DurableExecutorIsShutdownCodec.RequestParameters)this.parameters).name; }
  
  public String getMethodName() { return "isShutdown"; }
  
  public Object[] getParameters() { return null; }
}
