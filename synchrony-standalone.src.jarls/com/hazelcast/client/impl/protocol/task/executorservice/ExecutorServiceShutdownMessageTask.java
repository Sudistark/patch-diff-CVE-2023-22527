package com.hazelcast.client.impl.protocol.task.executorservice;

import com.hazelcast.client.impl.protocol.ClientMessage;
import com.hazelcast.client.impl.protocol.codec.ExecutorServiceShutdownCodec;
import com.hazelcast.client.impl.protocol.task.AbstractCallableMessageTask;
import com.hazelcast.executor.impl.DistributedExecutorService;
import com.hazelcast.instance.Node;
import com.hazelcast.nio.Connection;
import java.security.Permission;

public class ExecutorServiceShutdownMessageTask extends AbstractCallableMessageTask<ExecutorServiceShutdownCodec.RequestParameters> {
  public ExecutorServiceShutdownMessageTask(ClientMessage clientMessage, Node node, Connection connection) { super(clientMessage, node, connection); }
  
  protected Object call() throws Exception {
    DistributedExecutorService service = (DistributedExecutorService)getService("hz:impl:executorService");
    service.shutdownExecutor(((ExecutorServiceShutdownCodec.RequestParameters)this.parameters).name);
    return null;
  }
  
  protected ExecutorServiceShutdownCodec.RequestParameters decodeClientMessage(ClientMessage clientMessage) { return ExecutorServiceShutdownCodec.decodeRequest(clientMessage); }
  
  protected ClientMessage encodeResponse(Object response) { return ExecutorServiceShutdownCodec.encodeResponse(); }
  
  public String getServiceName() { return "hz:impl:executorService"; }
  
  public Permission getRequiredPermission() { return null; }
  
  public String getDistributedObjectName() { return null; }
  
  public String getMethodName() { return "shutdown"; }
  
  public Object[] getParameters() { return null; }
}
