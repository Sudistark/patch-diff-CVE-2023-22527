package com.hazelcast.client.impl.protocol.task.executorservice.durable;

import com.hazelcast.client.impl.protocol.ClientMessage;
import com.hazelcast.client.impl.protocol.codec.DurableExecutorDisposeResultCodec;
import com.hazelcast.client.impl.protocol.task.AbstractPartitionMessageTask;
import com.hazelcast.durableexecutor.impl.operations.DisposeResultOperation;
import com.hazelcast.instance.Node;
import com.hazelcast.nio.Connection;
import com.hazelcast.spi.Operation;
import java.security.Permission;

public class DurableExecutorDisposeResultMessageTask extends AbstractPartitionMessageTask<DurableExecutorDisposeResultCodec.RequestParameters> {
  public DurableExecutorDisposeResultMessageTask(ClientMessage clientMessage, Node node, Connection connection) { super(clientMessage, node, connection); }
  
  protected Operation prepareOperation() { return new DisposeResultOperation(((DurableExecutorDisposeResultCodec.RequestParameters)this.parameters).name, ((DurableExecutorDisposeResultCodec.RequestParameters)this.parameters).sequence); }
  
  protected DurableExecutorDisposeResultCodec.RequestParameters decodeClientMessage(ClientMessage clientMessage) { return DurableExecutorDisposeResultCodec.decodeRequest(clientMessage); }
  
  protected ClientMessage encodeResponse(Object response) { return DurableExecutorDisposeResultCodec.encodeResponse(); }
  
  public String getServiceName() { return "hz:impl:durableExecutorService"; }
  
  public Permission getRequiredPermission() { return null; }
  
  public String getDistributedObjectName() { return ((DurableExecutorDisposeResultCodec.RequestParameters)this.parameters).name; }
  
  public String getMethodName() { return null; }
  
  public Object[] getParameters() { return null; }
}
