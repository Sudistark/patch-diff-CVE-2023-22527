package com.hazelcast.client.impl.protocol.task.executorservice;

import com.hazelcast.client.impl.protocol.ClientMessage;
import com.hazelcast.client.impl.protocol.codec.ExecutorServiceCancelOnAddressCodec;
import com.hazelcast.client.impl.protocol.task.AbstractAddressMessageTask;
import com.hazelcast.executor.impl.operations.CancellationOperation;
import com.hazelcast.instance.Node;
import com.hazelcast.nio.Address;
import com.hazelcast.nio.Connection;
import com.hazelcast.spi.Operation;
import java.security.Permission;

public class ExecutorServiceCancelOnAddressMessageTask extends AbstractAddressMessageTask<ExecutorServiceCancelOnAddressCodec.RequestParameters> {
  public ExecutorServiceCancelOnAddressMessageTask(ClientMessage clientMessage, Node node, Connection connection) { super(clientMessage, node, connection); }
  
  protected Operation prepareOperation() { return new CancellationOperation(((ExecutorServiceCancelOnAddressCodec.RequestParameters)this.parameters).uuid, ((ExecutorServiceCancelOnAddressCodec.RequestParameters)this.parameters).interrupt); }
  
  protected Address getAddress() { return ((ExecutorServiceCancelOnAddressCodec.RequestParameters)this.parameters).address; }
  
  protected ExecutorServiceCancelOnAddressCodec.RequestParameters decodeClientMessage(ClientMessage clientMessage) {
    this.parameters = ExecutorServiceCancelOnAddressCodec.decodeRequest(clientMessage);
    ((ExecutorServiceCancelOnAddressCodec.RequestParameters)this.parameters).address = this.clientEngine.memberAddressOf(((ExecutorServiceCancelOnAddressCodec.RequestParameters)this.parameters).address);
    return (ExecutorServiceCancelOnAddressCodec.RequestParameters)this.parameters;
  }
  
  protected ClientMessage encodeResponse(Object response) { return ExecutorServiceCancelOnAddressCodec.encodeResponse(((Boolean)response).booleanValue()); }
  
  public String getDistributedObjectName() { return null; }
  
  public String getServiceName() { return "hz:impl:executorService"; }
  
  public Permission getRequiredPermission() { return null; }
  
  public String getMethodName() { return "cancel"; }
  
  public Object[] getParameters() { return null; }
}
