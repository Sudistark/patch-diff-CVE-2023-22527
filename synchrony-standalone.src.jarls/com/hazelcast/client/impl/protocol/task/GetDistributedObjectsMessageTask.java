package com.hazelcast.client.impl.protocol.task;

import com.hazelcast.client.impl.client.DistributedObjectInfo;
import com.hazelcast.client.impl.protocol.ClientMessage;
import com.hazelcast.client.impl.protocol.codec.ClientGetDistributedObjectsCodec;
import com.hazelcast.core.DistributedObject;
import com.hazelcast.core.DistributedObjectUtil;
import com.hazelcast.instance.Node;
import com.hazelcast.nio.Connection;
import java.security.Permission;
import java.util.ArrayList;
import java.util.Collection;
import java.util.List;

public class GetDistributedObjectsMessageTask extends AbstractCallableMessageTask<ClientGetDistributedObjectsCodec.RequestParameters> {
  public GetDistributedObjectsMessageTask(ClientMessage clientMessage, Node node, Connection connection) { super(clientMessage, node, connection); }
  
  protected Object call() throws Exception {
    Collection<DistributedObject> distributedObjects = this.clientEngine.getProxyService().getAllDistributedObjects();
    List<DistributedObjectInfo> coll = new ArrayList<DistributedObjectInfo>(distributedObjects.size());
    for (DistributedObject distributedObject : distributedObjects) {
      String name = DistributedObjectUtil.getName(distributedObject);
      coll.add(new DistributedObjectInfo(distributedObject.getServiceName(), name));
    } 
    return coll;
  }
  
  protected ClientGetDistributedObjectsCodec.RequestParameters decodeClientMessage(ClientMessage clientMessage) { return ClientGetDistributedObjectsCodec.decodeRequest(clientMessage); }
  
  protected ClientMessage encodeResponse(Object response) { return ClientGetDistributedObjectsCodec.encodeResponse((List)response); }
  
  public String getServiceName() { return "hz:core:proxyService"; }
  
  public Permission getRequiredPermission() { return null; }
  
  public String getDistributedObjectName() { return null; }
  
  public String getMethodName() { return "getDistributedObjects"; }
  
  public Object[] getParameters() { return null; }
}
