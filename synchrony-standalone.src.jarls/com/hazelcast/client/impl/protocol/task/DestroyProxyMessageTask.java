package com.hazelcast.client.impl.protocol.task;

import com.hazelcast.client.impl.protocol.ClientMessage;
import com.hazelcast.client.impl.protocol.codec.ClientDestroyProxyCodec;
import com.hazelcast.instance.Node;
import com.hazelcast.nio.Connection;
import com.hazelcast.security.permission.ActionConstants;
import com.hazelcast.spi.impl.proxyservice.InternalProxyService;
import java.security.Permission;

public class DestroyProxyMessageTask extends AbstractCallableMessageTask<ClientDestroyProxyCodec.RequestParameters> implements BlockingMessageTask {
  public DestroyProxyMessageTask(ClientMessage clientMessage, Node node, Connection connection) { super(clientMessage, node, connection); }
  
  protected Object call() throws Exception {
    InternalProxyService internalProxyService = this.nodeEngine.getProxyService();
    internalProxyService.destroyDistributedObject(((ClientDestroyProxyCodec.RequestParameters)this.parameters).serviceName, ((ClientDestroyProxyCodec.RequestParameters)this.parameters).name);
    return null;
  }
  
  protected ClientDestroyProxyCodec.RequestParameters decodeClientMessage(ClientMessage clientMessage) { return ClientDestroyProxyCodec.decodeRequest(clientMessage); }
  
  protected ClientMessage encodeResponse(Object response) { return ClientDestroyProxyCodec.encodeResponse(); }
  
  public String getServiceName() { return ((ClientDestroyProxyCodec.RequestParameters)this.parameters).serviceName; }
  
  public Permission getRequiredPermission() { return ActionConstants.getPermission(((ClientDestroyProxyCodec.RequestParameters)this.parameters).name, ((ClientDestroyProxyCodec.RequestParameters)this.parameters).serviceName, new String[] { "destroy" }); }
  
  public String getDistributedObjectName() { return ((ClientDestroyProxyCodec.RequestParameters)this.parameters).name; }
  
  public String getMethodName() { return null; }
  
  public Object[] getParameters() { return null; }
}
