package com.hazelcast.client.impl.protocol.task.cache;

import com.hazelcast.client.impl.protocol.ClientMessage;
import com.hazelcast.client.impl.protocol.codec.CacheAssignAndGetUuidsCodec;
import com.hazelcast.instance.Node;
import com.hazelcast.nio.Connection;
import com.hazelcast.spi.OperationFactory;
import java.security.Permission;
import java.util.Map;

public class CacheAssignAndGetUuidsMessageTask extends AbstractCacheAllPartitionsTask<CacheAssignAndGetUuidsCodec.RequestParameters> {
  public CacheAssignAndGetUuidsMessageTask(ClientMessage clientMessage, Node node, Connection connection) { super(clientMessage, node, connection); }
  
  protected CacheAssignAndGetUuidsCodec.RequestParameters decodeClientMessage(ClientMessage clientMessage) { return CacheAssignAndGetUuidsCodec.decodeRequest(clientMessage); }
  
  protected ClientMessage encodeResponse(Object response) { return CacheAssignAndGetUuidsCodec.encodeResponse(((Map)response).entrySet()); }
  
  public String getServiceName() { return "hz:impl:cacheService"; }
  
  public String getDistributedObjectName() { return null; }
  
  public String getMethodName() { return null; }
  
  public Object[] getParameters() { return new Object[0]; }
  
  protected OperationFactory createOperationFactory() { return new CacheAssignAndGetUuidsOperationFactory(); }
  
  protected Object reduce(Map<Integer, Object> map) { return map; }
  
  public Permission getRequiredPermission() { return null; }
}
