package com.hazelcast.client.impl.protocol.task.cache;

import com.hazelcast.cache.impl.CacheOperationProvider;
import com.hazelcast.client.impl.protocol.ClientMessage;
import com.hazelcast.client.impl.protocol.codec.CachePutAllCodec;
import com.hazelcast.instance.Node;
import com.hazelcast.nio.Connection;
import com.hazelcast.security.permission.CachePermission;
import com.hazelcast.spi.Operation;
import java.security.Permission;
import javax.cache.expiry.ExpiryPolicy;

public class CachePutAllMessageTask extends AbstractCacheMessageTask<CachePutAllCodec.RequestParameters> {
  public CachePutAllMessageTask(ClientMessage clientMessage, Node node, Connection connection) { super(clientMessage, node, connection); }
  
  protected Operation prepareOperation() {
    CacheOperationProvider operationProvider = getOperationProvider(((CachePutAllCodec.RequestParameters)this.parameters).name);
    ExpiryPolicy expiryPolicy = (ExpiryPolicy)this.nodeEngine.toObject(((CachePutAllCodec.RequestParameters)this.parameters).expiryPolicy);
    return operationProvider
      .createPutAllOperation(((CachePutAllCodec.RequestParameters)this.parameters).entries, expiryPolicy, ((CachePutAllCodec.RequestParameters)this.parameters).completionId);
  }
  
  protected CachePutAllCodec.RequestParameters decodeClientMessage(ClientMessage clientMessage) { return CachePutAllCodec.decodeRequest(clientMessage); }
  
  protected ClientMessage encodeResponse(Object response) { return CachePutAllCodec.encodeResponse(); }
  
  public Permission getRequiredPermission() { return new CachePermission(((CachePutAllCodec.RequestParameters)this.parameters).name, new String[] { "put" }); }
  
  public String getDistributedObjectName() { return ((CachePutAllCodec.RequestParameters)this.parameters).name; }
  
  public Object[] getParameters() {
    if (((CachePutAllCodec.RequestParameters)this.parameters).expiryPolicy == null)
      return new Object[] { ((CachePutAllCodec.RequestParameters)this.parameters).entries }; 
    return new Object[] { ((CachePutAllCodec.RequestParameters)this.parameters).entries, ((CachePutAllCodec.RequestParameters)this.parameters).expiryPolicy };
  }
  
  public String getMethodName() { return "putAll"; }
}
