package com.hazelcast.client.impl.protocol.task.map;

import com.hazelcast.client.impl.protocol.ClientMessage;
import com.hazelcast.client.impl.protocol.codec.MapFetchEntriesCodec;
import com.hazelcast.instance.Node;
import com.hazelcast.map.impl.iterator.MapEntriesWithCursor;
import com.hazelcast.map.impl.operation.MapOperationProvider;
import com.hazelcast.nio.Connection;
import com.hazelcast.spi.Operation;
import java.security.Permission;
import java.util.Collections;

public class MapFetchEntriesMessageTask extends AbstractMapPartitionMessageTask<MapFetchEntriesCodec.RequestParameters> {
  public MapFetchEntriesMessageTask(ClientMessage clientMessage, Node node, Connection connection) { super(clientMessage, node, connection); }
  
  protected Operation prepareOperation() {
    MapOperationProvider operationProvider = getMapOperationProvider(((MapFetchEntriesCodec.RequestParameters)this.parameters).name);
    return operationProvider.createFetchEntriesOperation(((MapFetchEntriesCodec.RequestParameters)this.parameters).name, ((MapFetchEntriesCodec.RequestParameters)this.parameters).tableIndex, ((MapFetchEntriesCodec.RequestParameters)this.parameters).batch);
  }
  
  protected MapFetchEntriesCodec.RequestParameters decodeClientMessage(ClientMessage clientMessage) { return MapFetchEntriesCodec.decodeRequest(clientMessage); }
  
  protected ClientMessage encodeResponse(Object response) {
    if (response == null)
      return MapFetchEntriesCodec.encodeResponse(0, Collections.emptyList()); 
    MapEntriesWithCursor mapEntriesWithCursor = (MapEntriesWithCursor)response;
    return MapFetchEntriesCodec.encodeResponse(mapEntriesWithCursor.getNextTableIndexToReadFrom(), mapEntriesWithCursor
        .getBatch());
  }
  
  public String getServiceName() { return "hz:impl:mapService"; }
  
  public Permission getRequiredPermission() { return null; }
  
  public String getDistributedObjectName() { return ((MapFetchEntriesCodec.RequestParameters)this.parameters).name; }
  
  public String getMethodName() { return "iterator"; }
  
  public Object[] getParameters() { return new Object[0]; }
}
