package com.hazelcast.client.impl.protocol.task.map;

import com.hazelcast.client.impl.protocol.ClientMessage;
import com.hazelcast.client.impl.protocol.codec.MapGetEntryViewCodec;
import com.hazelcast.instance.Node;
import com.hazelcast.map.impl.SimpleEntryView;
import com.hazelcast.map.impl.operation.MapOperation;
import com.hazelcast.map.impl.operation.MapOperationProvider;
import com.hazelcast.nio.Connection;
import com.hazelcast.nio.serialization.Data;
import com.hazelcast.security.permission.MapPermission;
import com.hazelcast.spi.Operation;
import java.security.Permission;

public class MapGetEntryViewMessageTask extends AbstractMapPartitionMessageTask<MapGetEntryViewCodec.RequestParameters> {
  public MapGetEntryViewMessageTask(ClientMessage clientMessage, Node node, Connection connection) { super(clientMessage, node, connection); }
  
  protected Operation prepareOperation() {
    MapOperationProvider operationProvider = getMapOperationProvider(((MapGetEntryViewCodec.RequestParameters)this.parameters).name);
    MapOperation op = operationProvider.createGetEntryViewOperation(((MapGetEntryViewCodec.RequestParameters)this.parameters).name, ((MapGetEntryViewCodec.RequestParameters)this.parameters).key);
    op.setThreadId(((MapGetEntryViewCodec.RequestParameters)this.parameters).threadId);
    return op;
  }
  
  protected MapGetEntryViewCodec.RequestParameters decodeClientMessage(ClientMessage clientMessage) { return MapGetEntryViewCodec.decodeRequest(clientMessage); }
  
  protected ClientMessage encodeResponse(Object response) {
    SimpleEntryView<Data, Data> dataEntryView = (SimpleEntryView)response;
    return MapGetEntryViewCodec.encodeResponse(dataEntryView, (dataEntryView != null) ? dataEntryView.getMaxIdle().longValue() : 0L);
  }
  
  public Permission getRequiredPermission() { return new MapPermission(((MapGetEntryViewCodec.RequestParameters)this.parameters).name, new String[] { "read" }); }
  
  public String getServiceName() { return "hz:impl:mapService"; }
  
  public String getDistributedObjectName() { return ((MapGetEntryViewCodec.RequestParameters)this.parameters).name; }
  
  public String getMethodName() { return "getEntryView"; }
  
  public Object[] getParameters() { return new Object[] { ((MapGetEntryViewCodec.RequestParameters)this.parameters).key }; }
}
