package com.hazelcast.client.impl.protocol.task.map;

import com.hazelcast.client.impl.protocol.ClientMessage;
import com.hazelcast.client.impl.protocol.codec.MapProjectCodec;
import com.hazelcast.client.impl.protocol.codec.MapProjectWithPredicateCodec;
import com.hazelcast.instance.Node;
import com.hazelcast.nio.Connection;
import com.hazelcast.projection.Projection;
import com.hazelcast.security.permission.MapPermission;
import java.security.Permission;
import java.util.List;

public class MapProjectionMessageTask extends DefaultMapProjectMessageTask<MapProjectCodec.RequestParameters> {
  public MapProjectionMessageTask(ClientMessage clientMessage, Node node, Connection connection) { super(clientMessage, node, connection); }
  
  protected Projection<?, ?> getProjection() { return (Projection)this.nodeEngine.getSerializationService().toObject(((MapProjectCodec.RequestParameters)this.parameters).projection); }
  
  protected MapProjectCodec.RequestParameters decodeClientMessage(ClientMessage clientMessage) { return MapProjectCodec.decodeRequest(clientMessage); }
  
  protected ClientMessage encodeResponse(Object response) { return MapProjectWithPredicateCodec.encodeResponse((List)response); }
  
  public Permission getRequiredPermission() { return new MapPermission(((MapProjectCodec.RequestParameters)this.parameters).name, new String[] { "projection" }); }
  
  public String getDistributedObjectName() { return ((MapProjectCodec.RequestParameters)this.parameters).name; }
  
  public String getMethodName() { return "project"; }
  
  public Object[] getParameters() { return new Object[] { ((MapProjectCodec.RequestParameters)this.parameters).name, ((MapProjectCodec.RequestParameters)this.parameters).projection }; }
}
