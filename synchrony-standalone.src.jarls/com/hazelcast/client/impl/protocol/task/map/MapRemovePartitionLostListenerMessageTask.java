package com.hazelcast.client.impl.protocol.task.map;

import com.hazelcast.client.impl.protocol.ClientMessage;
import com.hazelcast.client.impl.protocol.codec.MapRemovePartitionLostListenerCodec;
import com.hazelcast.client.impl.protocol.task.AbstractRemoveListenerMessageTask;
import com.hazelcast.instance.Node;
import com.hazelcast.map.impl.MapService;
import com.hazelcast.nio.Connection;
import java.security.Permission;

public class MapRemovePartitionLostListenerMessageTask extends AbstractRemoveListenerMessageTask<MapRemovePartitionLostListenerCodec.RequestParameters> {
  public MapRemovePartitionLostListenerMessageTask(ClientMessage clientMessage, Node node, Connection connection) { super(clientMessage, node, connection); }
  
  protected boolean deRegisterListener() {
    MapService mapService = (MapService)getService("hz:impl:mapService");
    return mapService.getMapServiceContext().removePartitionLostListener(((MapRemovePartitionLostListenerCodec.RequestParameters)this.parameters).name, ((MapRemovePartitionLostListenerCodec.RequestParameters)this.parameters).registrationId);
  }
  
  protected String getRegistrationId() { return ((MapRemovePartitionLostListenerCodec.RequestParameters)this.parameters).registrationId; }
  
  protected MapRemovePartitionLostListenerCodec.RequestParameters decodeClientMessage(ClientMessage clientMessage) { return MapRemovePartitionLostListenerCodec.decodeRequest(clientMessage); }
  
  protected ClientMessage encodeResponse(Object response) { return MapRemovePartitionLostListenerCodec.encodeResponse(((Boolean)response).booleanValue()); }
  
  public String getServiceName() { return "hz:impl:mapService"; }
  
  public String getDistributedObjectName() { return ((MapRemovePartitionLostListenerCodec.RequestParameters)this.parameters).name; }
  
  public Permission getRequiredPermission() { return null; }
  
  public String getMethodName() { return "removePartitionLostListener"; }
}
