package com.hazelcast.client.impl.protocol.task.map;

import com.hazelcast.client.impl.protocol.ClientMessage;
import com.hazelcast.client.impl.protocol.codec.MapAssignAndGetUuidsCodec;
import com.hazelcast.instance.Node;
import com.hazelcast.nio.Connection;
import com.hazelcast.spi.OperationFactory;
import java.security.Permission;
import java.util.Map;

public class MapAssignAndGetUuidsMessageTask extends AbstractMapAllPartitionsMessageTask<MapAssignAndGetUuidsCodec.RequestParameters> {
  public MapAssignAndGetUuidsMessageTask(ClientMessage clientMessage, Node node, Connection connection) { super(clientMessage, node, connection); }
  
  protected MapAssignAndGetUuidsCodec.RequestParameters decodeClientMessage(ClientMessage clientMessage) { return MapAssignAndGetUuidsCodec.decodeRequest(clientMessage); }
  
  protected ClientMessage encodeResponse(Object response) { return MapAssignAndGetUuidsCodec.encodeResponse(((Map)response).entrySet()); }
  
  public String getServiceName() { return "hz:impl:mapService"; }
  
  public String getDistributedObjectName() { return null; }
  
  public String getMethodName() { return null; }
  
  public Object[] getParameters() { return new Object[0]; }
  
  protected OperationFactory createOperationFactory() { return new MapAssignAndGetUuidsOperationFactory(); }
  
  protected Object reduce(Map<Integer, Object> map) { return map; }
  
  public Permission getRequiredPermission() { return null; }
}
