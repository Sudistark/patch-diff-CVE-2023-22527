package com.hazelcast.client.impl.protocol.task.map;

import com.hazelcast.client.impl.ClientEndpoint;
import com.hazelcast.client.impl.protocol.ClientMessage;
import com.hazelcast.client.impl.protocol.codec.MapAddPartitionLostListenerCodec;
import com.hazelcast.client.impl.protocol.task.AbstractCallableMessageTask;
import com.hazelcast.client.impl.protocol.task.ListenerMessageTask;
import com.hazelcast.instance.Node;
import com.hazelcast.map.impl.MapService;
import com.hazelcast.map.impl.MapServiceContext;
import com.hazelcast.nio.Connection;
import com.hazelcast.security.permission.MapPermission;
import java.security.Permission;

public class MapAddPartitionLostListenerMessageTask extends AbstractCallableMessageTask<MapAddPartitionLostListenerCodec.RequestParameters> implements ListenerMessageTask {
  public MapAddPartitionLostListenerMessageTask(ClientMessage clientMessage, Node node, Connection connection) { super(clientMessage, node, connection); }
  
  protected Object call() {
    String registrationId;
    MapService mapService = (MapService)getService("hz:impl:mapService");
    Object object = new Object(this);
    MapServiceContext mapServiceContext = mapService.getMapServiceContext();
    if (((MapAddPartitionLostListenerCodec.RequestParameters)this.parameters).localOnly) {
      registrationId = mapServiceContext.addLocalPartitionLostListener(object, ((MapAddPartitionLostListenerCodec.RequestParameters)this.parameters).name);
    } else {
      registrationId = mapServiceContext.addPartitionLostListener(object, ((MapAddPartitionLostListenerCodec.RequestParameters)this.parameters).name);
    } 
    this.endpoint.addListenerDestroyAction("hz:impl:mapService", ((MapAddPartitionLostListenerCodec.RequestParameters)this.parameters).name, registrationId);
    return registrationId;
  }
  
  protected MapAddPartitionLostListenerCodec.RequestParameters decodeClientMessage(ClientMessage clientMessage) { return MapAddPartitionLostListenerCodec.decodeRequest(clientMessage); }
  
  protected ClientMessage encodeResponse(Object response) { return MapAddPartitionLostListenerCodec.encodeResponse((String)response); }
  
  public String getServiceName() { return "hz:impl:mapService"; }
  
  public String getMethodName() { return "addPartitionLostListener"; }
  
  public Object[] getParameters() { return new Object[] { null }; }
  
  public Permission getRequiredPermission() { return new MapPermission(((MapAddPartitionLostListenerCodec.RequestParameters)this.parameters).name, new String[] { "listen" }); }
  
  public String getDistributedObjectName() { return ((MapAddPartitionLostListenerCodec.RequestParameters)this.parameters).name; }
}
