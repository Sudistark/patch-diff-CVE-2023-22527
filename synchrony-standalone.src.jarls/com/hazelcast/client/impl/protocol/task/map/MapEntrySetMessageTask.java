package com.hazelcast.client.impl.protocol.task.map;

import com.hazelcast.client.impl.protocol.ClientMessage;
import com.hazelcast.client.impl.protocol.codec.MapEntrySetCodec;
import com.hazelcast.instance.Node;
import com.hazelcast.map.impl.LocalMapStatsUtil;
import com.hazelcast.map.impl.MapService;
import com.hazelcast.map.impl.query.QueryResultRow;
import com.hazelcast.nio.Connection;
import com.hazelcast.nio.serialization.Data;
import com.hazelcast.query.Predicate;
import com.hazelcast.query.TruePredicate;
import com.hazelcast.security.permission.MapPermission;
import com.hazelcast.util.IterationType;
import java.security.Permission;
import java.util.ArrayList;
import java.util.Collection;
import java.util.List;
import java.util.Map;

public class MapEntrySetMessageTask extends DefaultMapQueryMessageTask<MapEntrySetCodec.RequestParameters> {
  public MapEntrySetMessageTask(ClientMessage clientMessage, Node node, Connection connection) { super(clientMessage, node, connection); }
  
  protected Object reduce(Collection<QueryResultRow> result) {
    List<Map.Entry<Data, Data>> entries = new ArrayList<Map.Entry<Data, Data>>(result.size());
    for (QueryResultRow row : result)
      entries.add(row); 
    LocalMapStatsUtil.incrementOtherOperationsCount((MapService)getService("hz:impl:mapService"), ((MapEntrySetCodec.RequestParameters)this.parameters).name);
    return entries;
  }
  
  protected Predicate getPredicate() { return TruePredicate.INSTANCE; }
  
  protected IterationType getIterationType() { return IterationType.ENTRY; }
  
  protected MapEntrySetCodec.RequestParameters decodeClientMessage(ClientMessage clientMessage) { return MapEntrySetCodec.decodeRequest(clientMessage); }
  
  protected ClientMessage encodeResponse(Object response) { return MapEntrySetCodec.encodeResponse((List)response); }
  
  public Permission getRequiredPermission() { return new MapPermission(((MapEntrySetCodec.RequestParameters)this.parameters).name, new String[] { "read" }); }
  
  public String getDistributedObjectName() { return ((MapEntrySetCodec.RequestParameters)this.parameters).name; }
  
  public String getMethodName() { return "entrySet"; }
  
  public Object[] getParameters() { return null; }
}
