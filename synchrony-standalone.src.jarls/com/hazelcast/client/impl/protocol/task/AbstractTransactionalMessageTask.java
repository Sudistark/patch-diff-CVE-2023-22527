package com.hazelcast.client.impl.protocol.task;

import com.hazelcast.client.impl.protocol.ClientMessage;
import com.hazelcast.instance.Node;
import com.hazelcast.nio.Connection;
import com.hazelcast.util.ThreadUtil;

public abstract class AbstractTransactionalMessageTask<P> extends AbstractCallableMessageTask<P> implements TransactionalMessageTask {
  public AbstractTransactionalMessageTask(ClientMessage clientMessage, Node node, Connection connection) { super(clientMessage, node, connection); }
  
  protected final Object call() throws Exception {
    ThreadUtil.setThreadId(getClientThreadId());
    try {
      return innerCall();
    } finally {
      ThreadUtil.removeThreadId();
    } 
  }
  
  protected abstract Object innerCall() throws Exception;
  
  protected abstract long getClientThreadId();
}
