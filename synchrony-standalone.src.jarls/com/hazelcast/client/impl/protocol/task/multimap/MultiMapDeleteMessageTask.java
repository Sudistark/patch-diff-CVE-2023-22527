package com.hazelcast.client.impl.protocol.task.multimap;

import com.hazelcast.client.impl.protocol.ClientMessage;
import com.hazelcast.client.impl.protocol.codec.MultiMapDeleteCodec;
import com.hazelcast.client.impl.protocol.task.AbstractPartitionMessageTask;
import com.hazelcast.instance.Node;
import com.hazelcast.multimap.impl.operations.DeleteOperation;
import com.hazelcast.nio.Connection;
import com.hazelcast.security.permission.MultiMapPermission;
import com.hazelcast.spi.Operation;
import java.security.Permission;

public class MultiMapDeleteMessageTask extends AbstractPartitionMessageTask<MultiMapDeleteCodec.RequestParameters> {
  public MultiMapDeleteMessageTask(ClientMessage clientMessage, Node node, Connection connection) { super(clientMessage, node, connection); }
  
  protected Operation prepareOperation() { return new DeleteOperation(((MultiMapDeleteCodec.RequestParameters)this.parameters).name, ((MultiMapDeleteCodec.RequestParameters)this.parameters).key, ((MultiMapDeleteCodec.RequestParameters)this.parameters).threadId); }
  
  protected MultiMapDeleteCodec.RequestParameters decodeClientMessage(ClientMessage clientMessage) { return MultiMapDeleteCodec.decodeRequest(clientMessage); }
  
  protected ClientMessage encodeResponse(Object response) { return MultiMapDeleteCodec.encodeResponse(); }
  
  public String getServiceName() { return "hz:impl:multiMapService"; }
  
  public String getDistributedObjectName() { return ((MultiMapDeleteCodec.RequestParameters)this.parameters).name; }
  
  public Permission getRequiredPermission() { return new MultiMapPermission(((MultiMapDeleteCodec.RequestParameters)this.parameters).name, new String[] { "remove" }); }
  
  public String getMethodName() { return "delete"; }
  
  public Object[] getParameters() { return new Object[] { ((MultiMapDeleteCodec.RequestParameters)this.parameters).key }; }
}
