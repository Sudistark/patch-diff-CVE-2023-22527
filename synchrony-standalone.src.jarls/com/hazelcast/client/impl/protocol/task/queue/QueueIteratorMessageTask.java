package com.hazelcast.client.impl.protocol.task.queue;

import com.hazelcast.client.impl.protocol.ClientMessage;
import com.hazelcast.client.impl.protocol.codec.QueueIteratorCodec;
import com.hazelcast.client.impl.protocol.task.AbstractPartitionMessageTask;
import com.hazelcast.collection.impl.queue.operations.IteratorOperation;
import com.hazelcast.instance.Node;
import com.hazelcast.nio.Connection;
import com.hazelcast.nio.serialization.Data;
import com.hazelcast.security.permission.QueuePermission;
import com.hazelcast.spi.Operation;
import com.hazelcast.spi.impl.SerializableList;
import java.security.Permission;
import java.util.List;

public class QueueIteratorMessageTask extends AbstractPartitionMessageTask<QueueIteratorCodec.RequestParameters> {
  public QueueIteratorMessageTask(ClientMessage clientMessage, Node node, Connection connection) { super(clientMessage, node, connection); }
  
  protected Operation prepareOperation() { return new IteratorOperation(((QueueIteratorCodec.RequestParameters)this.parameters).name); }
  
  protected QueueIteratorCodec.RequestParameters decodeClientMessage(ClientMessage clientMessage) { return QueueIteratorCodec.decodeRequest(clientMessage); }
  
  public Permission getRequiredPermission() { return new QueuePermission(((QueueIteratorCodec.RequestParameters)this.parameters).name, new String[] { "read" }); }
  
  public String getMethodName() { return "iterator"; }
  
  protected ClientMessage encodeResponse(Object response) {
    SerializableList serializableList = (SerializableList)response;
    List<Data> coll = serializableList.getCollection();
    return QueueIteratorCodec.encodeResponse(coll);
  }
  
  public String getServiceName() { return "hz:impl:queueService"; }
  
  public Object[] getParameters() { return null; }
  
  public String getDistributedObjectName() { return ((QueueIteratorCodec.RequestParameters)this.parameters).name; }
}
