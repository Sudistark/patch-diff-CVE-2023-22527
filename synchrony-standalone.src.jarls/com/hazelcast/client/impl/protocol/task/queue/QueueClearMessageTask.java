package com.hazelcast.client.impl.protocol.task.queue;

import com.hazelcast.client.impl.protocol.ClientMessage;
import com.hazelcast.client.impl.protocol.codec.QueueClearCodec;
import com.hazelcast.client.impl.protocol.task.AbstractPartitionMessageTask;
import com.hazelcast.collection.impl.queue.operations.ClearOperation;
import com.hazelcast.instance.Node;
import com.hazelcast.nio.Connection;
import com.hazelcast.security.permission.QueuePermission;
import com.hazelcast.spi.Operation;
import java.security.Permission;

public class QueueClearMessageTask extends AbstractPartitionMessageTask<QueueClearCodec.RequestParameters> {
  public QueueClearMessageTask(ClientMessage clientMessage, Node node, Connection connection) { super(clientMessage, node, connection); }
  
  protected Operation prepareOperation() { return new ClearOperation(((QueueClearCodec.RequestParameters)this.parameters).name); }
  
  protected QueueClearCodec.RequestParameters decodeClientMessage(ClientMessage clientMessage) { return QueueClearCodec.decodeRequest(clientMessage); }
  
  protected ClientMessage encodeResponse(Object response) { return QueueClearCodec.encodeResponse(); }
  
  public Permission getRequiredPermission() { return new QueuePermission(((QueueClearCodec.RequestParameters)this.parameters).name, new String[] { "remove" }); }
  
  public String getMethodName() { return "clear"; }
  
  public String getServiceName() { return "hz:impl:queueService"; }
  
  public Object[] getParameters() { return null; }
  
  public String getDistributedObjectName() { return ((QueueClearCodec.RequestParameters)this.parameters).name; }
}
