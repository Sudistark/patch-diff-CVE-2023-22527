package com.hazelcast.client.impl.protocol.task.lock;

import com.hazelcast.client.impl.protocol.ClientMessage;
import com.hazelcast.client.impl.protocol.codec.LockGetLockCountCodec;
import com.hazelcast.client.impl.protocol.task.AbstractPartitionMessageTask;
import com.hazelcast.concurrent.lock.InternalLockNamespace;
import com.hazelcast.concurrent.lock.operations.GetLockCountOperation;
import com.hazelcast.instance.Node;
import com.hazelcast.nio.Connection;
import com.hazelcast.nio.serialization.Data;
import com.hazelcast.partition.strategy.StringPartitioningStrategy;
import com.hazelcast.security.permission.LockPermission;
import com.hazelcast.spi.Operation;
import java.security.Permission;

public class LockGetLockCountMessageTask extends AbstractPartitionMessageTask<LockGetLockCountCodec.RequestParameters> {
  public LockGetLockCountMessageTask(ClientMessage clientMessage, Node node, Connection connection) { super(clientMessage, node, connection); }
  
  protected Operation prepareOperation() {
    Data key = this.serializationService.toData(((LockGetLockCountCodec.RequestParameters)this.parameters).name, StringPartitioningStrategy.INSTANCE);
    return new GetLockCountOperation(new InternalLockNamespace(((LockGetLockCountCodec.RequestParameters)this.parameters).name), key);
  }
  
  protected LockGetLockCountCodec.RequestParameters decodeClientMessage(ClientMessage clientMessage) { return LockGetLockCountCodec.decodeRequest(clientMessage); }
  
  protected ClientMessage encodeResponse(Object response) { return LockGetLockCountCodec.encodeResponse(((Integer)response).intValue()); }
  
  public String getServiceName() { return "hz:impl:lockService"; }
  
  public Permission getRequiredPermission() { return new LockPermission(((LockGetLockCountCodec.RequestParameters)this.parameters).name, new String[] { "read" }); }
  
  public String getDistributedObjectName() { return ((LockGetLockCountCodec.RequestParameters)this.parameters).name; }
  
  public String getMethodName() { return "getLockCount"; }
  
  public Object[] getParameters() { return null; }
}
