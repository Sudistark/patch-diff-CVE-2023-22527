package com.hazelcast.client.impl.protocol.task.replicatedmap;

import com.hazelcast.client.impl.protocol.ClientMessage;
import com.hazelcast.client.impl.protocol.codec.ReplicatedMapGetCodec;
import com.hazelcast.client.impl.protocol.task.AbstractPartitionMessageTask;
import com.hazelcast.instance.Node;
import com.hazelcast.nio.Connection;
import com.hazelcast.replicatedmap.impl.ReplicatedMapService;
import com.hazelcast.replicatedmap.impl.operation.GetOperation;
import com.hazelcast.security.permission.ReplicatedMapPermission;
import com.hazelcast.spi.Operation;
import java.security.Permission;

public class ReplicatedMapGetMessageTask extends AbstractPartitionMessageTask<ReplicatedMapGetCodec.RequestParameters> {
  public ReplicatedMapGetMessageTask(ClientMessage clientMessage, Node node, Connection connection) { super(clientMessage, node, connection); }
  
  protected Operation prepareOperation() { return new GetOperation(((ReplicatedMapGetCodec.RequestParameters)this.parameters).name, ((ReplicatedMapGetCodec.RequestParameters)this.parameters).key); }
  
  protected ReplicatedMapGetCodec.RequestParameters decodeClientMessage(ClientMessage clientMessage) { return ReplicatedMapGetCodec.decodeRequest(clientMessage); }
  
  protected void beforeProcess() { this.startTimeNanos = System.nanoTime(); }
  
  protected void beforeResponse() {
    long latencyNanos = System.nanoTime() - this.startTimeNanos;
    ReplicatedMapService replicatedMapService = (ReplicatedMapService)getService("hz:impl:replicatedMapService");
    if (replicatedMapService.getReplicatedMapConfig(((ReplicatedMapGetCodec.RequestParameters)this.parameters).name).isStatisticsEnabled())
      replicatedMapService.getLocalMapStatsImpl(((ReplicatedMapGetCodec.RequestParameters)this.parameters).name).incrementGets(latencyNanos); 
  }
  
  protected ClientMessage encodeResponse(Object response) { return ReplicatedMapGetCodec.encodeResponse(this.serializationService.toData(response)); }
  
  public String getServiceName() { return "hz:impl:replicatedMapService"; }
  
  public String getDistributedObjectName() { return ((ReplicatedMapGetCodec.RequestParameters)this.parameters).name; }
  
  public String getMethodName() { return "get"; }
  
  public Permission getRequiredPermission() { return new ReplicatedMapPermission(((ReplicatedMapGetCodec.RequestParameters)this.parameters).name, new String[] { "read" }); }
  
  public Object[] getParameters() { return new Object[] { ((ReplicatedMapGetCodec.RequestParameters)this.parameters).key }; }
}
