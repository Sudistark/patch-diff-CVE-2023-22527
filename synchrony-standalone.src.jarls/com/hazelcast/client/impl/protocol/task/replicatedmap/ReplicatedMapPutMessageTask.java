package com.hazelcast.client.impl.protocol.task.replicatedmap;

import com.hazelcast.client.impl.protocol.ClientMessage;
import com.hazelcast.client.impl.protocol.codec.ReplicatedMapPutCodec;
import com.hazelcast.client.impl.protocol.task.AbstractPartitionMessageTask;
import com.hazelcast.instance.Node;
import com.hazelcast.nio.Connection;
import com.hazelcast.replicatedmap.impl.operation.PutOperation;
import com.hazelcast.replicatedmap.impl.operation.VersionResponsePair;
import com.hazelcast.security.permission.ReplicatedMapPermission;
import com.hazelcast.spi.Operation;
import java.security.Permission;
import java.util.concurrent.TimeUnit;

public class ReplicatedMapPutMessageTask extends AbstractPartitionMessageTask<ReplicatedMapPutCodec.RequestParameters> {
  public ReplicatedMapPutMessageTask(ClientMessage clientMessage, Node node, Connection connection) { super(clientMessage, node, connection); }
  
  protected Operation prepareOperation() { return new PutOperation(((ReplicatedMapPutCodec.RequestParameters)this.parameters).name, ((ReplicatedMapPutCodec.RequestParameters)this.parameters).key, ((ReplicatedMapPutCodec.RequestParameters)this.parameters).value, ((ReplicatedMapPutCodec.RequestParameters)this.parameters).ttl); }
  
  protected ReplicatedMapPutCodec.RequestParameters decodeClientMessage(ClientMessage clientMessage) { return ReplicatedMapPutCodec.decodeRequest(clientMessage); }
  
  protected ClientMessage encodeResponse(Object response) {
    VersionResponsePair versionResponsePair = (VersionResponsePair)response;
    return ReplicatedMapPutCodec.encodeResponse(this.serializationService.toData(versionResponsePair.getResponse()));
  }
  
  public String getServiceName() { return "hz:impl:replicatedMapService"; }
  
  public String getDistributedObjectName() { return ((ReplicatedMapPutCodec.RequestParameters)this.parameters).name; }
  
  public String getMethodName() { return "put"; }
  
  public Permission getRequiredPermission() { return new ReplicatedMapPermission(((ReplicatedMapPutCodec.RequestParameters)this.parameters).name, new String[] { "put" }); }
  
  public Object[] getParameters() {
    if (((ReplicatedMapPutCodec.RequestParameters)this.parameters).ttl > 0L)
      return new Object[] { ((ReplicatedMapPutCodec.RequestParameters)this.parameters).key, ((ReplicatedMapPutCodec.RequestParameters)this.parameters).value, Long.valueOf(((ReplicatedMapPutCodec.RequestParameters)this.parameters).ttl), TimeUnit.MILLISECONDS }; 
    return new Object[] { ((ReplicatedMapPutCodec.RequestParameters)this.parameters).key, ((ReplicatedMapPutCodec.RequestParameters)this.parameters).value };
  }
}
