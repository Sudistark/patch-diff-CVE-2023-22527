package com.hazelcast.client.impl.protocol.task.replicatedmap;

import com.hazelcast.client.impl.protocol.ClientMessage;
import com.hazelcast.client.impl.protocol.codec.ReplicatedMapIsEmptyCodec;
import com.hazelcast.client.impl.protocol.task.AbstractPartitionMessageTask;
import com.hazelcast.instance.Node;
import com.hazelcast.nio.Connection;
import com.hazelcast.replicatedmap.impl.operation.IsEmptyOperation;
import com.hazelcast.security.permission.ReplicatedMapPermission;
import com.hazelcast.spi.Operation;
import java.security.Permission;

public class ReplicatedMapIsEmptyMessageTask extends AbstractPartitionMessageTask<ReplicatedMapIsEmptyCodec.RequestParameters> {
  public ReplicatedMapIsEmptyMessageTask(ClientMessage clientMessage, Node node, Connection connection) { super(clientMessage, node, connection); }
  
  protected Operation prepareOperation() { return new IsEmptyOperation(((ReplicatedMapIsEmptyCodec.RequestParameters)this.parameters).name); }
  
  protected ReplicatedMapIsEmptyCodec.RequestParameters decodeClientMessage(ClientMessage clientMessage) { return ReplicatedMapIsEmptyCodec.decodeRequest(clientMessage); }
  
  protected ClientMessage encodeResponse(Object response) { return ReplicatedMapIsEmptyCodec.encodeResponse(((Boolean)response).booleanValue()); }
  
  public String getServiceName() { return "hz:impl:replicatedMapService"; }
  
  public Permission getRequiredPermission() { return new ReplicatedMapPermission(((ReplicatedMapIsEmptyCodec.RequestParameters)this.parameters).name, new String[] { "read" }); }
  
  public String getDistributedObjectName() { return ((ReplicatedMapIsEmptyCodec.RequestParameters)this.parameters).name; }
  
  public String getMethodName() { return "isEmpty"; }
  
  public Object[] getParameters() { return null; }
}
