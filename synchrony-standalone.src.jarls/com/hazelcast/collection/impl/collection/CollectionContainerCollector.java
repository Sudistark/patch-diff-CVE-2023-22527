package com.hazelcast.collection.impl.collection;

import com.hazelcast.config.MergePolicyConfig;
import com.hazelcast.spi.NodeEngine;
import com.hazelcast.spi.impl.merge.AbstractNamedContainerCollector;
import java.util.Collection;
import java.util.concurrent.ConcurrentMap;

class CollectionContainerCollector extends AbstractNamedContainerCollector<CollectionContainer> {
  CollectionContainerCollector(NodeEngine nodeEngine, ConcurrentMap<String, CollectionContainer> containers) { super(nodeEngine, containers); }
  
  protected MergePolicyConfig getMergePolicyConfig(CollectionContainer container) { return container.getConfig().getMergePolicyConfig(); }
  
  protected void destroy(CollectionContainer container) { container.getCollection().clear(); }
  
  protected void destroyBackup(CollectionContainer container) { container.getMap().clear(); }
  
  protected int getMergingValueCount() {
    int size = 0;
    for (Collection<CollectionContainer> containers : getCollectedContainers().values()) {
      for (CollectionContainer container : containers)
        size += container.size(); 
    } 
    return size;
  }
}
