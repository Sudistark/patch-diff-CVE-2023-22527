package com.hazelcast.collection.impl.collection;

import com.hazelcast.nio.ObjectDataInput;
import com.hazelcast.nio.ObjectDataOutput;
import com.hazelcast.nio.serialization.IdentifiedDataSerializable;
import com.hazelcast.spi.EventFilter;
import java.io.IOException;

public class CollectionEventFilter implements EventFilter, IdentifiedDataSerializable {
  private boolean includeValue;
  
  public CollectionEventFilter() {}
  
  public CollectionEventFilter(boolean includeValue) { this.includeValue = includeValue; }
  
  public boolean isIncludeValue() { return this.includeValue; }
  
  public boolean eval(Object arg) { return false; }
  
  public boolean equals(Object o) {
    if (this == o)
      return true; 
    if (o == null || getClass() != o.getClass())
      return false; 
    CollectionEventFilter that = (CollectionEventFilter)o;
    if (this.includeValue != that.includeValue)
      return false; 
    return true;
  }
  
  public int hashCode() { return this.includeValue ? 1 : 0; }
  
  public int getFactoryId() { return CollectionDataSerializerHook.F_ID; }
  
  public int getId() { return 21; }
  
  public void writeData(ObjectDataOutput out) throws IOException { out.writeBoolean(this.includeValue); }
  
  public void readData(ObjectDataInput in) throws IOException { this.includeValue = in.readBoolean(); }
}
