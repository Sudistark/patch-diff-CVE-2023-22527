package com.hazelcast.collection.impl.collection.operations;

import com.hazelcast.collection.impl.collection.CollectionContainer;
import com.hazelcast.core.ItemEventType;
import com.hazelcast.nio.serialization.Data;
import com.hazelcast.spi.Operation;
import com.hazelcast.spi.impl.MutatingOperation;
import java.util.Map;

public class CollectionClearOperation extends CollectionBackupAwareOperation implements MutatingOperation {
  private Map<Long, Data> itemIdMap;
  
  public CollectionClearOperation() {}
  
  public CollectionClearOperation(String name) { super(name); }
  
  public boolean shouldBackup() { return (this.itemIdMap != null && !this.itemIdMap.isEmpty()); }
  
  public Operation getBackupOperation() { return new CollectionClearBackupOperation(this.name, this.itemIdMap.keySet()); }
  
  public void run() {
    CollectionContainer container = getOrCreateContainer();
    this.itemIdMap = container.clear(true);
  }
  
  public void afterRun() {
    for (Data value : this.itemIdMap.values())
      publishEvent(ItemEventType.REMOVED, value); 
  }
  
  public int getId() { return 8; }
}
