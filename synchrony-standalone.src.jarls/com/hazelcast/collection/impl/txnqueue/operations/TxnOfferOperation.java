package com.hazelcast.collection.impl.txnqueue.operations;

import com.hazelcast.collection.impl.queue.QueueContainer;
import com.hazelcast.core.ItemEventType;
import com.hazelcast.monitor.impl.LocalQueueStatsImpl;
import com.hazelcast.nio.ObjectDataInput;
import com.hazelcast.nio.ObjectDataOutput;
import com.hazelcast.nio.serialization.Data;
import com.hazelcast.spi.Notifier;
import com.hazelcast.spi.Operation;
import com.hazelcast.spi.WaitNotifyKey;
import com.hazelcast.spi.impl.MutatingOperation;
import java.io.IOException;

public class TxnOfferOperation extends BaseTxnQueueOperation implements Notifier, MutatingOperation {
  private Data data;
  
  public TxnOfferOperation() {}
  
  public TxnOfferOperation(String name, long itemId, Data data) {
    super(name, itemId);
    this.data = data;
  }
  
  public void run() {
    QueueContainer createContainer = getContainer();
    this.response = Boolean.valueOf(createContainer.txnCommitOffer(getItemId(), this.data, false));
  }
  
  public void afterRun() {
    LocalQueueStatsImpl queueStats = getQueueService().getLocalQueueStatsImpl(this.name);
    if (Boolean.TRUE.equals(this.response)) {
      queueStats.incrementOffers();
      publishEvent(ItemEventType.ADDED, this.data);
    } else {
      queueStats.incrementRejectedOffers();
    } 
  }
  
  public boolean shouldBackup() { return Boolean.TRUE.equals(this.response); }
  
  public Operation getBackupOperation() { return new TxnOfferBackupOperation(this.name, getItemId(), this.data); }
  
  public boolean shouldNotify() { return Boolean.TRUE.equals(this.response); }
  
  public WaitNotifyKey getNotifiedKey() { return getContainer().getPollWaitNotifyKey(); }
  
  public boolean isRemoveOperation() { return false; }
  
  public int getId() { return 24; }
  
  protected void writeInternal(ObjectDataOutput out) throws IOException {
    super.writeInternal(out);
    out.writeData(this.data);
  }
  
  protected void readInternal(ObjectDataInput in) throws IOException {
    super.readInternal(in);
    this.data = in.readData();
  }
}
