package com.hazelcast.collection.impl.txnqueue.operations;

import com.hazelcast.collection.impl.CollectionTxnUtil;
import com.hazelcast.collection.impl.queue.QueueContainer;
import com.hazelcast.collection.impl.queue.operations.QueueOperation;
import com.hazelcast.nio.ObjectDataInput;
import com.hazelcast.nio.ObjectDataOutput;
import com.hazelcast.spi.BackupOperation;
import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;
import java.io.IOException;

public class TxnPrepareBackupOperation extends QueueOperation implements BackupOperation {
  private long[] itemIds;
  
  private String transactionId;
  
  public TxnPrepareBackupOperation() {}
  
  @SuppressFBWarnings({"EI_EXPOSE_REP"})
  public TxnPrepareBackupOperation(String name, long[] itemIds, String transactionId) {
    super(name);
    this.itemIds = itemIds;
    this.transactionId = transactionId;
  }
  
  public void run() {
    QueueContainer queueContainer = getContainer();
    for (long itemId : this.itemIds) {
      boolean remove = CollectionTxnUtil.isRemove(itemId);
      queueContainer.txnEnsureBackupReserve(Math.abs(itemId), this.transactionId, remove);
    } 
  }
  
  public int getId() { return 27; }
  
  protected void writeInternal(ObjectDataOutput out) throws IOException {
    super.writeInternal(out);
    out.writeUTF(this.transactionId);
    out.writeLongArray(this.itemIds);
  }
  
  protected void readInternal(ObjectDataInput in) throws IOException {
    super.readInternal(in);
    this.transactionId = in.readUTF();
    this.itemIds = in.readLongArray();
  }
}
