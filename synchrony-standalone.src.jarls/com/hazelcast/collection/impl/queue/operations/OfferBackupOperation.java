package com.hazelcast.collection.impl.queue.operations;

import com.hazelcast.collection.impl.queue.QueueContainer;
import com.hazelcast.collection.impl.queue.QueueDataSerializerHook;
import com.hazelcast.nio.ObjectDataInput;
import com.hazelcast.nio.ObjectDataOutput;
import com.hazelcast.nio.serialization.Data;
import com.hazelcast.nio.serialization.IdentifiedDataSerializable;
import com.hazelcast.spi.BackupOperation;
import java.io.IOException;

public final class OfferBackupOperation extends QueueOperation implements BackupOperation, IdentifiedDataSerializable {
  private Data data;
  
  private long itemId;
  
  public OfferBackupOperation() {}
  
  public OfferBackupOperation(String name, Data data, long itemId) {
    super(name);
    this.data = data;
    this.itemId = itemId;
  }
  
  public void run() {
    QueueContainer queueContainer = getContainer();
    queueContainer.offerBackup(this.data, this.itemId);
    this.response = Boolean.valueOf(true);
  }
  
  public int getFactoryId() { return QueueDataSerializerHook.F_ID; }
  
  public int getId() { return 3; }
  
  protected void writeInternal(ObjectDataOutput out) throws IOException {
    super.writeInternal(out);
    out.writeData(this.data);
    out.writeLong(this.itemId);
  }
  
  protected void readInternal(ObjectDataInput in) throws IOException {
    super.readInternal(in);
    this.data = in.readData();
    this.itemId = in.readLong();
  }
}
