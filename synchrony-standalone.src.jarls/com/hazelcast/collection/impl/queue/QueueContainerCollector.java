package com.hazelcast.collection.impl.queue;

import com.hazelcast.config.MergePolicyConfig;
import com.hazelcast.spi.NodeEngine;
import com.hazelcast.spi.impl.merge.AbstractNamedContainerCollector;
import java.util.Collection;
import java.util.concurrent.ConcurrentMap;

class QueueContainerCollector extends AbstractNamedContainerCollector<QueueContainer> {
  QueueContainerCollector(NodeEngine nodeEngine, ConcurrentMap<String, QueueContainer> containers) { super(nodeEngine, containers); }
  
  protected MergePolicyConfig getMergePolicyConfig(QueueContainer container) { return container.getConfig().getMergePolicyConfig(); }
  
  protected void destroy(QueueContainer container) { container.getItemQueue().clear(); }
  
  protected void destroyBackup(QueueContainer container) { container.getBackupMap().clear(); }
  
  protected int getMergingValueCount() {
    int size = 0;
    for (Collection<QueueContainer> containers : getCollectedContainers().values()) {
      for (QueueContainer container : containers)
        size += container.size(); 
    } 
    return size;
  }
}
