package com.hazelcast.collection.impl.list.operations;

import com.hazelcast.collection.impl.collection.CollectionItem;
import com.hazelcast.collection.impl.collection.operations.CollectionBackupAwareOperation;
import com.hazelcast.collection.impl.list.ListContainer;
import com.hazelcast.core.ItemEventType;
import com.hazelcast.nio.ObjectDataInput;
import com.hazelcast.nio.ObjectDataOutput;
import com.hazelcast.nio.serialization.Data;
import com.hazelcast.spi.Operation;
import com.hazelcast.spi.impl.MutatingOperation;
import java.io.IOException;

public class ListSetOperation extends CollectionBackupAwareOperation implements MutatingOperation {
  private int index;
  
  private Data value;
  
  private long itemId = -1L;
  
  private long oldItemId = -1L;
  
  public ListSetOperation() {}
  
  public ListSetOperation(String name, int index, Data value) {
    super(name);
    this.index = index;
    this.value = value;
  }
  
  public boolean shouldBackup() { return true; }
  
  public Operation getBackupOperation() { return new ListSetBackupOperation(this.name, this.oldItemId, this.itemId, this.value); }
  
  public void run() {
    ListContainer listContainer = getOrCreateListContainer();
    this.itemId = listContainer.nextId();
    CollectionItem item = listContainer.set(this.index, this.itemId, this.value);
    this.oldItemId = item.getItemId();
    this.response = item.getValue();
  }
  
  public void afterRun() {
    publishEvent(ItemEventType.REMOVED, (Data)this.response);
    publishEvent(ItemEventType.ADDED, this.value);
  }
  
  public int getId() { return 10; }
  
  protected void writeInternal(ObjectDataOutput out) throws IOException {
    super.writeInternal(out);
    out.writeInt(this.index);
    out.writeData(this.value);
  }
  
  protected void readInternal(ObjectDataInput in) throws IOException {
    super.readInternal(in);
    this.index = in.readInt();
    this.value = in.readData();
  }
}
