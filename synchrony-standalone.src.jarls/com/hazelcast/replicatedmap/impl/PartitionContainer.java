package com.hazelcast.replicatedmap.impl;

import com.hazelcast.replicatedmap.impl.record.ReplicatedRecordStore;
import com.hazelcast.util.ConcurrencyUtil;
import com.hazelcast.util.ConstructorFunction;
import java.util.concurrent.ConcurrentHashMap;
import java.util.concurrent.ConcurrentMap;

public class PartitionContainer {
  private final ConcurrentHashMap<String, ReplicatedRecordStore> replicatedRecordStores;
  
  private final ConstructorFunction<String, ReplicatedRecordStore> constructor;
  
  private final ReplicatedMapService service;
  
  private final int partitionId;
  
  public PartitionContainer(ReplicatedMapService service, int partitionId) {
    this.replicatedRecordStores = initReplicatedRecordStoreMapping();
    this.constructor = buildConstructorFunction();
    this.service = service;
    this.partitionId = partitionId;
  }
  
  private ConcurrentHashMap<String, ReplicatedRecordStore> initReplicatedRecordStoreMapping() { return new ConcurrentHashMap(); }
  
  private ConstructorFunction<String, ReplicatedRecordStore> buildConstructorFunction() { return new Object(this); }
  
  public boolean isEmpty() { return this.replicatedRecordStores.isEmpty(); }
  
  public ConcurrentMap<String, ReplicatedRecordStore> getStores() { return this.replicatedRecordStores; }
  
  public ReplicatedRecordStore getOrCreateRecordStore(String name) { return (ReplicatedRecordStore)ConcurrencyUtil.getOrPutSynchronized(this.replicatedRecordStores, name, this.replicatedRecordStores, this.constructor); }
  
  public ReplicatedRecordStore getRecordStore(String name) { return (ReplicatedRecordStore)this.replicatedRecordStores.get(name); }
  
  public void shutdown() {
    for (ReplicatedRecordStore replicatedRecordStore : this.replicatedRecordStores.values())
      replicatedRecordStore.destroy(); 
    this.replicatedRecordStores.clear();
  }
  
  public void destroy(String name) {
    ReplicatedRecordStore replicatedRecordStore = (ReplicatedRecordStore)this.replicatedRecordStores.remove(name);
    if (replicatedRecordStore != null)
      replicatedRecordStore.destroy(); 
  }
}
