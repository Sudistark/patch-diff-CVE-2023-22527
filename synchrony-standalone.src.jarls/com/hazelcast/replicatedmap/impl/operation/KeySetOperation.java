package com.hazelcast.replicatedmap.impl.operation;

import com.hazelcast.nio.ObjectDataInput;
import com.hazelcast.nio.ObjectDataOutput;
import com.hazelcast.nio.serialization.Data;
import com.hazelcast.replicatedmap.impl.ReplicatedMapService;
import com.hazelcast.replicatedmap.impl.client.ReplicatedMapKeys;
import com.hazelcast.replicatedmap.impl.record.ReplicatedRecordStore;
import com.hazelcast.spi.ReadonlyOperation;
import com.hazelcast.spi.serialization.SerializationService;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Collection;
import java.util.List;

public class KeySetOperation extends AbstractNamedSerializableOperation implements ReadonlyOperation {
  private String name;
  
  private Object response;
  
  public KeySetOperation() {}
  
  public KeySetOperation(String name) { this.name = name; }
  
  public void run() {
    ReplicatedMapService service = (ReplicatedMapService)getService();
    Collection<ReplicatedRecordStore> stores = service.getAllReplicatedRecordStores(this.name);
    List<Object> keys = new ArrayList<Object>();
    for (ReplicatedRecordStore store : stores)
      keys.addAll(store.keySet(false)); 
    ArrayList<Data> dataKeys = new ArrayList<Data>(keys.size());
    SerializationService serializationService = getNodeEngine().getSerializationService();
    for (Object key : keys)
      dataKeys.add(serializationService.toData(key)); 
    this.response = new ReplicatedMapKeys(dataKeys);
  }
  
  public Object getResponse() { return this.response; }
  
  protected void writeInternal(ObjectDataOutput out) throws IOException { out.writeUTF(this.name); }
  
  protected void readInternal(ObjectDataInput in) throws IOException { this.name = in.readUTF(); }
  
  public int getId() { return 18; }
  
  public String getName() { return this.name; }
}
