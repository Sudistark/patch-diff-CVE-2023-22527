package com.hazelcast.partition.membergroup;

import com.hazelcast.core.Member;
import com.hazelcast.util.MapUtil;
import java.util.Collection;
import java.util.HashSet;
import java.util.Map;
import java.util.Set;

public class NodeAwareMemberGroupFactory extends BackupSafeMemberGroupFactory implements MemberGroupFactory {
  protected Set<MemberGroup> createInternalMemberGroups(Collection<? extends Member> allMembers) {
    Map<String, MemberGroup> groups = MapUtil.createHashMap(allMembers.size());
    for (Member member : allMembers) {
      String nodeInfo = member.getStringAttribute("hazelcast.partition.group.node");
      if (nodeInfo == null)
        throw new IllegalArgumentException("Not enough metadata information is provided. Node name information must be provided with NODE_AWARE partition group."); 
      DefaultMemberGroup defaultMemberGroup = (MemberGroup)groups.get(nodeInfo);
      if (defaultMemberGroup == null) {
        defaultMemberGroup = new DefaultMemberGroup();
        groups.put(nodeInfo, defaultMemberGroup);
      } 
      defaultMemberGroup.addMember(member);
    } 
    return new HashSet(groups.values());
  }
}
