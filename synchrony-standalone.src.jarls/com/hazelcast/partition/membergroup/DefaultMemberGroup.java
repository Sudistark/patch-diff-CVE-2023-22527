package com.hazelcast.partition.membergroup;

import com.hazelcast.core.Member;
import java.util.Collection;
import java.util.HashSet;
import java.util.Iterator;
import java.util.Set;

public class DefaultMemberGroup implements MemberGroup {
  private final Set<Member> members = new HashSet();
  
  public DefaultMemberGroup() {}
  
  public DefaultMemberGroup(Collection<Member> members) { addMembers(members); }
  
  public void addMember(Member member) { this.members.add(member); }
  
  public void addMembers(Collection<Member> members) { this.members.addAll(members); }
  
  public void removeMember(Member member) { this.members.remove(member); }
  
  public boolean hasMember(Member member) { return this.members.contains(member); }
  
  public Set<Member> getMembers() { return this.members; }
  
  public Iterator<Member> iterator() { return this.members.iterator(); }
  
  public int size() { return this.members.size(); }
  
  public int hashCode() {
    int prime = 31;
    result = 1;
    return prime * result + this.members.hashCode();
  }
  
  public boolean equals(Object obj) {
    if (this == obj)
      return true; 
    if (obj == null)
      return false; 
    if (getClass() != obj.getClass())
      return false; 
    DefaultMemberGroup other = (DefaultMemberGroup)obj;
    return this.members.equals(other.members);
  }
  
  public String toString() { return "DefaultMemberGroup{members=" + this.members + '}'; }
}
