package com.hazelcast.concurrent.lock;

import com.hazelcast.nio.ObjectDataInput;
import com.hazelcast.nio.ObjectDataOutput;
import com.hazelcast.nio.serialization.SerializableByConvention;
import com.hazelcast.spi.ObjectNamespace;
import java.io.IOException;

@SerializableByConvention(SerializableByConvention.Reason.PUBLIC_API)
public final class InternalLockNamespace implements ObjectNamespace {
  private String name;
  
  public InternalLockNamespace() {}
  
  public InternalLockNamespace(String name) { this.name = name; }
  
  public String getServiceName() { return "hz:impl:lockService"; }
  
  public String getObjectName() { return this.name; }
  
  public void writeData(ObjectDataOutput out) throws IOException { out.writeUTF(this.name); }
  
  public void readData(ObjectDataInput in) throws IOException { this.name = in.readUTF(); }
  
  public boolean equals(Object o) {
    if (this == o)
      return true; 
    if (o == null || getClass() != o.getClass())
      return false; 
    return true;
  }
  
  public int hashCode() { return getServiceName().hashCode(); }
  
  public String toString() { return "InternalLockNamespace{service='hz:impl:lockService', objectName=" + this.name + '}'; }
}
