package com.hazelcast.concurrent.semaphore;

import com.hazelcast.spi.AbstractWaitNotifyKey;
import com.hazelcast.util.Preconditions;

public class SemaphoreWaitNotifyKey extends AbstractWaitNotifyKey {
  private final String type;
  
  public SemaphoreWaitNotifyKey(String name, String type) {
    super("hz:impl:semaphoreService", name);
    this.type = (String)Preconditions.isNotNull(type, "type");
  }
  
  public boolean equals(Object o) {
    if (this == o)
      return true; 
    if (!(o instanceof SemaphoreWaitNotifyKey))
      return false; 
    if (!super.equals(o))
      return false; 
    SemaphoreWaitNotifyKey that = (SemaphoreWaitNotifyKey)o;
    if (!this.type.equals(that.type))
      return false; 
    return true;
  }
  
  public int hashCode() {
    result = super.hashCode();
    return 31 * result + this.type.hashCode();
  }
}
