package com.hazelcast.concurrent.semaphore;

import com.hazelcast.internal.serialization.DataSerializerHook;
import com.hazelcast.internal.serialization.impl.FactoryIdHelper;
import com.hazelcast.nio.serialization.DataSerializableFactory;

public class SemaphoreDataSerializerHook implements DataSerializerHook {
  public static final int F_ID = FactoryIdHelper.getFactoryId("hazelcast.serialization.ds.semaphore", -16);
  
  public static final int CONTAINER = 0;
  
  public static final int ACQUIRE_BACKUP_OPERATION = 1;
  
  public static final int ACQUIRE_OPERATION = 2;
  
  public static final int AVAILABLE_OPERATION = 3;
  
  public static final int DETACH_MEMBER_BACKUP_OPERATION = 4;
  
  public static final int DRAIN_BACKUP_OPERATION = 5;
  
  public static final int DRAIN_OPERATION = 6;
  
  public static final int INIT_BACKUP_OPERATION = 7;
  
  public static final int INIT_OPERATION = 8;
  
  public static final int REDUCE_BACKUP_OPERATION = 9;
  
  public static final int REDUCE_OPERATION = 10;
  
  public static final int RELEASE_BACKUP_OPERATION = 11;
  
  public static final int RELEASE_OPERATION = 12;
  
  public static final int DETACH_MEMBER_OPERATION = 13;
  
  public static final int SEMAPHORE_REPLICATION_OPERATION = 14;
  
  public static final int INCREASE_OPERATION = 15;
  
  public static final int INCREASE_BACKUP_OPERATION = 16;
  
  public int getFactoryId() { return F_ID; }
  
  public DataSerializableFactory createFactory() { return new Object(this); }
}
