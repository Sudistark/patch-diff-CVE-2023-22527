package com.hazelcast.concurrent.semaphore.operations;

import com.hazelcast.concurrent.semaphore.SemaphoreContainer;
import com.hazelcast.spi.Operation;
import com.hazelcast.spi.impl.MutatingOperation;

public class DrainOperation extends SemaphoreBackupAwareOperation implements MutatingOperation {
  public DrainOperation() {}
  
  public DrainOperation(String name) { super(name, -1); }
  
  public void run() {
    SemaphoreContainer semaphoreContainer = getSemaphoreContainer();
    this.response = Integer.valueOf(semaphoreContainer.drain(getCallerUuid()));
  }
  
  public boolean shouldBackup() { return !this.response.equals(Integer.valueOf(0)); }
  
  public Operation getBackupOperation() { return new DrainBackupOperation(this.name, this.permitCount, getCallerUuid()); }
  
  public int getId() { return 6; }
}
