package com.hazelcast.concurrent.countdownlatch.operations;

import com.hazelcast.concurrent.countdownlatch.CountDownLatchContainer;
import com.hazelcast.concurrent.countdownlatch.CountDownLatchService;
import com.hazelcast.spi.BackupAwareOperation;
import com.hazelcast.spi.Operation;

abstract class BackupAwareCountDownLatchOperation extends AbstractCountDownLatchOperation implements BackupAwareOperation {
  protected BackupAwareCountDownLatchOperation() {}
  
  public BackupAwareCountDownLatchOperation(String name) { super(name); }
  
  public Operation getBackupOperation() {
    CountDownLatchService service = (CountDownLatchService)getService();
    CountDownLatchContainer container = service.getCountDownLatchContainer(this.name);
    int count = (container != null) ? container.getCount() : 0;
    return new CountDownLatchBackupOperation(this.name, count);
  }
  
  public int getSyncBackupCount() { return 1; }
  
  public int getAsyncBackupCount() { return 0; }
}
