package com.hazelcast.concurrent.countdownlatch.operations;

import com.hazelcast.concurrent.countdownlatch.CountDownLatchService;
import com.hazelcast.spi.BlockingOperation;
import com.hazelcast.spi.ReadonlyOperation;
import com.hazelcast.spi.WaitNotifyKey;

public class AwaitOperation extends AbstractCountDownLatchOperation implements BlockingOperation, ReadonlyOperation {
  public AwaitOperation() {}
  
  public AwaitOperation(String name, long timeout) {
    super(name);
    setWaitTimeout(timeout);
  }
  
  public void run() {}
  
  public Object getResponse() { return Boolean.TRUE; }
  
  public WaitNotifyKey getWaitKey() { return waitNotifyKey(); }
  
  public boolean shouldWait() {
    CountDownLatchService service = (CountDownLatchService)getService();
    return service.shouldWait(this.name);
  }
  
  public void onWaitExpire() { sendResponse(Boolean.valueOf(false)); }
  
  public int getId() { return 1; }
}
