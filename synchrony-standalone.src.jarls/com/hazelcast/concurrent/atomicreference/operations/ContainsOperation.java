package com.hazelcast.concurrent.atomicreference.operations;

import com.hazelcast.concurrent.atomicreference.AtomicReferenceContainer;
import com.hazelcast.nio.ObjectDataInput;
import com.hazelcast.nio.ObjectDataOutput;
import com.hazelcast.nio.serialization.Data;
import com.hazelcast.spi.ReadonlyOperation;
import java.io.IOException;

public class ContainsOperation extends AbstractAtomicReferenceOperation implements ReadonlyOperation {
  private boolean returnValue;
  
  private Data contains;
  
  public ContainsOperation() {}
  
  public ContainsOperation(String name, Data contains) {
    super(name);
    this.contains = contains;
  }
  
  public void run() {
    AtomicReferenceContainer container = getReferenceContainer();
    this.returnValue = container.contains(this.contains);
  }
  
  public Object getResponse() { return Boolean.valueOf(this.returnValue); }
  
  public int getId() { return 4; }
  
  protected void writeInternal(ObjectDataOutput out) throws IOException {
    super.writeInternal(out);
    out.writeData(this.contains);
  }
  
  protected void readInternal(ObjectDataInput in) throws IOException {
    super.readInternal(in);
    this.contains = in.readData();
  }
}
