package com.hazelcast.concurrent.atomiclong;

import com.hazelcast.internal.serialization.DataSerializerHook;
import com.hazelcast.internal.serialization.impl.FactoryIdHelper;
import com.hazelcast.nio.serialization.DataSerializableFactory;

public final class AtomicLongDataSerializerHook implements DataSerializerHook {
  public static final int F_ID = FactoryIdHelper.getFactoryId("hazelcast.serialization.ds.atomic_long", -17);
  
  public static final int ADD_BACKUP = 0;
  
  public static final int ADD_AND_GET = 1;
  
  public static final int ALTER = 2;
  
  public static final int ALTER_AND_GET = 3;
  
  public static final int APPLY = 4;
  
  public static final int COMPARE_AND_SET = 5;
  
  public static final int GET = 6;
  
  public static final int GET_AND_SET = 7;
  
  public static final int GET_AND_ALTER = 8;
  
  public static final int GET_AND_ADD = 9;
  
  public static final int SET_OPERATION = 10;
  
  public static final int SET_BACKUP = 11;
  
  public static final int REPLICATION = 12;
  
  public static final int MERGE = 13;
  
  public static final int MERGE_BACKUP = 14;
  
  public int getFactoryId() { return F_ID; }
  
  public DataSerializableFactory createFactory() { return new Object(this); }
}
