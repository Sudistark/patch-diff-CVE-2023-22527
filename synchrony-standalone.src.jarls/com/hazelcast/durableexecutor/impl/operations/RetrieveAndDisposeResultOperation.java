package com.hazelcast.durableexecutor.impl.operations;

import com.hazelcast.core.HazelcastException;
import com.hazelcast.durableexecutor.impl.DurableExecutorContainer;
import com.hazelcast.nio.Bits;
import com.hazelcast.spi.BlockingOperation;
import com.hazelcast.spi.WaitNotifyKey;
import com.hazelcast.spi.impl.MutatingOperation;

public class RetrieveAndDisposeResultOperation extends DisposeResultOperation implements BlockingOperation, MutatingOperation {
  private Object result;
  
  public RetrieveAndDisposeResultOperation() {}
  
  public RetrieveAndDisposeResultOperation(String name, int sequence) { super(name, sequence); }
  
  public void run() {
    DurableExecutorContainer executorContainer = getExecutorContainer();
    this.result = executorContainer.retrieveAndDisposeResult(this.sequence);
  }
  
  public Object getResponse() { return this.result; }
  
  public WaitNotifyKey getWaitKey() {
    long uniqueId = Bits.combineToLong(getPartitionId(), this.sequence);
    return new DurableExecutorWaitNotifyKey(this.name, uniqueId);
  }
  
  public boolean shouldWait() {
    DurableExecutorContainer executorContainer = getExecutorContainer();
    return executorContainer.shouldWait(this.sequence);
  }
  
  public void onWaitExpire() { sendResponse(new HazelcastException()); }
  
  public int getId() { return 4; }
}
