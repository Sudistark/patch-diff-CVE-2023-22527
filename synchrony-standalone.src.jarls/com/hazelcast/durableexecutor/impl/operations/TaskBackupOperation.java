package com.hazelcast.durableexecutor.impl.operations;

import com.hazelcast.durableexecutor.impl.DurableExecutorContainer;
import com.hazelcast.nio.ObjectDataInput;
import com.hazelcast.nio.ObjectDataOutput;
import com.hazelcast.nio.serialization.Data;
import com.hazelcast.spi.BackupOperation;
import java.io.IOException;
import java.util.concurrent.Callable;

public class TaskBackupOperation extends AbstractDurableExecutorOperation implements BackupOperation {
  private int sequence;
  
  private Data callableData;
  
  public TaskBackupOperation() {}
  
  public TaskBackupOperation(String name, int sequence, Data callableData) {
    super(name);
    this.sequence = sequence;
    this.callableData = callableData;
  }
  
  public void run() {
    DurableExecutorContainer executorContainer = getExecutorContainer();
    Callable callable = (Callable)getNodeEngine().toObject(this.callableData);
    executorContainer.putBackup(this.sequence, callable);
  }
  
  protected void writeInternal(ObjectDataOutput out) throws IOException {
    super.writeInternal(out);
    out.writeInt(this.sequence);
    out.writeData(this.callableData);
  }
  
  protected void readInternal(ObjectDataInput in) throws IOException {
    super.readInternal(in);
    this.sequence = in.readInt();
    this.callableData = in.readData();
  }
  
  public int getId() { return 7; }
}
