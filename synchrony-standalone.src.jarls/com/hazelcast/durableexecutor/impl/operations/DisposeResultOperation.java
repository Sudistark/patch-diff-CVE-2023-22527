package com.hazelcast.durableexecutor.impl.operations;

import com.hazelcast.durableexecutor.impl.DurableExecutorContainer;
import com.hazelcast.nio.ObjectDataInput;
import com.hazelcast.nio.ObjectDataOutput;
import com.hazelcast.spi.BackupAwareOperation;
import com.hazelcast.spi.Operation;
import com.hazelcast.spi.impl.MutatingOperation;
import java.io.IOException;

public class DisposeResultOperation extends AbstractDurableExecutorOperation implements BackupAwareOperation, MutatingOperation {
  int sequence;
  
  public DisposeResultOperation() {}
  
  public DisposeResultOperation(String name, int sequence) {
    super(name);
    this.sequence = sequence;
  }
  
  public void run() {
    DurableExecutorContainer executorContainer = getExecutorContainer();
    executorContainer.disposeResult(this.sequence);
  }
  
  public Operation getBackupOperation() { return new DisposeResultBackupOperation(this.name, this.sequence); }
  
  protected void writeInternal(ObjectDataOutput out) throws IOException {
    super.writeInternal(out);
    out.writeInt(this.sequence);
  }
  
  protected void readInternal(ObjectDataInput in) throws IOException {
    super.readInternal(in);
    this.sequence = in.readInt();
  }
  
  public int getId() { return 1; }
}
