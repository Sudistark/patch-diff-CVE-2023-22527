package com.mchange.v2.lang;

import java.util.Collections;
import java.util.Map;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public final class SystemUtils {
  private static final Pattern REPLACE_ME_REGEX = Pattern.compile("(?<!\\$)\\$\\{\\s*(.+?)\\s*\\}");
  
  private static final Pattern UNESCAPE_ME_REGEX = Pattern.compile("\\$\\$\\{\\s*(.+?)\\s*\\}");
  
  private static String _unescape(String paramString) {
    Matcher matcher = UNESCAPE_ME_REGEX.matcher(paramString);
    StringBuffer stringBuffer = new StringBuffer();
    while (matcher.find()) {
      String str = '\\' + matcher.group(0).substring(1);
      matcher.appendReplacement(stringBuffer, str);
    } 
    matcher.appendTail(stringBuffer);
    return stringBuffer.toString();
  }
  
  private static String _mapReplace(String paramString, Map<String, String> paramMap) {
    Matcher matcher = REPLACE_ME_REGEX.matcher(paramString);
    StringBuffer stringBuffer = new StringBuffer();
    while (matcher.find()) {
      String str = (String)paramMap.get(matcher.group(1));
      if (str != null)
        matcher.appendReplacement(stringBuffer, str); 
    } 
    matcher.appendTail(stringBuffer);
    return stringBuffer.toString();
  }
  
  private static Map<String, String> propsMap() { return Collections.checkedMap(System.getProperties(), String.class, String.class); }
  
  public static String mapReplace(String paramString, Map<String, String> paramMap) { return _unescape(_mapReplace(paramString, paramMap)); }
  
  public static String sysPropsReplace(String paramString) { return mapReplace(paramString, propsMap()); }
  
  public static String envReplace(String paramString) { return mapReplace(paramString, System.getenv()); }
  
  public static String sysPropsEnvReplace(String paramString) {
    String str = _mapReplace(paramString, propsMap());
    return envReplace(str);
  }
}
