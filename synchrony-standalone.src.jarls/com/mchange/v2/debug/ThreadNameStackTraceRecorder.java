package com.mchange.v2.debug;

import com.mchange.lang.ThrowableUtils;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashSet;
import java.util.Iterator;
import java.util.Set;

public class ThreadNameStackTraceRecorder {
  static final String NL = System.getProperty("line.separator", "\r\n");
  
  Set set;
  
  String dumpHeader;
  
  String stackTraceHeader;
  
  public ThreadNameStackTraceRecorder(String paramString) { this(paramString, "Debug Stack Trace."); }
  
  public ThreadNameStackTraceRecorder(String paramString1, String paramString2) {
    this.set = new HashSet();
    this.dumpHeader = paramString1;
    this.stackTraceHeader = paramString2;
  }
  
  public Object record() {
    Record record = new Record(this.stackTraceHeader);
    this.set.add(record);
    return record;
  }
  
  public void remove(Object paramObject) { this.set.remove(paramObject); }
  
  public int size() { return this.set.size(); }
  
  public String getDump() { return getDump(null); }
  
  public String getDump(String paramString) {
    SimpleDateFormat simpleDateFormat = new SimpleDateFormat("dd-MMMM-yyyy HH:mm:ss.SSSS");
    StringBuffer stringBuffer = new StringBuffer(2047);
    stringBuffer.append(NL);
    stringBuffer.append("----------------------------------------------------");
    stringBuffer.append(NL);
    stringBuffer.append(this.dumpHeader);
    stringBuffer.append(NL);
    if (paramString != null) {
      stringBuffer.append(paramString);
      stringBuffer.append(NL);
    } 
    boolean bool = true;
    for (Iterator iterator = this.set.iterator(); iterator.hasNext(); ) {
      if (bool) {
        bool = false;
      } else {
        stringBuffer.append("---");
        stringBuffer.append(NL);
      } 
      Record record = (Record)iterator.next();
      stringBuffer.append(simpleDateFormat.format(new Date(record.time)));
      stringBuffer.append(" --> Thread Name: ");
      stringBuffer.append(record.threadName);
      stringBuffer.append(NL);
      stringBuffer.append("Stack Trace: ");
      stringBuffer.append(ThrowableUtils.extractStackTrace(record.stackTrace));
    } 
    stringBuffer.append("----------------------------------------------------");
    stringBuffer.append(NL);
    return stringBuffer.toString();
  }
}
