package com.atlassian.confluence.impl.cluster.hazelcast.interceptor;

import com.atlassian.confluence.impl.cluster.hazelcast.interceptor.authenticator.ClusterJoinManager;
import com.atlassian.confluence.impl.cluster.hazelcast.interceptor.authenticator.ClusterJoinMode;
import com.hazelcast.core.HazelcastInstance;
import com.hazelcast.core.HazelcastInstanceAware;
import com.hazelcast.nio.MemberSocketInterceptor;
import java.io.IOException;
import java.net.Socket;
import java.util.Properties;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

public class ClusterJoinSocketInterceptor implements MemberSocketInterceptor, HazelcastInstanceAware {
  private static final Logger log = LoggerFactory.getLogger(ClusterJoinSocketInterceptor.class);
  
  private ClusterJoinManager clusterJoinManager;
  
  private HazelcastInstance hazelcast;
  
  public void init(Properties properties) { this.clusterJoinManager = (ClusterJoinManager)properties.get(ClusterJoinManager.class.getName()); }
  
  public void onAccept(Socket socket) throws IOException { this.clusterJoinManager.accept(new SocketClusterJoinRequest(socket, this.hazelcast, ClusterJoinMode.ACCEPT)); }
  
  public void onConnect(Socket socket) throws IOException { this.clusterJoinManager.connect(new SocketClusterJoinRequest(socket, this.hazelcast, ClusterJoinMode.CONNECT)); }
  
  public void setHazelcastInstance(HazelcastInstance hazelcast) { this.hazelcast = hazelcast; }
}
