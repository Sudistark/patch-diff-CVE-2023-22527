package com.mysema.util;

import java.lang.annotation.Annotation;
import java.lang.reflect.AnnotatedElement;
import java.util.HashMap;
import java.util.Map;
import javax.annotation.Nullable;

public class Annotations implements AnnotatedElement {
  private final Map<Class<? extends Annotation>, Annotation> annotations = new HashMap();
  
  public Annotations(AnnotatedElement... elements) {
    for (AnnotatedElement element : elements) {
      for (Annotation annotation : element.getAnnotations())
        this.annotations.put(annotation.annotationType(), annotation); 
    } 
  }
  
  public <T extends Annotation> T getAnnotation(Class<T> annotationClass) { return (T)(Annotation)this.annotations.get(annotationClass); }
  
  public Annotation[] getAnnotations() { return (Annotation[])this.annotations.values().toArray(new Annotation[this.annotations.values().size()]); }
  
  public Annotation[] getDeclaredAnnotations() { return getAnnotations(); }
  
  public boolean isAnnotationPresent(Class<? extends Annotation> annotationClass) { return this.annotations.containsKey(annotationClass); }
  
  public void addAnnotation(@Nullable Annotation annotation) {
    if (annotation != null)
      this.annotations.put(annotation.annotationType(), annotation); 
  }
}
