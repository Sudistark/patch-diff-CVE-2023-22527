package com.mysema.query.sql.mssql;

import com.mysema.query.DefaultQueryMetadata;
import com.mysema.query.JoinFlag;
import com.mysema.query.QueryMetadata;
import com.mysema.query.sql.AbstractSQLQuery;
import com.mysema.query.sql.Configuration;
import com.mysema.query.sql.SQLServerTemplates;
import com.mysema.query.sql.SQLTemplates;
import java.sql.Connection;

public class SQLServerQuery extends AbstractSQLQuery<SQLServerQuery> {
  public SQLServerQuery(Connection conn) { this(conn, new SQLServerTemplates(), new DefaultQueryMetadata()); }
  
  public SQLServerQuery(Connection conn, SQLTemplates templates) { this(conn, templates, new DefaultQueryMetadata()); }
  
  protected SQLServerQuery(Connection conn, SQLTemplates templates, QueryMetadata metadata) { super(conn, new Configuration(templates), metadata); }
  
  public SQLServerQuery(Connection conn, Configuration configuration, QueryMetadata metadata) { super(conn, configuration, metadata); }
  
  public SQLServerQuery(Connection conn, Configuration configuration) { super(conn, configuration); }
  
  public SQLServerQuery tableHints(SQLServerTableHints... tableHints) {
    if (tableHints.length > 0) {
      String hints = SQLServerGrammar.tableHints(tableHints);
      addJoinFlag(hints, JoinFlag.Position.END);
    } 
    return this;
  }
  
  public SQLServerQuery clone(Connection conn) {
    SQLServerQuery q = new SQLServerQuery(conn, getConfiguration(), getMetadata().clone());
    q.clone(this);
    return q;
  }
}
