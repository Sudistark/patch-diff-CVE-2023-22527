package com.mysema.query.sql.mssql;

import com.mysema.query.Detachable;
import com.mysema.query.Query;
import com.mysema.query.sql.AbstractSQLQueryFactory;
import com.mysema.query.sql.AbstractSQLSubQuery;
import com.mysema.query.sql.Configuration;
import com.mysema.query.sql.SQLCommonQuery;
import com.mysema.query.sql.SQLServerTemplates;
import com.mysema.query.sql.SQLTemplates;
import java.sql.Connection;
import javax.inject.Provider;

public class SQLServerQueryFactory extends AbstractSQLQueryFactory<SQLServerQuery, SQLServerSubQuery> {
  public SQLServerQueryFactory(Configuration configuration, Provider<Connection> connection) { super(configuration, connection); }
  
  public SQLServerQueryFactory(Provider<Connection> connection) { this(new Configuration(new SQLServerTemplates()), connection); }
  
  public SQLServerQueryFactory(SQLTemplates templates, Provider<Connection> connection) { this(new Configuration(templates), connection); }
  
  public SQLServerQuery query() { return new SQLServerQuery((Connection)this.connection.get(), this.configuration); }
  
  public SQLServerSubQuery subQuery() { return new SQLServerSubQuery(); }
}
