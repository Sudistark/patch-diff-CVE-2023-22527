package com.mysema.query.sql.spatial;

import com.mysema.query.spatial.path.GeometryCollectionPath;
import com.mysema.query.spatial.path.GeometryPath;
import com.mysema.query.spatial.path.GeometryPaths;
import com.mysema.query.spatial.path.LineStringPath;
import com.mysema.query.spatial.path.LinearRingPath;
import com.mysema.query.spatial.path.MultiLineStringPath;
import com.mysema.query.spatial.path.MultiPointPath;
import com.mysema.query.spatial.path.MultiPolygonPath;
import com.mysema.query.spatial.path.PointPath;
import com.mysema.query.spatial.path.PolygonPath;
import com.mysema.query.spatial.path.PolyhedralSurfacePath;
import com.mysema.query.sql.RelationalPathBase;
import com.mysema.query.types.PathMetadata;
import com.mysema.query.types.PathMetadataFactory;

public class RelationalPathSpatial<T> extends RelationalPathBase<T> implements GeometryPaths {
  private static final long serialVersionUID = -7176236689794620277L;
  
  public RelationalPathSpatial(Class<? extends T> type, String variable, String schema, String table) { this(type, PathMetadataFactory.forVariable(variable), schema, table); }
  
  public RelationalPathSpatial(Class<? extends T> type, PathMetadata<?> metadata, String schema, String table) { super(type, metadata, schema, table); }
  
  public <A extends org.geolatte.geom.GeometryCollection> GeometryCollectionPath<A> createGeometryCollection(String property, Class<? extends A> type) { return (GeometryCollectionPath)add(new GeometryCollectionPath(type, forProperty(property))); }
  
  public <A extends org.geolatte.geom.Geometry> GeometryPath<A> createGeometry(String property, Class<? extends A> type) { return (GeometryPath)add(new GeometryPath(type, forProperty(property))); }
  
  public <A extends org.geolatte.geom.LinearRing> LinearRingPath<A> createLinearRing(String property, Class<? extends A> type) { return (LinearRingPath)add(new LinearRingPath(type, forProperty(property))); }
  
  public <A extends org.geolatte.geom.LineString> LineStringPath<A> createLineString(String property, Class<? extends A> type) { return (LineStringPath)add(new LineStringPath(type, forProperty(property))); }
  
  public <A extends org.geolatte.geom.MultiLineString> MultiLineStringPath<A> createMultiLineString(String property, Class<? extends A> type) { return (MultiLineStringPath)add(new MultiLineStringPath(type, forProperty(property))); }
  
  public <A extends org.geolatte.geom.MultiPoint> MultiPointPath<A> createMultiPoint(String property, Class<? extends A> type) { return (MultiPointPath)add(new MultiPointPath(type, forProperty(property))); }
  
  public <A extends org.geolatte.geom.MultiPolygon> MultiPolygonPath<A> createMultiPolygon(String property, Class<? extends A> type) { return (MultiPolygonPath)add(new MultiPolygonPath(type, forProperty(property))); }
  
  public <A extends org.geolatte.geom.Point> PointPath<A> createPoint(String property, Class<? extends A> type) { return (PointPath)add(new PointPath(type, forProperty(property))); }
  
  public <A extends org.geolatte.geom.Polygon> PolygonPath<A> createPolygon(String property, Class<? extends A> type) { return (PolygonPath)add(new PolygonPath(type, forProperty(property))); }
  
  public <A extends org.geolatte.geom.PolyHedralSurface> PolyhedralSurfacePath<A> createPolyhedralSurface(String property, Class<? extends A> type) { return (PolyhedralSurfacePath)add(new PolyhedralSurfacePath(type, forProperty(property))); }
}
