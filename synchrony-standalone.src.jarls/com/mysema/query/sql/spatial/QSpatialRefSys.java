package com.mysema.query.sql.spatial;

import com.mysema.query.sql.ColumnMetadata;
import com.mysema.query.sql.PrimaryKey;
import com.mysema.query.types.Path;
import com.mysema.query.types.PathMetadata;
import com.mysema.query.types.PathMetadataFactory;
import com.mysema.query.types.path.NumberPath;
import com.mysema.query.types.path.StringPath;

public class QSpatialRefSys extends RelationalPathSpatial<SpatialRefSys> {
  private static final long serialVersionUID = 1681874658L;
  
  public static final QSpatialRefSys spatialRefSys = new QSpatialRefSys("spatial_ref_sys");
  
  public final StringPath authName = createString("authName");
  
  public final NumberPath<Integer> authSrid = createNumber("authSrid", Integer.class);
  
  public final NumberPath<Integer> srid = createNumber("srid", Integer.class);
  
  public final StringPath srtext = createString("srtext");
  
  public final PrimaryKey<SpatialRefSys> spatialRefSysPkey = createPrimaryKey(new Path[] { this.srid });
  
  public QSpatialRefSys(String variable) {
    super(SpatialRefSys.class, PathMetadataFactory.forVariable(variable), "public", "spatial_ref_sys");
    addMetadata();
  }
  
  public QSpatialRefSys(String variable, String schema, String table) {
    super(SpatialRefSys.class, PathMetadataFactory.forVariable(variable), schema, table);
    addMetadata();
  }
  
  public QSpatialRefSys(Path<? extends SpatialRefSys> path) {
    super(path.getType(), path.getMetadata(), "public", "spatial_ref_sys");
    addMetadata();
  }
  
  public QSpatialRefSys(PathMetadata<?> metadata) {
    super(SpatialRefSys.class, metadata, "public", "spatial_ref_sys");
    addMetadata();
  }
  
  public void addMetadata() {
    addMetadata(this.authName, ColumnMetadata.named("auth_name").ofType(12).withSize(256));
    addMetadata(this.authSrid, ColumnMetadata.named("auth_srid").ofType(4).withSize(10));
    addMetadata(this.srid, ColumnMetadata.named("srid").ofType(4).withSize(10).notNull());
    addMetadata(this.srtext, ColumnMetadata.named("srtext").ofType(12).withSize(2048));
  }
}
