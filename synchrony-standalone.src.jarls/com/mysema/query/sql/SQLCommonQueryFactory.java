package com.mysema.query.sql;

import com.mysema.query.QueryFactory;
import com.mysema.query.sql.dml.SQLDeleteClause;
import com.mysema.query.sql.dml.SQLInsertClause;
import com.mysema.query.sql.dml.SQLMergeClause;
import com.mysema.query.sql.dml.SQLUpdateClause;
import com.mysema.query.types.Expression;
import com.mysema.query.types.Path;
import com.mysema.query.types.SubQueryExpression;

public interface SQLCommonQueryFactory<Q extends SQLCommonQuery<?>, SQ extends AbstractSQLSubQuery<?>, D extends SQLDeleteClause, U extends SQLUpdateClause, I extends SQLInsertClause, M extends SQLMergeClause> extends QueryFactory<Q, SQ> {
  D delete(RelationalPath<?> paramRelationalPath);
  
  Q from(Expression<?> paramExpression);
  
  Q from(Expression<?>... paramVarArgs);
  
  Q from(SubQueryExpression<?> paramSubQueryExpression, Path<?> paramPath);
  
  I insert(RelationalPath<?> paramRelationalPath);
  
  M merge(RelationalPath<?> paramRelationalPath);
  
  U update(RelationalPath<?> paramRelationalPath);
  
  Q query();
  
  SQ subQuery();
  
  SQ subQuery(Expression<?> paramExpression);
}
