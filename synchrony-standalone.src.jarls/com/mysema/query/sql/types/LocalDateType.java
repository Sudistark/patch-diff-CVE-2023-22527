package com.mysema.query.sql.types;

import java.sql.Date;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import org.joda.time.DateTimeZone;
import org.joda.time.LocalDate;

public class LocalDateType extends AbstractDateTimeType<LocalDate> {
  public LocalDateType() { super(91); }
  
  public LocalDateType(int type) { super(type); }
  
  public String getLiteral(LocalDate value) { return dateFormatter.print(value); }
  
  public Class<LocalDate> getReturnedClass() { return LocalDate.class; }
  
  public LocalDate getValue(ResultSet rs, int startIndex) throws SQLException {
    Date date = rs.getDate(startIndex, utc());
    return (date != null) ? new LocalDate(date.getTime(), DateTimeZone.UTC) : null;
  }
  
  public void setValue(PreparedStatement st, int startIndex, LocalDate value) throws SQLException { st.setDate(startIndex, new Date(value.toDateTimeAtStartOfDay(DateTimeZone.UTC).getMillis()), utc()); }
}
