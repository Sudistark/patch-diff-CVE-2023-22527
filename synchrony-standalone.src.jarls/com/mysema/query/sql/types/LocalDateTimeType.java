package com.mysema.query.sql.types;

import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Timestamp;
import org.joda.time.DateTime;
import org.joda.time.DateTimeZone;
import org.joda.time.LocalDateTime;

public class LocalDateTimeType extends AbstractDateTimeType<LocalDateTime> {
  public LocalDateTimeType() { super(93); }
  
  public LocalDateTimeType(int type) { super(type); }
  
  public String getLiteral(LocalDateTime value) { return dateTimeFormatter.print(value); }
  
  public Class<LocalDateTime> getReturnedClass() { return LocalDateTime.class; }
  
  public LocalDateTime getValue(ResultSet rs, int index) throws SQLException {
    Timestamp ts = rs.getTimestamp(index, utc());
    return (ts != null) ? new LocalDateTime(ts.getTime(), DateTimeZone.UTC) : null;
  }
  
  public void setValue(PreparedStatement st, int index, LocalDateTime value) throws SQLException {
    DateTime dt = value.toDateTime(DateTimeZone.UTC);
    st.setTimestamp(index, new Timestamp(dt.getMillis()), utc());
  }
}
