package com.mysema.query.sql.postgres;

import com.mysema.query.Query;
import com.mysema.query.sql.AbstractSQLQueryFactory;
import com.mysema.query.sql.Configuration;
import com.mysema.query.sql.PostgresTemplates;
import com.mysema.query.sql.SQLCommonQuery;
import com.mysema.query.sql.SQLSubQuery;
import com.mysema.query.sql.SQLTemplates;
import java.sql.Connection;
import javax.inject.Provider;

public class PostgresQueryFactory extends AbstractSQLQueryFactory<PostgresQuery, SQLSubQuery> {
  public PostgresQueryFactory(Configuration configuration, Provider<Connection> connection) { super(configuration, connection); }
  
  public PostgresQueryFactory(Provider<Connection> connection) { this(new Configuration(new PostgresTemplates()), connection); }
  
  public PostgresQueryFactory(SQLTemplates templates, Provider<Connection> connection) { this(new Configuration(templates), connection); }
  
  public PostgresQuery query() { return new PostgresQuery((Connection)this.connection.get(), this.configuration); }
}
