package com.mysema.query.types;

import com.google.common.collect.ImmutableList;
import javax.annotation.Nullable;
import javax.annotation.concurrent.Immutable;

@Immutable
public final class PredicateOperation extends OperationImpl<Boolean> implements Predicate {
  private static final long serialVersionUID = -5371430939203772072L;
  
  public static PredicateOperation create(Operator<Boolean> operator, Expression<?> one) { return new PredicateOperation(operator, ImmutableList.of(one)); }
  
  public static PredicateOperation create(Operator<Boolean> operator, Expression<?> one, Expression<?> two) { return new PredicateOperation(operator, ImmutableList.of(one, two)); }
  
  public PredicateOperation(Operator<Boolean> operator, ImmutableList<Expression<?>> args) { super(Boolean.class, operator, args); }
  
  public Predicate not() {
    if (this.not == null)
      this.not = create(Ops.NOT, this); 
    return this.not;
  }
}
