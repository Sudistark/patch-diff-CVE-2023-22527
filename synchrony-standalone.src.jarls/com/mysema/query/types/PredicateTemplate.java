package com.mysema.query.types;

import com.google.common.collect.ImmutableList;
import javax.annotation.Nullable;
import javax.annotation.concurrent.Immutable;

@Immutable
public class PredicateTemplate extends TemplateExpressionImpl<Boolean> implements Predicate {
  private static final long serialVersionUID = -5371430939203772072L;
  
  public PredicateTemplate(String template, Object... args) { super(Boolean.class, TemplateFactory.DEFAULT.create(template), args); }
  
  public PredicateTemplate(Template template, Object... args) { super(Boolean.class, template, args); }
  
  public PredicateTemplate(Template template, ImmutableList<?> args) { super(Boolean.class, template, args); }
  
  public Predicate not() {
    if (this.not == null)
      this.not = PredicateOperation.create(Ops.NOT, this); 
    return this.not;
  }
}
