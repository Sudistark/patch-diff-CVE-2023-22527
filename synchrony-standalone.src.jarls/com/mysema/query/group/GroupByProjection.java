package com.mysema.query.group;

import com.mysema.query.types.Expression;
import java.util.LinkedHashMap;
import java.util.Map;

public abstract class GroupByProjection<K, V> extends GroupByMap<K, V> {
  public GroupByProjection(Expression<K> key, Expression... expressions) { super(key, expressions); }
  
  protected Map<K, V> transform(Map<K, Group> groups) {
    Map<K, V> results = new LinkedHashMap<K, V>((int)Math.ceil(groups.size() / 0.75D), 0.75F);
    for (Map.Entry<K, Group> entry : groups.entrySet())
      results.put(entry.getKey(), transform((Group)entry.getValue())); 
    return results;
  }
  
  protected abstract V transform(Group paramGroup);
}
