package com.mysema.query.group;

import com.mysema.commons.lang.Pair;
import java.util.Comparator;
import java.util.Map;
import java.util.SortedMap;

abstract class GMap<K, V, M extends Map<K, V>> extends AbstractGroupExpression<Pair<K, V>, M> {
  private static final long serialVersionUID = 7106389414200843920L;
  
  public GMap(QPair<K, V> qpair) { super(Map.class, qpair); }
  
  protected abstract M createMap();
  
  public GroupCollector<Pair<K, V>, M> createGroupCollector() { return new Object(this); }
  
  public static <T, U> GMap<T, U, Map<T, U>> createLinked(QPair<T, U> expr) { return new Object(expr); }
  
  public static <T extends Comparable<? super T>, U> GMap<T, U, SortedMap<T, U>> createSorted(QPair<T, U> expr) { return new Object(expr); }
  
  public static <T, U> GMap<T, U, SortedMap<T, U>> createSorted(QPair<T, U> expr, Comparator<? super T> comparator) { return new Object(expr, comparator); }
}
