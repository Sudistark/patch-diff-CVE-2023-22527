package com.mysema.query.alias;

import com.mysema.query.types.Path;
import com.mysema.query.types.PathMetadata;
import java.util.Collection;
import java.util.List;
import java.util.Map;
import java.util.Set;

public interface PathFactory {
  <T> Path<T[]> createArrayPath(Class<T[]> paramClass, PathMetadata<?> paramPathMetadata);
  
  <T> Path<T> createEntityPath(Class<T> paramClass, PathMetadata<?> paramPathMetadata);
  
  <T> Path<T> createSimplePath(Class<T> paramClass, PathMetadata<?> paramPathMetadata);
  
  <T extends Comparable<?>> Path<T> createComparablePath(Class<T> paramClass, PathMetadata<?> paramPathMetadata);
  
  <T extends Enum<T>> Path<T> createEnumPath(Class<T> paramClass, PathMetadata<?> paramPathMetadata);
  
  <T extends Comparable<?>> Path<T> createDatePath(Class<T> paramClass, PathMetadata<?> paramPathMetadata);
  
  <T extends Comparable<?>> Path<T> createTimePath(Class<T> paramClass, PathMetadata<?> paramPathMetadata);
  
  <T extends Comparable<?>> Path<T> createDateTimePath(Class<T> paramClass, PathMetadata<?> paramPathMetadata);
  
  <T extends Number & Comparable<T>> Path<T> createNumberPath(Class<T> paramClass, PathMetadata<?> paramPathMetadata);
  
  Path<Boolean> createBooleanPath(PathMetadata<?> paramPathMetadata);
  
  Path<String> createStringPath(PathMetadata<?> paramPathMetadata);
  
  <E> Path<List<E>> createListPath(Class<E> paramClass, PathMetadata<?> paramPathMetadata);
  
  <E> Path<Set<E>> createSetPath(Class<E> paramClass, PathMetadata<?> paramPathMetadata);
  
  <E> Path<Collection<E>> createCollectionPath(Class<E> paramClass, PathMetadata<?> paramPathMetadata);
  
  <K, V> Path<Map<K, V>> createMapPath(Class<K> paramClass1, Class<V> paramClass2, PathMetadata<?> paramPathMetadata);
}
