package com.google.common.collect;

import com.google.common.annotations.Beta;
import com.google.common.annotations.GwtCompatible;
import com.google.common.base.Function;
import com.google.common.base.Preconditions;

@Deprecated
@ElementTypesAreNonnullByDefault
@Beta
@GwtCompatible
public abstract class TreeTraverser<T> extends Object {
  @Deprecated
  public static <T> TreeTraverser<T> using(Function<T, ? extends Iterable<T>> nodeToChildrenFunction) {
    Preconditions.checkNotNull(nodeToChildrenFunction);
    return new Object(nodeToChildrenFunction);
  }
  
  public abstract Iterable<T> children(T paramT);
  
  @Deprecated
  public final FluentIterable<T> preOrderTraversal(T root) {
    Preconditions.checkNotNull(root);
    return new Object(this, root);
  }
  
  UnmodifiableIterator<T> preOrderIterator(T root) { return new PreOrderIterator(this, root); }
  
  @Deprecated
  public final FluentIterable<T> postOrderTraversal(T root) {
    Preconditions.checkNotNull(root);
    return new Object(this, root);
  }
  
  UnmodifiableIterator<T> postOrderIterator(T root) { return new PostOrderIterator(this, root); }
  
  @Deprecated
  public final FluentIterable<T> breadthFirstTraversal(T root) {
    Preconditions.checkNotNull(root);
    return new Object(this, root);
  }
}
