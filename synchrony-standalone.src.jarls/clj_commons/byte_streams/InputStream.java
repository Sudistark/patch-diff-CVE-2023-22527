package clj_commons.byte_streams;

import java.io.IOException;
import java.io.InputStream;

public class InputStream extends InputStream {
  private Streamable _s;
  
  public InputStream(Streamable paramStreamable) { this._s = paramStreamable; }
  
  public void close() { this._s.close(); }
  
  public int available() { return this._s.available(); }
  
  public boolean markSupported() { return false; }
  
  public void mark(int paramInt) { throw new UnsupportedOperationException(); }
  
  public void reset() { throw new UnsupportedOperationException(); }
  
  public long skip(long paramLong) { return this._s.skip(paramLong); }
  
  public int read() { return this._s.read(); }
  
  public int read(byte[] paramArrayOfByte, int paramInt1, int paramInt2) throws IOException { return this._s.read(paramArrayOfByte, paramInt1, paramInt2); }
}
