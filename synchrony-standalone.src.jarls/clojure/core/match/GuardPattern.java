package clojure.core.match;

import clojure.core.match.protocols.IPatternCompile;
import clojure.core.match.protocols.ISpecializeMatrix;
import clojure.lang.AFn;
import clojure.lang.IFn;
import clojure.lang.ILookup;
import clojure.lang.ILookupThunk;
import clojure.lang.IObj;
import clojure.lang.IPersistentMap;
import clojure.lang.IPersistentVector;
import clojure.lang.IType;
import clojure.lang.Keyword;
import clojure.lang.KeywordLookupSite;
import clojure.lang.RT;
import clojure.lang.Symbol;
import clojure.lang.Tuple;
import clojure.lang.Util;
import clojure.lang.Var;

public final class GuardPattern implements IPatternCompile, ILookup, IObj, ISpecializeMatrix, IType {
  public final Object p;
  
  public final Object gs;
  
  public final Object _meta;
  
  public static final Var const__0 = (Var)RT.var("clojure.core", "str");
  
  public static final Keyword const__4 = (Keyword)RT.keyword(null, "p");
  
  public static final Keyword const__5 = (Keyword)RT.keyword(null, "gs");
  
  public static final Keyword const__6 = (Keyword)RT.keyword("clojure.core.match", "tag");
  
  public static final Keyword const__7 = (Keyword)RT.keyword("clojure.core.match", "guard");
  
  public static final Var const__8 = (Var)RT.var("clojure.core", "seq");
  
  public static final Var const__9 = (Var)RT.var("clojure.core", "concat");
  
  public static final Var const__10 = (Var)RT.var("clojure.core", "list");
  
  public static final AFn const__11 = (AFn)Symbol.intern("clojure.core", "and");
  
  public static final Var const__12 = (Var)RT.var("clojure.core", "map");
  
  public static final Var const__13 = (Var)RT.var("clojure.core", "repeat");
  
  public static final Var const__14 = (Var)RT.var("clojure.core.match", "rows");
  
  public static final Var const__15 = (Var)RT.var("clojure.core.match", "occurrences");
  
  public static final Var const__16 = (Var)RT.var("clojure.core.match", "specialize-guard-pattern-matrix");
  
  public static final Var const__17 = (Var)RT.var("clojure.core.match", "pattern-matrix");
  
  static final KeywordLookupSite __site__0__;
  
  static ILookupThunk __thunk__0__ = __site__0__ = new KeywordLookupSite(RT.keyword(null, "p"));
  
  static final KeywordLookupSite __site__1__;
  
  static ILookupThunk __thunk__1__ = __site__1__ = new KeywordLookupSite(RT.keyword(null, "gs"));
  
  public GuardPattern(Object paramObject1, Object paramObject2, Object paramObject3) { this.p = paramObject1;
    this.gs = paramObject2;
    this._meta = paramObject3; }
  
  public static IPersistentVector getBasis() { return Tuple.create(Symbol.intern(null, "p"), Symbol.intern(null, "gs"), Symbol.intern(null, "_meta")); }
  
  public Object specialize_matrix(Object matrix) {
    Object rows = ((IFn)const__14.getRawRoot()).invoke(matrix);
    matrix = null;
    Object ocrs = ((IFn)const__15.getRawRoot()).invoke(matrix);
    rows = null;
    Object nrows = ((IFn)const__16.getRawRoot()).invoke(rows);
    nrows = null;
    ocrs = null;
    this = null;
    return ((IFn)const__17.getRawRoot()).invoke(nrows, ocrs);
  }
  
  public Object to_source_STAR_(Object ocr) { ocr = null;
    this = null;
    return ((IFn)const__8.getRawRoot()).invoke(((IFn)const__9.getRawRoot()).invoke(((IFn)const__10.getRawRoot()).invoke(const__11), ((IFn)const__12.getRawRoot()).invoke(new fn__36466(), this.gs, ((IFn)const__13.getRawRoot()).invoke(ocr)))); }
  
  public Object valAt(Object k, Object not_found) {
    Object G__36465 = k = null;
    switch (Util.hash(G__36465) >> 6 & 0x3) {
      case 0:
        if (G__36465 == const__6);
        break;
      case 1:
        if (G__36465 == const__4);
        break;
      case 3:
        if (G__36465 == const__5);
        break;
    } 
    return null;
  }
  
  public Object valAt(Object k) { k = null;
    return ((ILookup)this).valAt(k, null); }
  
  public IObj withMeta(IPersistentMap new_meta) { new_meta = null;
    return (IObj)new GuardPattern(this.p, this.gs, new_meta); }
  
  public IPersistentMap meta() { return (IPersistentMap)this._meta; }
  
  public boolean equals(Object other) {
    boolean and__5514__auto__36470 = other instanceof GuardPattern;
    if (__thunk__0__ != __thunk__0__.get(other)) {
      other;
    } else {
      __thunk__0__.get(other);
    } 
    boolean and__5514__auto__36469 = Util.equiv(this.p, (__thunk__0__ = __site__0__.fault(other)).get(other));
    other = null;
    if (__thunk__1__ != __thunk__1__.get(other)) {
      other;
    } else {
      __thunk__1__.get(other);
    } 
    return and__5514__auto__36470 ? (and__5514__auto__36469 ? Util.equiv(this.gs, (__thunk__1__ = __site__1__.fault(other)).get(other)) : and__5514__auto__36469) : and__5514__auto__36470;
  }
  
  public String toString() { this = null;
    return (String)((IFn)const__0.getRawRoot()).invoke(this.p, " :guard ", this.gs); }
}
