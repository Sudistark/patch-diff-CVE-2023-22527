package clojure.java.api;

import clojure.lang.IFn;
import clojure.lang.RT;
import clojure.lang.Symbol;
import clojure.lang.Var;

public class Clojure {
  private static final IFn EDN_READ_STRING;
  
  private static Symbol asSym(Object o) {
    Symbol s;
    if (o instanceof String) {
      s = Symbol.intern((String)o);
    } else {
      s = (Symbol)o;
    } 
    return s;
  }
  
  public static IFn var(Object qualifiedName) {
    Symbol s = asSym(qualifiedName);
    return var(s.getNamespace(), s.getName());
  }
  
  public static IFn var(Object ns, Object name) { return Var.intern(asSym(ns), asSym(name)); }
  
  public static Object read(String s) { return EDN_READ_STRING.invoke(s); }
  
  static  {
    RT.init();
    edn = (Symbol)var("clojure.core", "symbol").invoke("clojure.edn");
    var("clojure.core", "require").invoke(edn);
    EDN_READ_STRING = var("clojure.edn", "read-string");
  }
}
