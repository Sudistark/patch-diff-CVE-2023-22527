package clojure;

import clojure.lang.RT;
import clojure.lang.Symbol;
import clojure.lang.Var;

public class main {
  private static final Symbol CLOJURE_MAIN = Symbol.intern("clojure.main");
  
  private static final Var REQUIRE = RT.var("clojure.core", "require");
  
  private static final Var LEGACY_REPL = RT.var("clojure.main", "legacy-repl");
  
  private static final Var LEGACY_SCRIPT = RT.var("clojure.main", "legacy-script");
  
  private static final Var MAIN = RT.var("clojure.main", "main");
  
  public static void legacy_repl(String[] args) {
    RT.init();
    REQUIRE.invoke(CLOJURE_MAIN);
    LEGACY_REPL.invoke(RT.seq(args));
  }
  
  public static void legacy_script(String[] args) {
    RT.init();
    REQUIRE.invoke(CLOJURE_MAIN);
    LEGACY_SCRIPT.invoke(RT.seq(args));
  }
  
  public static void main(String[] args) {
    RT.init();
    REQUIRE.invoke(CLOJURE_MAIN);
    MAIN.applyTo(RT.seq(args));
  }
}
