package clojure.lang;

import java.util.Iterator;

public final class RecordIterator implements Iterator {
  int i;
  
  final int basecnt;
  
  final ILookup rec;
  
  final IPersistentVector basefields;
  
  final Iterator extmap;
  
  public RecordIterator(ILookup rec, IPersistentVector basefields, Iterator extmap) {
    this.i = 0;
    this.rec = rec;
    this.basefields = basefields;
    this.basecnt = basefields.count();
    this.extmap = extmap;
  }
  
  public boolean hasNext() {
    if (this.i < this.basecnt)
      return true; 
    return this.extmap.hasNext();
  }
  
  public Object next() {
    if (this.i < this.basecnt) {
      Object k = this.basefields.nth(this.i);
      this.i++;
      return MapEntry.create(k, this.rec.valAt(k));
    } 
    return this.extmap.next();
  }
  
  public void remove() { throw new UnsupportedOperationException(); }
}
