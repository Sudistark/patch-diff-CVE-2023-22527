package schema.utils;

import clojure.lang.IPersistentVector;
import clojure.lang.IType;
import clojure.lang.Symbol;
import clojure.lang.Tuple;

public final class ValidationError implements IType {
  public final Object schema;
  
  public final Object value;
  
  public final Object expectation_delay;
  
  public final Object fail_explanation;
  
  public ValidationError(Object paramObject1, Object paramObject2, Object paramObject3, Object paramObject4) { this.schema = paramObject1;
    this.value = paramObject2;
    this.expectation_delay = paramObject3;
    this.fail_explanation = paramObject4; }
  
  public static IPersistentVector getBasis() { return Tuple.create(Symbol.intern(null, "schema"), Symbol.intern(null, "value"), Symbol.intern(null, "expectation-delay"), Symbol.intern(null, "fail-explanation")); }
  
  static  {
  
  }
}
