package ginga.zip;

import clojure.lang.AFn;
import clojure.lang.APersistentMap;
import clojure.lang.Associative;
import clojure.lang.Counted;
import clojure.lang.IFn;
import clojure.lang.IHashEq;
import clojure.lang.IKeywordLookup;
import clojure.lang.ILookup;
import clojure.lang.ILookupThunk;
import clojure.lang.IMapEntry;
import clojure.lang.IObj;
import clojure.lang.IPersistentCollection;
import clojure.lang.IPersistentMap;
import clojure.lang.IPersistentVector;
import clojure.lang.IRecord;
import clojure.lang.ISeq;
import clojure.lang.Keyword;
import clojure.lang.MapEntry;
import clojure.lang.Numbers;
import clojure.lang.PersistentHashSet;
import clojure.lang.RT;
import clojure.lang.RecordIterator;
import clojure.lang.Symbol;
import clojure.lang.Tuple;
import clojure.lang.Util;
import clojure.lang.Var;
import java.io.Serializable;
import java.util.Collection;
import java.util.Iterator;
import java.util.Map;
import java.util.Set;

public final class InsertFrame implements Nth, Backtrack, Edit, AsZipper, Traverse, IRecord, IHashEq, IObj, ILookup, IKeywordLookup, IPersistentMap, Map, Serializable {
  public final Object wrapped_z;
  
  public final Object n;
  
  public final Object __meta;
  
  public final Object __extmap;
  
  int __hash;
  
  int __hasheq;
  
  private static Class __cached_class__0;
  
  private static Class __cached_class__1;
  
  private static Class __cached_class__2;
  
  private static Class __cached_class__3;
  
  private static Class __cached_class__4;
  
  private static Class __cached_class__5;
  
  private static Class __cached_class__6;
  
  private static Class __cached_class__7;
  
  private static Class __cached_class__8;
  
  private static Class __cached_class__9;
  
  private static Class __cached_class__10;
  
  private static Class __cached_class__11;
  
  private static Class __cached_class__12;
  
  private static Class __cached_class__13;
  
  private static Class __cached_class__14;
  
  private static Class __cached_class__15;
  
  private static Class __cached_class__16;
  
  private static Class __cached_class__17;
  
  private static Class __cached_class__18;
  
  private static Class __cached_class__19;
  
  private static Class __cached_class__20;
  
  private static Class __cached_class__21;
  
  private static Class __cached_class__22;
  
  private static Class __cached_class__23;
  
  private static Class __cached_class__24;
  
  private static Class __cached_class__25;
  
  private static Class __cached_class__26;
  
  private static Class __cached_class__27;
  
  private static Class __cached_class__28;
  
  public static final Var const__0 = (Var)RT.var("clojure.core", "set");
  
  public static final Var const__1 = (Var)RT.var("clojure.core", "vals");
  
  public static final Var const__2 = (Var)RT.var("clojure.core", "keys");
  
  public static final Var const__4 = (Var)RT.var("clojure.core", "some");
  
  public static final Var const__7 = (Var)RT.var("clojure.core", "contains?");
  
  public static final Keyword const__8 = (Keyword)RT.keyword(null, "n");
  
  public static final Keyword const__9 = (Keyword)RT.keyword(null, "wrapped-z");
  
  public static final AFn const__10 = (AFn)PersistentHashSet.create(new Object[] { RT.keyword(null, "n"), RT.keyword(null, "wrapped-z") });
  
  public static final Var const__11 = (Var)RT.var("clojure.core", "dissoc");
  
  public static final Var const__12 = (Var)RT.var("clojure.core", "with-meta");
  
  public static final Var const__13 = (Var)RT.var("clojure.core", "into");
  
  public static final Var const__14 = (Var)RT.var("clojure.core", "not-empty");
  
  public static final Var const__15 = (Var)RT.var("clojure.core", "identical?");
  
  public static final Var const__16 = (Var)RT.var("clojure.core", "assoc");
  
  public static final AFn const__17 = (AFn)Tuple.create(RT.keyword(null, "wrapped-z"), RT.keyword(null, "n"));
  
  public static final Var const__18 = (Var)RT.var("clojure.core", "seq"), const__19 = (Var)RT.var("clojure.core", "concat"), const__20 = (Var)RT.var("clojure.core", "not"), const__21 = (Var)RT.var("clojure.core", "class"), const__22 = (Var)RT.var("clojure.core", "imap-cons"), const__23 = (Var)RT.var("clojure.core", "str"), const__32 = (Var)RT.var("ginga.zip", "insert-next"), const__33 = (Var)RT.var("ginga.zip", "down-impl"), const__34 = (Var)RT.var("ginga.zip", "end"), const__35 = (Var)RT.var("ginga.zip", "discard"), const__36 = (Var)RT.var("ginga.zip", "top?"), const__37 = (Var)RT.var("ginga.zip", "traverse"), const__38 = (Var)RT.var("ginga.zip", "as-zipper"), const__39 = (Var)RT.var("ginga.zip", "prev"), const__40 = (Var)RT.var("ginga.zip", "prev-node"), const__41 = (Var)RT.var("ginga.zip", "up"), const__42 = (Var)RT.var("ginga.zip", "up-next"), const__43 = (Var)RT.var("ginga.zip", "insert"), const__44 = (Var)RT.var("ginga.zip", "insert*"), const__45 = (Var)RT.var("ginga.zip", "insert-next*"), const__46 = (Var)RT.var("ginga.zip", "prev-remove"), const__47 = (Var)RT.var("ginga.zip", "nth-next"), const__48 = (Var)RT.var("ginga.zip", "next"), const__50 = (Var)RT.var("ginga.zip", "nth-prev");
  
  public InsertFrame(Object paramObject1, Object paramObject2, Object paramObject3, Object paramObject4, int paramInt1, int paramInt2) { this.wrapped_z = paramObject1;
    this.n = paramObject2;
    this.__meta = paramObject3;
    this.__extmap = paramObject4;
    this.__hash = paramInt1;
    this.__hasheq = paramInt2; }
  
  public InsertFrame(Object paramObject1, Object paramObject2) { this(paramObject1, paramObject2, null, null, 0, 0); }
  
  public InsertFrame(Object paramObject1, Object paramObject2, Object paramObject3, Object paramObject4) { this(paramObject1, paramObject2, paramObject3, paramObject4, 0, 0); }
  
  public static IPersistentVector getBasis() { return Tuple.create(Symbol.intern(null, "wrapped-z"), Symbol.intern(null, "n")); }
  
  public static InsertFrame create(IPersistentMap paramIPersistentMap) {
    Object object1 = paramIPersistentMap.valAt(Keyword.intern("wrapped-z"), null);
    paramIPersistentMap = paramIPersistentMap.without(Keyword.intern("wrapped-z"));
    Object object2 = paramIPersistentMap.valAt(Keyword.intern("n"), null);
    paramIPersistentMap = paramIPersistentMap.without(Keyword.intern("n"));
    return new InsertFrame(object1, object2, null, RT.seqOrElse(paramIPersistentMap), 0, 0);
  }
  
  public Object as_zipper() { if (Util.classOf(this.wrapped_z) != __cached_class__27)
      if (!(this.wrapped_z instanceof AsZipper)) {
        __cached_class__27 = Util.classOf(this.wrapped_z);
      } else if (Util.classOf(((AsZipper)this.wrapped_z).as_zipper()) != __cached_class__28) {
        if (!(((AsZipper)this.wrapped_z).as_zipper() instanceof Edit)) {
          __cached_class__28 = Util.classOf(((AsZipper)this.wrapped_z).as_zipper());
        } else {
          return ((Edit)((AsZipper)this.wrapped_z).as_zipper()).insert(this.n);
        } 
      }   }
  
  public Object nth_prev(Object n) {
    if (Numbers.isZero(n)) {
    
    } else if (Util.classOf(this) != __cached_class__25) {
      if (!(this instanceof Backtrack)) {
        __cached_class__25 = Util.classOf(this);
      } else if (Util.classOf(((Backtrack)this).prev()) != __cached_class__26) {
        if (!(((Backtrack)this).prev() instanceof Nth)) {
          __cached_class__26 = Util.classOf(((Backtrack)this).prev());
        } else {
          n = null;
          return ((Nth)((Backtrack)this).prev()).nth_prev(Numbers.dec(n));
        } 
      } 
    } 
    return const__39.getRawRoot().invoke(((Backtrack)this).prev());
  }
  
  public Object nth_next(Object n) {
    if (Numbers.isZero(n)) {
    
    } else if (Util.classOf(this) != __cached_class__23) {
      if (!(this instanceof Traverse)) {
        __cached_class__23 = Util.classOf(this);
      } else if (Util.classOf(((Traverse)this).next()) != __cached_class__24) {
        if (!(((Traverse)this).next() instanceof Nth)) {
          __cached_class__24 = Util.classOf(((Traverse)this).next());
        } else {
          n = null;
          return ((Nth)((Traverse)this).next()).nth_next(Numbers.dec(n));
        } 
      } 
    } 
    return const__48.getRawRoot().invoke(((Traverse)this).next());
  }
  
  public Object prev_remove() { if (Util.classOf(this) != __cached_class__21)
      if (!(this instanceof AsZipper)) {
        __cached_class__21 = Util.classOf(this);
      } else if (Util.classOf(((AsZipper)this).as_zipper()) != __cached_class__22) {
        if (!(((AsZipper)this).as_zipper() instanceof Edit)) {
          __cached_class__22 = Util.classOf(((AsZipper)this).as_zipper());
        } else {
          return ((Edit)((AsZipper)this).as_zipper()).prev_remove();
        } 
      }   }
  
  public Object remove() { return this.wrapped_z; }
  
  public Object insert_next_STAR_(Object nodes) { if (Util.classOf(this.wrapped_z) != __cached_class__20)
      if (!(this.wrapped_z instanceof Edit)) {
        __cached_class__20 = Util.classOf(this.wrapped_z);
      } else {
        nodes = null;
        return new InsertFrame(((Edit)this.wrapped_z).insert_next_STAR_(nodes), this.n);
      }  
    nodes = null; }
  
  public Object insert_next(Object node) { if (Util.classOf(this.wrapped_z) != __cached_class__19)
      if (!(this.wrapped_z instanceof Edit)) {
        __cached_class__19 = Util.classOf(this.wrapped_z);
      } else {
        node = null;
        return new InsertFrame(((Edit)this.wrapped_z).insert_next(node), this.n);
      }  
    node = null; }
  
  public Object insert_STAR_(Object nodes) { if (Util.classOf(this) != __cached_class__17)
      if (!(this instanceof AsZipper)) {
        __cached_class__17 = Util.classOf(this);
      } else if (Util.classOf(((AsZipper)this).as_zipper()) != __cached_class__18) {
        if (!(((AsZipper)this).as_zipper() instanceof Edit)) {
          __cached_class__18 = Util.classOf(((AsZipper)this).as_zipper());
        } else {
          nodes = null;
          return ((Edit)((AsZipper)this).as_zipper()).insert_STAR_(nodes);
        } 
      }   }
  
  public Object insert(Object node) { if (Util.classOf(this) != __cached_class__15)
      if (!(this instanceof AsZipper)) {
        __cached_class__15 = Util.classOf(this);
      } else if (Util.classOf(((AsZipper)this).as_zipper()) != __cached_class__16) {
        if (!(((AsZipper)this).as_zipper() instanceof Edit)) {
          __cached_class__16 = Util.classOf(((AsZipper)this).as_zipper());
        } else {
          node = null;
          return ((Edit)((AsZipper)this).as_zipper()).insert(node);
        } 
      }   }
  
  public Object up_next() { if (Util.classOf(this.wrapped_z) != __cached_class__13)
      if (!(this.wrapped_z instanceof Edit)) {
        __cached_class__13 = Util.classOf(this.wrapped_z);
      } else if (Util.classOf(((Edit)this.wrapped_z).insert_next(this.n)) != __cached_class__14) {
        if (!(((Edit)this.wrapped_z).insert_next(this.n) instanceof Edit)) {
          __cached_class__14 = Util.classOf(((Edit)this.wrapped_z).insert_next(this.n));
        } else {
          return ((Edit)((Edit)this.wrapped_z).insert_next(this.n)).up_next();
        } 
      }   }
  
  public Object up() { if (Util.classOf(this.wrapped_z) != __cached_class__11)
      if (!(this.wrapped_z instanceof Edit)) {
        __cached_class__11 = Util.classOf(this.wrapped_z);
      } else if (Util.classOf(((Edit)this.wrapped_z).insert_next(this.n)) != __cached_class__12) {
        if (!(((Edit)this.wrapped_z).insert_next(this.n) instanceof Edit)) {
          __cached_class__12 = Util.classOf(((Edit)this.wrapped_z).insert_next(this.n));
        } else {
          return ((Edit)((Edit)this.wrapped_z).insert_next(this.n)).up();
        } 
      }   }
  
  public Object replace_next(Object node) { if (Util.classOf(this.wrapped_z) != __cached_class__10)
      if (!(this.wrapped_z instanceof Edit)) {
        __cached_class__10 = Util.classOf(this.wrapped_z);
      } else {
        node = null;
        return ((Edit)this.wrapped_z).insert_next(node);
      }  
    node = null;
    this = null; }
  
  public Object replace(Object node) { node = null;
    return new InsertFrame(this.wrapped_z, node); }
  
  public Object prev_node() { if (Util.classOf(this.wrapped_z) != __cached_class__9)
      if (!(this.wrapped_z instanceof Backtrack)) {
        __cached_class__9 = Util.classOf(this.wrapped_z);
      } else {
        return ((Backtrack)this.wrapped_z).prev_node();
      }  
    this = null; }
  
  public Object prev() { if (Util.classOf(this) != __cached_class__7)
      if (!(this instanceof AsZipper)) {
        __cached_class__7 = Util.classOf(this);
      } else if (Util.classOf(((AsZipper)this).as_zipper()) != __cached_class__8) {
        if (!(((AsZipper)this).as_zipper() instanceof Backtrack)) {
          __cached_class__8 = Util.classOf(((AsZipper)this).as_zipper());
        } else {
          return ((Backtrack)((AsZipper)this).as_zipper()).prev();
        } 
      }   }
  
  public Object traverse() { if (Util.classOf(this) != __cached_class__5)
      if (!(this instanceof AsZipper)) {
        __cached_class__5 = Util.classOf(this);
      } else if (Util.classOf(((AsZipper)this).as_zipper()) != __cached_class__6) {
        if (!(((AsZipper)this).as_zipper() instanceof Traverse)) {
          __cached_class__6 = Util.classOf(((AsZipper)this).as_zipper());
        } else {
          return ((Traverse)((AsZipper)this).as_zipper()).traverse();
        } 
      }   }
  
  public Object end_QMARK_() { return Boolean.FALSE; }
  
  public Object top_QMARK_() { if (Util.classOf(this.wrapped_z) != __cached_class__4)
      if (!(this.wrapped_z instanceof Traverse)) {
        __cached_class__4 = Util.classOf(this.wrapped_z);
      } else {
        return ((Traverse)this.wrapped_z).top_QMARK_();
      }  
    this = null; }
  
  public Object node() { return this.n; }
  
  public Object discard() { if (Util.classOf(this.wrapped_z) != __cached_class__3)
      if (!(this.wrapped_z instanceof Traverse)) {
        __cached_class__3 = Util.classOf(this.wrapped_z);
      } else {
        return ((Traverse)this.wrapped_z).discard();
      }  
    this = null; }
  
  public Object end() { if (Util.classOf(this.wrapped_z) != __cached_class__1)
      if (!(this.wrapped_z instanceof Edit)) {
        __cached_class__1 = Util.classOf(this.wrapped_z);
      } else if (Util.classOf(((Edit)this.wrapped_z).insert_next(this.n)) != __cached_class__2) {
        if (!(((Edit)this.wrapped_z).insert_next(this.n) instanceof Traverse)) {
          __cached_class__2 = Util.classOf(((Edit)this.wrapped_z).insert_next(this.n));
        } else {
          return ((Traverse)((Edit)this.wrapped_z).insert_next(this.n)).end();
        } 
      }   }
  
  public Object down() { this = null;
    return ((IFn)const__33.getRawRoot()).invoke(this, this.n); }
  
  public Object next() { if (Util.classOf(this.wrapped_z) != __cached_class__0)
      if (!(this.wrapped_z instanceof Edit)) {
        __cached_class__0 = Util.classOf(this.wrapped_z);
      } else {
        return ((Edit)this.wrapped_z).insert_next(this.n);
      }  
    this = null; }
  
  public int hasheq() {
    int hq__7768__auto__21122 = this.__hasheq, h__7769__auto__21121 = RT.intCast(0xFFFFFFFF8800BCCFL ^ APersistentMap.mapHasheq((IPersistentMap)this));
    this.__hasheq = h__7769__auto__21121;
    return (hq__7768__auto__21122 == 0L) ? h__7769__auto__21121 : hq__7768__auto__21122;
  }
  
  public int hashCode() {
    int hash__7771__auto__21124 = this.__hash, h__7772__auto__21123 = APersistentMap.mapHash((IPersistentMap)this);
    this.__hash = h__7772__auto__21123;
    return (hash__7771__auto__21124 == 0L) ? h__7772__auto__21123 : hash__7771__auto__21124;
  }
  
  public boolean equals(Object G__21110) { G__21110 = null;
    return APersistentMap.mapEquals((IPersistentMap)this, G__21110); }
  
  public IPersistentMap meta() { return (IPersistentMap)this.__meta; }
  
  public IObj withMeta(IPersistentMap G__21110) { G__21110 = null;
    return (IObj)new InsertFrame(this.wrapped_z, this.n, G__21110, this.__extmap, this.__hash, this.__hasheq); }
  
  public Object valAt(Object k__7777__auto__) { k__7777__auto__ = null;
    return ((ILookup)this).valAt(k__7777__auto__, null); }
  
  public Object valAt(Object k__7779__auto__, Object else__7780__auto__) {
    Object G__21119 = k__7779__auto__;
    switch (Util.hash(G__21119) >> 0 & true) {
      case 0:
        if (G__21119 == const__9);
        break;
      case 1:
        if (G__21119 == const__8);
        break;
    } 
    k__7779__auto__ = null;
    else__7780__auto__ = null;
    this = null;
    return RT.get(this.__extmap, k__7779__auto__, else__7780__auto__);
  }
  
  public ILookupThunk getLookupThunk(Keyword k__7782__auto__) {
    Object gclass = ((IFn)const__21.getRawRoot()).invoke(this), G__21114 = k__7782__auto__ = null;
    switch (Util.hash(G__21114) >> 0 & true) {
      case 0:
        if (G__21114 == const__9)
          gclass = null; 
        break;
      case 1:
        if (G__21114 == const__8)
          gclass = null; 
        break;
    } 
    return (ILookupThunk)null;
  }
  
  public int count() { return RT.intCast(Numbers.add(2L, RT.count(this.__extmap))); }
  
  public IPersistentCollection empty() { throw (Throwable)new UnsupportedOperationException((String)((IFn)const__23.getRawRoot()).invoke("Can't create empty: ", "ginga.zip.InsertFrame")); }
  
  public IPersistentCollection cons(Object e__7786__auto__) { e__7786__auto__ = null;
    this = null;
    return (IPersistentCollection)((IFn)const__22).invoke(this, e__7786__auto__); }
  
  public boolean equiv(Object G__21110) {
    boolean or__5516__auto__21127 = Util.identical(this, G__21110);
    Object G__21110 = G__21110 = null;
    boolean and__5514__auto__21126 = Util.equiv(this.wrapped_z, ((InsertFrame)G__21110).wrapped_z), and__5514__auto__21125 = Util.equiv(this.n, ((InsertFrame)G__21110).n);
    G__21110 = null;
    return RT.booleanCast(or__5516__auto__21127 ? (or__5516__auto__21127 ? Boolean.TRUE : Boolean.FALSE) : (Util.identical(((IFn)const__21.getRawRoot()).invoke(this), ((IFn)const__21.getRawRoot()).invoke(G__21110)) ? (and__5514__auto__21126 ? (and__5514__auto__21125 ? (Util.equiv(this.__extmap, ((InsertFrame)G__21110).__extmap) ? Boolean.TRUE : Boolean.FALSE) : (and__5514__auto__21125 ? Boolean.TRUE : Boolean.FALSE)) : (and__5514__auto__21126 ? Boolean.TRUE : Boolean.FALSE)) : null));
  }
  
  public boolean containsKey(Object k__7789__auto__) { k__7789__auto__ = null;
    this = null;
    return ((Boolean)((IFn)const__20.getRawRoot()).invoke(Util.identical(this, ((ILookup)this).valAt(k__7789__auto__, this)) ? Boolean.TRUE : Boolean.FALSE)).booleanValue(); }
  
  public IMapEntry entryAt(Object k__7791__auto__) {
    Object v__7792__auto__21128 = ((ILookup)this).valAt(k__7791__auto__, this);
    k__7791__auto__ = null;
    v__7792__auto__21128 = null;
    this = null;
    return (IMapEntry)(Util.identical(this, v__7792__auto__21128) ? null : MapEntry.create(k__7791__auto__, v__7792__auto__21128));
  }
  
  public ISeq seq() { this = null;
    return (ISeq)((IFn)const__18.getRawRoot()).invoke(((IFn)const__19.getRawRoot()).invoke(Tuple.create(MapEntry.create(const__9, this.wrapped_z), MapEntry.create(const__8, this.n)), this.__extmap)); }
  
  public Iterator iterator() { return (Iterator)new RecordIterator((ILookup)this, (IPersistentVector)const__17, (Iterator)RT.iter(this.__extmap)); }
  
  public IPersistentMap assoc(Object k__7796__auto__, Object G__21110) {
    Object pred__21112 = const__15.getRawRoot(), expr__21113 = k__7796__auto__;
    if (((IFn)pred__21112).invoke(const__9, expr__21113) != null) {
      if (((IFn)pred__21112).invoke(const__9, expr__21113) != Boolean.FALSE)
        G__21110 = null; 
    } else {
      ((IFn)pred__21112).invoke(const__9, expr__21113);
    } 
    pred__21112 = null;
    expr__21113 = null;
    if (((IFn)pred__21112).invoke(const__8, expr__21113) != null) {
      if (((IFn)pred__21112).invoke(const__8, expr__21113) != Boolean.FALSE)
        G__21110 = null; 
    } else {
      ((IFn)pred__21112).invoke(const__8, expr__21113);
    } 
    k__7796__auto__ = null;
    G__21110 = null;
    return (IPersistentMap)new InsertFrame(this.wrapped_z, this.n, this.__meta, ((IFn)const__16.getRawRoot()).invoke(this.__extmap, k__7796__auto__, G__21110));
  }
  
  public IPersistentMap without(Object k__7798__auto__) { if (((IFn)const__7.getRawRoot()).invoke(const__10, k__7798__auto__) != null) {
      if (((IFn)const__7.getRawRoot()).invoke(const__10, k__7798__auto__) != Boolean.FALSE) {
        k__7798__auto__ = null;
        this = null;
      } 
    } else {
      ((IFn)const__7.getRawRoot()).invoke(const__10, k__7798__auto__);
    } 
    k__7798__auto__ = null;
    return (IPersistentMap)new InsertFrame(this.wrapped_z, this.n, this.__meta, ((IFn)const__14.getRawRoot()).invoke(((IFn)const__11.getRawRoot()).invoke(this.__extmap, k__7798__auto__))); }
  
  public int size() { this = null;
    return ((Counted)this).count(); }
  
  public boolean isEmpty() { return Util.equiv(0L, ((Counted)this).count()); }
  
  public boolean containsValue(Object v__7802__auto__) { v__7802__auto__ = null;
    return RT.booleanCast(((IFn)const__4.getRawRoot()).invoke(RT.set(new Object[] { v__7802__auto__ }, ), ((IFn)const__1.getRawRoot()).invoke(this))); }
  
  public Object get(Object k__7804__auto__) { k__7804__auto__ = null;
    return ((ILookup)this).valAt(k__7804__auto__); }
  
  public Object put(Object k__7806__auto__, Object v__7807__auto__) { throw (Throwable)new UnsupportedOperationException(); }
  
  public Object remove(Object k__7809__auto__) { throw (Throwable)new UnsupportedOperationException(); }
  
  public void putAll(Map m__7811__auto__) { throw (Throwable)new UnsupportedOperationException(); }
  
  public void clear() { throw (Throwable)new UnsupportedOperationException(); }
  
  public Set keySet() { this = null;
    return (Set)((IFn)const__0.getRawRoot()).invoke(((IFn)const__2.getRawRoot()).invoke(this)); }
  
  public Collection values() { this = null;
    return (Collection)((IFn)const__1.getRawRoot()).invoke(this); }
  
  public Set entrySet() { this = null;
    return (Set)((IFn)const__0.getRawRoot()).invoke(this); }
}
