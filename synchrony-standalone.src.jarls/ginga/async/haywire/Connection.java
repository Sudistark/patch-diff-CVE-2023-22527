package ginga.async.haywire;

import clojure.lang.AFn;
import clojure.lang.APersistentMap;
import clojure.lang.Associative;
import clojure.lang.Counted;
import clojure.lang.IFn;
import clojure.lang.IHashEq;
import clojure.lang.IKeywordLookup;
import clojure.lang.ILookup;
import clojure.lang.ILookupThunk;
import clojure.lang.IMapEntry;
import clojure.lang.IObj;
import clojure.lang.IPersistentCollection;
import clojure.lang.IPersistentMap;
import clojure.lang.IPersistentVector;
import clojure.lang.IRecord;
import clojure.lang.ISeq;
import clojure.lang.Keyword;
import clojure.lang.MapEntry;
import clojure.lang.Numbers;
import clojure.lang.PersistentHashSet;
import clojure.lang.RT;
import clojure.lang.RecordIterator;
import clojure.lang.Symbol;
import clojure.lang.Util;
import clojure.lang.Var;
import java.io.Serializable;
import java.util.Collection;
import java.util.Iterator;
import java.util.Map;
import java.util.Set;

public final class Connection implements IRecord, IHashEq, IObj, ILookup, IKeywordLookup, IPersistentMap, Map, Serializable {
  public final Object alive;
  
  public final Object close_promise;
  
  public final Object seq_state;
  
  public final Object reorder_xf;
  
  public final Object buffer_stats;
  
  public final Object win_in_stats;
  
  public final Object win_out_stats;
  
  public final Object downstream;
  
  public final Object upstream;
  
  public final Object receive_buf;
  
  public final Object in;
  
  public final Object out;
  
  public final Object __meta;
  
  public final Object __extmap;
  
  int __hash;
  
  int __hasheq;
  
  public static final Var const__0 = (Var)RT.var("clojure.core", "set");
  
  public static final Var const__1 = (Var)RT.var("clojure.core", "vals");
  
  public static final Var const__2 = (Var)RT.var("clojure.core", "keys");
  
  public static final Var const__4 = (Var)RT.var("clojure.core", "some");
  
  public static final Var const__7 = (Var)RT.var("clojure.core", "contains?");
  
  public static final Keyword const__8 = (Keyword)RT.keyword(null, "downstream");
  
  public static final Keyword const__9 = (Keyword)RT.keyword(null, "seq-state");
  
  public static final Keyword const__10 = (Keyword)RT.keyword(null, "alive");
  
  public static final Keyword const__11 = (Keyword)RT.keyword(null, "win-in-stats");
  
  public static final Keyword const__12 = (Keyword)RT.keyword(null, "close-promise");
  
  public static final Keyword const__13 = (Keyword)RT.keyword(null, "out");
  
  public static final Keyword const__14 = (Keyword)RT.keyword(null, "buffer-stats");
  
  public static final Keyword const__15 = (Keyword)RT.keyword(null, "receive-buf");
  
  public static final Keyword const__16 = (Keyword)RT.keyword(null, "upstream");
  
  public static final Keyword const__17 = (Keyword)RT.keyword(null, "win-out-stats");
  
  public static final Keyword const__18 = (Keyword)RT.keyword(null, "in");
  
  public static final Keyword const__19 = (Keyword)RT.keyword(null, "reorder-xf");
  
  public static final AFn const__20 = (AFn)PersistentHashSet.create(new Object[] { 
        RT.keyword(null, "downstream"), RT.keyword(null, "seq-state"), RT.keyword(null, "alive"), RT.keyword(null, "win-in-stats"), RT.keyword(null, "close-promise"), RT.keyword(null, "out"), RT.keyword(null, "buffer-stats"), RT.keyword(null, "receive-buf"), RT.keyword(null, "upstream"), RT.keyword(null, "win-out-stats"), 
        RT.keyword(null, "in"), RT.keyword(null, "reorder-xf") });
  
  public static final Var const__21 = (Var)RT.var("clojure.core", "dissoc");
  
  public static final Var const__22 = (Var)RT.var("clojure.core", "with-meta");
  
  public static final Var const__23 = (Var)RT.var("clojure.core", "into");
  
  public static final Var const__24 = (Var)RT.var("clojure.core", "not-empty");
  
  public static final Var const__25 = (Var)RT.var("clojure.core", "identical?");
  
  public static final Var const__26 = (Var)RT.var("clojure.core", "assoc");
  
  public static final AFn const__27 = (AFn)RT.vector(new Object[] { 
        RT.keyword(null, "alive"), RT.keyword(null, "close-promise"), RT.keyword(null, "seq-state"), RT.keyword(null, "reorder-xf"), RT.keyword(null, "buffer-stats"), RT.keyword(null, "win-in-stats"), RT.keyword(null, "win-out-stats"), RT.keyword(null, "downstream"), RT.keyword(null, "upstream"), RT.keyword(null, "receive-buf"), 
        RT.keyword(null, "in"), RT.keyword(null, "out") });
  
  public static final Var const__28 = (Var)RT.var("clojure.core", "seq"), const__29 = (Var)RT.var("clojure.core", "concat"), const__30 = (Var)RT.var("clojure.core", "not"), const__31 = (Var)RT.var("clojure.core", "class"), const__32 = (Var)RT.var("clojure.core", "imap-cons"), const__33 = (Var)RT.var("clojure.core", "str");
  
  public Connection(Object paramObject1, Object paramObject2, Object paramObject3, Object paramObject4, Object paramObject5, Object paramObject6, Object paramObject7, Object paramObject8, Object paramObject9, Object paramObject10, Object paramObject11, Object paramObject12, Object paramObject13, Object paramObject14, int paramInt1, int paramInt2) { this.alive = paramObject1;
    this.close_promise = paramObject2;
    this.seq_state = paramObject3;
    this.reorder_xf = paramObject4;
    this.buffer_stats = paramObject5;
    this.win_in_stats = paramObject6;
    this.win_out_stats = paramObject7;
    this.downstream = paramObject8;
    this.upstream = paramObject9;
    this.receive_buf = paramObject10;
    this.in = paramObject11;
    this.out = paramObject12;
    this.__meta = paramObject13;
    this.__extmap = paramObject14;
    this.__hash = paramInt1;
    this.__hasheq = paramInt2; }
  
  public Connection(Object paramObject1, Object paramObject2, Object paramObject3, Object paramObject4, Object paramObject5, Object paramObject6, Object paramObject7, Object paramObject8, Object paramObject9, Object paramObject10, Object paramObject11, Object paramObject12) { this(paramObject1, paramObject2, paramObject3, paramObject4, paramObject5, paramObject6, paramObject7, paramObject8, paramObject9, paramObject10, paramObject11, paramObject12, null, null, 0, 0); }
  
  public Connection(Object paramObject1, Object paramObject2, Object paramObject3, Object paramObject4, Object paramObject5, Object paramObject6, Object paramObject7, Object paramObject8, Object paramObject9, Object paramObject10, Object paramObject11, Object paramObject12, Object paramObject13, Object paramObject14) { this(paramObject1, paramObject2, paramObject3, paramObject4, paramObject5, paramObject6, paramObject7, paramObject8, paramObject9, paramObject10, paramObject11, paramObject12, paramObject13, paramObject14, 0, 0); }
  
  public static IPersistentVector getBasis() { return RT.vector(new Object[] { 
          Symbol.intern(null, "alive"), Symbol.intern(null, "close-promise"), Symbol.intern(null, "seq-state"), Symbol.intern(null, "reorder-xf"), Symbol.intern(null, "buffer-stats"), Symbol.intern(null, "win-in-stats"), Symbol.intern(null, "win-out-stats"), Symbol.intern(null, "downstream"), Symbol.intern(null, "upstream"), Symbol.intern(null, "receive-buf"), 
          Symbol.intern(null, "in"), Symbol.intern(null, "out") }); }
  
  public static Connection create(IPersistentMap paramIPersistentMap) {
    Object object1 = paramIPersistentMap.valAt(Keyword.intern("alive"), null);
    paramIPersistentMap = paramIPersistentMap.without(Keyword.intern("alive"));
    Object object2 = paramIPersistentMap.valAt(Keyword.intern("close-promise"), null);
    paramIPersistentMap = paramIPersistentMap.without(Keyword.intern("close-promise"));
    Object object3 = paramIPersistentMap.valAt(Keyword.intern("seq-state"), null);
    paramIPersistentMap = paramIPersistentMap.without(Keyword.intern("seq-state"));
    Object object4 = paramIPersistentMap.valAt(Keyword.intern("reorder-xf"), null);
    paramIPersistentMap = paramIPersistentMap.without(Keyword.intern("reorder-xf"));
    Object object5 = paramIPersistentMap.valAt(Keyword.intern("buffer-stats"), null);
    paramIPersistentMap = paramIPersistentMap.without(Keyword.intern("buffer-stats"));
    Object object6 = paramIPersistentMap.valAt(Keyword.intern("win-in-stats"), null);
    paramIPersistentMap = paramIPersistentMap.without(Keyword.intern("win-in-stats"));
    Object object7 = paramIPersistentMap.valAt(Keyword.intern("win-out-stats"), null);
    paramIPersistentMap = paramIPersistentMap.without(Keyword.intern("win-out-stats"));
    Object object8 = paramIPersistentMap.valAt(Keyword.intern("downstream"), null);
    paramIPersistentMap = paramIPersistentMap.without(Keyword.intern("downstream"));
    Object object9 = paramIPersistentMap.valAt(Keyword.intern("upstream"), null);
    paramIPersistentMap = paramIPersistentMap.without(Keyword.intern("upstream"));
    Object object10 = paramIPersistentMap.valAt(Keyword.intern("receive-buf"), null);
    paramIPersistentMap = paramIPersistentMap.without(Keyword.intern("receive-buf"));
    Object object11 = paramIPersistentMap.valAt(Keyword.intern("in"), null);
    paramIPersistentMap = paramIPersistentMap.without(Keyword.intern("in"));
    Object object12 = paramIPersistentMap.valAt(Keyword.intern("out"), null);
    paramIPersistentMap = paramIPersistentMap.without(Keyword.intern("out"));
    return new Connection(object1, object2, object3, object4, object5, object6, object7, object8, object9, object10, object11, object12, null, RT.seqOrElse(paramIPersistentMap), 0, 0);
  }
  
  public int hasheq() {
    int hq__7768__auto__10948 = this.__hasheq, h__7769__auto__10947 = RT.intCast(0x7B5BB9CBL ^ APersistentMap.mapHasheq((IPersistentMap)this));
    this.__hasheq = h__7769__auto__10947;
    return (hq__7768__auto__10948 == 0L) ? h__7769__auto__10947 : hq__7768__auto__10948;
  }
  
  public int hashCode() {
    int hash__7771__auto__10950 = this.__hash, h__7772__auto__10949 = APersistentMap.mapHash((IPersistentMap)this);
    this.__hash = h__7772__auto__10949;
    return (hash__7771__auto__10950 == 0L) ? h__7772__auto__10949 : hash__7771__auto__10950;
  }
  
  public boolean equals(Object G__10916) { G__10916 = null;
    return APersistentMap.mapEquals((IPersistentMap)this, G__10916); }
  
  public IPersistentMap meta() { return (IPersistentMap)this.__meta; }
  
  public IObj withMeta(IPersistentMap G__10916) { G__10916 = null;
    return (IObj)new Connection(this.alive, this.close_promise, this.seq_state, this.reorder_xf, this.buffer_stats, this.win_in_stats, this.win_out_stats, this.downstream, this.upstream, this.receive_buf, this.in, this.out, G__10916, this.__extmap, this.__hash, this.__hasheq); }
  
  public Object valAt(Object k__7777__auto__) { k__7777__auto__ = null;
    return ((ILookup)this).valAt(k__7777__auto__, null); }
  
  public Object valAt(Object k__7779__auto__, Object else__7780__auto__) {
    Object G__10945 = k__7779__auto__;
    switch (Util.hash(G__10945) >> 10 & 0x1F) {
      case 1:
        if (G__10945 == const__10);
        break;
      case 3:
        if (G__10945 == const__13);
        break;
      case 4:
        if (G__10945 == const__15);
        break;
      case 6:
        if (G__10945 == const__16);
        break;
      case 9:
        if (G__10945 == const__8);
        break;
      case 16:
        if (G__10945 == const__12);
        break;
      case 17:
        if (G__10945 == const__18);
        break;
      case 20:
        if (G__10945 == const__9);
        break;
      case 23:
        if (G__10945 == const__19);
        break;
      case 24:
        if (G__10945 == const__11);
        break;
      case 29:
        if (G__10945 == const__17);
        break;
      case 30:
        if (G__10945 == const__14);
        break;
    } 
    k__7779__auto__ = null;
    else__7780__auto__ = null;
    this = null;
    return RT.get(this.__extmap, k__7779__auto__, else__7780__auto__);
  }
  
  public ILookupThunk getLookupThunk(Keyword k__7782__auto__) {
    Object gclass = ((IFn)const__31.getRawRoot()).invoke(this), G__10920 = k__7782__auto__ = null;
    switch (Util.hash(G__10920) >> 10 & 0x1F) {
      case 1:
        if (G__10920 == const__10)
          gclass = null; 
        break;
      case 3:
        if (G__10920 == const__13)
          gclass = null; 
        break;
      case 4:
        if (G__10920 == const__15)
          gclass = null; 
        break;
      case 6:
        if (G__10920 == const__16)
          gclass = null; 
        break;
      case 9:
        if (G__10920 == const__8)
          gclass = null; 
        break;
      case 16:
        if (G__10920 == const__12)
          gclass = null; 
        break;
      case 17:
        if (G__10920 == const__18)
          gclass = null; 
        break;
      case 20:
        if (G__10920 == const__9)
          gclass = null; 
        break;
      case 23:
        if (G__10920 == const__19)
          gclass = null; 
        break;
      case 24:
        if (G__10920 == const__11)
          gclass = null; 
        break;
      case 29:
        if (G__10920 == const__17)
          gclass = null; 
        break;
      case 30:
        if (G__10920 == const__14)
          gclass = null; 
        break;
    } 
    return (ILookupThunk)null;
  }
  
  public int count() { return RT.intCast(Numbers.add(12L, RT.count(this.__extmap))); }
  
  public IPersistentCollection empty() { throw (Throwable)new UnsupportedOperationException((String)((IFn)const__33.getRawRoot()).invoke("Can't create empty: ", "ginga.async.haywire.Connection")); }
  
  public IPersistentCollection cons(Object e__7786__auto__) { e__7786__auto__ = null;
    this = null;
    return (IPersistentCollection)((IFn)const__32).invoke(this, e__7786__auto__); }
  
  public boolean equiv(Object G__10916) {
    boolean or__5516__auto__10963 = Util.identical(this, G__10916);
    Object G__10916 = G__10916 = null;
    boolean and__5514__auto__10962 = Util.equiv(this.alive, ((Connection)G__10916).alive), and__5514__auto__10961 = Util.equiv(this.close_promise, ((Connection)G__10916).close_promise), and__5514__auto__10960 = Util.equiv(this.seq_state, ((Connection)G__10916).seq_state), and__5514__auto__10959 = Util.equiv(this.reorder_xf, ((Connection)G__10916).reorder_xf), and__5514__auto__10958 = Util.equiv(this.buffer_stats, ((Connection)G__10916).buffer_stats), and__5514__auto__10957 = Util.equiv(this.win_in_stats, ((Connection)G__10916).win_in_stats), and__5514__auto__10956 = Util.equiv(this.win_out_stats, ((Connection)G__10916).win_out_stats), and__5514__auto__10955 = Util.equiv(this.downstream, ((Connection)G__10916).downstream), and__5514__auto__10954 = Util.equiv(this.upstream, ((Connection)G__10916).upstream), and__5514__auto__10953 = Util.equiv(this.receive_buf, ((Connection)G__10916).receive_buf), and__5514__auto__10952 = Util.equiv(this.in, ((Connection)G__10916).in), and__5514__auto__10951 = Util.equiv(this.out, ((Connection)G__10916).out);
    G__10916 = null;
    return RT.booleanCast(or__5516__auto__10963 ? (or__5516__auto__10963 ? Boolean.TRUE : Boolean.FALSE) : (Util.identical(((IFn)const__31.getRawRoot()).invoke(this), ((IFn)const__31.getRawRoot()).invoke(G__10916)) ? (and__5514__auto__10962 ? (and__5514__auto__10961 ? (and__5514__auto__10960 ? (and__5514__auto__10959 ? (and__5514__auto__10958 ? (and__5514__auto__10957 ? (and__5514__auto__10956 ? (and__5514__auto__10955 ? (and__5514__auto__10954 ? (and__5514__auto__10953 ? (and__5514__auto__10952 ? (and__5514__auto__10951 ? (Util.equiv(this.__extmap, ((Connection)G__10916).__extmap) ? Boolean.TRUE : Boolean.FALSE) : (and__5514__auto__10951 ? Boolean.TRUE : Boolean.FALSE)) : (and__5514__auto__10952 ? Boolean.TRUE : Boolean.FALSE)) : (and__5514__auto__10953 ? Boolean.TRUE : Boolean.FALSE)) : (and__5514__auto__10954 ? Boolean.TRUE : Boolean.FALSE)) : (and__5514__auto__10955 ? Boolean.TRUE : Boolean.FALSE)) : (and__5514__auto__10956 ? Boolean.TRUE : Boolean.FALSE)) : (and__5514__auto__10957 ? Boolean.TRUE : Boolean.FALSE)) : (and__5514__auto__10958 ? Boolean.TRUE : Boolean.FALSE)) : (and__5514__auto__10959 ? Boolean.TRUE : Boolean.FALSE)) : (and__5514__auto__10960 ? Boolean.TRUE : Boolean.FALSE)) : (and__5514__auto__10961 ? Boolean.TRUE : Boolean.FALSE)) : (and__5514__auto__10962 ? Boolean.TRUE : Boolean.FALSE)) : null));
  }
  
  public boolean containsKey(Object k__7789__auto__) { k__7789__auto__ = null;
    this = null;
    return ((Boolean)((IFn)const__30.getRawRoot()).invoke(Util.identical(this, ((ILookup)this).valAt(k__7789__auto__, this)) ? Boolean.TRUE : Boolean.FALSE)).booleanValue(); }
  
  public IMapEntry entryAt(Object k__7791__auto__) {
    Object v__7792__auto__10964 = ((ILookup)this).valAt(k__7791__auto__, this);
    k__7791__auto__ = null;
    v__7792__auto__10964 = null;
    this = null;
    return (IMapEntry)(Util.identical(this, v__7792__auto__10964) ? null : MapEntry.create(k__7791__auto__, v__7792__auto__10964));
  }
  
  public ISeq seq() { this = null;
    return (ISeq)((IFn)const__28.getRawRoot()).invoke(((IFn)const__29.getRawRoot()).invoke(RT.vector(new Object[] { 
              MapEntry.create(const__10, this.alive), MapEntry.create(const__12, this.close_promise), MapEntry.create(const__9, this.seq_state), MapEntry.create(const__19, this.reorder_xf), MapEntry.create(const__14, this.buffer_stats), MapEntry.create(const__11, this.win_in_stats), MapEntry.create(const__17, this.win_out_stats), MapEntry.create(const__8, this.downstream), MapEntry.create(const__16, this.upstream), MapEntry.create(const__15, this.receive_buf), 
              MapEntry.create(const__18, this.in), MapEntry.create(const__13, this.out) }), this.__extmap)); }
  
  public Iterator iterator() { return (Iterator)new RecordIterator((ILookup)this, (IPersistentVector)const__27, (Iterator)RT.iter(this.__extmap)); }
  
  public IPersistentMap assoc(Object k__7796__auto__, Object G__10916) {
    Object pred__10918 = const__25.getRawRoot(), expr__10919 = k__7796__auto__;
    if (((IFn)pred__10918).invoke(const__10, expr__10919) != null) {
      if (((IFn)pred__10918).invoke(const__10, expr__10919) != Boolean.FALSE)
        G__10916 = null; 
    } else {
      ((IFn)pred__10918).invoke(const__10, expr__10919);
    } 
    if (((IFn)pred__10918).invoke(const__12, expr__10919) != null) {
      if (((IFn)pred__10918).invoke(const__12, expr__10919) != Boolean.FALSE)
        G__10916 = null; 
    } else {
      ((IFn)pred__10918).invoke(const__12, expr__10919);
    } 
    if (((IFn)pred__10918).invoke(const__9, expr__10919) != null) {
      if (((IFn)pred__10918).invoke(const__9, expr__10919) != Boolean.FALSE)
        G__10916 = null; 
    } else {
      ((IFn)pred__10918).invoke(const__9, expr__10919);
    } 
    if (((IFn)pred__10918).invoke(const__19, expr__10919) != null) {
      if (((IFn)pred__10918).invoke(const__19, expr__10919) != Boolean.FALSE)
        G__10916 = null; 
    } else {
      ((IFn)pred__10918).invoke(const__19, expr__10919);
    } 
    if (((IFn)pred__10918).invoke(const__14, expr__10919) != null) {
      if (((IFn)pred__10918).invoke(const__14, expr__10919) != Boolean.FALSE)
        G__10916 = null; 
    } else {
      ((IFn)pred__10918).invoke(const__14, expr__10919);
    } 
    if (((IFn)pred__10918).invoke(const__11, expr__10919) != null) {
      if (((IFn)pred__10918).invoke(const__11, expr__10919) != Boolean.FALSE)
        G__10916 = null; 
    } else {
      ((IFn)pred__10918).invoke(const__11, expr__10919);
    } 
    if (((IFn)pred__10918).invoke(const__17, expr__10919) != null) {
      if (((IFn)pred__10918).invoke(const__17, expr__10919) != Boolean.FALSE)
        G__10916 = null; 
    } else {
      ((IFn)pred__10918).invoke(const__17, expr__10919);
    } 
    if (((IFn)pred__10918).invoke(const__8, expr__10919) != null) {
      if (((IFn)pred__10918).invoke(const__8, expr__10919) != Boolean.FALSE)
        G__10916 = null; 
    } else {
      ((IFn)pred__10918).invoke(const__8, expr__10919);
    } 
    if (((IFn)pred__10918).invoke(const__16, expr__10919) != null) {
      if (((IFn)pred__10918).invoke(const__16, expr__10919) != Boolean.FALSE)
        G__10916 = null; 
    } else {
      ((IFn)pred__10918).invoke(const__16, expr__10919);
    } 
    if (((IFn)pred__10918).invoke(const__15, expr__10919) != null) {
      if (((IFn)pred__10918).invoke(const__15, expr__10919) != Boolean.FALSE)
        G__10916 = null; 
    } else {
      ((IFn)pred__10918).invoke(const__15, expr__10919);
    } 
    if (((IFn)pred__10918).invoke(const__18, expr__10919) != null) {
      if (((IFn)pred__10918).invoke(const__18, expr__10919) != Boolean.FALSE)
        G__10916 = null; 
    } else {
      ((IFn)pred__10918).invoke(const__18, expr__10919);
    } 
    pred__10918 = null;
    expr__10919 = null;
    if (((IFn)pred__10918).invoke(const__13, expr__10919) != null) {
      if (((IFn)pred__10918).invoke(const__13, expr__10919) != Boolean.FALSE)
        G__10916 = null; 
    } else {
      ((IFn)pred__10918).invoke(const__13, expr__10919);
    } 
    k__7796__auto__ = null;
    G__10916 = null;
    return (IPersistentMap)new Connection(this.alive, this.close_promise, this.seq_state, this.reorder_xf, this.buffer_stats, this.win_in_stats, this.win_out_stats, this.downstream, this.upstream, this.receive_buf, this.in, this.out, this.__meta, ((IFn)const__26.getRawRoot()).invoke(this.__extmap, k__7796__auto__, G__10916));
  }
  
  public IPersistentMap without(Object k__7798__auto__) { if (((IFn)const__7.getRawRoot()).invoke(const__20, k__7798__auto__) != null) {
      if (((IFn)const__7.getRawRoot()).invoke(const__20, k__7798__auto__) != Boolean.FALSE) {
        k__7798__auto__ = null;
        this = null;
      } 
    } else {
      ((IFn)const__7.getRawRoot()).invoke(const__20, k__7798__auto__);
    } 
    k__7798__auto__ = null;
    return (IPersistentMap)new Connection(this.alive, this.close_promise, this.seq_state, this.reorder_xf, this.buffer_stats, this.win_in_stats, this.win_out_stats, this.downstream, this.upstream, this.receive_buf, this.in, this.out, this.__meta, ((IFn)const__24.getRawRoot()).invoke(((IFn)const__21.getRawRoot()).invoke(this.__extmap, k__7798__auto__))); }
  
  public int size() { this = null;
    return ((Counted)this).count(); }
  
  public boolean isEmpty() { return Util.equiv(0L, ((Counted)this).count()); }
  
  public boolean containsValue(Object v__7802__auto__) { v__7802__auto__ = null;
    return RT.booleanCast(((IFn)const__4.getRawRoot()).invoke(RT.set(new Object[] { v__7802__auto__ }, ), ((IFn)const__1.getRawRoot()).invoke(this))); }
  
  public Object get(Object k__7804__auto__) { k__7804__auto__ = null;
    return ((ILookup)this).valAt(k__7804__auto__); }
  
  public Object put(Object k__7806__auto__, Object v__7807__auto__) { throw (Throwable)new UnsupportedOperationException(); }
  
  public Object remove(Object k__7809__auto__) { throw (Throwable)new UnsupportedOperationException(); }
  
  public void putAll(Map m__7811__auto__) { throw (Throwable)new UnsupportedOperationException(); }
  
  public void clear() { throw (Throwable)new UnsupportedOperationException(); }
  
  public Set keySet() { this = null;
    return (Set)((IFn)const__0.getRawRoot()).invoke(((IFn)const__2.getRawRoot()).invoke(this)); }
  
  public Collection values() { this = null;
    return (Collection)((IFn)const__1.getRawRoot()).invoke(this); }
  
  public Set entrySet() { this = null;
    return (Set)((IFn)const__0.getRawRoot()).invoke(this); }
}
