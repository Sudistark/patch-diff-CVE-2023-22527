package ginga;

import clojure.lang.AFn;
import clojure.lang.Compiler;
import clojure.lang.IObj;
import clojure.lang.IPersistentMap;
import clojure.lang.ISeq;
import clojure.lang.Keyword;
import clojure.lang.LockingTransaction;
import clojure.lang.PersistentArrayMap;
import clojure.lang.PersistentList;
import clojure.lang.RT;
import clojure.lang.Symbol;
import clojure.lang.Tuple;
import clojure.lang.Var;
import java.util.Arrays;
import java.util.concurrent.Callable;

public class marshal__init {
  public static final Var const__0;
  
  public static final AFn const__1;
  
  public static final Keyword const__2;
  
  public static final AFn const__3;
  
  public static final AFn const__4;
  
  public static final Object const__5;
  
  public static final Var const__6;
  
  public static final Var const__7;
  
  public static final Var const__8;
  
  public static final Var const__9;
  
  public static final ISeq const__10;
  
  public static final Var const__11;
  
  public static final Var const__12;
  
  public static final AFn const__16;
  
  public static final Keyword const__17;
  
  public static final AFn const__18;
  
  public static final Keyword const__19;
  
  public static final Keyword const__20;
  
  public static final Keyword const__21;
  
  public static final AFn const__22;
  
  public static final Keyword const__23;
  
  public static final Var const__24;
  
  public static final Var const__25;
  
  public static final Var const__26;
  
  public static final AFn const__27;
  
  public static final AFn const__28;
  
  public static final Keyword const__29;
  
  public static final Var const__30;
  
  public static final AFn const__31;
  
  public static final Object const__32;
  
  public static final Var const__33;
  
  public static final ISeq const__34;
  
  public static final AFn const__36;
  
  public static final AFn const__37;
  
  public static final Keyword const__38;
  
  public static final AFn const__39;
  
  public static final AFn const__40;
  
  public static final AFn const__41;
  
  public static final AFn const__42;
  
  public static final Var const__43;
  
  public static final AFn const__50;
  
  public static final Object const__51;
  
  public static final Var const__52;
  
  public static final AFn const__54;
  
  public static final Object const__55;
  
  public static final Var const__56;
  
  public static final AFn const__58;
  
  public static final Object const__59;
  
  public static final Var const__60;
  
  public static final AFn const__62;
  
  public static final Object const__63;
  
  public static final Var const__64;
  
  public static final AFn const__66;
  
  public static final Object const__67;
  
  public static final Var const__68;
  
  public static final AFn const__70;
  
  public static final Object const__71;
  
  public static final Var const__72;
  
  public static final AFn const__74;
  
  public static final Object const__75;
  
  public static final Var const__76;
  
  public static final AFn const__78;
  
  public static final Object const__79;
  
  public static final Var const__80;
  
  public static final AFn const__82;
  
  public static final Object const__83;
  
  public static final Var const__84;
  
  public static final AFn const__86;
  
  public static final Object const__87;
  
  public static final Var const__88;
  
  public static final AFn const__92;
  
  public static final Var const__93;
  
  public static final AFn const__96;
  
  public static final Var const__97;
  
  public static final AFn const__100;
  
  public static final Var const__101;
  
  public static final AFn const__104;
  
  public static final Var const__105;
  
  public static final AFn const__108;
  
  public static final Var const__109;
  
  public static final AFn const__112;
  
  public static final Var const__113;
  
  public static final AFn const__116;
  
  public static final Var const__117;
  
  public static final AFn const__120;
  
  public static final Var const__121;
  
  public static final AFn const__124;
  
  public static final Var const__125;
  
  public static final AFn const__128;
  
  public static final Var const__129;
  
  public static final AFn const__132;
  
  public static final Var const__133;
  
  public static final AFn const__136;
  
  public static final Var const__137;
  
  public static final AFn const__140;
  
  public static final Var const__141;
  
  public static final AFn const__144;
  
  public static final Var const__145;
  
  public static final AFn const__148;
  
  public static final Var const__149;
  
  public static final AFn const__151;
  
  public static final Var const__152;
  
  public static final AFn const__154;
  
  public static final Var const__155;
  
  public static final AFn const__158;
  
  public static final Var const__159;
  
  public static final AFn const__162;
  
  public static final Var const__163;
  
  public static final AFn const__166;
  
  public static final Var const__167;
  
  public static final AFn const__170;
  
  public static final Var const__171;
  
  public static final AFn const__174;
  
  public static final Var const__175;
  
  public static final AFn const__178;
  
  public static final Var const__179;
  
  public static final AFn const__182;
  
  public static final Var const__183;
  
  public static final Object const__184;
  
  public static final Object const__185;
  
  public static final Object const__186;
  
  public static final Object const__187;
  
  public static final Object const__188;
  
  public static final Object const__189;
  
  public static final Object const__190;
  
  public static final Object const__191;
  
  public static final Var const__192;
  
  public static final AFn const__195;
  
  public static final Var const__196;
  
  public static final AFn const__199;
  
  public static final Var const__200;
  
  public static final AFn const__203;
  
  public static final Var const__204;
  
  public static final AFn const__207;
  
  public static void load() {
    LockingTransaction.runInTransaction((Callable)new marshal.fn__20354());
    const__43.setMeta((IPersistentMap)const__50);
    const__43.bindRoot(const__51);
    const__52.setMeta((IPersistentMap)const__54);
    const__52.bindRoot(const__55);
    const__56.setMeta((IPersistentMap)const__58);
    const__56.bindRoot(const__59);
    const__60.setMeta((IPersistentMap)const__62);
    const__60.bindRoot(const__63);
    const__64.setMeta((IPersistentMap)const__66);
    const__64.bindRoot(const__67);
    const__68.setMeta((IPersistentMap)const__70);
    const__68.bindRoot(const__71);
    const__72.setMeta((IPersistentMap)const__74);
    const__72.bindRoot(const__75);
    const__76.setMeta((IPersistentMap)const__78);
    const__76.bindRoot(const__79);
    const__80.setMeta((IPersistentMap)const__82);
    const__80.bindRoot(const__83);
    const__84.setMeta((IPersistentMap)const__86);
    const__84.bindRoot(const__87);
    const__88.setMeta((IPersistentMap)const__92);
    const__88.bindRoot(new marshal.marshal_from_seq());
    const__93.setMeta((IPersistentMap)const__96);
    const__93.bindRoot(new marshal.marshal_entry());
    const__97.setMeta((IPersistentMap)const__100);
    const__97.bindRoot(new marshal.marshal_from_entries());
    const__101.setMeta((IPersistentMap)const__104);
    const__101.bindRoot(new marshal.marshal_vector());
    const__105.setMeta((IPersistentMap)const__108);
    const__105.bindRoot(new marshal.marshal_map());
    const__109.setMeta((IPersistentMap)const__112);
    const__109.bindRoot(new marshal.unmarshal_entry());
    const__113.setMeta((IPersistentMap)const__116);
    const__113.bindRoot(new marshal.unmarshal_vector());
    const__117.setMeta((IPersistentMap)const__120);
    const__117.bindRoot(new marshal.unmarshal_set());
    const__121.setMeta((IPersistentMap)const__124);
    const__121.bindRoot(new marshal.unmarshal_map());
    const__125.setMeta((IPersistentMap)const__128);
    const__125.bindRoot(new marshal.marshal_datetime());
    const__129.setMeta((IPersistentMap)const__132);
    const__129.bindRoot(new marshal.unmarshal_datetime());
    const__133.setMeta((IPersistentMap)const__136);
    const__133.bindRoot(new marshal.unmarshal_keyword());
    const__137.setMeta((IPersistentMap)const__140);
    const__137.bindRoot(new marshal.extended_marshaller());
    const__141.setMeta((IPersistentMap)const__144);
    const__141.bindRoot(new marshal.extended_marshaller_throwing());
    const__145.setMeta((IPersistentMap)const__148);
    const__145.bindRoot(new marshal.unmarshal_extended());
    const__149.setMeta((IPersistentMap)const__151);
    const__149.bindRoot(PersistentArrayMap.EMPTY);
    const__152.setMeta((IPersistentMap)const__154);
    const__152.bindRoot(RT.mapUniqueKeys(new Object[] { const__71, const__129.getRawRoot(), const__51, const__113.getRawRoot(), const__59, const__121.getRawRoot(), const__83, const__133.getRawRoot(), const__67, const__117.getRawRoot() }));
    const__155.setMeta((IPersistentMap)const__158);
    const__155.bindRoot(new marshal.make_map_marshaller());
    const__159.setMeta((IPersistentMap)const__162);
    const__159.bindRoot(new marshal.make_seq_marshaller());
    const__163.setMeta((IPersistentMap)const__166);
    const__163.bindRoot(new marshal.make_map_unmarshaller());
    const__167.setMeta((IPersistentMap)const__170);
    const__167.bindRoot(new marshal.make_seq_unmarshaller());
    const__171.setMeta((IPersistentMap)const__174);
    const__171.bindRoot(new marshal.make_unmarshaller());
    const__175.setMeta((IPersistentMap)const__178);
    const__175.bindRoot(new marshal.make_marshaller());
    const__179.setMeta((IPersistentMap)const__182);
    const__179.bindRoot(new marshal.simple_QMARK_());
    const__192.setMeta((IPersistentMap)const__195);
    const__192.bindRoot(new marshal.make_record_marshaller_STAR_());
    const__196.setMeta((IPersistentMap)const__199);
    const__196.bindRoot(new marshal.make_record_unmarshaller_STAR_());
    const__200.setMeta((IPersistentMap)const__203);
    const__200.bindRoot(new marshal.make_record_marshallers_STAR_());
    const__204.setMeta((IPersistentMap)const__207);
    const__204.bindRoot(new marshal.make_record_marshallers());
    ((Var)const__204)










































































      
      .setMacro();
  }
  
  public static void __init0() {
    const__0 = (Var)RT.var("clojure.core", "in-ns");
    const__1 = (AFn)((IObj)Symbol.intern(null, "ginga.marshal")).withMeta((IPersistentMap)RT.map(new Object[] { RT.keyword(null, "doc"), "Extensible marshaller/unmarshaller targeting JSON/msgpack with\n  support for some clj/cljs types." }));
    const__2 = (Keyword)RT.keyword(null, "doc");
    const__3 = (AFn)RT.map(new Object[] { RT.keyword(null, "doc"), "Extensible marshaller/unmarshaller targeting JSON/msgpack with\n  support for some clj/cljs types." });
    const__4 = (AFn)Symbol.intern(null, "clojure.core");
    const__5 = RT.classForName("ginga.marshal.Marshal");
    const__6 = (Var)RT.var("clojure.core", "alter-meta!");
    const__7 = (Var)RT.var("ginga.marshal", "Marshal");
    const__8 = (Var)RT.var("clojure.core", "assoc");
    const__9 = (Var)RT.var("clojure.core", "assert-same-protocol");
    const__10 = (ISeq)PersistentList.create(Arrays.asList(new Object[] { ((IObj)Symbol.intern(null, "marshal")).withMeta((IPersistentMap)RT.map(new Object[] { RT.keyword(null, "doc"), null, RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "value"), Symbol.intern(null, "marshaller")) })) })) }));
    const__11 = (Var)RT.var("clojure.core", "alter-var-root");
    const__12 = (Var)RT.var("clojure.core", "merge");
    const__16 = (AFn)RT.map(new Object[] { RT.keyword(null, "on"), Symbol.intern(null, "ginga.marshal.Marshal"), RT.keyword(null, "on-interface"), RT.classForName("ginga.marshal.Marshal") });
    const__17 = (Keyword)RT.keyword(null, "sigs");
    const__18 = (AFn)RT.map(new Object[] { RT.keyword(null, "marshal"), RT.map(new Object[] { RT.keyword(null, "name"), ((IObj)Symbol.intern(null, "marshal")).withMeta((IPersistentMap)RT.map(new Object[] { RT.keyword(null, "doc"), null, RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "value"), Symbol.intern(null, "marshaller")) })) })), RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "value"), Symbol.intern(null, "marshaller")) })), RT.keyword(null, "doc"), null }) });
    const__19 = (Keyword)RT.keyword(null, "var");
    const__20 = (Keyword)RT.keyword(null, "method-map");
    const__21 = (Keyword)RT.keyword(null, "marshal");
    const__22 = (AFn)RT.map(new Object[] { RT.keyword(null, "marshal"), RT.keyword(null, "marshal") });
    const__23 = (Keyword)RT.keyword(null, "method-builders");
    const__24 = (Var)RT.var("clojure.core", "intern");
    const__25 = (Var)RT.var("clojure.core", "*ns*");
    const__26 = (Var)RT.var("clojure.core", "with-meta");
    const__27 = (AFn)((IObj)Symbol.intern(null, "marshal")).withMeta((IPersistentMap)RT.map(new Object[] { RT.keyword(null, "doc"), null, RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "value"), Symbol.intern(null, "marshaller")) })) }));
    const__28 = (AFn)RT.map(new Object[] { RT.keyword(null, "name"), ((IObj)Symbol.intern(null, "marshal")).withMeta((IPersistentMap)RT.map(new Object[] { RT.keyword(null, "doc"), null, RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "value"), Symbol.intern(null, "marshaller")) })) })), RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "value"), Symbol.intern(null, "marshaller")) })), RT.keyword(null, "doc"), null });
    const__29 = (Keyword)RT.keyword(null, "protocol");
    const__30 = (Var)RT.var("clojure.core", "-reset-methods");
    const__31 = (AFn)Symbol.intern(null, "Marshal");
    const__32 = RT.classForName("ginga.marshal.Unmarshal");
    const__33 = (Var)RT.var("ginga.marshal", "Unmarshal");
    const__34 = (ISeq)PersistentList.create(Arrays.asList(new Object[] { ((IObj)Symbol.intern(null, "unmarshal")).withMeta((IPersistentMap)RT.map(new Object[] { RT.keyword(null, "doc"), null, RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "value"), Symbol.intern(null, "unmarshaller")) })) })) }));
    const__36 = (AFn)RT.map(new Object[] { RT.keyword(null, "on"), Symbol.intern(null, "ginga.marshal.Unmarshal"), RT.keyword(null, "on-interface"), RT.classForName("ginga.marshal.Unmarshal") });
    const__37 = (AFn)RT.map(new Object[] { RT.keyword(null, "unmarshal"), RT.map(new Object[] { RT.keyword(null, "name"), ((IObj)Symbol.intern(null, "unmarshal")).withMeta((IPersistentMap)RT.map(new Object[] { RT.keyword(null, "doc"), null, RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "value"), Symbol.intern(null, "unmarshaller")) })) })), RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "value"), Symbol.intern(null, "unmarshaller")) })), RT.keyword(null, "doc"), null }) });
    const__38 = (Keyword)RT.keyword(null, "unmarshal");
    const__39 = (AFn)RT.map(new Object[] { RT.keyword(null, "unmarshal"), RT.keyword(null, "unmarshal") });
    const__40 = (AFn)((IObj)Symbol.intern(null, "unmarshal")).withMeta((IPersistentMap)RT.map(new Object[] { RT.keyword(null, "doc"), null, RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "value"), Symbol.intern(null, "unmarshaller")) })) }));
    const__41 = (AFn)RT.map(new Object[] { RT.keyword(null, "name"), ((IObj)Symbol.intern(null, "unmarshal")).withMeta((IPersistentMap)RT.map(new Object[] { RT.keyword(null, "doc"), null, RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "value"), Symbol.intern(null, "unmarshaller")) })) })), RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "value"), Symbol.intern(null, "unmarshaller")) })), RT.keyword(null, "doc"), null });
    const__42 = (AFn)Symbol.intern(null, "Unmarshal");
    const__43 = (Var)RT.var("ginga.marshal", "vector-tag");
    const__50 = (AFn)RT.map(new Object[] { RT.keyword(null, "const"), Boolean.TRUE, RT.keyword(null, "line"), Integer.valueOf(16), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "ginga/marshal.cljc" });
    const__51 = Long.valueOf(1L);
    const__52 = (Var)RT.var("ginga.marshal", "vector-with-meta-tag");
    const__54 = (AFn)RT.map(new Object[] { RT.keyword(null, "const"), Boolean.TRUE, RT.keyword(null, "line"), Integer.valueOf(17), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "ginga/marshal.cljc" });
    const__55 = Long.valueOf(2L);
    const__56 = (Var)RT.var("ginga.marshal", "map-tag");
    const__58 = (AFn)RT.map(new Object[] { RT.keyword(null, "const"), Boolean.TRUE, RT.keyword(null, "line"), Integer.valueOf(18), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "ginga/marshal.cljc" });
    const__59 = Long.valueOf(3L);
    const__60 = (Var)RT.var("ginga.marshal", "map-with-meta-tag");
    const__62 = (AFn)RT.map(new Object[] { RT.keyword(null, "const"), Boolean.TRUE, RT.keyword(null, "line"), Integer.valueOf(19), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "ginga/marshal.cljc" });
    const__63 = Long.valueOf(4L);
    const__64 = (Var)RT.var("ginga.marshal", "set-tag");
    const__66 = (AFn)RT.map(new Object[] { RT.keyword(null, "const"), Boolean.TRUE, RT.keyword(null, "line"), Integer.valueOf(20), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "ginga/marshal.cljc" });
    const__67 = Long.valueOf(5L);
    const__68 = (Var)RT.var("ginga.marshal", "datetime-tag");
    const__70 = (AFn)RT.map(new Object[] { RT.keyword(null, "const"), Boolean.TRUE, RT.keyword(null, "line"), Integer.valueOf(21), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "ginga/marshal.cljc" });
    const__71 = Long.valueOf(6L);
    const__72 = (Var)RT.var("ginga.marshal", "array-tag");
    const__74 = (AFn)RT.map(new Object[] { RT.keyword(null, "const"), Boolean.TRUE, RT.keyword(null, "line"), Integer.valueOf(22), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "ginga/marshal.cljc" });
    const__75 = Long.valueOf(7L);
    const__76 = (Var)RT.var("ginga.marshal", "object-tag");
    const__78 = (AFn)RT.map(new Object[] { RT.keyword(null, "const"), Boolean.TRUE, RT.keyword(null, "line"), Integer.valueOf(23), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "ginga/marshal.cljc" });
    const__79 = Long.valueOf(8L);
    const__80 = (Var)RT.var("ginga.marshal", "keyword-tag");
    const__82 = (AFn)RT.map(new Object[] { RT.keyword(null, "const"), Boolean.TRUE, RT.keyword(null, "line"), Integer.valueOf(24), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "ginga/marshal.cljc" });
    const__83 = Long.valueOf(9L);
    const__84 = (Var)RT.var("ginga.marshal", "extension-tag");
    const__86 = (AFn)RT.map(new Object[] { RT.keyword(null, "const"), Boolean.TRUE, RT.keyword(null, "doc"), "Numbers equal to or higher than extension-tag are application\n  specific. This number must never change since libraries will\n  marshal/unmarshal data from outside the system that was tagged with (+ extension-tag n).", RT.keyword(null, "line"), Integer.valueOf(26), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "ginga/marshal.cljc" });
    const__87 = Long.valueOf(16L);
    const__88 = (Var)RT.var("ginga.marshal", "marshal-from-seq");
    const__92 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "vals"), Symbol.intern(null, "marshaller")), Tuple.create(Symbol.intern(null, "tag1"), Symbol.intern(null, "vals"), Symbol.intern(null, "marshaller")), Tuple.create(Symbol.intern(null, "tag1"), Symbol.intern(null, "tag2"), Symbol.intern(null, "vals"), Symbol.intern(null, "marshaller")) })), RT.keyword(null, "line"), Integer.valueOf(33), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "ginga/marshal.cljc" });
    const__93 = (Var)RT.var("ginga.marshal", "marshal-entry");
    const__96 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Tuple.create(Symbol.intern(null, "k"), Symbol.intern(null, "v")), Symbol.intern(null, "marshaller")) })), RT.keyword(null, "line"), Integer.valueOf(41), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "ginga/marshal.cljc" });
    const__97 = (Var)RT.var("ginga.marshal", "marshal-from-entries");
  }
  
  public static void __init1() {
    const__100 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "entries"), Symbol.intern(null, "marshaller")), Tuple.create(Symbol.intern(null, "tag1"), Symbol.intern(null, "entries"), Symbol.intern(null, "marshaller")), Tuple.create(Symbol.intern(null, "tag1"), Symbol.intern(null, "tag2"), Symbol.intern(null, "entries"), Symbol.intern(null, "marshaller")) })), RT.keyword(null, "line"), Integer.valueOf(44), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "ginga/marshal.cljc" });
    const__101 = (Var)RT.var("ginga.marshal", "marshal-vector");
    const__104 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "v"), Symbol.intern(null, "meta-tag"), Symbol.intern(null, "marshaller")), Tuple.create(Symbol.intern(null, "v"), Symbol.intern(null, "marshaller")) })), RT.keyword(null, "line"), Integer.valueOf(52), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "ginga/marshal.cljc" });
    const__105 = (Var)RT.var("ginga.marshal", "marshal-map");
    const__108 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "v"), Symbol.intern(null, "meta-tag"), Symbol.intern(null, "marshaller")), Tuple.create(Symbol.intern(null, "v"), Symbol.intern(null, "marshaller")) })), RT.keyword(null, "line"), Integer.valueOf(62), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "ginga/marshal.cljc" });
    const__109 = (Var)RT.var("ginga.marshal", "unmarshal-entry");
    const__112 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Tuple.create(Symbol.intern(null, "k"), Symbol.intern(null, "v")), Symbol.intern(null, "unmarshaller")) })), RT.keyword(null, "line"), Integer.valueOf(72), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "ginga/marshal.cljc" });
    const__113 = (Var)RT.var("ginga.marshal", "unmarshal-vector");
    const__116 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "v"), Symbol.intern(null, "unmarshaller")) })), RT.keyword(null, "line"), Integer.valueOf(75), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "ginga/marshal.cljc" });
    const__117 = (Var)RT.var("ginga.marshal", "unmarshal-set");
    const__120 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "v"), Symbol.intern(null, "unmarshaller")) })), RT.keyword(null, "line"), Integer.valueOf(78), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "ginga/marshal.cljc" });
    const__121 = (Var)RT.var("ginga.marshal", "unmarshal-map");
    const__124 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "v"), Symbol.intern(null, "unmarshaller")) })), RT.keyword(null, "line"), Integer.valueOf(81), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "ginga/marshal.cljc" });
    const__125 = (Var)RT.var("ginga.marshal", "marshal-datetime");
    const__128 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "time"), Symbol.intern(null, "_")) })), RT.keyword(null, "line"), Integer.valueOf(87), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "ginga/marshal.cljc" });
    const__129 = (Var)RT.var("ginga.marshal", "unmarshal-datetime");
    const__132 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Tuple.create(Symbol.intern(null, "_"), Symbol.intern(null, "time-str")), Symbol.intern(null, "_")) })), RT.keyword(null, "line"), Integer.valueOf(90), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "ginga/marshal.cljc" });
    const__133 = (Var)RT.var("ginga.marshal", "unmarshal-keyword");
    const__136 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Tuple.create(Symbol.intern(null, "_"), Symbol.intern(null, "kw-str")), Symbol.intern(null, "_")) })), RT.keyword(null, "line"), Integer.valueOf(93), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "ginga/marshal.cljc" });
    const__137 = (Var)RT.var("ginga.marshal", "extended-marshaller");
    const__140 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "v"), Symbol.intern(null, "marshaller")) })), RT.keyword(null, "line"), Integer.valueOf(122), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "ginga/marshal.cljc" });
    const__141 = (Var)RT.var("ginga.marshal", "extended-marshaller-throwing");
    const__144 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "v"), Symbol.intern(null, "marshaller")) })), RT.keyword(null, "line"), Integer.valueOf(133), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "ginga/marshal.cljc" });
    const__145 = (Var)RT.var("ginga.marshal", "unmarshal-extended");
    const__148 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "unmarshal-without-meta"), Symbol.intern(null, "unmarshaller-by-tag"), Tuple.create(Symbol.intern(null, "_"), Symbol.intern(null, "meta-tag"), RT.keyword(null, "as"), Symbol.intern(null, "v")), Symbol.intern(null, "unmarshaller")) })), RT.keyword(null, "line"), Integer.valueOf(137), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "ginga/marshal.cljc" });
    const__149 = (Var)RT.var("ginga.marshal", "unmarshaller-by-tag-extended");
    const__151 = (AFn)RT.map(new Object[] { RT.keyword(null, "line"), Integer.valueOf(144), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "ginga/marshal.cljc" });
    const__152 = (Var)RT.var("ginga.marshal", "unmarshaller-by-tag");
    const__154 = (AFn)RT.map(new Object[] { RT.keyword(null, "line"), Integer.valueOf(152), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "ginga/marshal.cljc" });
    const__155 = (Var)RT.var("ginga.marshal", "make-map-marshaller");
    const__158 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "tag"), Symbol.intern(null, "v->map")) })), RT.keyword(null, "line"), Integer.valueOf(159), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "ginga/marshal.cljc" });
    const__159 = (Var)RT.var("ginga.marshal", "make-seq-marshaller");
    const__162 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "tag"), Symbol.intern(null, "v->seq")) })), RT.keyword(null, "line"), Integer.valueOf(163), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "ginga/marshal.cljc" });
    const__163 = (Var)RT.var("ginga.marshal", "make-map-unmarshaller");
    const__166 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "map->v")) })), RT.keyword(null, "line"), Integer.valueOf(167), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "ginga/marshal.cljc" });
    const__167 = (Var)RT.var("ginga.marshal", "make-seq-unmarshaller");
    const__170 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "seq->v")) })), RT.keyword(null, "line"), Integer.valueOf(171), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "ginga/marshal.cljc" });
    const__171 = (Var)RT.var("ginga.marshal", "make-unmarshaller");
    const__174 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "unmarshaller-by-tag"), Symbol.intern(null, "unmarshaller-by-tag-extended")) })), RT.keyword(null, "line"), Integer.valueOf(175), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "ginga/marshal.cljc" });
    const__175 = (Var)RT.var("ginga.marshal", "make-marshaller");
    const__178 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "marshaller-by-type"), Symbol.intern(null, "extended-marshaller")) })), RT.keyword(null, "line"), Integer.valueOf(206), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "ginga/marshal.cljc" });
    const__179 = (Var)RT.var("ginga.marshal", "simple?");
    const__182 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "value")) })), RT.keyword(null, "line"), Integer.valueOf(212), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "ginga/marshal.cljc" });
    const__183 = (Var)RT.var("clojure.core", "extend");
    const__184 = RT.classForName("java.lang.Object");
    const__185 = RT.classForName("java.lang.Double");
    const__186 = RT.classForName("java.lang.String");
    const__187 = RT.classForName("java.lang.Boolean");
    const__188 = RT.classForName("org.joda.time.DateTime");
    const__189 = RT.classForName("java.lang.Integer");
    const__190 = RT.classForName("clojure.lang.Keyword");
    const__191 = RT.classForName("java.lang.Long");
    const__192 = (Var)RT.var("ginga.marshal", "make-record-marshaller*");
    const__195 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(RT.map(new Object[] { RT.keyword(null, "keys"), Tuple.create(Symbol.intern(null, "tag"), Symbol.intern(null, "fields")), RT.keyword(null, "as"), Symbol.intern(null, "spec") })) })), RT.keyword(null, "line"), Integer.valueOf(266), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "ginga/marshal.cljc" });
    const__196 = (Var)RT.var("ginga.marshal", "make-record-unmarshaller*");
    const__199 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(RT.map(new Object[] { RT.keyword(null, "keys"), Tuple.create(Symbol.intern(null, "tag"), Symbol.intern(null, "pos->"), Symbol.intern(null, "map->"), Symbol.intern(null, "fields"), Symbol.intern(null, "defaults")), RT.keyword(null, "as"), Symbol.intern(null, "spec") })) })), RT.keyword(null, "line"), Integer.valueOf(277), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "ginga/marshal.cljc" });
  }
  
  public static void __init2() {
    const__200 = (Var)RT.var("ginga.marshal", "make-record-marshallers*");
    const__203 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "specs-by-type")) })), RT.keyword(null, "line"), Integer.valueOf(307), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "ginga/marshal.cljc" });
    const__204 = (Var)RT.var("ginga.marshal", "make-record-marshallers");
    const__207 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "specs-by-type")) })), RT.keyword(null, "line"), Integer.valueOf(323), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "ginga/marshal.cljc" });
  }
  
  static  {
    __init0();
    __init1();
    __init2();
    Compiler.pushNSandLoader(RT.classForName("ginga.marshal__init").getClassLoader());
    try {
      load();
    } finally {
      Var.popThreadBindings();
    } 
  }
}
