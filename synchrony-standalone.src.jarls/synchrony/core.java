package synchrony;

import clojure.lang.IFn;
import clojure.lang.RT;
import clojure.lang.Util;
import clojure.lang.Var;

public class core {
  private static final Var main__var;
  
  private static final Var equals__var;
  
  private static final Var toString__var;
  
  private static final Var hashCode__var;
  
  private static final Var clone__var = (hashCode__var = (toString__var = (equals__var = (main__var = Var.internPrivate("synchrony.core", "-main")).internPrivate("synchrony.core", "-equals")).internPrivate("synchrony.core", "-toString")).internPrivate("synchrony.core", "-hashCode")).internPrivate("synchrony.core", "-clone");
  
  static  {
    Util.loadWithClass("/synchrony/core", core.class);
  }
  
  public boolean equals(Object paramObject) {
    equals__var;
    equals__var.isBound() ? equals__var.get() : null;
    return ((equals__var.isBound() ? equals__var.get() : null) != null) ? ((Boolean)((IFn)(equals__var.isBound() ? equals__var.get() : null)).invoke(this, paramObject)).booleanValue() : super.equals(paramObject);
  }
  
  public String toString() {
    toString__var;
    toString__var.isBound() ? toString__var.get() : null;
    return ((toString__var.isBound() ? toString__var.get() : null) != null) ? (String)((IFn)(toString__var.isBound() ? toString__var.get() : null)).invoke(this) : super.toString();
  }
  
  public int hashCode() {
    hashCode__var;
    hashCode__var.isBound() ? hashCode__var.get() : null;
    return ((hashCode__var.isBound() ? hashCode__var.get() : null) != null) ? ((Number)((IFn)(hashCode__var.isBound() ? hashCode__var.get() : null)).invoke(this)).intValue() : super.hashCode();
  }
  
  public Object clone() {
    clone__var;
    clone__var.isBound() ? clone__var.get() : null;
    return ((clone__var.isBound() ? clone__var.get() : null) != null) ? ((IFn)(clone__var.isBound() ? clone__var.get() : null)).invoke(this) : super.clone();
  }
  
  public static void main(String[] paramArrayOfString) {
    main__var;
    if ((main__var.isBound() ? main__var.get() : null) != null) {
      ((IFn)(main__var.isBound() ? main__var.get() : null)).applyTo(RT.seq(paramArrayOfString));
    } else {
      throw new UnsupportedOperationException("synchrony.core/-main not defined");
    } 
  }
}
