package synchrony.sync;

import clojure.lang.AFn;
import clojure.lang.Compiler;
import clojure.lang.IFn;
import clojure.lang.IObj;
import clojure.lang.IPersistentMap;
import clojure.lang.Keyword;
import clojure.lang.LockingTransaction;
import clojure.lang.PersistentHashSet;
import clojure.lang.PersistentList;
import clojure.lang.RT;
import clojure.lang.Symbol;
import clojure.lang.Tuple;
import clojure.lang.Var;
import java.util.Arrays;
import java.util.concurrent.Callable;

public class end_point__init {
  public static final Var const__0;
  
  public static final AFn const__1;
  
  public static final AFn const__2;
  
  public static final Var const__3;
  
  public static final AFn const__11;
  
  public static final Var const__12;
  
  public static final AFn const__15;
  
  public static final Var const__16;
  
  public static final AFn const__19;
  
  public static final Var const__20;
  
  public static final AFn const__23;
  
  public static final Var const__24;
  
  public static final AFn const__27;
  
  public static final Var const__28;
  
  public static final AFn const__31;
  
  public static final Var const__32;
  
  public static final AFn const__35;
  
  public static final Var const__36;
  
  public static final AFn const__39;
  
  public static final Var const__40;
  
  public static final AFn const__43;
  
  public static final Var const__44;
  
  public static final AFn const__47;
  
  public static final Var const__48;
  
  public static final AFn const__51;
  
  public static final Var const__52;
  
  public static final AFn const__55;
  
  public static final Var const__56;
  
  public static final AFn const__59;
  
  public static final Var const__60;
  
  public static final AFn const__63;
  
  public static final Var const__64;
  
  public static final AFn const__66;
  
  public static final Var const__67;
  
  public static final Var const__68;
  
  public static final Var const__69;
  
  public static final AFn const__72;
  
  public static final Var const__73;
  
  public static final AFn const__76;
  
  public static final Var const__77;
  
  public static final AFn const__80;
  
  public static final Var const__81;
  
  public static final AFn const__84;
  
  public static final Var const__85;
  
  public static final AFn const__88;
  
  public static final Var const__89;
  
  public static final AFn const__92;
  
  public static final Var const__93;
  
  public static final AFn const__96;
  
  public static final Var const__97;
  
  public static final AFn const__100;
  
  public static final Var const__101;
  
  public static final AFn const__104;
  
  public static final Var const__105;
  
  public static final AFn const__108;
  
  public static final Var const__109;
  
  public static final AFn const__112;
  
  public static final Var const__113;
  
  public static final AFn const__116;
  
  public static final Var const__117;
  
  public static final AFn const__120;
  
  public static final Var const__121;
  
  public static final AFn const__124;
  
  public static final Var const__125;
  
  public static final Keyword const__126;
  
  public static final Keyword const__127;
  
  public static final Keyword const__128;
  
  public static final Var const__129;
  
  public static final AFn const__132;
  
  public static final Keyword const__133;
  
  public static final Keyword const__134;
  
  public static final Keyword const__135;
  
  public static final Keyword const__136;
  
  public static final Var const__137;
  
  public static final Keyword const__138;
  
  public static final Keyword const__139;
  
  public static final Keyword const__140;
  
  public static final Keyword const__141;
  
  public static final Keyword const__142;
  
  public static final Var const__143;
  
  public static final AFn const__146;
  
  public static final Var const__147;
  
  public static final AFn const__150;
  
  public static final Var const__151;
  
  public static final AFn const__154;
  
  public static final Keyword const__155;
  
  public static final Keyword const__156;
  
  public static final Keyword const__157;
  
  public static final Var const__158;
  
  public static final AFn const__161;
  
  public static final Var const__162;
  
  public static final AFn const__165;
  
  public static final Var const__166;
  
  public static final AFn const__169;
  
  public static final Var const__170;
  
  public static final AFn const__173;
  
  public static final Var const__174;
  
  public static final AFn const__177;
  
  public static final Var const__178;
  
  public static final AFn const__181;
  
  public static final Var const__182;
  
  public static final AFn const__184;
  
  public static final AFn const__186;
  
  public static final Var const__187;
  
  public static final AFn const__190;
  
  public static final Var const__191;
  
  public static final AFn const__194;
  
  public static final Var const__195;
  
  public static final AFn const__198;
  
  public static final Var const__199;
  
  public static final AFn const__202;
  
  public static final Var const__203;
  
  public static final AFn const__206;
  
  public static final Var const__207;
  
  public static final AFn const__210;
  
  public static final Var const__211;
  
  public static final AFn const__214;
  
  public static final Keyword const__215;
  
  public static final Var const__216;
  
  public static final AFn const__219;
  
  public static final Var const__220;
  
  public static final AFn const__223;
  
  public static final Var const__224;
  
  public static final AFn const__227;
  
  public static final Var const__228;
  
  public static final AFn const__231;
  
  public static final Var const__232;
  
  public static final AFn const__235;
  
  public static void load() {
    LockingTransaction.runInTransaction((Callable)new end_point.fn__65547());
    const__3.setMeta((IPersistentMap)const__11);
    const__3.bindRoot(new end_point.transform_event());
    const__12.setMeta((IPersistentMap)const__15);
    const__12.bindRoot(new end_point.connected_event());
    const__16.setMeta((IPersistentMap)const__19);
    const__16.bindRoot(new end_point.disconnected_event());
    const__20.setMeta((IPersistentMap)const__23);
    const__20.bindRoot(new end_point.undo_event());
    const__24.setMeta((IPersistentMap)const__27);
    const__24.bindRoot(new end_point.redo_event());
    const__28.setMeta((IPersistentMap)const__31);
    const__28.bindRoot(new end_point.undo_level_event());
    const__32.setMeta((IPersistentMap)const__35);
    const__32.bindRoot(new end_point.dom_update_event());
    const__36.setMeta((IPersistentMap)const__39);
    const__36.bindRoot(new end_point.end_event());
    const__40.setMeta((IPersistentMap)const__43);
    const__40.bindRoot(new end_point.ack_event());
    const__44.setMeta((IPersistentMap)const__47);
    const__44.bindRoot(new end_point.init_event());
    const__48.setMeta((IPersistentMap)const__51);
    const__48.bindRoot(new end_point.selection_update_event());
    const__52.setMeta((IPersistentMap)const__55);
    const__52.bindRoot(new end_point.update_event());
    const__56.setMeta((IPersistentMap)const__59);
    const__56.bindRoot(new end_point.message_event());
    const__60.setMeta((IPersistentMap)const__63);
    const__60.bindRoot(new end_point.dispatch_event());
    const__64.setMeta((IPersistentMap)const__66);
    const__64





















































      
      .bindRoot(((IFn)const__67.getRawRoot()).invoke(const__68.getRawRoot(), new end_point.fn__66026()));
    const__69.setMeta((IPersistentMap)const__72);
    const__69.bindRoot(new end_point.transform_revisions());
    const__73.setMeta((IPersistentMap)const__76);
    const__73.bindRoot(new end_point.csr_transition());
    const__77.setMeta((IPersistentMap)const__80);
    const__77.bindRoot(new end_point.local_transition());
    const__81.setMeta((IPersistentMap)const__84);
    const__81.bindRoot(new end_point.make_init_rev());
    const__85.setMeta((IPersistentMap)const__88);
    const__85.bindRoot(new end_point.reconcile());
    const__89.setMeta((IPersistentMap)const__92);
    const__89.bindRoot(new end_point.init_transition());
    const__93.setMeta((IPersistentMap)const__96);
    const__93.bindRoot(new end_point.close_transition());
    const__97.setMeta((IPersistentMap)const__100);
    const__97.bindRoot(new end_point.presence_transition());
    const__101.setMeta((IPersistentMap)const__104);
    const__101.bindRoot(new end_point.init_request_having_rev());
    const__105.setMeta((IPersistentMap)const__108);
    const__105.bindRoot(new end_point.bound_tree_delta());
    const__109.setMeta((IPersistentMap)const__112);
    const__109.bindRoot(new end_point.init_request_having_revision());
    const__113.setMeta((IPersistentMap)const__116);
    const__113.bindRoot(new end_point.init_session());
    const__117.setMeta((IPersistentMap)const__120);
    const__117.bindRoot(new end_point.close_session());
    const__121.setMeta((IPersistentMap)const__124);
    const__121.bindRoot(new end_point.send_ping_transition());
    const__129.setMeta((IPersistentMap)const__132);
    const__129.bindRoot(new end_point.telepointer_update_QMARK_());
    const__143.setMeta((IPersistentMap)const__146);
    const__143.bindRoot(new end_point.set_selection());
    const__147.setMeta((IPersistentMap)const__150);
    const__147.bindRoot(new end_point.unredo_transition());
    const__151.setMeta((IPersistentMap)const__154);
    const__151.bindRoot(new end_point.unredo());
    const__158.setMeta((IPersistentMap)const__161);
    const__158.bindRoot(new end_point.close());
    const__162.setMeta((IPersistentMap)const__165);
    const__162.bindRoot(new end_point.can_send_QMARK_());
    const__166.setMeta((IPersistentMap)const__169);
    const__166.bindRoot(new end_point.send_message());
    const__170.setMeta((IPersistentMap)const__173);
    const__170.bindRoot(new end_point.drop_butlast());
    const__174.setMeta((IPersistentMap)const__177);
    const__174.bindRoot(new end_point.perform_transition());
    const__178.setMeta((IPersistentMap)const__181);
    const__178.bindRoot(new end_point.perform_transition_async());
    const__182.setMeta((IPersistentMap)const__184);
    const__182.bindRoot(const__186);
    const__187.setMeta((IPersistentMap)const__190);
    const__187.bindRoot(new end_point.receive_messages_transition());
    const__191.setMeta((IPersistentMap)const__194);
    const__191.bindRoot(new end_point.flush_receive_buffer_transition());
    const__195.setMeta((IPersistentMap)const__198);
    const__195.bindRoot(new end_point.receive_message_transition());
    const__199.setMeta((IPersistentMap)const__202);
    const__199.bindRoot(new end_point.blocking_chan());
    const__203.setMeta((IPersistentMap)const__206);
    const__203.bindRoot(new end_point.run_sync_process());
    const__207.setMeta((IPersistentMap)const__210);
    const__207.bindRoot(new end_point.reinit_backoff());
    const__211.setMeta((IPersistentMap)const__214);
    const__211.bindRoot(new end_point.run_supervised_sync_process());
    const__216.setMeta((IPersistentMap)const__219);
    const__216.bindRoot(new end_point.process_event());
    const__220.setMeta((IPersistentMap)const__223);
    const__220.bindRoot(new end_point.validate_history());
    const__224.setMeta((IPersistentMap)const__227);
    const__224.bindRoot(new end_point.init_from_history());
    const__228.setMeta((IPersistentMap)const__231);
    const__228.bindRoot(new end_point.history());
    const__232.setMeta((IPersistentMap)const__235);
    const__232.bindRoot(new end_point.create_end_point());
  }
  
  public static void __init0() {
    const__0 = (Var)RT.var("clojure.core", "in-ns");
    const__1 = (AFn)Symbol.intern(null, "synchrony.sync.end-point");
    const__2 = (AFn)Symbol.intern(null, "clojure.core");
    const__3 = (Var)RT.var("synchrony.sync.end-point", "transform-event");
    const__11 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(), Tuple.create(Symbol.intern(null, "G__65549")) })), RT.keyword(null, "line"), Integer.valueOf(40), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/sync/end_point.cljc" });
    const__12 = (Var)RT.var("synchrony.sync.end-point", "connected-event");
    const__15 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(), Tuple.create(Symbol.intern(null, "G__65576")) })), RT.keyword(null, "line"), Integer.valueOf(41), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/sync/end_point.cljc" });
    const__16 = (Var)RT.var("synchrony.sync.end-point", "disconnected-event");
    const__19 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(), Tuple.create(Symbol.intern(null, "G__65603")) })), RT.keyword(null, "line"), Integer.valueOf(42), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/sync/end_point.cljc" });
    const__20 = (Var)RT.var("synchrony.sync.end-point", "undo-event");
    const__23 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(), Tuple.create(Symbol.intern(null, "G__65627")) })), RT.keyword(null, "line"), Integer.valueOf(43), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/sync/end_point.cljc" });
    const__24 = (Var)RT.var("synchrony.sync.end-point", "redo-event");
    const__27 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(), Tuple.create(Symbol.intern(null, "G__65651")) })), RT.keyword(null, "line"), Integer.valueOf(44), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/sync/end_point.cljc" });
    const__28 = (Var)RT.var("synchrony.sync.end-point", "undo-level-event");
    const__31 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(), Tuple.create(Symbol.intern(null, "G__65675")) })), RT.keyword(null, "line"), Integer.valueOf(45), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/sync/end_point.cljc" });
    const__32 = (Var)RT.var("synchrony.sync.end-point", "dom-update-event");
    const__35 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(), Tuple.create(Symbol.intern(null, "G__65699")) })), RT.keyword(null, "line"), Integer.valueOf(46), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/sync/end_point.cljc" });
    const__36 = (Var)RT.var("synchrony.sync.end-point", "end-event");
    const__39 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(), Tuple.create(Symbol.intern(null, "G__65723")) })), RT.keyword(null, "line"), Integer.valueOf(47), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/sync/end_point.cljc" });
    const__40 = (Var)RT.var("synchrony.sync.end-point", "ack-event");
    const__43 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(), Tuple.create(Symbol.intern(null, "G__65747")) })), RT.keyword(null, "line"), Integer.valueOf(48), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/sync/end_point.cljc" });
    const__44 = (Var)RT.var("synchrony.sync.end-point", "init-event");
    const__47 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(), Tuple.create(Symbol.intern(null, "G__65777")) })), RT.keyword(null, "line"), Integer.valueOf(49), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/sync/end_point.cljc" });
    const__48 = (Var)RT.var("synchrony.sync.end-point", "selection-update-event");
    const__51 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(), Tuple.create(Symbol.intern(null, "G__65804")) })), RT.keyword(null, "line"), Integer.valueOf(50), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/sync/end_point.cljc" });
    const__52 = (Var)RT.var("synchrony.sync.end-point", "update-event");
    const__55 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(), Tuple.create(Symbol.intern(null, "G__65834")) })), RT.keyword(null, "line"), Integer.valueOf(51), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/sync/end_point.cljc" });
    const__56 = (Var)RT.var("synchrony.sync.end-point", "message-event");
    const__59 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "message")) })), RT.keyword(null, "line"), Integer.valueOf(55), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/sync/end_point.cljc" });
    const__60 = (Var)RT.var("synchrony.sync.end-point", "dispatch-event");
    const__63 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "event-handlers"), Symbol.intern(null, "event")) })), RT.keyword(null, "line"), Integer.valueOf(65), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/sync/end_point.cljc" });
    const__64 = (Var)RT.var("synchrony.sync.end-point", "record-revisions");
    const__66 = (AFn)RT.map(new Object[] { RT.keyword(null, "line"), Integer.valueOf(123), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/sync/end_point.cljc" });
    const__67 = (Var)RT.var("clojure.core", "partial");
    const__68 = (Var)RT.var("ginga.core", "contextual-map");
    const__69 = (Var)RT.var("synchrony.sync.end-point", "transform-revisions");
    const__72 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "transient?"), Symbol.intern(null, "tr-state"), Symbol.intern(null, "revision-records")) })), RT.keyword(null, "line"), Integer.valueOf(130), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/sync/end_point.cljc" });
    const__73 = (Var)RT.var("synchrony.sync.end-point", "csr-transition");
    const__76 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "end-point"), Symbol.intern(null, "revision-records"), Symbol.intern(null, "update-type")) })), RT.keyword(null, "line"), Integer.valueOf(140), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/sync/end_point.cljc" });
    const__77 = (Var)RT.var("synchrony.sync.end-point", "local-transition");
    const__80 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "end-point"), Symbol.intern(null, "new-tree"), Symbol.intern(null, "revisions")) })), RT.keyword(null, "line"), Integer.valueOf(171), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/sync/end_point.cljc" });
    const__81 = (Var)RT.var("synchrony.sync.end-point", "make-init-rev");
    const__84 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "end-point")) })), RT.keyword(null, "line"), Integer.valueOf(200), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/sync/end_point.cljc" });
    const__85 = (Var)RT.var("synchrony.sync.end-point", "reconcile");
    const__88 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "end-point"), Symbol.intern(null, "init-response")) })), RT.keyword(null, "line"), Integer.valueOf(204), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/sync/end_point.cljc" });
    const__89 = (Var)RT.var("synchrony.sync.end-point", "init-transition");
    const__92 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "end-point"), Symbol.intern(null, "init-response")) })), RT.keyword(null, "line"), Integer.valueOf(267), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/sync/end_point.cljc" });
    const__93 = (Var)RT.var("synchrony.sync.end-point", "close-transition");
    const__96 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "end-point")) })), RT.keyword(null, "line"), Integer.valueOf(306), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/sync/end_point.cljc" });
    const__97 = (Var)RT.var("synchrony.sync.end-point", "presence-transition");
  }
  
  public static void __init1() {
    const__100 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "end-point"), Symbol.intern(null, "joined"), Symbol.intern(null, "closed")) })), RT.keyword(null, "line"), Integer.valueOf(309), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/sync/end_point.cljc" });
    const__101 = (Var)RT.var("synchrony.sync.end-point", "init-request-having-rev");
    const__104 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "end-point"), Symbol.intern(null, "invalidate-ids")) })), RT.keyword(null, "line"), Integer.valueOf(314), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/sync/end_point.cljc" });
    const__105 = (Var)RT.var("synchrony.sync.end-point", "bound-tree-delta");
    const__108 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "end-point")) })), RT.keyword(null, "line"), Integer.valueOf(318), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/sync/end_point.cljc" });
    const__109 = (Var)RT.var("synchrony.sync.end-point", "init-request-having-revision");
    const__112 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "end-point")) })), RT.keyword(null, "line"), Integer.valueOf(324), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/sync/end_point.cljc" });
    const__113 = (Var)RT.var("synchrony.sync.end-point", "init-session");
    const__116 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "end-point"), Symbol.intern(null, "connection")) })), RT.keyword(null, "line"), Integer.valueOf(331), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/sync/end_point.cljc" });
    const__117 = (Var)RT.var("synchrony.sync.end-point", "close-session");
    const__120 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "end-point")) })), RT.keyword(null, "line"), Integer.valueOf(341), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/sync/end_point.cljc" });
    const__121 = (Var)RT.var("synchrony.sync.end-point", "send-ping-transition");
    const__124 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "end-point")) })), RT.keyword(null, "line"), Integer.valueOf(354), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/sync/end_point.cljc" });
    const__125 = (Var)RT.var("synchrony.sync.end-point", "receive-message");
    const__126 = (Keyword)RT.keyword(null, "ping-message");
    const__127 = (Keyword)RT.keyword(null, "init-response");
    const__128 = (Keyword)RT.keyword(null, "ack-message");
    const__129 = (Var)RT.var("synchrony.sync.end-point", "telepointer-update?");
    const__132 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "revision")) })), RT.keyword(null, "line"), Integer.valueOf(392), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/sync/end_point.cljc" });
    const__133 = (Keyword)RT.keyword(null, "revision-records");
    const__134 = (Keyword)RT.keyword(null, "leave-request");
    const__135 = (Keyword)RT.keyword(null, "join-request");
    const__136 = (Keyword)RT.keyword(null, "tp-remove-request");
    const__137 = (Var)RT.var("synchrony.sync.end-point", "receive-event");
    const__138 = (Keyword)RT.keyword(null, "transform");
    const__139 = (Keyword)RT.keyword(null, "connected");
    const__140 = (Keyword)RT.keyword(null, "disconnected");
    const__141 = (Keyword)RT.keyword(null, "end");
    const__142 = (Keyword)RT.keyword(null, "error-message");
    const__143 = (Var)RT.var("synchrony.sync.end-point", "set-selection");
    const__146 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "delta"), Symbol.intern(null, "state")) })), RT.keyword(null, "line"), Integer.valueOf(450), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/sync/end_point.cljc" });
    const__147 = (Var)RT.var("synchrony.sync.end-point", "unredo-transition");
    const__150 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "unredo"), Symbol.intern(null, "end-point")) })), RT.keyword(null, "line"), Integer.valueOf(457), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/sync/end_point.cljc" });
    const__151 = (Var)RT.var("synchrony.sync.end-point", "unredo");
    const__154 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "end-point"), Symbol.intern(null, "unredo")) })), RT.keyword(null, "line"), Integer.valueOf(477), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/sync/end_point.cljc" });
    const__155 = (Keyword)RT.keyword(null, "undo");
    const__156 = (Keyword)RT.keyword(null, "redo");
    const__157 = (Keyword)RT.keyword(null, "undo-level");
    const__158 = (Var)RT.var("synchrony.sync.end-point", "close");
    const__161 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "end-point")) })), RT.keyword(null, "line"), Integer.valueOf(492), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/sync/end_point.cljc" });
    const__162 = (Var)RT.var("synchrony.sync.end-point", "can-send?");
    const__165 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "end-point"), Symbol.intern(null, "message")) })), RT.keyword(null, "line"), Integer.valueOf(495), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/sync/end_point.cljc" });
    const__166 = (Var)RT.var("synchrony.sync.end-point", "send-message");
    const__169 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "end-point"), Symbol.intern(null, "message")) })), RT.keyword(null, "line"), Integer.valueOf(500), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/sync/end_point.cljc" });
    const__170 = (Var)RT.var("synchrony.sync.end-point", "drop-butlast");
    const__173 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "coll")) })), RT.keyword(null, "line"), Integer.valueOf(505), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/sync/end_point.cljc" });
    const__174 = (Var)RT.var("synchrony.sync.end-point", "perform-transition");
    const__177 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "end-point-state"), Symbol.intern(null, "transition")) })), RT.keyword(null, "line"), Integer.valueOf(508), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/sync/end_point.cljc" });
    const__178 = (Var)RT.var("synchrony.sync.end-point", "perform-transition-async");
    const__181 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "end-point-state"), Symbol.intern(null, "f")) })), RT.keyword(null, "line"), Integer.valueOf(534), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/sync/end_point.cljc" });
    const__182 = (Var)RT.var("synchrony.sync.end-point", "messages-requiring-cmt");
    const__184 = (AFn)RT.map(new Object[] { RT.keyword(null, "line"), Integer.valueOf(540), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/sync/end_point.cljc" });
    const__186 = (AFn)PersistentHashSet.create(new Object[] { RT.keyword(null, "revision-record"), RT.keyword(null, "init-response") });
    const__187 = (Var)RT.var("synchrony.sync.end-point", "receive-messages-transition");
    const__190 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "end-point"), Symbol.intern(null, "messages")) })), RT.keyword(null, "line"), Integer.valueOf(543), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/sync/end_point.cljc" });
    const__191 = (Var)RT.var("synchrony.sync.end-point", "flush-receive-buffer-transition");
    const__194 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "end-point")) })), RT.keyword(null, "line"), Integer.valueOf(562), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/sync/end_point.cljc" });
    const__195 = (Var)RT.var("synchrony.sync.end-point", "receive-message-transition");
    const__198 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "end-point"), Symbol.intern(null, "message")) })), RT.keyword(null, "line"), Integer.valueOf(568), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/sync/end_point.cljc" });
    const__199 = (Var)RT.var("synchrony.sync.end-point", "blocking-chan");
  }
  
  public static void __init2() {
    const__202 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create() })), RT.keyword(null, "line"), Integer.valueOf(585), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/sync/end_point.cljc" });
    const__203 = (Var)RT.var("synchrony.sync.end-point", "run-sync-process");
    const__206 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "end-point"), Symbol.intern(null, "connection")) })), RT.keyword(null, "line"), Integer.valueOf(589), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/sync/end_point.cljc" });
    const__207 = (Var)RT.var("synchrony.sync.end-point", "reinit-backoff");
    const__210 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(RT.map(new Object[] { RT.keyword(null, "keys"), Tuple.create(Symbol.intern(null, "max-attempts"), Symbol.intern(null, "wait-cap-ms"), Symbol.intern(null, "wait-base-ms"), Symbol.intern(null, "wait-reset-ms")), RT.keyword(null, "or"), RT.map(new Object[] { Symbol.intern(null, "max-attempts"), Long.valueOf(10L), Symbol.intern(null, "wait-base-ms"), Long.valueOf(1000L), Symbol.intern(null, "wait-cap-ms"), Long.valueOf(20000L), Symbol.intern(null, "wait-reset-ms"), ((IObj)PersistentList.create(Arrays.asList(new Object[] { Symbol.intern(null, "*"), Long.valueOf(60000L), Long.valueOf(4L) }))).withMeta((IPersistentMap)RT.map(new Object[] { RT.keyword(null, "line"), Integer.valueOf(640), RT.keyword(null, "column"), Integer.valueOf(45) })) }) })) })), RT.keyword(null, "line"), Integer.valueOf(633), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/sync/end_point.cljc" });
    const__211 = (Var)RT.var("synchrony.sync.end-point", "run-supervised-sync-process");
    const__214 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(RT.map(new Object[] { RT.keyword(null, "keys"), Tuple.create(Symbol.intern(null, "on-error"), Symbol.intern(null, "reinit-opts")), RT.keyword(null, "or"), RT.map(new Object[] { Symbol.intern(null, "on-error"), ((IObj)PersistentList.create(Arrays.asList(new Object[] { Symbol.intern(null, "fn"), Tuple.create(Symbol.intern(null, "&"), Symbol.intern(null, "etc")) }))).withMeta((IPersistentMap)RT.map(new Object[] { RT.keyword(null, "line"), Integer.valueOf(650), RT.keyword(null, "column"), Integer.valueOf(51) })) }) }), Symbol.intern(null, "end-point"), Symbol.intern(null, "connection"), Symbol.intern(null, "on-new-state")) })), RT.keyword(null, "line"), Integer.valueOf(649), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/sync/end_point.cljc" });
    const__215 = (Keyword)RT.keyword(null, "dom-update");
    const__216 = (Var)RT.var("synchrony.sync.end-point", "process-event");
    const__219 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "end-point"), Symbol.intern(null, "event")) })), RT.keyword(null, "line"), Integer.valueOf(679), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/sync/end_point.cljc" });
    const__220 = (Var)RT.var("synchrony.sync.end-point", "validate-history");
    const__223 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "history")) })), RT.keyword(null, "line"), Integer.valueOf(682), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/sync/end_point.cljc" });
    const__224 = (Var)RT.var("synchrony.sync.end-point", "init-from-history");
    const__227 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "end-point"), Symbol.intern(null, "history")) })), RT.keyword(null, "line"), Integer.valueOf(687), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/sync/end_point.cljc" });
    const__228 = (Var)RT.var("synchrony.sync.end-point", "history");
    const__231 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "end-point")) })), RT.keyword(null, "line"), Integer.valueOf(704), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/sync/end_point.cljc" });
    const__232 = (Var)RT.var("synchrony.sync.end-point", "create-end-point");
    const__235 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { ((IObj)Tuple.create(RT.map(new Object[] { RT.keyword(null, "keys"), RT.vector(new Object[] { Symbol.intern(null, "id"), Symbol.intern(null, "event-handlers"), Symbol.intern(null, "advance"), Symbol.intern(null, "tree"), Symbol.intern(null, "history"), Symbol.intern(null, "init-rev"), Symbol.intern(null, "wait?"), Symbol.intern(null, "transient?"), Symbol.intern(null, "ping-interval-ms"), Symbol.intern(null, "pong-timeout-ms") }), RT.keyword(null, "or"), RT.map(new Object[] { Symbol.intern(null, "id"), ((IObj)PersistentList.create(Arrays.asList(new Object[] { Symbol.intern("random", "id") }))).withMeta((IPersistentMap)RT.map(new Object[] { RT.keyword(null, "line"), Integer.valueOf(715), RT.keyword(null, "column"), Integer.valueOf(34) })), Symbol.intern(null, "wait?"), ((IObj)PersistentList.create(Arrays.asList(new Object[] { Symbol.intern(null, "atom"), Boolean.FALSE }))).withMeta((IPersistentMap)RT.map(new Object[] { RT.keyword(null, "line"), Integer.valueOf(715), RT.keyword(null, "column"), Integer.valueOf(52) })) }), RT.keyword(null, "as"), Symbol.intern(null, "opts") }))).withMeta((IPersistentMap)RT.map(new Object[] { RT.keyword(null, "pre"), Tuple.create(((IObj)PersistentList.create(Arrays.asList(new Object[] { Symbol.intern(null, "not"), ((IObj)PersistentList.create(Arrays.asList(new Object[] { Symbol.intern(null, "and"), Symbol.intern(null, "tree"), Symbol.intern(null, "history") }))).withMeta((IPersistentMap)RT.map(new Object[] { RT.keyword(null, "line"), Integer.valueOf(717), RT.keyword(null, "column"), Integer.valueOf(15) })) }))).withMeta((IPersistentMap)RT.map(new Object[] { RT.keyword(null, "line"), Integer.valueOf(717), RT.keyword(null, "column"), Integer.valueOf(10) }))) })) })), RT.keyword(null, "line"), Integer.valueOf(712), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/sync/end_point.cljc" });
  }
  
  static  {
    __init0();
    __init1();
    __init2();
    Compiler.pushNSandLoader(RT.classForName("synchrony.sync.end_point__init").getClassLoader());
    try {
      load();
    } finally {
      Var.popThreadBindings();
    } 
  }
}
