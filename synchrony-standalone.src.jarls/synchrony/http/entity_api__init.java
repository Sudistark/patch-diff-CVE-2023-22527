package synchrony.http;

import clojure.lang.AFn;
import clojure.lang.Compiler;
import clojure.lang.IFn;
import clojure.lang.IPersistentMap;
import clojure.lang.Keyword;
import clojure.lang.LockingTransaction;
import clojure.lang.PersistentList;
import clojure.lang.RT;
import clojure.lang.Symbol;
import clojure.lang.Tuple;
import clojure.lang.Var;
import clout.core.CompiledRoute;
import java.util.Arrays;
import java.util.concurrent.Callable;
import java.util.regex.Pattern;

public class entity_api__init {
  public static final Var const__0;
  
  public static final AFn const__1;
  
  public static final AFn const__2;
  
  public static final Var const__3;
  
  public static final AFn const__9;
  
  public static final Keyword const__10;
  
  public static final Var const__11;
  
  public static final Keyword const__12;
  
  public static final Var const__13;
  
  public static final Var const__14;
  
  public static final AFn const__18;
  
  public static final Var const__19;
  
  public static final AFn const__22;
  
  public static final Var const__23;
  
  public static final AFn const__26;
  
  public static final Var const__27;
  
  public static final AFn const__30;
  
  public static final Var const__31;
  
  public static final AFn const__33;
  
  public static final Var const__34;
  
  public static final Keyword const__35;
  
  public static final Var const__36;
  
  public static final Keyword const__37;
  
  public static final Var const__38;
  
  public static final Keyword const__39;
  
  public static final Var const__40;
  
  public static final Var const__41;
  
  public static final Var const__42;
  
  public static final AFn const__44;
  
  public static final Keyword const__45;
  
  public static final Var const__46;
  
  public static final AFn const__48;
  
  public static final Var const__49;
  
  public static final AFn const__51;
  
  public static final Var const__52;
  
  public static final Keyword const__53;
  
  public static final Var const__54;
  
  public static final Keyword const__55;
  
  public static final Var const__56;
  
  public static final Keyword const__57;
  
  public static final Var const__58;
  
  public static final Var const__59;
  
  public static final Var const__60;
  
  public static final Keyword const__61;
  
  public static final Var const__62;
  
  public static final AFn const__64;
  
  public static final Keyword const__65;
  
  public static final Var const__66;
  
  public static final AFn const__68;
  
  public static final Keyword const__69;
  
  public static final Var const__70;
  
  public static final AFn const__72;
  
  public static final Keyword const__73;
  
  public static final Var const__74;
  
  public static final AFn const__76;
  
  public static final Var const__77;
  
  public static final Var const__78;
  
  public static final AFn const__80;
  
  public static final Var const__81;
  
  public static final AFn const__83;
  
  public static final Keyword const__84;
  
  public static final Keyword const__85;
  
  public static final Keyword const__86;
  
  public static final Keyword const__87;
  
  public static final Keyword const__88;
  
  public static final Keyword const__89;
  
  public static final Keyword const__90;
  
  public static final AFn const__91;
  
  public static final AFn const__92;
  
  public static final Var const__93;
  
  public static final AFn const__96;
  
  public static final Var const__97;
  
  public static final AFn const__100;
  
  public static final Var const__101;
  
  public static final AFn const__104;
  
  public static final Var const__105;
  
  public static final AFn const__108;
  
  public static final Var const__109;
  
  public static final AFn const__112;
  
  public static final Var const__113;
  
  public static final AFn const__115;
  
  public static final Var const__116;
  
  public static final Var const__117;
  
  public static final Var const__118;
  
  public static final AFn const__120;
  
  public static final Var const__121;
  
  public static final Var const__122;
  
  public static final AFn const__125;
  
  public static final Var const__126;
  
  public static final AFn const__128;
  
  public static final Var const__129;
  
  public static final AFn const__132;
  
  public static final Var const__133;
  
  public static final AFn const__136;
  
  public static final Var const__137;
  
  public static final AFn const__140;
  
  public static final Var const__141;
  
  public static final AFn const__144;
  
  public static final Var const__145;
  
  public static final AFn const__148;
  
  public static final Var const__149;
  
  public static final AFn const__152;
  
  public static final Var const__153;
  
  public static final AFn const__156;
  
  public static final Var const__157;
  
  public static final AFn const__160;
  
  public static final Var const__161;
  
  public static final AFn const__164;
  
  public static final Var const__165;
  
  public static final AFn const__168;
  
  public static final Var const__169;
  
  public static final AFn const__172;
  
  public static final Var const__173;
  
  public static final AFn const__176;
  
  public static final Var const__177;
  
  public static final AFn const__180;
  
  public static final Var const__181;
  
  public static final AFn const__184;
  
  public static final Var const__185;
  
  public static final AFn const__188;
  
  public static final Var const__189;
  
  public static final AFn const__192;
  
  public static final Var const__193;
  
  public static final AFn const__196;
  
  public static final Var const__197;
  
  public static final AFn const__200;
  
  public static final Var const__201;
  
  public static final AFn const__204;
  
  public static final Var const__205;
  
  public static final AFn const__208;
  
  public static final Var const__209;
  
  public static final AFn const__212;
  
  public static final Var const__213;
  
  public static final AFn const__216;
  
  public static final Var const__217;
  
  public static final AFn const__220;
  
  public static final Var const__221;
  
  public static final AFn const__224;
  
  public static final Var const__225;
  
  public static final AFn const__228;
  
  public static final Var const__229;
  
  public static final AFn const__232;
  
  public static final Var const__233;
  
  public static final AFn const__236;
  
  public static final Var const__237;
  
  public static final AFn const__240;
  
  public static final Var const__241;
  
  public static final AFn const__244;
  
  public static final Var const__245;
  
  public static final AFn const__248;
  
  public static final Var const__249;
  
  public static final AFn const__251;
  
  public static final Var const__252;
  
  public static final Var const__253;
  
  public static final Object const__254;
  
  public static final Object const__255;
  
  public static final Object const__256;
  
  public static void load() {
    LockingTransaction.runInTransaction((Callable)new entity_api.fn__61481());
    const__3.setMeta((IPersistentMap)const__9);
    const__3








































      
      .bindRoot(RT.mapUniqueKeys(new Object[] { const__10, ((IFn)const__11.getRawRoot()).invoke("html", "type-tagged"), const__12, const__13.getRawRoot() }));
    const__14.setMeta((IPersistentMap)const__18);
    const__14.bindRoot(new entity_api.guards());
    const__19.setMeta((IPersistentMap)const__22);
    const__19.bindRoot(new entity_api.sanitize_entity_id());
    const__23.setMeta((IPersistentMap)const__26);
    const__23.bindRoot(new entity_api.entity_id_from_request());
    const__27.setMeta((IPersistentMap)const__30);
    const__27.bindRoot(new entity_api.wrap_validate_jwt());
    const__31.setMeta((IPersistentMap)const__33);
    const__31





































      
      .bindRoot(RT.map(new Object[] { ((IFn)const__34.getRawRoot()).invoke(const__35), const__36.getRawRoot(), ((IFn)const__34.getRawRoot()).invoke(const__37), const__38.getRawRoot(), ((IFn)const__34.getRawRoot()).invoke(const__39), ((IFn)const__40.getRawRoot()).invoke(RT.mapUniqueKeys(new Object[] { const__41.getRawRoot(), const__13.getRawRoot() })) }));
    const__42.setMeta((IPersistentMap)const__44);
    const__42.bindRoot(RT.mapUniqueKeys(new Object[] { const__45, const__3.getRawRoot() }));
    const__46.setMeta((IPersistentMap)const__48);
    const__46




      
      .bindRoot(RT.mapUniqueKeys(new Object[] { ((IFn)const__34.getRawRoot()).invoke(const__45), const__3.getRawRoot() }));
    const__49.setMeta((IPersistentMap)const__51);
    const__49

      
      .bindRoot(((IFn)const__52.getRawRoot()).invoke(


          
          RT.map(new Object[] { const__53, const__54.getRawRoot(), ((IFn)const__34.getRawRoot()).invoke(const__55), const__56.getRawRoot(), ((IFn)const__34.getRawRoot()).invoke(const__57), RT.mapUniqueKeys(new Object[] { ((IFn)const__58.getRawRoot()).invoke("master"), ((IFn)const__59.getRawRoot()).invoke(const__60.getRawRoot(), const__56.getRawRoot(), const__61, const__31.getRawRoot()) }) }), const__31.getRawRoot()));
    const__62.setMeta((IPersistentMap)const__64);
    const__62.bindRoot(((IFn)const__52.getRawRoot()).invoke(
          RT.mapUniqueKeys(new Object[] { const__65, ((IFn)const__59.getRawRoot()).invoke(const__60.getRawRoot(), const__56.getRawRoot(), const__61, const__36.getRawRoot()) }), const__49.getRawRoot(), const__46.getRawRoot()));
    const__66.setMeta((IPersistentMap)const__68);
    const__66.bindRoot(((IFn)const__52.getRawRoot()).invoke(
          RT.mapUniqueKeys(new Object[] { const__69, ((IFn)const__40.getRawRoot()).invoke(const__36.getRawRoot()) }, ), const__49.getRawRoot(), const__42.getRawRoot()));
    const__70.setMeta((IPersistentMap)const__72);
    const__70.bindRoot(((IFn)const__52.getRawRoot()).invoke(
          RT.mapUniqueKeys(new Object[] { const__73, ((IFn)const__40.getRawRoot()).invoke(const__36.getRawRoot()) }, ), const__49.getRawRoot(), const__42.getRawRoot()));
    const__74.setMeta((IPersistentMap)const__76);
    const__74.bindRoot(((IFn)const__77.getRawRoot()).invoke(new entity_api.fn__61638()));
    const__78.setMeta((IPersistentMap)const__80);
    const__78

      
      .bindRoot(((IFn)const__59.getRawRoot()).invoke(new entity_api.fn__61641(), const__74.getRawRoot(), const__61, const__36.getRawRoot()));
    const__81.setMeta((IPersistentMap)const__83);
    const__81









      
      .bindRoot(((IFn)const__14.getRawRoot()).invoke(RT.map(new Object[] { 
              ((IFn)const__34.getRawRoot()).invoke(const__84), ((IFn)const__11.getRawRoot()).invoke("html", "type-tagged"), ((IFn)const__34.getRawRoot()).invoke(const__85), const__56.getRawRoot(), ((IFn)const__34.getRawRoot()).invoke(const__86), const__78.getRawRoot(), ((IFn)const__34.getRawRoot()).invoke(const__87), ((IFn)const__11.getRawRoot()).invoke("type-tagged"), ((IFn)const__34.getRawRoot()).invoke(const__88), const__78.getRawRoot(), 
              ((IFn)const__34.getRawRoot()).invoke(const__89), const__78.getRawRoot(), ((IFn)const__34.getRawRoot()).invoke(const__90), ((IFn)const__11.getRawRoot()).invoke("true", "false") }), const__91, new entity_api.fn__61646(), const__92, new entity_api.fn__61648()));
    const__93.setMeta((IPersistentMap)const__96);
    const__93.bindRoot(new entity_api.keywordize_map_keys());
    const__97.setMeta((IPersistentMap)const__100);
    const__97.bindRoot(new entity_api.request_type());
    const__101.setMeta((IPersistentMap)const__104);
    const__101.bindRoot(new entity_api.base_revision_coercer());
    const__105.setMeta((IPersistentMap)const__108);
    const__105.bindRoot(new entity_api.get_entity_opts_coercer());
    const__109.setMeta((IPersistentMap)const__112);
    const__109.bindRoot(new entity_api.rev_keyword_coercer());
    const__113.setMeta((IPersistentMap)const__115);
    const__113.bindRoot(RT.map(new Object[] { 
            const__54.getRawRoot(), const__116.getRawRoot(), const__81.getRawRoot(), const__105.getRawRoot(), const__74.getRawRoot(), const__109.getRawRoot(), const__36.getRawRoot(), new entity_api.fn__61670(), const__62.getRawRoot(), const__101.getRawRoot(), 
            const__31.getRawRoot(), const__93.getRawRoot(), const__38.getRawRoot(), const__117.getRawRoot(), const__49.getRawRoot(), const__101.getRawRoot(), const__3.getRawRoot(), const__93.getRawRoot(), const__70.getRawRoot(), const__101.getRawRoot(), 
            const__66.getRawRoot(), const__101.getRawRoot() }));
    const__118.setMeta((IPersistentMap)const__120);
    const__118




























































      
      .bindRoot(((IFn)const__121.getRawRoot()).invoke(((IFn)const__59.getRawRoot())
          .invoke(new entity_api.fn__61675(), const__62.getRawRoot(), new entity_api.fn__61677(), const__66.getRawRoot(), new entity_api.fn__61679(), const__70.getRawRoot()), const__113.getRawRoot()));
    const__122.setMeta((IPersistentMap)const__125);
    const__122.bindRoot(new entity_api.throw_when_invalid());
    const__126.setMeta((IPersistentMap)const__128);
    const__126.bindRoot(((IFn)const__121.getRawRoot()).invoke(const__81.getRawRoot(), const__113.getRawRoot()));
    const__129.setMeta((IPersistentMap)const__132);
    const__129.bindRoot(new entity_api.master_head_rev());
    const__133.setMeta((IPersistentMap)const__136);
    const__133.bindRoot(new entity_api.master_head_partition_rev());
    const__137.setMeta((IPersistentMap)const__140);
    const__137.bindRoot(new entity_api.composed_delta());
    const__141.setMeta((IPersistentMap)const__144);
    const__141.bindRoot(new entity_api.rev_from_to_descriptor());
    const__145.setMeta((IPersistentMap)const__148);
    const__145.bindRoot(new entity_api.get_delta());
    const__149.setMeta((IPersistentMap)const__152);
    const__149.bindRoot(new entity_api.get_state());
    const__153.setMeta((IPersistentMap)const__156);
    const__153.bindRoot(new entity_api.throw_when_unqualified_get_opts());
    const__157.setMeta((IPersistentMap)const__160);
    const__157.bindRoot(new entity_api.coerce_get_opts());
    const__161.setMeta((IPersistentMap)const__164);
    const__161.bindRoot(new entity_api.state_response_body());
    const__165.setMeta((IPersistentMap)const__168);
    const__165.bindRoot(new entity_api.delta_response_body());
    const__169.setMeta((IPersistentMap)const__172);
    const__169.bindRoot(new entity_api.get_entity());
    const__173.setMeta((IPersistentMap)const__176);
    const__173.bindRoot(new entity_api.make_delta());
    const__177.setMeta((IPersistentMap)const__180);
    const__177.bindRoot(new entity_api.process_generate_reset());
    const__181.setMeta((IPersistentMap)const__184);
    const__181.bindRoot(new entity_api.process_retain_root());
    const__185.setMeta((IPersistentMap)const__188);
    const__185.bindRoot(new entity_api.coerce_revision_info__GT_revision());
    const__189.setMeta((IPersistentMap)const__192);
    const__189.bindRoot(new entity_api.parse_state_box());
    const__193.setMeta((IPersistentMap)const__196);
    const__193.bindRoot(new entity_api.coerce_state_box());
    const__197.setMeta((IPersistentMap)const__200);
    const__197.bindRoot(new entity_api.req_opts__GT_revision_message());
    const__201.setMeta((IPersistentMap)const__204);
    const__201.bindRoot(new entity_api.error_response());
    const__205.setMeta((IPersistentMap)const__208);
    const__205.bindRoot(new entity_api.response_from_error());
    const__209.setMeta((IPersistentMap)const__212);
    const__209.bindRoot(new entity_api.content_reconciliation());
    const__213.setMeta((IPersistentMap)const__216);
    const__213.bindRoot(new entity_api.throw_when_unqualified_ancestor_or_parent());
    const__217.setMeta((IPersistentMap)const__220);
    const__217.bindRoot(new entity_api.throw_when_incorrectly_qualified_rev());
    const__221.setMeta((IPersistentMap)const__224);
    const__221.bindRoot(new entity_api.put_revision_handler());
    const__225.setMeta((IPersistentMap)const__228);
    const__225.bindRoot(new entity_api.get_entity_handler());
    const__229.setMeta((IPersistentMap)const__232);
    const__229.bindRoot(new entity_api.get_events_handler());
    const__233.setMeta((IPersistentMap)const__236);
    const__233.bindRoot(new entity_api.wrap_entity_api());
    const__237.setMeta((IPersistentMap)const__240);
    const__237.bindRoot(new entity_api.get_hub_lock_state_handler());
    const__241.setMeta((IPersistentMap)const__244);
    const__241.bindRoot(new entity_api.put_hub_lock_state_handler());
    const__245.setMeta((IPersistentMap)const__248);
    const__245.bindRoot(new entity_api.delete_hub_lock_state_handler());
    const__249.setMeta((IPersistentMap)const__251);
    const__249




















































































































































































































































































































































































































































      
      .bindRoot(((IFn)const__252.getRawRoot()).invoke(((IFn)const__253.getRawRoot()).invoke(const__254, new entity_api.fn__63370()), ((IFn)const__253.getRawRoot())



          
          .invoke(const__255, new entity_api.fn__63380()), ((IFn)const__253.getRawRoot())
          
          .invoke(const__256, new entity_api.fn__63384())));
  }
  
  public static void __init0() {
    const__0 = (Var)RT.var("clojure.core", "in-ns");
    const__1 = (AFn)Symbol.intern(null, "synchrony.http.entity-api");
    const__2 = (AFn)Symbol.intern(null, "clojure.core");
    const__3 = (Var)RT.var("synchrony.http.entity-api", "StateBox");
    const__9 = (AFn)RT.map(new Object[] { RT.keyword(null, "line"), Integer.valueOf(42), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/http/entity_api.clj" });
    const__10 = (Keyword)RT.keyword(null, "format");
    const__11 = (Var)RT.var("schema.core", "enum");
    const__12 = (Keyword)RT.keyword(null, "value");
    const__13 = (Var)RT.var("schema.core", "Any");
    const__14 = (Var)RT.var("synchrony.http.entity-api", "guards");
    const__18 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "schema"), Symbol.intern(null, "&"), Symbol.intern(null, "name-pred-pairs")) })), RT.keyword(null, "line"), Integer.valueOf(46), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/http/entity_api.clj" });
    const__19 = (Var)RT.var("synchrony.http.entity-api", "sanitize-entity-id");
    const__22 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "entity-id")) })), RT.keyword(null, "line"), Integer.valueOf(52), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/http/entity_api.clj" });
    const__23 = (Var)RT.var("synchrony.http.entity-api", "entity-id-from-request");
    const__26 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "request")) })), RT.keyword(null, "line"), Integer.valueOf(55), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/http/entity_api.clj" });
    const__27 = (Var)RT.var("synchrony.http.entity-api", "wrap-validate-jwt");
    const__30 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "handler")) })), RT.keyword(null, "line"), Integer.valueOf(59), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/http/entity_api.clj" });
    const__31 = (Var)RT.var("synchrony.http.entity-api", "RevisionOpts");
    const__33 = (AFn)RT.map(new Object[] { RT.keyword(null, "line"), Integer.valueOf(79), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/http/entity_api.clj" });
    const__34 = (Var)RT.var("schema.core", "optional-key");
    const__35 = (Keyword)RT.keyword(null, "rev");
    const__36 = (Var)RT.var("synchrony.history", "Rev");
    const__37 = (Keyword)RT.keyword(null, "time");
    const__38 = (Var)RT.var("ginga.datetime", "Date");
    const__39 = (Keyword)RT.keyword(null, "meta");
    const__40 = (Var)RT.var("schema.core", "maybe");
    const__41 = (Var)RT.var("schema.core", "Str");
    const__42 = (Var)RT.var("synchrony.http.entity-api", "RequiredStateOpts");
    const__44 = (AFn)RT.map(new Object[] { RT.keyword(null, "line"), Integer.valueOf(84), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/http/entity_api.clj" });
    const__45 = (Keyword)RT.keyword(null, "state");
    const__46 = (Var)RT.var("synchrony.http.entity-api", "OptionalStateOpts");
    const__48 = (AFn)RT.map(new Object[] { RT.keyword(null, "line"), Integer.valueOf(87), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/http/entity_api.clj" });
    const__49 = (Var)RT.var("synchrony.http.entity-api", "BasePutEntityOpts");
    const__51 = (AFn)RT.map(new Object[] { RT.keyword(null, "line"), Integer.valueOf(90), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/http/entity_api.clj" });
    const__52 = (Var)RT.var("clojure.core", "merge");
    const__53 = (Keyword)RT.keyword(null, "request-type");
    const__54 = (Var)RT.var("schema.core", "Keyword");
    const__55 = (Keyword)RT.keyword(null, "retain-root");
    const__56 = (Var)RT.var("schema.core", "Bool");
    const__57 = (Keyword)RT.keyword(null, "merges");
    const__58 = (Var)RT.var("schema.core", "required-key");
    const__59 = (Var)RT.var("schema.core", "conditional");
    const__60 = (Var)RT.var("clojure.core", "true?");
    const__61 = (Keyword)RT.keyword(null, "else");
    const__62 = (Var)RT.var("synchrony.http.entity-api", "ResetOpts");
    const__64 = (AFn)RT.map(new Object[] { RT.keyword(null, "line"), Integer.valueOf(99), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/http/entity_api.clj" });
    const__65 = (Keyword)RT.keyword(null, "generate-reset");
    const__66 = (Var)RT.var("synchrony.http.entity-api", "ContentReconciliationOpts");
    const__68 = (AFn)RT.map(new Object[] { RT.keyword(null, "line"), Integer.valueOf(106), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/http/entity_api.clj" });
    const__69 = (Keyword)RT.keyword(null, "ancestor");
    const__70 = (Var)RT.var("synchrony.http.entity-api", "ExternalChangesOpts");
    const__72 = (AFn)RT.map(new Object[] { RT.keyword(null, "line"), Integer.valueOf(112), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/http/entity_api.clj" });
    const__73 = (Keyword)RT.keyword(null, "parent");
    const__74 = (Var)RT.var("synchrony.http.entity-api", "RevKeyword");
    const__76 = (AFn)RT.map(new Object[] { RT.keyword(null, "line"), Integer.valueOf(118), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/http/entity_api.clj" });
    const__77 = (Var)RT.var("schema.core", "pred");
    const__78 = (Var)RT.var("synchrony.http.entity-api", "RevOrKeyword");
    const__80 = (AFn)RT.map(new Object[] { RT.keyword(null, "line"), Integer.valueOf(121), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/http/entity_api.clj" });
    const__81 = (Var)RT.var("synchrony.http.entity-api", "GetEntityOpts");
    const__83 = (AFn)RT.map(new Object[] { RT.keyword(null, "line"), Integer.valueOf(125), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/http/entity_api.clj" });
    const__84 = (Keyword)RT.keyword(null, "state-format");
    const__85 = (Keyword)RT.keyword(null, "deprecated-html-response");
    const__86 = (Keyword)RT.keyword(null, "state-at");
    const__87 = (Keyword)RT.keyword(null, "delta-format");
    const__88 = (Keyword)RT.keyword(null, "delta-from");
    const__89 = (Keyword)RT.keyword(null, "delta-to");
    const__90 = (Keyword)RT.keyword(null, "cached");
    const__91 = (AFn)Symbol.intern(null, "both-delta-from-to-or-neither");
    const__92 = (AFn)Symbol.intern(null, "only-one-of-state-or-delta");
    const__93 = (Var)RT.var("synchrony.http.entity-api", "keywordize-map-keys");
    const__96 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "m")) })), RT.keyword(null, "line"), Integer.valueOf(138), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/http/entity_api.clj" });
    const__97 = (Var)RT.var("synchrony.http.entity-api", "request-type");
  }
  
  public static void __init1() {
    const__100 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "req-map")) })), RT.keyword(null, "line"), Integer.valueOf(141), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/http/entity_api.clj" });
    const__101 = (Var)RT.var("synchrony.http.entity-api", "base-revision-coercer");
    const__104 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "base-map")) })), RT.keyword(null, "line"), Integer.valueOf(147), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/http/entity_api.clj" });
    const__105 = (Var)RT.var("synchrony.http.entity-api", "get-entity-opts-coercer");
    const__108 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "opts")) })), RT.keyword(null, "line"), Integer.valueOf(165), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/http/entity_api.clj" });
    const__109 = (Var)RT.var("synchrony.http.entity-api", "rev-keyword-coercer");
    const__112 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "rev-keyword-str")) })), RT.keyword(null, "line"), Integer.valueOf(178), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/http/entity_api.clj" });
    const__113 = (Var)RT.var("synchrony.http.entity-api", "coercion-matcher");
    const__115 = (AFn)RT.map(new Object[] { RT.keyword(null, "line"), Integer.valueOf(181), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/http/entity_api.clj" });
    const__116 = (Var)RT.var("schema.coerce", "string->keyword");
    const__117 = (Var)RT.var("ginga.datetime", "parse");
    const__118 = (Var)RT.var("synchrony.http.entity-api", "revision-coercer");
    const__120 = (AFn)RT.map(new Object[] { RT.keyword(null, "line"), Integer.valueOf(194), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/http/entity_api.clj" });
    const__121 = (Var)RT.var("schema.coerce", "coercer");
    const__122 = (Var)RT.var("synchrony.http.entity-api", "throw-when-invalid");
    const__125 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "validation-result")) })), RT.keyword(null, "line"), Integer.valueOf(201), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/http/entity_api.clj" });
    const__126 = (Var)RT.var("synchrony.http.entity-api", "get-entity-coercer");
    const__128 = (AFn)RT.map(new Object[] { RT.keyword(null, "line"), Integer.valueOf(213), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/http/entity_api.clj" });
    const__129 = (Var)RT.var("synchrony.http.entity-api", "master-head-rev");
    const__132 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "revisions")) })), RT.keyword(null, "line"), Integer.valueOf(216), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/http/entity_api.clj" });
    const__133 = (Var)RT.var("synchrony.http.entity-api", "master-head-partition-rev");
    const__136 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "revisions")) })), RT.keyword(null, "line"), Integer.valueOf(223), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/http/entity_api.clj" });
    const__137 = (Var)RT.var("synchrony.http.entity-api", "composed-delta");
    const__140 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "revisions"), Symbol.intern(null, "from"), Symbol.intern(null, "to")) })), RT.keyword(null, "line"), Integer.valueOf(229), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/http/entity_api.clj" });
    const__141 = (Var)RT.var("synchrony.http.entity-api", "rev-from-to-descriptor");
    const__144 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "to"), Symbol.intern(null, "max-revisions")) })), RT.keyword(null, "line"), Integer.valueOf(236), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/http/entity_api.clj" });
    const__145 = (Var)RT.var("synchrony.http.entity-api", "get-delta");
    const__148 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "entity-desc"), Symbol.intern(null, "from"), Symbol.intern(null, "to")) })), RT.keyword(null, "line"), Integer.valueOf(241), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/http/entity_api.clj" });
    const__149 = (Var)RT.var("synchrony.http.entity-api", "get-state");
    const__152 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "entity-desc"), Symbol.intern(null, "at"), Symbol.intern(null, "max-part-id-promise"), Symbol.intern(null, "cached")) })), RT.keyword(null, "line"), Integer.valueOf(263), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/http/entity_api.clj" });
    const__153 = (Var)RT.var("synchrony.http.entity-api", "throw-when-unqualified-get-opts");
    const__156 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "get-opts")) })), RT.keyword(null, "line"), Integer.valueOf(286), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/http/entity_api.clj" });
    const__157 = (Var)RT.var("synchrony.http.entity-api", "coerce-get-opts");
    const__160 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "params")) })), RT.keyword(null, "line"), Integer.valueOf(293), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/http/entity_api.clj" });
    const__161 = (Var)RT.var("synchrony.http.entity-api", "state-response-body");
    const__164 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(RT.map(new Object[] { RT.keyword(null, "keys"), Tuple.create(Symbol.intern(null, "state"), Symbol.intern(null, "state-at"), Symbol.intern(null, "cached")), RT.keyword(null, "as"), Symbol.intern(null, "state-info") }), RT.map(new Object[] { RT.keyword(null, "keys"), Tuple.create(Symbol.intern(null, "state-format"), Symbol.intern(null, "deprecated-html-response")), RT.keyword(null, "as"), Symbol.intern(null, "get-opts") })) })), RT.keyword(null, "line"), Integer.valueOf(300), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/http/entity_api.clj" });
    const__165 = (Var)RT.var("synchrony.http.entity-api", "delta-response-body");
    const__168 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(RT.map(new Object[] { RT.keyword(null, "keys"), Tuple.create(Symbol.intern(null, "delta"), Symbol.intern(null, "delta-from"), Symbol.intern(null, "delta-to")), RT.keyword(null, "as"), Symbol.intern(null, "delta-info") }), RT.map(new Object[] { RT.keyword(null, "keys"), Tuple.create(Symbol.intern(null, "delta-format")), RT.keyword(null, "as"), Symbol.intern(null, "get-opts") })) })), RT.keyword(null, "line"), Integer.valueOf(313), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/http/entity_api.clj" });
    const__169 = (Var)RT.var("synchrony.http.entity-api", "get-entity");
    const__172 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "entity-desc"), Symbol.intern(null, "get-opts"), Symbol.intern(null, "max-part-id-promise")) })), RT.keyword(null, "line"), Integer.valueOf(322), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/http/entity_api.clj" });
    const__173 = (Var)RT.var("synchrony.http.entity-api", "make-delta");
    const__176 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "entity-desc"), RT.map(new Object[] { RT.keyword(null, "keys"), Tuple.create(Symbol.intern(null, "parent"), Symbol.intern(null, "tree")), RT.keyword(null, "as"), Symbol.intern(null, "req-opts") })) })), RT.keyword(null, "line"), Integer.valueOf(334), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/http/entity_api.clj" });
    const__177 = (Var)RT.var("synchrony.http.entity-api", "process-generate-reset");
    const__180 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(RT.map(new Object[] { RT.keyword(null, "keys"), Tuple.create(Symbol.intern(null, "generate-reset")), RT.keyword(null, "as"), Symbol.intern(null, "req-opts") }), Symbol.intern(null, "entity-desc")) })), RT.keyword(null, "line"), Integer.valueOf(351), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/http/entity_api.clj" });
    const__181 = (Var)RT.var("synchrony.http.entity-api", "process-retain-root");
    const__184 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(RT.map(new Object[] { RT.keyword(null, "keys"), Tuple.create(Symbol.intern(null, "retain-root")), RT.keyword(null, "as"), Symbol.intern(null, "req-opts") })) })), RT.keyword(null, "line"), Integer.valueOf(364), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/http/entity_api.clj" });
    const__185 = (Var)RT.var("synchrony.http.entity-api", "coerce-revision-info->revision");
    const__188 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "req-opts"), Symbol.intern(null, "entity-desc")) })), RT.keyword(null, "line"), Integer.valueOf(368), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/http/entity_api.clj" });
    const__189 = (Var)RT.var("synchrony.http.entity-api", "parse-state-box");
    const__192 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "state-box")) })), RT.keyword(null, "line"), Integer.valueOf(378), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/http/entity_api.clj" });
    const__193 = (Var)RT.var("synchrony.http.entity-api", "coerce-state-box");
    const__196 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "req-opts")) })), RT.keyword(null, "line"), Integer.valueOf(385), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/http/entity_api.clj" });
    const__197 = (Var)RT.var("synchrony.http.entity-api", "req-opts->revision-message");
  }
  
  public static void __init2() {
    const__200 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "req-opts"), Symbol.intern(null, "entity-desc")) })), RT.keyword(null, "line"), Integer.valueOf(396), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/http/entity_api.clj" });
    const__201 = (Var)RT.var("synchrony.http.entity-api", "error-response");
    const__204 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "ex"), Symbol.intern(null, "id")) })), RT.keyword(null, "line"), Integer.valueOf(445), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/http/entity_api.clj" });
    const__205 = (Var)RT.var("synchrony.http.entity-api", "response-from-error");
    const__208 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "ex"), Symbol.intern(null, "id")) })), RT.keyword(null, "line"), Integer.valueOf(451), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/http/entity_api.clj" });
    const__209 = (Var)RT.var("synchrony.http.entity-api", "content-reconciliation");
    const__212 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "req-opts"), Symbol.intern(null, "entity-desc"), Symbol.intern(null, "jwt"), Symbol.intern(null, "dry-run")) })), RT.keyword(null, "line"), Integer.valueOf(475), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/http/entity_api.clj" });
    const__213 = (Var)RT.var("synchrony.http.entity-api", "throw-when-unqualified-ancestor-or-parent");
    const__216 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "req-opts")) })), RT.keyword(null, "line"), Integer.valueOf(504), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/http/entity_api.clj" });
    const__217 = (Var)RT.var("synchrony.http.entity-api", "throw-when-incorrectly-qualified-rev");
    const__220 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "req-opts")) })), RT.keyword(null, "line"), Integer.valueOf(510), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/http/entity_api.clj" });
    const__221 = (Var)RT.var("synchrony.http.entity-api", "put-revision-handler");
    const__224 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(RT.map(new Object[] { RT.map(new Object[] { Symbol.intern(null, "jwt"), "x-token" }), RT.keyword(null, "headers"), RT.map(new Object[] { Symbol.intern(null, "dry-run"), "dry-run", RT.keyword(null, "as"), Symbol.intern(null, "params") }), RT.keyword(null, "params"), Symbol.intern(null, "body"), RT.keyword(null, "body"), Symbol.intern(null, "auth"), RT.keyword("synchrony.auth", "auth"), RT.keyword(null, "as"), Symbol.intern(null, "request") })) })), RT.keyword(null, "line"), Integer.valueOf(515), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/http/entity_api.clj" });
    const__225 = (Var)RT.var("synchrony.http.entity-api", "get-entity-handler");
    const__228 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(RT.map(new Object[] { Symbol.intern(null, "params"), RT.keyword(null, "params"), Symbol.intern(null, "auth"), RT.keyword("synchrony.auth", "auth"), RT.keyword(null, "as"), Symbol.intern(null, "request") })) })), RT.keyword(null, "line"), Integer.valueOf(562), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/http/entity_api.clj" });
    const__229 = (Var)RT.var("synchrony.http.entity-api", "get-events-handler");
    const__232 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(RT.map(new Object[] { RT.map(new Object[] { Symbol.intern(null, "part-id"), "partition" }), RT.keyword(null, "params"), Symbol.intern(null, "auth"), RT.keyword("synchrony.auth", "auth"), RT.keyword(null, "as"), Symbol.intern(null, "request") })) })), RT.keyword(null, "line"), Integer.valueOf(602), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/http/entity_api.clj" });
    const__233 = (Var)RT.var("synchrony.http.entity-api", "wrap-entity-api");
    const__236 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "handler")) })), RT.keyword(null, "line"), Integer.valueOf(624), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/http/entity_api.clj" });
    const__237 = (Var)RT.var("synchrony.http.entity-api", "get-hub-lock-state-handler");
    const__240 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "request")) })), RT.keyword(null, "line"), Integer.valueOf(629), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/http/entity_api.clj" });
    const__241 = (Var)RT.var("synchrony.http.entity-api", "put-hub-lock-state-handler");
    const__244 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(RT.map(new Object[] { RT.keyword(null, "keys"), Tuple.create(Symbol.intern(null, "params")), RT.keyword(null, "as"), Symbol.intern(null, "request") })) })), RT.keyword(null, "line"), Integer.valueOf(633), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/http/entity_api.clj" });
    const__245 = (Var)RT.var("synchrony.http.entity-api", "delete-hub-lock-state-handler");
    const__248 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(RT.map(new Object[] { RT.keyword(null, "keys"), Tuple.create(Symbol.intern(null, "params")), RT.keyword(null, "as"), Symbol.intern(null, "request") })) })), RT.keyword(null, "line"), Integer.valueOf(646), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/http/entity_api.clj" });
    const__249 = (Var)RT.var("synchrony.http.entity-api", "entity-api-routes");
    const__251 = (AFn)RT.map(new Object[] { RT.keyword(null, "line"), Integer.valueOf(651), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/http/entity_api.clj" });
    const__252 = (Var)RT.var("compojure.core", "routes");
    const__253 = (Var)RT.var("compojure.core", "make-context");
    const__254 = CompiledRoute.create(RT.map(new Object[] { RT.keyword(null, "source"), "/hub-lock-state:__path-info", RT.keyword(null, "keys"), Tuple.create(RT.keyword(null, "__path-info")), RT.keyword(null, "absolute?"), Boolean.FALSE, RT.keyword(null, "re"), Pattern.compile("/hub-lock-state(|/.*)") }));
    const__255 = CompiledRoute.create(RT.map(new Object[] { RT.keyword(null, "source"), "/events/:entity-id{.*$}:__path-info", RT.keyword(null, "absolute?"), Boolean.FALSE, RT.keyword(null, "re"), Pattern.compile("/events/(.*$)(|/.*)"), RT.keyword(null, "keys"), Tuple.create(RT.keyword(null, "entity-id"), RT.keyword(null, "__path-info")) }));
    const__256 = CompiledRoute.create(RT.map(new Object[] { RT.keyword(null, "re"), Pattern.compile("/data/(.*$)(|/.*)"), RT.keyword(null, "absolute?"), Boolean.FALSE, RT.keyword(null, "source"), "/data/:entity-id{.*$}:__path-info", RT.keyword(null, "keys"), Tuple.create(RT.keyword(null, "entity-id"), RT.keyword(null, "__path-info")) }));
  }
  
  static  {
    __init0();
    __init1();
    __init2();
    Compiler.pushNSandLoader(RT.classForName("synchrony.http.entity_api__init").getClassLoader());
    try {
      load();
    } finally {
      Var.popThreadBindings();
    } 
  }
}
