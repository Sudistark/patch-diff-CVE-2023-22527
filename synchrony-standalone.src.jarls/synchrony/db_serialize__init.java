package synchrony;

import clojure.lang.AFn;
import clojure.lang.Compiler;
import clojure.lang.IPersistentMap;
import clojure.lang.Keyword;
import clojure.lang.LockingTransaction;
import clojure.lang.PersistentList;
import clojure.lang.RT;
import clojure.lang.Symbol;
import clojure.lang.Tuple;
import clojure.lang.Var;
import java.util.Arrays;
import java.util.concurrent.Callable;

public class db_serialize__init {
  public static final Var const__0;
  
  public static final AFn const__1;
  
  public static final AFn const__2;
  
  public static final Var const__3;
  
  public static final AFn const__9;
  
  public static final Keyword const__10;
  
  public static final Var const__11;
  
  public static final Keyword const__12;
  
  public static final Keyword const__13;
  
  public static final Var const__14;
  
  public static final Var const__15;
  
  public static final AFn const__19;
  
  public static final Var const__20;
  
  public static final AFn const__23;
  
  public static final Var const__24;
  
  public static final AFn const__26;
  
  public static final Var const__27;
  
  public static final Var const__28;
  
  public static final AFn const__30;
  
  public static final Keyword const__31;
  
  public static final Keyword const__32;
  
  public static final Var const__33;
  
  public static final AFn const__36;
  
  public static final Var const__37;
  
  public static final AFn const__40;
  
  public static final Var const__41;
  
  public static final AFn const__44;
  
  public static final Var const__45;
  
  public static final AFn const__48;
  
  public static void load() {
    LockingTransaction.runInTransaction((Callable)new db_serialize.fn__44756());
    const__3.setMeta((IPersistentMap)const__9);
    const__3.bindRoot(RT.mapUniqueKeys(new Object[] { const__10, const__11.getRawRoot(), const__12, const__11.getRawRoot(), const__13, const__14.getRawRoot() }));
    const__15.setMeta((IPersistentMap)const__19);
    const__15.bindRoot(new db_serialize.deserialize_with_blob());
    const__20.setMeta((IPersistentMap)const__23);
    const__20.bindRoot(new db_serialize.size_with_blob());
    const__24.setMeta((IPersistentMap)const__26);
    const__24.bindRoot(RT.mapUniqueKeys(new Object[] { const__10, const__27.getRawRoot(), const__12, const__15.getRawRoot(), const__13, const__20.getRawRoot() }));
    const__28.setMeta((IPersistentMap)const__30);
    const__28.bindRoot(RT.mapUniqueKeys(new Object[] { const__31, const__3.getRawRoot(), const__32, const__24.getRawRoot() }));
    const__33.setMeta((IPersistentMap)const__36);
    const__33.bindRoot(new db_serialize.get_config());
    const__37.setMeta((IPersistentMap)const__40);
    const__37.bindRoot(new db_serialize.serialize());
    const__41.setMeta((IPersistentMap)const__44);
    const__41.bindRoot(new db_serialize.deserialize());
    const__45.setMeta((IPersistentMap)const__48);
    const__45.bindRoot(new db_serialize.size());
  }
  
  public static void __init0() {
    const__0 = (Var)RT.var("clojure.core", "in-ns");
    const__1 = (AFn)Symbol.intern(null, "synchrony.db-serialize");
    const__2 = (AFn)Symbol.intern(null, "clojure.core");
    const__3 = (Var)RT.var("synchrony.db-serialize", "identity-serialization-config");
    const__9 = (AFn)RT.map(new Object[] { RT.keyword(null, "line"), Integer.valueOf(6), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/db_serialize.clj" });
    const__10 = (Keyword)RT.keyword(null, "serialize");
    const__11 = (Var)RT.var("clojure.core", "identity");
    const__12 = (Keyword)RT.keyword(null, "deserialize");
    const__13 = (Keyword)RT.keyword(null, "size");
    const__14 = (Var)RT.var("clojure.core", "count");
    const__15 = (Var)RT.var("synchrony.db-serialize", "deserialize-with-blob");
    const__19 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "data")) })), RT.keyword(null, "line"), Integer.valueOf(11), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/db_serialize.clj" });
    const__20 = (Var)RT.var("synchrony.db-serialize", "size-with-blob");
    const__23 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "data")) })), RT.keyword(null, "line"), Integer.valueOf(15), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/db_serialize.clj" });
    const__24 = (Var)RT.var("synchrony.db-serialize", "synchrony-serialization-config");
    const__26 = (AFn)RT.map(new Object[] { RT.keyword(null, "line"), Integer.valueOf(20), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/db_serialize.clj" });
    const__27 = (Var)RT.var("synchrony.serialize", "serialize-with-defaults");
    const__28 = (Var)RT.var("synchrony.db-serialize", "configs");
    const__30 = (AFn)RT.map(new Object[] { RT.keyword(null, "line"), Integer.valueOf(25), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/db_serialize.clj" });
    const__31 = (Keyword)RT.keyword(null, "identity");
    const__32 = (Keyword)RT.keyword(null, "synchrony");
    const__33 = (Var)RT.var("synchrony.db-serialize", "get-config");
    const__36 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "type")) })), RT.keyword(null, "line"), Integer.valueOf(29), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/db_serialize.clj" });
    const__37 = (Var)RT.var("synchrony.db-serialize", "serialize");
    const__40 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "&"), Symbol.intern(null, "args")) })), RT.keyword(null, "line"), Integer.valueOf(34), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/db_serialize.clj" });
    const__41 = (Var)RT.var("synchrony.db-serialize", "deserialize");
    const__44 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "&"), Symbol.intern(null, "args")) })), RT.keyword(null, "line"), Integer.valueOf(35), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/db_serialize.clj" });
    const__45 = (Var)RT.var("synchrony.db-serialize", "size");
    const__48 = (AFn)RT.map(new Object[] { RT.keyword(null, "arglists"), PersistentList.create(Arrays.asList(new Object[] { Tuple.create(Symbol.intern(null, "&"), Symbol.intern(null, "args")) })), RT.keyword(null, "line"), Integer.valueOf(36), RT.keyword(null, "column"), Integer.valueOf(1), RT.keyword(null, "file"), "synchrony/db_serialize.clj" });
  }
  
  static  {
    __init0();
    Compiler.pushNSandLoader(RT.classForName("synchrony.db_serialize__init").getClassLoader());
    try {
      load();
    } finally {
      Var.popThreadBindings();
    } 
  }
}
