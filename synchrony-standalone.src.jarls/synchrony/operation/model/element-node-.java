package synchrony.operation.model;

import clojure.lang.AFn;
import clojure.lang.APersistentMap;
import clojure.lang.Associative;
import clojure.lang.Counted;
import clojure.lang.IFn;
import clojure.lang.IHashEq;
import clojure.lang.IKeywordLookup;
import clojure.lang.ILookup;
import clojure.lang.ILookupThunk;
import clojure.lang.IMapEntry;
import clojure.lang.IObj;
import clojure.lang.IPersistentCollection;
import clojure.lang.IPersistentMap;
import clojure.lang.IPersistentVector;
import clojure.lang.IRecord;
import clojure.lang.ISeq;
import clojure.lang.Keyword;
import clojure.lang.MapEntry;
import clojure.lang.Numbers;
import clojure.lang.PersistentHashSet;
import clojure.lang.PersistentList;
import clojure.lang.RT;
import clojure.lang.RecordIterator;
import clojure.lang.Symbol;
import clojure.lang.Tuple;
import clojure.lang.Util;
import clojure.lang.Var;
import ginga.tree.Node;
import java.io.Serializable;
import java.util.Arrays;
import java.util.Collection;
import java.util.Iterator;
import java.util.Map;
import java.util.Set;

public final class element-node- implements ElementNode, DomNode, Node, Node, IRecord, IHashEq, IObj, ILookup, IKeywordLookup, IPersistentMap, Map, Serializable {
  public final Object affinity;
  
  public final Object field_affinity;
  
  public final Object name;
  
  public final Object attrs;
  
  public final Object styles;
  
  public final Object child_nodes;
  
  public final Object __meta;
  
  public final Object __extmap;
  
  int __hash;
  
  int __hasheq;
  
  public static final Var const__0 = (Var)RT.var("clojure.core", "set");
  
  public static final Var const__1 = (Var)RT.var("clojure.core", "vals");
  
  public static final Var const__2 = (Var)RT.var("clojure.core", "keys");
  
  public static final Var const__4 = (Var)RT.var("clojure.core", "some");
  
  public static final Var const__7 = (Var)RT.var("clojure.core", "contains?");
  
  public static final Keyword const__8 = (Keyword)RT.keyword(null, "name");
  
  public static final Keyword const__9 = (Keyword)RT.keyword(null, "affinity");
  
  public static final Keyword const__10 = (Keyword)RT.keyword(null, "styles");
  
  public static final Keyword const__11 = (Keyword)RT.keyword(null, "attrs");
  
  public static final Keyword const__12 = (Keyword)RT.keyword(null, "field-affinity");
  
  public static final Keyword const__13 = (Keyword)RT.keyword(null, "child-nodes");
  
  public static final AFn const__14 = (AFn)PersistentHashSet.create(new Object[] { RT.keyword(null, "name"), RT.keyword(null, "affinity"), RT.keyword(null, "styles"), RT.keyword(null, "attrs"), RT.keyword(null, "field-affinity"), RT.keyword(null, "child-nodes") });
  
  public static final Var const__15 = (Var)RT.var("clojure.core", "dissoc");
  
  public static final Var const__16 = (Var)RT.var("clojure.core", "with-meta");
  
  public static final Var const__17 = (Var)RT.var("clojure.core", "into");
  
  public static final Var const__18 = (Var)RT.var("clojure.core", "not-empty");
  
  public static final Var const__19 = (Var)RT.var("clojure.core", "identical?");
  
  public static final Var const__20 = (Var)RT.var("clojure.core", "assoc");
  
  public static final AFn const__21 = (AFn)Tuple.create(RT.keyword(null, "affinity"), RT.keyword(null, "field-affinity"), RT.keyword(null, "name"), RT.keyword(null, "attrs"), RT.keyword(null, "styles"), RT.keyword(null, "child-nodes"));
  
  public static final Var const__22 = (Var)RT.var("clojure.core", "seq");
  
  public static final Var const__23 = (Var)RT.var("clojure.core", "concat");
  
  public static final Var const__24 = (Var)RT.var("clojure.core", "not");
  
  public static final Var const__25 = (Var)RT.var("clojure.core", "class");
  
  public static final Var const__26 = (Var)RT.var("clojure.core", "imap-cons");
  
  public static final Var const__27 = (Var)RT.var("clojure.core", "str");
  
  public static final Var const__36 = (Var)RT.var("clojure.core", "some?");
  
  public static final Var const__37 = (Var)RT.var("clojure.core", "pr-str");
  
  public static final Object const__38 = ((IObj)PersistentList.create(Arrays.asList(new Object[] { Symbol.intern(null, "some?"), Symbol.intern(null, "new-child-nodes") }))).withMeta((IPersistentMap)RT.map(new Object[] { RT.keyword(null, "line"), Integer.valueOf(45), RT.keyword(null, "column"), Integer.valueOf(13) }));
  
  public static final Var const__39 = (Var)RT.var("synchrony.operation.constants", "element-type");
  
  public element-node-(Object paramObject1, Object paramObject2, Object paramObject3, Object paramObject4, Object paramObject5, Object paramObject6, Object paramObject7, Object paramObject8, int paramInt1, int paramInt2) { this.affinity = paramObject1;
    this.field_affinity = paramObject2;
    this.name = paramObject3;
    this.attrs = paramObject4;
    this.styles = paramObject5;
    this.child_nodes = paramObject6;
    this.__meta = paramObject7;
    this.__extmap = paramObject8;
    this.__hash = paramInt1;
    this.__hasheq = paramInt2; }
  
  public element-node-(Object paramObject1, Object paramObject2, Object paramObject3, Object paramObject4, Object paramObject5, Object paramObject6) { this(paramObject1, paramObject2, paramObject3, paramObject4, paramObject5, paramObject6, null, null, 0, 0); }
  
  public element-node-(Object paramObject1, Object paramObject2, Object paramObject3, Object paramObject4, Object paramObject5, Object paramObject6, Object paramObject7, Object paramObject8) { this(paramObject1, paramObject2, paramObject3, paramObject4, paramObject5, paramObject6, paramObject7, paramObject8, 0, 0); }
  
  public static IPersistentVector getBasis() { return Tuple.create(Symbol.intern(null, "affinity"), Symbol.intern(null, "field-affinity"), Symbol.intern(null, "name"), Symbol.intern(null, "attrs"), Symbol.intern(null, "styles"), Symbol.intern(null, "child-nodes")); }
  
  public static element-node- create(IPersistentMap paramIPersistentMap) {
    Object object1 = paramIPersistentMap.valAt(Keyword.intern("affinity"), null);
    paramIPersistentMap = paramIPersistentMap.without(Keyword.intern("affinity"));
    Object object2 = paramIPersistentMap.valAt(Keyword.intern("field-affinity"), null);
    paramIPersistentMap = paramIPersistentMap.without(Keyword.intern("field-affinity"));
    Object object3 = paramIPersistentMap.valAt(Keyword.intern("name"), null);
    paramIPersistentMap = paramIPersistentMap.without(Keyword.intern("name"));
    Object object4 = paramIPersistentMap.valAt(Keyword.intern("attrs"), null);
    paramIPersistentMap = paramIPersistentMap.without(Keyword.intern("attrs"));
    Object object5 = paramIPersistentMap.valAt(Keyword.intern("styles"), null);
    paramIPersistentMap = paramIPersistentMap.without(Keyword.intern("styles"));
    Object object6 = paramIPersistentMap.valAt(Keyword.intern("child-nodes"), null);
    paramIPersistentMap = paramIPersistentMap.without(Keyword.intern("child-nodes"));
    return new element-node-(object1, object2, object3, object4, object5, object6, null, RT.seqOrElse(paramIPersistentMap), 0, 0);
  }
  
  public Object with_styles(Object new_styles) { new_styles = null;
    this = null;
    return ((IFn)const__20.getRawRoot()).invoke(this, const__10, new_styles); }
  
  public Object with_attrs(Object new_attrs) { new_attrs = null;
    this = null;
    return ((IFn)const__20.getRawRoot()).invoke(this, const__11, new_attrs); }
  
  public Object field_affinity() { return this.field_affinity; }
  
  public Object styles() { return this.styles; }
  
  public Object attrs() { return this.attrs; }
  
  public Object name() { return this.name; }
  
  public Object with_affinity(Object new_affinity) { new_affinity = null;
    this = null;
    return ((IFn)const__20.getRawRoot()).invoke(this, const__9, new_affinity); }
  
  public Object affinity() { return this.affinity; }
  
  public Object type() { return const__39.getRawRoot(); }
  
  public Object with_children(Object new_child_nodes) {
    if (((IFn)const__36.getRawRoot()).invoke(new_child_nodes) != null) {
      if (((IFn)const__36.getRawRoot()).invoke(new_child_nodes) != Boolean.FALSE) {
        null;
      } else {
        throw (Throwable)new AssertionError(((IFn)const__27.getRawRoot()).invoke("Assert failed: ", ((IFn)const__37.getRawRoot()).invoke(const__38)));
      } 
    } else {
      ((IFn)const__36.getRawRoot()).invoke(new_child_nodes);
      throw (Throwable)new AssertionError(((IFn)const__27.getRawRoot()).invoke("Assert failed: ", ((IFn)const__37.getRawRoot()).invoke(const__38)));
    } 
    new_child_nodes = null;
    this = null;
    return ((IFn)const__20.getRawRoot()).invoke(this, const__13, new_child_nodes);
  }
  
  public Object children() { return this.child_nodes; }
  
  public int hasheq() {
    int hq__7768__auto__35497 = this.__hasheq, h__7769__auto__35496 = RT.intCast(0x4E4F8808L ^ APersistentMap.mapHasheq((IPersistentMap)this));
    this.__hasheq = h__7769__auto__35496;
    return (hq__7768__auto__35497 == 0L) ? h__7769__auto__35496 : hq__7768__auto__35497;
  }
  
  public int hashCode() {
    int hash__7771__auto__35499 = this.__hash, h__7772__auto__35498 = APersistentMap.mapHash((IPersistentMap)this);
    this.__hash = h__7772__auto__35498;
    return (hash__7771__auto__35499 == 0L) ? h__7772__auto__35498 : hash__7771__auto__35499;
  }
  
  public boolean equals(Object G__35477) { G__35477 = null;
    return APersistentMap.mapEquals((IPersistentMap)this, G__35477); }
  
  public IPersistentMap meta() { return (IPersistentMap)this.__meta; }
  
  public IObj withMeta(IPersistentMap G__35477) { G__35477 = null;
    return (IObj)new element-node-(this.affinity, this.field_affinity, this.name, this.attrs, this.styles, this.child_nodes, G__35477, this.__extmap, this.__hash, this.__hasheq); }
  
  public Object valAt(Object k__7777__auto__) { k__7777__auto__ = null;
    return ((ILookup)this).valAt(k__7777__auto__, null); }
  
  public Object valAt(Object k__7779__auto__, Object else__7780__auto__) {
    Object G__35494 = k__7779__auto__;
    switch (Util.hash(G__35494) >> 8 & 0xF) {
      case 0:
        if (G__35494 == const__9);
        break;
      case 3:
        if (G__35494 == const__13);
        break;
      case 9:
        if (G__35494 == const__11);
        break;
      case 10:
        if (G__35494 == const__10);
        break;
      case 11:
        if (G__35494 == const__8);
        break;
      case 14:
        if (G__35494 == const__12);
        break;
    } 
    k__7779__auto__ = null;
    else__7780__auto__ = null;
    this = null;
    return RT.get(this.__extmap, k__7779__auto__, else__7780__auto__);
  }
  
  public ILookupThunk getLookupThunk(Keyword k__7782__auto__) {
    Object gclass = ((IFn)const__25.getRawRoot()).invoke(this), G__35481 = k__7782__auto__ = null;
    switch (Util.hash(G__35481) >> 8 & 0xF) {
      case 0:
        if (G__35481 == const__9)
          gclass = null; 
        break;
      case 3:
        if (G__35481 == const__13)
          gclass = null; 
        break;
      case 9:
        if (G__35481 == const__11)
          gclass = null; 
        break;
      case 10:
        if (G__35481 == const__10)
          gclass = null; 
        break;
      case 11:
        if (G__35481 == const__8)
          gclass = null; 
        break;
      case 14:
        if (G__35481 == const__12)
          gclass = null; 
        break;
    } 
    return (ILookupThunk)null;
  }
  
  public int count() { return RT.intCast(Numbers.add(6L, RT.count(this.__extmap))); }
  
  public IPersistentCollection empty() { throw (Throwable)new UnsupportedOperationException((String)((IFn)const__27.getRawRoot()).invoke("Can't create empty: ", "synchrony.operation.model.element-node-")); }
  
  public IPersistentCollection cons(Object e__7786__auto__) { e__7786__auto__ = null;
    this = null;
    return (IPersistentCollection)((IFn)const__26).invoke(this, e__7786__auto__); }
  
  public boolean equiv(Object G__35477) {
    boolean or__5516__auto__35506 = Util.identical(this, G__35477);
    Object G__35477 = G__35477 = null;
    boolean and__5514__auto__35505 = Util.equiv(this.affinity, ((element-node-)G__35477).affinity), and__5514__auto__35504 = Util.equiv(this.field_affinity, ((element-node-)G__35477).field_affinity), and__5514__auto__35503 = Util.equiv(this.name, ((element-node-)G__35477).name), and__5514__auto__35502 = Util.equiv(this.attrs, ((element-node-)G__35477).attrs), and__5514__auto__35501 = Util.equiv(this.styles, ((element-node-)G__35477).styles), and__5514__auto__35500 = Util.equiv(this.child_nodes, ((element-node-)G__35477).child_nodes);
    G__35477 = null;
    return RT.booleanCast(or__5516__auto__35506 ? (or__5516__auto__35506 ? Boolean.TRUE : Boolean.FALSE) : (Util.identical(((IFn)const__25.getRawRoot()).invoke(this), ((IFn)const__25.getRawRoot()).invoke(G__35477)) ? (and__5514__auto__35505 ? (and__5514__auto__35504 ? (and__5514__auto__35503 ? (and__5514__auto__35502 ? (and__5514__auto__35501 ? (and__5514__auto__35500 ? (Util.equiv(this.__extmap, ((element-node-)G__35477).__extmap) ? Boolean.TRUE : Boolean.FALSE) : (and__5514__auto__35500 ? Boolean.TRUE : Boolean.FALSE)) : (and__5514__auto__35501 ? Boolean.TRUE : Boolean.FALSE)) : (and__5514__auto__35502 ? Boolean.TRUE : Boolean.FALSE)) : (and__5514__auto__35503 ? Boolean.TRUE : Boolean.FALSE)) : (and__5514__auto__35504 ? Boolean.TRUE : Boolean.FALSE)) : (and__5514__auto__35505 ? Boolean.TRUE : Boolean.FALSE)) : null));
  }
  
  public boolean containsKey(Object k__7789__auto__) { k__7789__auto__ = null;
    this = null;
    return ((Boolean)((IFn)const__24.getRawRoot()).invoke(Util.identical(this, ((ILookup)this).valAt(k__7789__auto__, this)) ? Boolean.TRUE : Boolean.FALSE)).booleanValue(); }
  
  public IMapEntry entryAt(Object k__7791__auto__) {
    Object v__7792__auto__35507 = ((ILookup)this).valAt(k__7791__auto__, this);
    k__7791__auto__ = null;
    v__7792__auto__35507 = null;
    this = null;
    return (IMapEntry)(Util.identical(this, v__7792__auto__35507) ? null : MapEntry.create(k__7791__auto__, v__7792__auto__35507));
  }
  
  public ISeq seq() { this = null;
    return (ISeq)((IFn)const__22.getRawRoot()).invoke(((IFn)const__23.getRawRoot()).invoke(Tuple.create(MapEntry.create(const__9, this.affinity), MapEntry.create(const__12, this.field_affinity), MapEntry.create(const__8, this.name), MapEntry.create(const__11, this.attrs), MapEntry.create(const__10, this.styles), MapEntry.create(const__13, this.child_nodes)), this.__extmap)); }
  
  public Iterator iterator() { return (Iterator)new RecordIterator((ILookup)this, (IPersistentVector)const__21, (Iterator)RT.iter(this.__extmap)); }
  
  public IPersistentMap assoc(Object k__7796__auto__, Object G__35477) {
    Object pred__35479 = const__19.getRawRoot(), expr__35480 = k__7796__auto__;
    if (((IFn)pred__35479).invoke(const__9, expr__35480) != null) {
      if (((IFn)pred__35479).invoke(const__9, expr__35480) != Boolean.FALSE)
        G__35477 = null; 
    } else {
      ((IFn)pred__35479).invoke(const__9, expr__35480);
    } 
    if (((IFn)pred__35479).invoke(const__12, expr__35480) != null) {
      if (((IFn)pred__35479).invoke(const__12, expr__35480) != Boolean.FALSE)
        G__35477 = null; 
    } else {
      ((IFn)pred__35479).invoke(const__12, expr__35480);
    } 
    if (((IFn)pred__35479).invoke(const__8, expr__35480) != null) {
      if (((IFn)pred__35479).invoke(const__8, expr__35480) != Boolean.FALSE)
        G__35477 = null; 
    } else {
      ((IFn)pred__35479).invoke(const__8, expr__35480);
    } 
    if (((IFn)pred__35479).invoke(const__11, expr__35480) != null) {
      if (((IFn)pred__35479).invoke(const__11, expr__35480) != Boolean.FALSE)
        G__35477 = null; 
    } else {
      ((IFn)pred__35479).invoke(const__11, expr__35480);
    } 
    if (((IFn)pred__35479).invoke(const__10, expr__35480) != null) {
      if (((IFn)pred__35479).invoke(const__10, expr__35480) != Boolean.FALSE)
        G__35477 = null; 
    } else {
      ((IFn)pred__35479).invoke(const__10, expr__35480);
    } 
    pred__35479 = null;
    expr__35480 = null;
    if (((IFn)pred__35479).invoke(const__13, expr__35480) != null) {
      if (((IFn)pred__35479).invoke(const__13, expr__35480) != Boolean.FALSE)
        G__35477 = null; 
    } else {
      ((IFn)pred__35479).invoke(const__13, expr__35480);
    } 
    k__7796__auto__ = null;
    G__35477 = null;
    return (IPersistentMap)new element-node-(this.affinity, this.field_affinity, this.name, this.attrs, this.styles, this.child_nodes, this.__meta, ((IFn)const__20.getRawRoot()).invoke(this.__extmap, k__7796__auto__, G__35477));
  }
  
  public IPersistentMap without(Object k__7798__auto__) { if (((IFn)const__7.getRawRoot()).invoke(const__14, k__7798__auto__) != null) {
      if (((IFn)const__7.getRawRoot()).invoke(const__14, k__7798__auto__) != Boolean.FALSE) {
        k__7798__auto__ = null;
        this = null;
      } 
    } else {
      ((IFn)const__7.getRawRoot()).invoke(const__14, k__7798__auto__);
    } 
    k__7798__auto__ = null;
    return (IPersistentMap)new element-node-(this.affinity, this.field_affinity, this.name, this.attrs, this.styles, this.child_nodes, this.__meta, ((IFn)const__18.getRawRoot()).invoke(((IFn)const__15.getRawRoot()).invoke(this.__extmap, k__7798__auto__))); }
  
  public int size() { this = null;
    return ((Counted)this).count(); }
  
  public boolean isEmpty() { return Util.equiv(0L, ((Counted)this).count()); }
  
  public boolean containsValue(Object v__7802__auto__) { v__7802__auto__ = null;
    return RT.booleanCast(((IFn)const__4.getRawRoot()).invoke(RT.set(new Object[] { v__7802__auto__ }, ), ((IFn)const__1.getRawRoot()).invoke(this))); }
  
  public Object get(Object k__7804__auto__) { k__7804__auto__ = null;
    return ((ILookup)this).valAt(k__7804__auto__); }
  
  public Object put(Object k__7806__auto__, Object v__7807__auto__) { throw (Throwable)new UnsupportedOperationException(); }
  
  public Object remove(Object k__7809__auto__) { throw (Throwable)new UnsupportedOperationException(); }
  
  public void putAll(Map m__7811__auto__) { throw (Throwable)new UnsupportedOperationException(); }
  
  public void clear() { throw (Throwable)new UnsupportedOperationException(); }
  
  public Set keySet() { this = null;
    return (Set)((IFn)const__0.getRawRoot()).invoke(((IFn)const__2.getRawRoot()).invoke(this)); }
  
  public Collection values() { this = null;
    return (Collection)((IFn)const__1.getRawRoot()).invoke(this); }
  
  public Set entrySet() { this = null;
    return (Set)((IFn)const__0.getRawRoot()).invoke(this); }
}
