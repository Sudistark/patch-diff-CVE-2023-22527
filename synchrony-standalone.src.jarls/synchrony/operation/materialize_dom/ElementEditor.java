package synchrony.operation.materialize_dom;

import clojure.lang.IPersistentVector;
import clojure.lang.IType;
import clojure.lang.RT;
import clojure.lang.Symbol;
import clojure.lang.Tuple;
import clojure.lang.Var;
import synchrony.operation.materialize_impl.EditMap;

public final class ElementEditor implements EditMap, IType {
  public final Object element_node;
  
  private static Class __cached_class__0;
  
  private static Class __cached_class__1;
  
  private static Class __cached_class__2;
  
  public static final Var const__0 = (Var)RT.var("clojure.core", "=");
  
  public static final Object const__1 = Long.valueOf(0L);
  
  public static final Var const__2 = (Var)RT.var("clojure.core", "str");
  
  public static final Var const__3 = (Var)RT.var("clojure.core", "pr-str");
  
  public static final Object const__4 = Long.valueOf(1L);
  
  public static final Var const__5 = (Var)RT.var("synchrony.operation.materialize-dom", "children-editor");
  
  public static final Object const__6 = Long.valueOf(2L);
  
  public static final Var const__7 = (Var)RT.var("synchrony.operation.materialize-dom", "*mutate?*");
  
  public static final Var const__8 = (Var)RT.var("synchrony.operation.materialize-dom", "props-editor");
  
  public static final Var const__9 = (Var)RT.var("synchrony.operation.materialize-dom", "update-attrs!");
  
  public static final Var const__10 = (Var)RT.var("synchrony.operation.materialize-impl", "map-editor");
  
  public static final Object const__11 = Long.valueOf(3L);
  
  public static final Var const__12 = (Var)RT.var("synchrony.operation.materialize-dom", "update-styles!"), const__13 = (Var)RT.var("ginga.tree", "with-children"), const__14 = (Var)RT.var("synchrony.operation.model", "with-attrs"), const__15 = (Var)RT.var("synchrony.operation.model", "with-styles");
  
  public ElementEditor(Object paramObject) { this.element_node = paramObject; }
  
  public static IPersistentVector getBasis() { return Tuple.create(Symbol.intern(null, "element-node")); }
  
  public Object map_finalize() { return this.element_node; }
  
  public Object map_delete(Object key) { // Byte code:
    //   0: getstatic java/lang/Boolean.FALSE : Ljava/lang/Boolean;
    //   3: dup
    //   4: ifnull -> 17
    //   7: getstatic java/lang/Boolean.FALSE : Ljava/lang/Boolean;
    //   10: if_acmpeq -> 18
    //   13: aconst_null
    //   14: goto -> 66
    //   17: pop
    //   18: new java/lang/AssertionError
    //   21: dup
    //   22: getstatic synchrony/operation/materialize_dom/ElementEditor.const__2 : Lclojure/lang/Var;
    //   25: invokevirtual getRawRoot : ()Ljava/lang/Object;
    //   28: checkcast clojure/lang/IFn
    //   31: ldc 'Assert failed: '
    //   33: ldc 'can't delete element properties'
    //   35: ldc '\\n'
    //   37: getstatic synchrony/operation/materialize_dom/ElementEditor.const__3 : Lclojure/lang/Var;
    //   40: invokevirtual getRawRoot : ()Ljava/lang/Object;
    //   43: checkcast clojure/lang/IFn
    //   46: getstatic java/lang/Boolean.FALSE : Ljava/lang/Boolean;
    //   49: invokeinterface invoke : (Ljava/lang/Object;)Ljava/lang/Object;
    //   54: invokeinterface invoke : (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   59: invokespecial <init> : (Ljava/lang/Object;)V
    //   62: checkcast java/lang/Throwable
    //   65: athrow
    //   66: areturn
    // Line number table:
    //   Java source line number -> byte code offset
    //   #419	-> 0
    //   #441	-> 0
    //   #441	-> 28
    //   #441	-> 43
    //   #441	-> 49
    //   #441	-> 54
    // Local variable table:
    //   start	length	slot	name	descriptor
    //   0	66	0	this	Lsynchrony/operation/materialize_dom/ElementEditor;
    //   0	66	1	key	Ljava/lang/Object; }
  
  public Object map_put(Object key, Object value) { // Byte code:
    //   0: getstatic synchrony/operation/materialize_dom/ElementEditor.const__0 : Lclojure/lang/Var;
    //   3: invokevirtual getRawRoot : ()Ljava/lang/Object;
    //   6: astore_3
    //   7: aload_1
    //   8: aconst_null
    //   9: astore_1
    //   10: astore #4
    //   12: aload_3
    //   13: checkcast clojure/lang/IFn
    //   16: getstatic synchrony/operation/materialize_dom/ElementEditor.const__1 : Ljava/lang/Object;
    //   19: aload #4
    //   21: invokeinterface invoke : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   26: dup
    //   27: ifnull -> 105
    //   30: getstatic java/lang/Boolean.FALSE : Ljava/lang/Boolean;
    //   33: if_acmpeq -> 106
    //   36: getstatic java/lang/Boolean.FALSE : Ljava/lang/Boolean;
    //   39: dup
    //   40: ifnull -> 53
    //   43: getstatic java/lang/Boolean.FALSE : Ljava/lang/Boolean;
    //   46: if_acmpeq -> 54
    //   49: aconst_null
    //   50: goto -> 102
    //   53: pop
    //   54: new java/lang/AssertionError
    //   57: dup
    //   58: getstatic synchrony/operation/materialize_dom/ElementEditor.const__2 : Lclojure/lang/Var;
    //   61: invokevirtual getRawRoot : ()Ljava/lang/Object;
    //   64: checkcast clojure/lang/IFn
    //   67: ldc 'Assert failed: '
    //   69: ldc 'can't edit element name'
    //   71: ldc '\\n'
    //   73: getstatic synchrony/operation/materialize_dom/ElementEditor.const__3 : Lclojure/lang/Var;
    //   76: invokevirtual getRawRoot : ()Ljava/lang/Object;
    //   79: checkcast clojure/lang/IFn
    //   82: getstatic java/lang/Boolean.FALSE : Ljava/lang/Boolean;
    //   85: invokeinterface invoke : (Ljava/lang/Object;)Ljava/lang/Object;
    //   90: invokeinterface invoke : (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   95: invokespecial <init> : (Ljava/lang/Object;)V
    //   98: checkcast java/lang/Throwable
    //   101: athrow
    //   102: goto -> 419
    //   105: pop
    //   106: aload_3
    //   107: checkcast clojure/lang/IFn
    //   110: getstatic synchrony/operation/materialize_dom/ElementEditor.const__4 : Ljava/lang/Object;
    //   113: aload #4
    //   115: invokeinterface invoke : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   120: dup
    //   121: ifnull -> 197
    //   124: getstatic java/lang/Boolean.FALSE : Ljava/lang/Boolean;
    //   127: if_acmpeq -> 198
    //   130: new synchrony/operation/materialize_dom/ElementEditor
    //   133: dup
    //   134: aload_0
    //   135: getfield element_node : Ljava/lang/Object;
    //   138: dup
    //   139: invokestatic classOf : (Ljava/lang/Object;)Ljava/lang/Class;
    //   142: getstatic synchrony/operation/materialize_dom/ElementEditor.__cached_class__0 : Ljava/lang/Class;
    //   145: if_acmpeq -> 162
    //   148: dup
    //   149: instanceof ginga/tree/Node
    //   152: ifne -> 180
    //   155: dup
    //   156: invokestatic classOf : (Ljava/lang/Object;)Ljava/lang/Class;
    //   159: putstatic synchrony/operation/materialize_dom/ElementEditor.__cached_class__0 : Ljava/lang/Class;
    //   162: getstatic synchrony/operation/materialize_dom/ElementEditor.const__13 : Lclojure/lang/Var;
    //   165: invokevirtual getRawRoot : ()Ljava/lang/Object;
    //   168: swap
    //   169: aload_2
    //   170: aconst_null
    //   171: astore_2
    //   172: invokeinterface invoke : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   177: goto -> 191
    //   180: checkcast ginga/tree/Node
    //   183: aload_2
    //   184: aconst_null
    //   185: astore_2
    //   186: invokeinterface with_children : (Ljava/lang/Object;)Ljava/lang/Object;
    //   191: invokespecial <init> : (Ljava/lang/Object;)V
    //   194: goto -> 419
    //   197: pop
    //   198: aload_3
    //   199: checkcast clojure/lang/IFn
    //   202: getstatic synchrony/operation/materialize_dom/ElementEditor.const__6 : Ljava/lang/Object;
    //   205: aload #4
    //   207: invokeinterface invoke : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   212: dup
    //   213: ifnull -> 289
    //   216: getstatic java/lang/Boolean.FALSE : Ljava/lang/Boolean;
    //   219: if_acmpeq -> 290
    //   222: new synchrony/operation/materialize_dom/ElementEditor
    //   225: dup
    //   226: aload_0
    //   227: getfield element_node : Ljava/lang/Object;
    //   230: dup
    //   231: invokestatic classOf : (Ljava/lang/Object;)Ljava/lang/Class;
    //   234: getstatic synchrony/operation/materialize_dom/ElementEditor.__cached_class__1 : Ljava/lang/Class;
    //   237: if_acmpeq -> 254
    //   240: dup
    //   241: instanceof synchrony/operation/model/ElementNode
    //   244: ifne -> 272
    //   247: dup
    //   248: invokestatic classOf : (Ljava/lang/Object;)Ljava/lang/Class;
    //   251: putstatic synchrony/operation/materialize_dom/ElementEditor.__cached_class__1 : Ljava/lang/Class;
    //   254: getstatic synchrony/operation/materialize_dom/ElementEditor.const__14 : Lclojure/lang/Var;
    //   257: invokevirtual getRawRoot : ()Ljava/lang/Object;
    //   260: swap
    //   261: aload_2
    //   262: aconst_null
    //   263: astore_2
    //   264: invokeinterface invoke : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   269: goto -> 283
    //   272: checkcast synchrony/operation/model/ElementNode
    //   275: aload_2
    //   276: aconst_null
    //   277: astore_2
    //   278: invokeinterface with_attrs : (Ljava/lang/Object;)Ljava/lang/Object;
    //   283: invokespecial <init> : (Ljava/lang/Object;)V
    //   286: goto -> 419
    //   289: pop
    //   290: aload_3
    //   291: aconst_null
    //   292: astore_3
    //   293: checkcast clojure/lang/IFn
    //   296: getstatic synchrony/operation/materialize_dom/ElementEditor.const__11 : Ljava/lang/Object;
    //   299: aload #4
    //   301: invokeinterface invoke : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   306: dup
    //   307: ifnull -> 383
    //   310: getstatic java/lang/Boolean.FALSE : Ljava/lang/Boolean;
    //   313: if_acmpeq -> 384
    //   316: new synchrony/operation/materialize_dom/ElementEditor
    //   319: dup
    //   320: aload_0
    //   321: getfield element_node : Ljava/lang/Object;
    //   324: dup
    //   325: invokestatic classOf : (Ljava/lang/Object;)Ljava/lang/Class;
    //   328: getstatic synchrony/operation/materialize_dom/ElementEditor.__cached_class__2 : Ljava/lang/Class;
    //   331: if_acmpeq -> 348
    //   334: dup
    //   335: instanceof synchrony/operation/model/ElementNode
    //   338: ifne -> 366
    //   341: dup
    //   342: invokestatic classOf : (Ljava/lang/Object;)Ljava/lang/Class;
    //   345: putstatic synchrony/operation/materialize_dom/ElementEditor.__cached_class__2 : Ljava/lang/Class;
    //   348: getstatic synchrony/operation/materialize_dom/ElementEditor.const__15 : Lclojure/lang/Var;
    //   351: invokevirtual getRawRoot : ()Ljava/lang/Object;
    //   354: swap
    //   355: aload_2
    //   356: aconst_null
    //   357: astore_2
    //   358: invokeinterface invoke : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   363: goto -> 377
    //   366: checkcast synchrony/operation/model/ElementNode
    //   369: aload_2
    //   370: aconst_null
    //   371: astore_2
    //   372: invokeinterface with_styles : (Ljava/lang/Object;)Ljava/lang/Object;
    //   377: invokespecial <init> : (Ljava/lang/Object;)V
    //   380: goto -> 419
    //   383: pop
    //   384: new java/lang/IllegalArgumentException
    //   387: dup
    //   388: getstatic synchrony/operation/materialize_dom/ElementEditor.const__2 : Lclojure/lang/Var;
    //   391: invokevirtual getRawRoot : ()Ljava/lang/Object;
    //   394: checkcast clojure/lang/IFn
    //   397: ldc 'No matching clause: '
    //   399: aload #4
    //   401: aconst_null
    //   402: astore #4
    //   404: invokeinterface invoke : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   409: checkcast java/lang/String
    //   412: invokespecial <init> : (Ljava/lang/String;)V
    //   415: checkcast java/lang/Throwable
    //   418: athrow
    //   419: areturn
    // Line number table:
    //   Java source line number -> byte code offset
    //   #419	-> 0
    //   #435	-> 12
    //   #435	-> 13
    //   #435	-> 21
    //   #436	-> 36
    //   #436	-> 64
    //   #436	-> 79
    //   #436	-> 85
    //   #436	-> 90
    //   #435	-> 106
    //   #435	-> 107
    //   #435	-> 115
    //   #437	-> 134
    //   #437	-> 172
    //   #435	-> 198
    //   #435	-> 199
    //   #435	-> 207
    //   #438	-> 226
    //   #438	-> 264
    //   #435	-> 290
    //   #435	-> 293
    //   #435	-> 301
    //   #439	-> 320
    //   #439	-> 358
    //   #435	-> 394
    //   #435	-> 404
    // Local variable table:
    //   start	length	slot	name	descriptor
    //   7	412	3	pred__37793	Ljava/lang/Object;
    //   12	407	4	expr__37794	Ljava/lang/Object;
    //   0	419	0	this	Lsynchrony/operation/materialize_dom/ElementEditor;
    //   0	419	1	key	Ljava/lang/Object;
    //   0	419	2	value	Ljava/lang/Object; }
  
  public Object map_subeditor(Object key, Object value) { // Byte code:
    //   0: getstatic synchrony/operation/materialize_dom/ElementEditor.const__0 : Lclojure/lang/Var;
    //   3: invokevirtual getRawRoot : ()Ljava/lang/Object;
    //   6: astore_3
    //   7: aload_1
    //   8: aconst_null
    //   9: astore_1
    //   10: astore #4
    //   12: aload_3
    //   13: checkcast clojure/lang/IFn
    //   16: getstatic synchrony/operation/materialize_dom/ElementEditor.const__1 : Ljava/lang/Object;
    //   19: aload #4
    //   21: invokeinterface invoke : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   26: dup
    //   27: ifnull -> 105
    //   30: getstatic java/lang/Boolean.FALSE : Ljava/lang/Boolean;
    //   33: if_acmpeq -> 106
    //   36: getstatic java/lang/Boolean.FALSE : Ljava/lang/Boolean;
    //   39: dup
    //   40: ifnull -> 53
    //   43: getstatic java/lang/Boolean.FALSE : Ljava/lang/Boolean;
    //   46: if_acmpeq -> 54
    //   49: aconst_null
    //   50: goto -> 102
    //   53: pop
    //   54: new java/lang/AssertionError
    //   57: dup
    //   58: getstatic synchrony/operation/materialize_dom/ElementEditor.const__2 : Lclojure/lang/Var;
    //   61: invokevirtual getRawRoot : ()Ljava/lang/Object;
    //   64: checkcast clojure/lang/IFn
    //   67: ldc 'Assert failed: '
    //   69: ldc 'can't edit element name'
    //   71: ldc '\\n'
    //   73: getstatic synchrony/operation/materialize_dom/ElementEditor.const__3 : Lclojure/lang/Var;
    //   76: invokevirtual getRawRoot : ()Ljava/lang/Object;
    //   79: checkcast clojure/lang/IFn
    //   82: getstatic java/lang/Boolean.FALSE : Ljava/lang/Boolean;
    //   85: invokeinterface invoke : (Ljava/lang/Object;)Ljava/lang/Object;
    //   90: invokeinterface invoke : (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   95: invokespecial <init> : (Ljava/lang/Object;)V
    //   98: checkcast java/lang/Throwable
    //   101: athrow
    //   102: goto -> 393
    //   105: pop
    //   106: aload_3
    //   107: checkcast clojure/lang/IFn
    //   110: getstatic synchrony/operation/materialize_dom/ElementEditor.const__4 : Ljava/lang/Object;
    //   113: aload #4
    //   115: invokeinterface invoke : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   120: dup
    //   121: ifnull -> 163
    //   124: getstatic java/lang/Boolean.FALSE : Ljava/lang/Boolean;
    //   127: if_acmpeq -> 164
    //   130: getstatic synchrony/operation/materialize_dom/ElementEditor.const__5 : Lclojure/lang/Var;
    //   133: invokevirtual getRawRoot : ()Ljava/lang/Object;
    //   136: checkcast clojure/lang/IFn
    //   139: new synchrony/operation/materialize_dom/ElementEditor$fn__37791
    //   142: dup
    //   143: aload_0
    //   144: getfield element_node : Ljava/lang/Object;
    //   147: invokespecial <init> : (Ljava/lang/Object;)V
    //   150: aload_2
    //   151: aconst_null
    //   152: astore_2
    //   153: aconst_null
    //   154: astore_0
    //   155: invokeinterface invoke : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   160: goto -> 393
    //   163: pop
    //   164: aload_3
    //   165: checkcast clojure/lang/IFn
    //   168: getstatic synchrony/operation/materialize_dom/ElementEditor.const__6 : Ljava/lang/Object;
    //   171: aload #4
    //   173: invokeinterface invoke : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   178: dup
    //   179: ifnull -> 259
    //   182: getstatic java/lang/Boolean.FALSE : Ljava/lang/Boolean;
    //   185: if_acmpeq -> 260
    //   188: getstatic synchrony/operation/materialize_dom/ElementEditor.const__7 : Lclojure/lang/Var;
    //   191: invokevirtual get : ()Ljava/lang/Object;
    //   194: dup
    //   195: ifnull -> 236
    //   198: getstatic java/lang/Boolean.FALSE : Ljava/lang/Boolean;
    //   201: if_acmpeq -> 237
    //   204: getstatic synchrony/operation/materialize_dom/ElementEditor.const__8 : Lclojure/lang/Var;
    //   207: invokevirtual getRawRoot : ()Ljava/lang/Object;
    //   210: checkcast clojure/lang/IFn
    //   213: getstatic synchrony/operation/materialize_dom/ElementEditor.const__9 : Lclojure/lang/Var;
    //   216: invokevirtual getRawRoot : ()Ljava/lang/Object;
    //   219: aload_0
    //   220: getfield element_node : Ljava/lang/Object;
    //   223: aload_2
    //   224: aconst_null
    //   225: astore_2
    //   226: aconst_null
    //   227: astore_0
    //   228: invokeinterface invoke : (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   233: goto -> 256
    //   236: pop
    //   237: getstatic synchrony/operation/materialize_dom/ElementEditor.const__10 : Lclojure/lang/Var;
    //   240: invokevirtual getRawRoot : ()Ljava/lang/Object;
    //   243: checkcast clojure/lang/IFn
    //   246: aload_2
    //   247: aconst_null
    //   248: astore_2
    //   249: aconst_null
    //   250: astore_0
    //   251: invokeinterface invoke : (Ljava/lang/Object;)Ljava/lang/Object;
    //   256: goto -> 393
    //   259: pop
    //   260: aload_3
    //   261: aconst_null
    //   262: astore_3
    //   263: checkcast clojure/lang/IFn
    //   266: getstatic synchrony/operation/materialize_dom/ElementEditor.const__11 : Ljava/lang/Object;
    //   269: aload #4
    //   271: invokeinterface invoke : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   276: dup
    //   277: ifnull -> 357
    //   280: getstatic java/lang/Boolean.FALSE : Ljava/lang/Boolean;
    //   283: if_acmpeq -> 358
    //   286: getstatic synchrony/operation/materialize_dom/ElementEditor.const__7 : Lclojure/lang/Var;
    //   289: invokevirtual get : ()Ljava/lang/Object;
    //   292: dup
    //   293: ifnull -> 334
    //   296: getstatic java/lang/Boolean.FALSE : Ljava/lang/Boolean;
    //   299: if_acmpeq -> 335
    //   302: getstatic synchrony/operation/materialize_dom/ElementEditor.const__8 : Lclojure/lang/Var;
    //   305: invokevirtual getRawRoot : ()Ljava/lang/Object;
    //   308: checkcast clojure/lang/IFn
    //   311: getstatic synchrony/operation/materialize_dom/ElementEditor.const__12 : Lclojure/lang/Var;
    //   314: invokevirtual getRawRoot : ()Ljava/lang/Object;
    //   317: aload_0
    //   318: getfield element_node : Ljava/lang/Object;
    //   321: aload_2
    //   322: aconst_null
    //   323: astore_2
    //   324: aconst_null
    //   325: astore_0
    //   326: invokeinterface invoke : (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   331: goto -> 354
    //   334: pop
    //   335: getstatic synchrony/operation/materialize_dom/ElementEditor.const__10 : Lclojure/lang/Var;
    //   338: invokevirtual getRawRoot : ()Ljava/lang/Object;
    //   341: checkcast clojure/lang/IFn
    //   344: aload_2
    //   345: aconst_null
    //   346: astore_2
    //   347: aconst_null
    //   348: astore_0
    //   349: invokeinterface invoke : (Ljava/lang/Object;)Ljava/lang/Object;
    //   354: goto -> 393
    //   357: pop
    //   358: new java/lang/IllegalArgumentException
    //   361: dup
    //   362: getstatic synchrony/operation/materialize_dom/ElementEditor.const__2 : Lclojure/lang/Var;
    //   365: invokevirtual getRawRoot : ()Ljava/lang/Object;
    //   368: checkcast clojure/lang/IFn
    //   371: ldc 'No matching clause: '
    //   373: aload #4
    //   375: aconst_null
    //   376: astore #4
    //   378: invokeinterface invoke : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   383: checkcast java/lang/String
    //   386: invokespecial <init> : (Ljava/lang/String;)V
    //   389: checkcast java/lang/Throwable
    //   392: athrow
    //   393: areturn
    // Line number table:
    //   Java source line number -> byte code offset
    //   #419	-> 0
    //   #422	-> 12
    //   #422	-> 13
    //   #422	-> 21
    //   #423	-> 36
    //   #423	-> 64
    //   #423	-> 79
    //   #423	-> 85
    //   #423	-> 90
    //   #422	-> 106
    //   #422	-> 107
    //   #422	-> 115
    //   #424	-> 136
    //   #424	-> 153
    //   #422	-> 164
    //   #422	-> 165
    //   #422	-> 173
    //   #428	-> 188
    //   #429	-> 210
    //   #429	-> 226
    //   #430	-> 243
    //   #430	-> 249
    //   #422	-> 260
    //   #422	-> 263
    //   #422	-> 271
    //   #431	-> 286
    //   #432	-> 308
    //   #432	-> 324
    //   #433	-> 341
    //   #433	-> 347
    //   #422	-> 368
    //   #422	-> 378
    // Local variable table:
    //   start	length	slot	name	descriptor
    //   7	386	3	pred__37789	Ljava/lang/Object;
    //   12	381	4	expr__37790	Ljava/lang/Object;
    //   0	393	0	this	Lsynchrony/operation/materialize_dom/ElementEditor;
    //   0	393	1	key	Ljava/lang/Object;
    //   0	393	2	value	Ljava/lang/Object; }
}
